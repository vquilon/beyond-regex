[{"title": "Cron schedule", "description": "Validate cron lines (even the ones commented out)", "dateCreated": "2016-06-02T15:45:45.000Z", "dateModified": "2016-06-02T15:45:45.000Z", "author": "", "flavor": "pcre", "delimiter": "~", "flags": "", "version": 1, "upvotes": 23, "downvotes": 3, "score": 0.7102370686376492, "userVote": null, "regex": "^\\s*\\#?\\s*(?:(?:(?'mins'[0-5]?\\d)(?:[-,](?&mins))*)|\\*)(?:/\\d{1,2})?\\s+(?:(?:(?'hours'(?:2[0-3]|[01]?\\d))(?:[-,](?&hours))*)|\\*)(?:/\\d{1,2})?\\s+(?:(?:(?'dmon'(?:3[01]|[12]?\\d))(?:[-,](?&dmon))*)|\\*)(?:/\\d{1,2})?\\s+(?:(?:(?'mon'(?:1[0-2]|[1-9]))(?:[-,](?&mon))*)|\\*)(?:/\\d{1,2})?\\s+(?:(?:(?'dow'(?:[0-6]|\\b(?:mon|tue|wed|thu|fri|sat|sun)\\b))(?:[-,](?&dow))*)|\\*)(?:/\\d{1,2})?\\s+.+$", "permalinkFragment": "vY5eL1", "isFavorite": false, "isStarred": true}, {"title": "Parsing browser User Agents", "description": "From a (fairly large) list of User Agent strings, extract the OS, Browser, and Device Type.", "dateCreated": "2015-01-23T16:47:39.000Z", "dateModified": "2023-07-19T08:36:28.000Z", "author": "OnlineCop", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 2, "upvotes": 28, "downvotes": 3, "score": 0.7509970997657, "userVote": null, "regex": "(?(DEFINE)\n  (?P<ver>\\d+(?:\\.\\d+)*(?![.\\d]))\n  (?P<agent>Mozilla\\/(?&ver))\n\n  (?P<os>(?&os_windows)|(?&os_linux)|(?&os_macintosh)|(?&os_ios))\n    (?P<os_windows>Windows[ ]\\w+[ ](?&ver))\n    (?P<os_linux>Linux(?:[ ](?:i686|x86_64))?)\n    (?P<os_macintosh>Macintosh)\n    (?P<os_ios>(?:CPU[ ])?iPhone[ ]OS|CPU[ ]OS.*?like[ ]Mac[ ]OS[ ]X)\n\n  (?P<device>(?&device_ios)|(?&device_firefox)|(?&device_android))\n    (?P<device_ios>iPhone|iPad)\n    (?P<device_firefox>Mobile)\n    (?P<device_android>Android(?:[ ](?&ver))?)\n\n  (?P<browser>\n    (?:\n      (?&browser_ie)\n    | (?&browser_safari)\n    | (?&browser_chrome)\n    | (?&browser_chromium)\n    | (?&browser_firefox)\n    | (?&browser_version)\n#    | (?&browser_nexus)\n    | (?&browser_mobile)\n    | (?&browser_gsa)\n    | (?&browser_quicklook)\n    | (?&browser_opera)\n    )\n\n    [ \\/]\n\n    (?: [A-Z\\d]+\\b(?!\\.) | (?&ver) )\n  )\n    (?P<browser_safari>(?:Mobile[ ])?Safari)\n    (?P<browser_chrome>Chrome)\n    (?P<browser_chromium>\\b\\w+\\b[ ]Chromium)\n    (?P<browser_firefox>Firefox)\n    (?P<browser_ie>MSIE)\n    (?P<browser_version>Version)\n    (?P<browser_nexus>Nexus[ ]\\d+[ ]Build)\n    (?P<browser_mobile>Mobile)\n    (?P<browser_gsa>GSA)\n    (?P<browser_quicklook>QuickLook)\n    (?P<browser_opera>OPR)\n)\n^\n  (?:(?=.*?(?P<Agent>(?&agent))))\n  (?:(?=.*?(?P<OS>(?&os))))\n  (?:(?=.*?(?P<Device>(?&device))))?\n  (?:(?=.*?(?P<Browser>(?&browser)(?:[ ](?&browser))*)))?", "permalinkFragment": "aL8lD7", "isFavorite": false, "isStarred": false}, {"title": "Strict Password Validator", "description": "**This regex matches only when all the following are true:**\n\npassword must contain 1 number (0-9)\npassword must contain 1 uppercase letters\npassword must contain 1 lowercase letters\npassword must contain 1 non-alpha numeric number\npassword is 8-16 characters with no space", "dateCreated": "2018-01-31T01:03:39.000Z", "dateModified": "2023-07-19T15:28:53.000Z", "author": "qho", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 3, "upvotes": 21, "downvotes": 2, "score": 0.7320359569971199, "userVote": null, "regex": "^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[^\\w\\d\\s:])([^\\s]){8,16}$", "permalinkFragment": "0bH043", "isFavorite": false, "isStarred": false}, {"title": "Get path from any text", "description": "Get path (windows style) from any type of text (error message, e-mail corps ...), quoted or not.\n\n___THIS IS THE SINGLE LINE VERSION !___\nIf you want understand how it work or edit it, go https://regex101.com/r/7o2fyy\n\n- Relative path are not supported\n- The goal is to catch what \"Look like\" a path. See the limitations\n- UNC path and prefix path like [//./], [//?/] or [//./UNC/] are allowed\n- some url path like [file:///C:/] or [file://] are allowed\n- Catch path quoted with [\"] and [']. But these quotes are include with the catch\n- Quoted path is not concerned by limitations\n## Limitations : (only unquoted path)\n- [dot] and [space] is allowed, but not in a row [dot+space] or [space+dot]\n- [dot] at end of file name isn't catched\n- **INSIDE A NAME FILE (or last directory if it is a path to a directory) :**\n  - **[comma] is not supported (it stop the catch)**\n  - **after a first [dot], any [space] stop the catch**\n  - **after a [space], catch is stoped if next character is not a [letter], [digit] or [-]**\n  - **so, double [space] stop the catch**\n## Compatibility\n- compatible PCRE, PCRE2\n- AutoHotkey  : don't forget to escape \"%\" in \"`%\"\n- ***/!\\ Powershell and .Net /!\\\\*** : this regex need some modification to be interpreted by powershell. You have to replace each (?&CapturGroupName) by \\k<CapturGroupName>.\n  *Use this powershell code to do this replacement :*\n `\n$powershellRegex = @'\n[Put here the regex to replace (?&CapturGroupName) with \\k<CapturGroupName>]\n'@ -replace '\\(\\?&(\\w+)\\)', '\\k<$1>'\n`\n  *This example code must return :*\n  `[Put here the regex to replace \\k<CapturGroupName> with \\k<CapturGroupName>]`", "dateCreated": "2023-01-31T14:38:55.000Z", "dateModified": "2023-07-23T20:17:44.000Z", "author": "nitrateag", "flavor": "pcre2", "delimiter": "/", "flags": "g", "version": 25, "upvotes": 15, "downvotes": 2, "score": 0.6566315749641647, "userVote": null, "regex": "(?<opening>\\b(?<montage>[a-zA-Z]:[\\/\\\\])|[\\/\\\\][\\/\\\\](?<!http:\\/\\/)(?<!https:\\/\\/)(?>[?.][\\/\\\\](?:[^\\/\\\\<>:\"|?\\n\\r ]+[\\/\\\\])?(?&montage)?|(?!(?&montage)))|%\\w+%[\\/\\\\]?)(?:[^\\/\\\\<>:\"|?\\n\\r ,'][^\\/\\\\<>:\"|?\\n\\r]*(?<![ ,'])[\\/\\\\])*(?:(?=[^\\/\\\\<>:\"'|?\\n\\r;, ])(?:(?:[^\\/\\\\<>:\"|?\\n\\r;, .](?: (?=[\\w\\-]))?(?:\\*(?!= ))?(?!(?&montage)))+)?(?:\\.\\w+)*)|(?:'(?&opening)(?=.*'\\W|.*'$)(?:[^\\/\\\\<>:'\"|?\\n\\r]+(?:'(?=\\w))?[\\/\\\\]?)*')|\"(?&opening)(?=.*\")(?:[^\\/\\\\<>:\"|?\\n\\r]+[\\/\\\\]?)*\"", "permalinkFragment": "zWGLMP", "isFavorite": false, "isStarred": true}, {"title": "best youtube id match ( iframe embed replace ready )", "description": "**MATCH ANY __YOUTUBE ID__**\nauthor : [mi-ca](http://mi-ca.ch) \n v1.0 \u2013 2017.03.08\nThis Regex match any youtube url and grab the ID.\nEmbed ready \u221a\n--\n\n`http://www.youtube.com/watch?v=vpiMAaPTze8\nhttp://youtu.be/l_la5XiQJdk\nhttp://youtu.be/NLqAF9hrVbY\nhttps://youtu.be/qT47KF5pvfw\nhttps://youtu.be/zImHyTyYhM8?t=4s\nhttp://www.youtube.com/v/NLqAF9hrVbY?fs=1&hl=en_US\nhttp://www.youtube.com/v/NLqAF9hrVbY?fs=1&hl=en_US\nhttp://www.youtube.com/watch?v=NLqAF9hrVbY\nhttp://www.youtube.com/user/Scobleizer#p/u/1/1p3vcRhsYGo\nhttp://www.youtube.com/ytscreeningroom?v=NRHVzbJVx8I\nhttp://www.youtube.com/sandalsResorts#p/c/54B8C800269D7C1B/2/PPS-8DMrAn4\nhttp://gdata.youtube.com/feeds/api/videos/NLqAF9hrVbY\nhttp://www.youtube.com/watch?v=spDj54kf-vY&feature=g-vrec\nhttp://www.youtube.com/watch?v=spDj54kf-vY&feature=youtu.be\nhttp://www.youtube-nocookie.com/watch?v=NLqAF9hrVbY\nhttp://www.youtube.com/embed/NLqAF9hrVbY\nhttps://www.youtube.com/embed/NLqAF9hrVbY\nhttps://www.youtube.com/watch?v=MRl7cxSOXdU&feature=youtu.be\nhttps://www.youtube.com/watch?v=q07SQFmL4rM\nhttps://www.youtube.com/watch?v=q07SQFmL4yM\nhttps://www.youtube.com/watch?time_continue=4&v=zImHyTyYhM8\nhttp://www.youtube.com/embed/dQw4w9WgXcQ ...\nhttp://www.youtube.com/watch?v=dQw4w9WgXcQ ...\nhttp://www.youtube.com/?v=dQw4w9WgXcQ ...\nhttp://www.youtube.com/v/dQw4w9WgXcQ ...\nhttp://www.youtube.com/e/dQw4w9WgXcQ ...\nhttp://www.youtube.com/user/username#p/u/11/dQw4w9WgXcQ ...\nhttp://www.youtube.com/sandalsResorts#p/c/54B8C800269D7C1B/0/dQw4w9WgXcQ ...\nhttp://www.youtube.com/watch?feature=player_embedded&v=dQw4w9WgXcQ ...\nhttp://www.youtube.com/?feature=player_embedded&v=dQw4w9WgXcQ ...\nhttps://www.youtube.com/watch?v=DFYRQ_zQ-gk&feature=featured\nhttps://www.youtube.com/watch?v=DFYRQ_zQ-gk\nhttp://www.youtube.com/watch?v=DFYRQ_zQ-gk\n//www.youtube.com/watch?v=DFYRQ_zQ-gk\nwww.youtube.com/watch?v=DFYRQ_zQ-gk\nhttps://youtube.com/watch?v=DFYRQ_zQ-gk\nhttp://youtube.com/watch?v=DFYRQ_zQ-gk\n//youtube.com/watch?v=DFYRQ_zQ-gk\nyoutube.com/watch?v=DFYRQ_zQ-gk\nhttps://m.youtube.com/watch?v=DFYRQ_zQ-gk\nhttp://m.youtube.com/watch?v=DFYRQ_zQ-gk\n//m.youtube.com/watch?v=DFYRQ_zQ-gk\nm.youtube.com/watch?v=DFYRQ_zQ-gk\nhttps://www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\nhttp://www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n//www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\nwww.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\nyoutube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\nhttps://www.youtube.com/embed/DFYRQ_zQ-gk?autoplay=1\nhttps://www.youtube.com/embed/DFYRQ_zQ-gk\nhttp://www.youtube.com/embed/DFYRQ_zQ-gk\n//www.youtube.com/embed/DFYRQ_zQ-gk\nwww.youtube.com/embed/DFYRQ_zQ-gk\nhttps://youtube.com/embed/DFYRQ_zQ-gk\nhttp://youtube.com/embed/DFYRQ_zQ-gk\n//youtube.com/embed/DFYRQ_zQ-gk\nyoutube.com/embed/DFYRQ_zQ-gk\nhttps://youtu.be/DFYRQ_zQ-gk?t=120\nhttps://youtu.be/DFYRQ_zQ-gk\nhttp://youtu.be/DFYRQ_zQ-gk\n//youtu.be/DFYRQ_zQ-gk\nyoutu.be/DFYRQ_zQ-gk\nhttps://www.youtube.com/watch?v=DFYRQ_zQ-gk&feature=featured\nhttps://www.youtube.com/watch?v=DFYRQ_zQ-gk\nhttp://www.youtube.com/watch?v=DFYRQ_zQ-gk\n//www.youtube.com/watch?v=DFYRQ_zQ-gk\nwww.youtube.com/watch?v=DFYRQ_zQ-gk\nhttps://youtube.com/watch?v=DFYRQ_zQ-gk\nhttp://youtube.com/watch?v=DFYRQ_zQ-gk\n//youtube.com/watch?v=DFYRQ_zQ-gk\nyoutube.com/watch?v=DFYRQ_zQ-gk\n\nhttps://m.youtube.com/watch?v=DFYRQ_zQ-gk\nhttp://m.youtube.com/watch?v=DFYRQ_zQ-gk\n//m.youtube.com/watch?v=DFYRQ_zQ-gk\nm.youtube.com/watch?v=DFYRQ_zQ-gk\n\nhttps://www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\nhttp://www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n//www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\nwww.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\nyoutube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n\nhttps://www.youtube.com/embed/DFYRQ_zQ-gk?autoplay=1\nhttps://www.youtube.com/embed/DFYRQ_zQ-gk\nhttp://www.youtube.com/embed/DFYRQ_zQ-gk\n//www.youtube.com/embed/DFYRQ_zQ-gk\nwww.youtube.com/embed/DFYRQ_zQ-gk\nhttps://youtube.com/embed/DFYRQ_zQ-gk\nhttp://youtube.com/embed/DFYRQ_zQ-gk\n//youtube.com/embed/DFYRQ_zQ-gk\nyoutube.com/embed/DFYRQ_zQ-gk\n\nhttps://youtu.be/DFYRQ_zQ-gk?t=120\nhttps://youtu.be/DFYRQ_zQ-gk\nhttp://youtu.be/DFYRQ_zQ-gk\n//youtu.be/DFYRQ_zQ-gk\nyoutu.be/DFYRQ_zQ-gk\n\nhttps://www.youtube.com/HamdiKickProduction?v=DFYRQ_zQ-gk\n`", "dateCreated": "2019-03-12T16:17:19.000Z", "dateModified": "2019-03-12T16:17:19.000Z", "author": "mi-ca.ch", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 7, "downvotes": 0, "score": 0.6456611570247934, "userVote": null, "regex": "(?:https?:)?(?:\\/\\/)?(?:[0-9A-Z-]+\\.)?(?:youtu\\.be\\/|youtube(?:-nocookie)?\\.com\\S*?[^\\w\\s-])([\\w-]{11})(?=[^\\w-]|$)(?![?=&+%\\w.-]*(?:['\"][^<>]*>|<\\/a>))[?=&+%\\w.-]*", "permalinkFragment": "OY96XI", "isFavorite": false, "isStarred": true}, {"title": "RFC3339 DateTime", "description": "Validates a RFC3339 DateTime format.\nDoes not validates the Data", "dateCreated": "2016-02-12T11:44:06.000Z", "dateModified": "2016-02-12T11:44:06.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 17, "downvotes": 3, "score": 0.6395767041130426, "userVote": null, "regex": "^((?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))(Z|[\\+-]\\d{2}:\\d{2})?)$", "permalinkFragment": "qH0sU7", "isFavorite": false, "isStarred": true}, {"title": "Fiddler raw body to PHP array", "description": "", "dateCreated": "2016-02-20T19:43:37.000Z", "dateModified": "2016-02-20T19:43:37.000Z", "author": "garsax", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 9, "downvotes": 0, "score": 0.700847246511602, "userVote": null, "regex": "([^=]+)=([^&]*)&", "permalinkFragment": "qK2bT7", "isFavorite": false, "isStarred": false}, {"title": "Conventional Commits validation", "description": "This regex prevents the writing of non-standard conventional commits.\n\nI'm available on my [github](https://github.com/chrisemke)", "dateCreated": "2022-01-03T20:30:06.000Z", "dateModified": "2023-07-22T19:26:00.000Z", "author": "Krisque", "flavor": "pcre", "delimiter": "/", "flags": "mu", "version": 7, "upvotes": 9, "downvotes": 0, "score": 0.700847246511602, "userVote": null, "regex": "\\A(?:(?:^(?P<type>feat|fix|ci|chore|docs|test|style|refactor|build|perf|revert)(?:\\((?P<scope>[\\w-]+)\\))?(?P<breaking>!)?:\\s(?P<subject>\\b[\\w#<> .\\/\\t\\\\-]{3,}(?:\\b|\\.))$)(?:(?:(?P<BLANK_LINE>\\n^$\\n)(?P<body>(?:^.{3,}(?:\\b|\\.)$\\n?){1,3}))?(?P<BLANK_LINE2>\\n^$\\n)(?:(?P<breaking_change>^BREAKING\\sCHANGE:\\s[\\s\\w]+(?:\\b|\\.)$)\\n)?(?:(?P<footer>^\\w+:\\s[\\w#-]+(?:\\b|\\.))))?\\n?|)\\Z", "permalinkFragment": "vcxVpP", "isFavorite": false, "isStarred": false}, {"title": "CSS Color Matcher", "description": "Pattern matching and extracting color code formats using RegEx.\nhttps://github.com/Kyza/color-regex/", "dateCreated": "2023-08-07T02:36:16.000Z", "dateModified": "2023-08-07T02:36:16.000Z", "author": "Kyza", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 8, "downvotes": 0, "score": 0.6755843804891231, "userVote": null, "regex": "(#)(?:([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?|([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])?)|(rgb|rgba)\\((?:\\s*(0*(?:0|1[0-9]{0,2}|2(?:[0-4][0-9]?|5[0-4]?|[6-9])?|[3-9][0-9]?)(?:\\.[0-9]+)?|255(?:\\.0+)?|\\.[0-9]+)\\s*,\\s*(0*(?:0|1[0-9]{0,2}|2(?:[0-4][0-9]?|5[0-4]?|[6-9])?|[3-9][0-9]?)(?:\\.[0-9]+)?|255(?:\\.0+)?|\\.[0-9]+)\\s*,\\s*(0*(?:0|1[0-9]{0,2}|2(?:[0-4][0-9]?|5[0-4]?|[6-9])?|[3-9][0-9]?)(?:\\.[0-9]+)?|255(?:\\.0+)?|\\.[0-9]+)(?:\\s*,\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+))?\\s*|\\s*(0*(?:0|1[0-9]{0,2}|2(?:[0-4][0-9]?|5[0-4]?|[6-9])?|[3-9][0-9]?)(?:\\.[0-9]+)?|255(?:\\.0+)?|\\.[0-9]+)\\s+(0*(?:0|1[0-9]{0,2}|2(?:[0-4][0-9]?|5[0-4]?|[6-9])?|[3-9][0-9]?)(?:\\.[0-9]+)?|255(?:\\.0+)?|\\.[0-9]+)\\s+(0*(?:0|1[0-9]{0,2}|2(?:[0-4][0-9]?|5[0-4]?|[6-9])?|[3-9][0-9]?)(?:\\.[0-9]+)?|255(?:\\.0+)?|\\.[0-9]+)\\s*|\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s*,\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s*,\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)(?:\\s*,\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+))?\\s*|\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s+(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s+(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s*|\\s*(0*(?:0|1[0-9]{0,2}|2(?:[0-4][0-9]?|5[0-4]?|[6-9])?|[3-9][0-9]?)(?:\\.[0-9]+)?|255(?:\\.0+)?|\\.[0-9]+)\\s+(0*(?:0|1[0-9]{0,2}|2(?:[0-4][0-9]?|5[0-4]?|[6-9])?|[3-9][0-9]?)(?:\\.[0-9]+)?|255(?:\\.0+)?|\\.[0-9]+)\\s+(0*(?:0|1[0-9]{0,2}|2(?:[0-4][0-9]?|5[0-4]?|[6-9])?|[3-9][0-9]?)(?:\\.[0-9]+)?|255(?:\\.0+)?|\\.[0-9]+)(?:\\s*(?:\\/)\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+))?\\s*|\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s+(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s+(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)(?:\\s*(?:\\/)\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+))?\\s*)\\)|(hsl|hsla)\\((?:\\s*(-?[0-9]+(?:\\.[0-9]+)?(?:deg|rad|grad|turn)?)\\s+(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s+(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)(?:\\s*(?:\\/)\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+))?\\s*|\\s*(-?[0-9]+(?:\\.[0-9]+)?(?:deg|rad|grad|turn)?)\\s*,\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s*,\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)(?:\\s*,\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+))?\\s*|\\s*(-?[0-9]+(?:\\.[0-9]+)?(?:deg|rad|grad|turn)?)\\s+(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s+(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s*)\\)|(hwb)\\(\\s*(-?[0-9]+(?:\\.[0-9]+)?(?:deg|rad|grad|turn)?)\\s+(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)\\s+(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)(?:(?:\\s*(?:\\/)\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+))?\\s*)?\\)|(lab|oklab)\\(\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?)\\s+(-?(?:0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|(?:0|1(?:[0-1][0-9]?|2[0-4]?|[3-9])?|[2-9][0-9]?)(?:\\.[0-9]+)?|125(?:\\.0+)?))\\s+(-?(?:0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|(?:0|1(?:[0-1][0-9]?|2[0-4]?|[3-9])?|[2-9][0-9]?)(?:\\.[0-9]+)?|125(?:\\.0+)?))\\s*(?:(?:\\s*(?:\\/)\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+))?\\s*)?\\)|(lch|oklch)\\(\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?)\\s+(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|(?:0|1(?:[0-4][0-9]?|[5-9])?|[2-9][0-9]?)(?:\\.[0-9]+)?|150(?:\\.0+)?)\\s+(-?[0-9]+(?:\\.[0-9]+)?(?:deg|rad|grad|turn)?)\\s*(?:(?:\\s*(?:\\/)\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+))?\\s*)?\\)|(color)\\((?:(srgb|srgb-linear|display-p3|a98-rgb|prophoto-rgb|rec2020)(?:\\s+|\\s*,\\s*)(0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+|0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)(?:\\s+|\\s*,\\s*)(0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+|0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)(?:\\s+|\\s*,\\s*)(0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+|0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%)(?:(?:\\s+\\s*(?:\\/)\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+))?\\s*)?|(xyz|xyz-d50|xyz-d65)(?:\\s+|\\s*,\\s*)(-?[0-9]+(?:\\.[0-9]+)?%?)(?:\\s+|\\s*,\\s*)(-?[0-9]+(?:\\.[0-9]+)?%?)(?:\\s+|\\s*,\\s*)(-?[0-9]+(?:\\.[0-9]+)?%?)(?:(?:\\s+\\s*(?:\\/)\\s*(0*(?:(?:0|[1-9][0-9]?)(?:\\.[0-9]+)?|100(?:\\.0+)?|\\.[0-9]+)%|0*0*(?:\\.[0-9]+)?|1(?:\\.0+)?|\\.[0-9]+))?\\s*)?)\\)|(yellowgreen|yellow|whitesmoke|white|wheat|VisitedText|violet|turquoise|transparent|tomato|thistle|teal|tan|steelblue|springgreen|snow|slategrey|slategray|slateblue|skyblue|silver|sienna|SelectedItemText|SelectedItem|seashell|seagreen|sandybrown|salmon|saddlebrown|royalblue|rosybrown|red|rebeccapurple|purple|powderblue|plum|pink|peru|peachpuff|papayawhip|palevioletred|paleturquoise|palegreen|palegoldenrod|orchid|orangered|orange|olivedrab|olive|oldlace|navy|navajowhite|moccasin|mistyrose|mintcream|midnightblue|mediumvioletred|mediumturquoise|mediumspringgreen|mediumslateblue|mediumseagreen|mediumpurple|mediumorchid|mediumblue|mediumaquamarine|maroon|MarkText|Mark|magenta|LinkText|linen|limegreen|lime|lightyellow|lightsteelblue|lightslategrey|lightslategray|lightskyblue|lightseagreen|lightsalmon|lightpink|lightgrey|lightgreen|lightgray|lightgoldenrodyellow|lightcyan|lightcoral|lightblue|lemonchiffon|lawngreen|lavenderblush|lavender|khaki|ivory|indigo|indianred|hotpink|honeydew|HighlightText|Highlight|grey|greenyellow|green|GrayText|gray|goldenrod|gold|ghostwhite|gainsboro|fuchsia|forestgreen|floralwhite|firebrick|FieldText|Field|dodgerblue|dimgrey|dimgray|deepskyblue|deeppink|darkviolet|darkturquoise|darkslategrey|darkslategray|darkslateblue|darkseagreen|darksalmon|darkred|darkorchid|darkorange|darkolivegreen|darkmagenta|darkkhaki|darkgrey|darkgreen|darkgray|darkgoldenrod|darkcyan|darkblue|cyan|currentColor|crimson|cornsilk|cornflowerblue|coral|chocolate|chartreuse|CanvasText|Canvas|cadetblue|ButtonText|ButtonFace|ButtonBorder|burlywood|brown|blueviolet|blue|blanchedalmond|black|bisque|beige|azure|aquamarine|aqua|antiquewhite|aliceblue|ActiveText|AccentColorText|AccentColor)", "permalinkFragment": "3HmoM7", "isFavorite": false, "isStarred": false}, {"title": "Email regex validation", "description": "# RegEx email\n\n```js\n/^((?!\\.)[\\w-_.]*[^.])(@\\w+)(\\.\\w+(\\.\\w+)?[^.\\W])$/gim;\n```\n\nJust playing with Reg Ex. This to validate emails in following ways\n\n- The email couldn't start or finish with a dot\n- The email shouldn't contain spaces into the string\n- The email shouldn't contain special chars (<:, \\*,ecc)\n- The email could contain dots in the middle of mail address before the @\n- The email could contain a double doman ( '.de.org' or similar rarity)\n\n## Groups\n\nThere was created 3 groups into this validations that could be used for custom purposes or replacements\n\n> mailname@domain.com\n\n- First group takes the first string with the name of email \\$1 => (mailname)\n- Second group takes the @ plus the domain: \\$2 => (@domain)\n- Third group takes the last part after the domain : \\$3 => (.com)\n", "dateCreated": "2019-03-17T21:49:14.000Z", "dateModified": "2023-07-27T21:03:13.000Z", "author": " https://www.linkedin.com/in/peralta-steve-atileon/", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 12, "downvotes": 1, "score": 0.6668546607010405, "userVote": null, "regex": "^((?!\\.)[\\w\\-_.]*[^.])(@\\w+)(\\.\\w+(\\.\\w+)?[^.\\W])$", "permalinkFragment": "SOgUIV", "isFavorite": false, "isStarred": false}, {"title": "Email (RFC2822)", "description": "Email address compliant with RFC2822", "dateCreated": "2015-07-01T09:31:12.000Z", "dateModified": "2015-07-01T09:31:12.000Z", "author": "Jago", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 23, "downvotes": 7, "score": 0.5907132765834906, "userVote": null, "regex": "^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*$", "permalinkFragment": "sI6yF5", "isFavorite": false, "isStarred": true}, {"title": "UUID", "description": "", "dateCreated": "2014-12-01T17:13:35.000Z", "dateModified": "2014-12-01T17:13:35.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 11, "downvotes": 1, "score": 0.6461140781421506, "userVote": null, "regex": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}", "permalinkFragment": "lL7hC7", "isFavorite": false, "isStarred": false}, {"title": "youtube url match", "description": "extract video id, index, play list id from youtube url", "dateCreated": "2015-08-19T03:04:28.000Z", "dateModified": "2015-08-19T03:04:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 11, "downvotes": 1, "score": 0.6461140781421506, "userVote": null, "regex": "(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|playlist\\?|watch\\?v=|watch\\?.+(?:&|&#38;);v=))([a-zA-Z0-9\\-_]{11})?(?:(?:\\?|&|&#38;)index=((?:\\d){1,3}))?(?:(?:\\?|&|&#38;)?list=([a-zA-Z\\-_0-9]{34}))?(?:\\S+)?", "permalinkFragment": "yR1wB9", "isFavorite": false, "isStarred": false}, {"title": "IOS3166 Country Code Identification REGEX", "description": "IOS3166 Country Code Identification REGEX", "dateCreated": "2015-06-07T04:48:58.000Z", "dateModified": "2015-06-07T04:48:58.000Z", "author": "theitgeek@recu.org.uk", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 6, "downvotes": 0, "score": 0.6096569663915041, "userVote": null, "regex": "(^.+?)\\s+(\\w{2})\\s+(\\w{3})\\s+(\\d{3})", "permalinkFragment": "wV8dJ2", "isFavorite": false, "isStarred": false}, {"title": "grab valid css rules and properties", "description": "", "dateCreated": "2015-06-03T19:17:56.000Z", "dateModified": "2015-06-03T19:17:56.000Z", "author": "Pavel Dominguez", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 35, "downvotes": 12, "score": 0.6049155085671181, "userVote": null, "regex": "([#.a-z]{1}[a-z_]{1}[\\s\\S]+?){([\\s\\S]*?)}", "permalinkFragment": "yO7aQ4", "isFavorite": false, "isStarred": false}, {"title": "Find Reddit Threads", "description": "Simply searches for the thread-id in any kind of valid reddit-URL.", "dateCreated": "2015-03-12T09:23:09.000Z", "dateModified": "2015-03-12T09:23:09.000Z", "author": "Mio", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 12, "downvotes": 2, "score": 0.6005809222588615, "userVote": null, "regex": "(^https?://)?(\\w+)?\\.?(reddit\\.com/|redd\\.it/)(r/\\w+/)?(comments/)?(\\w+)", "permalinkFragment": "tY0dS0", "isFavorite": false, "isStarred": false}, {"title": "entity", "description": "", "dateCreated": "2015-11-20T01:12:02.000Z", "dateModified": "2015-11-20T01:12:02.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 12, "downvotes": 2, "score": 0.6005809222588615, "userVote": null, "regex": "{([^{}]*)\\|album}", "permalinkFragment": "sE5tS4", "isFavorite": false, "isStarred": false}, {"title": "remove comments from php code", "description": "", "dateCreated": "2015-05-26T15:18:37.000Z", "dateModified": "2015-05-26T15:18:37.000Z", "author": "", "flavor": "pcre", "delimiter": "@", "flags": "xsg", "version": 1, "upvotes": 14, "downvotes": 3, "score": 0.5897007100686716, "userVote": null, "regex": "(?(DEFINE)\n  (?<next_open_tag>\n    [^<]*+\n    (?i: <++[^<?s][^<]* \n       | <++(?! \\?php\n              | \\?=\n              | script\\s*language\\s*=\\s*([\\'\"]?)php\\g{-1}\\s*>\n            ) [^<]*\n    )*+\n    (?i: <++(?: \\?php\n              | \\?=\n              | [^>]+\n            )       \n       | \\z \n    ) \n  )\n)\n\n\n\\A (?&next_open_tag) \\K\n\n|\n\n[^'\"`/#<?]*+\n(?: '(?:[^'\\\\]+|\\\\.)*+' [^\\'\"`/#<?]*\n  | \"(?:[^\"\\\\]+|\\\\.)*+\" [^\\'\"`/#<?]*\n  | `(?:[^`\\\\]+|\\\\.)*+` [^\\'\"`/#<?]*  \n  | /(?![/*])           [^\\'\"`/#<?]* # stop for // or /*\n\n  | # if close tag ?>\n    \\? (?: >(?&next_open_tag)[^\\'\"`/#<?]* | )\n\n  | <  (?: # heredoc or nowdoc\n           <<[\\ \\t]*([\\'\"]?)\n                   ([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)\n                   \\g{-2}[\\ \\t]*[\\r\\n]\n             (?-s:.*+[\\r\\n])*?\n             \\g{-1}[\\r\\n;]\n             [^\\'\"`/#<?]*\n\n         | (?i: /script\\s*>)\n           (?&next_open_tag)\n           [^\\'\"`/#<?]* \n\n         | [^\\'\"`/#<?]*\n       )\n)*+\n\\K\n(?: (?://|\\#)(?:[^\\n?]+|\\?(?!>))*+ # single line comment // \u0438 #\n  | /\\*(?:[^*]+|\\*(?!/))*+\\*/      # multi line comment /* */\n)?\n", "permalinkFragment": "uN1yP6", "isFavorite": false, "isStarred": false}, {"title": "Distinguish torrent files (series vs movies)", "description": "A neat regex for finding out whether a given torrent name is a series or a movie.\n\nReturns the full name of the series with the separator needed to make it pretty (ie, replace it with space or what you want). Also returns the season number or the year for the movie/series, depending on what was previously matched.", "dateCreated": "2014-06-26T09:59:45.000Z", "dateModified": "2023-07-20T15:08:14.000Z", "author": "Firas Dib", "flavor": "python", "delimiter": "\"", "flags": "gimx", "version": 3, "upvotes": 178, "downvotes": 97, "score": 0.5891228702080596, "userVote": null, "regex": "^\n# get the title of this movie or series\n(?P<title> \n  [-\\w'\\\"]+\n  # match separator to later replace into correct title\n  (?P<separator> [ .] ) \n  # note this *must* be lazy for the engine to work ltr not rtl\n  (?: [-\\w'\\\"]+\\2 )*?\n)\n# start of movie vs serie check\n(?:\n  # if this is an episode, lets match the season \n  # number one way or another. if not, the year \n  # of the movie\n  (?:\n    # series. can be a lot prettier if we used perl regex...\n    # make sure this is not just a number in the title followed by our separator. \n    # like, iron man 3 2013 or my.fictional.24.series\n    (?! \\d+ \\2 )\n    # now try to match the season number\n    (?: s (?: eason \\2? )? )?\n    (?P<season> \\d\\d? )\n    # needed to validate the last token is a dot, or whatever.\n    (?: e\\d\\d? (?:-e?\\d\\d?)? | x\\d\\d? )? |\n    # this is likely a movie, match the year\n    (?P<year> [(\\]]?\\d{4}[)\\]]? ) \n  )\n  # make sure this ends with the separator, otherwise we \n  # might be in the middle of something like \"1080p\"\n  (?=\\2) |\n  # if we get here, this is likely still a movie.\n  # match until one of the keywords\n  (?= BOXSET  | XVID   | DIVX | LIMITED   | \n      UNRATED | PROPER | DTS  | AC3 | AAC | BLU[ -]?RAY | \n      HD(?:TV|DVD) | (?:DVD|B[DR]|WEB)RIP | \\d+p |\u00c2\u00a0[hx]\\.?264\n  )\n)", "permalinkFragment": "yP4bY4", "isFavorite": false, "isStarred": false}, {"title": "us postal/zip", "description": "", "dateCreated": "2014-01-13T22:15:09.000Z", "dateModified": "2014-01-13T22:15:09.000Z", "author": "jay johnson", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 20, "downvotes": 6, "score": 0.5794807422953732, "userVote": null, "regex": "(^[0-9]{4}?[0-9]$|^[0-9]{4}?[0-9]-[0-9]{4}$)", "permalinkFragment": "yK0oW1", "isFavorite": false, "isStarred": false}, {"title": "Fixo LDN CSP e SEM CSP", "description": "", "dateCreated": "2014-11-18T14:02:51.000Z", "dateModified": "2014-11-18T14:02:51.000Z", "author": "Marcos M\u00c3\u00bcller", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 11, "downvotes": 2, "score": 0.5776482948243713, "userVote": null, "regex": "^0([1-9]{2})([1-9]{2})([2-3]{1})([0-9]{3})([0-9]{4})$|([1-9]{2})([2-3]{1})([0-9]{3})([0-9]{4})$", "permalinkFragment": "rR0aM9", "isFavorite": false, "isStarred": false}, {"title": "regex101.com id grabber", "description": "grabs the ID for the regex101.com permalink to code", "dateCreated": "2013-12-12T13:09:06.000Z", "dateModified": "2023-07-19T16:25:22.000Z", "author": "chris mccoy", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 1566, "downvotes": 1083, "score": 0.5723259412042595, "userVote": null, "regex": "^http(?:s?):\\/{2}regex101\\.com\\/r\\/([a-zA-Z0-9]{1,6})?$", "permalinkFragment": "wY0rM7", "isFavorite": false, "isStarred": false}, {"title": "Match Gmail Email", "description": "Match Gmail Email", "dateCreated": "2014-11-20T23:58:21.000Z", "dateModified": "2014-11-20T23:58:21.000Z", "author": "\u00c3\u201cscar Enr\u00c3\u00adquez", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 24, "downvotes": 11, "score": 0.5201992805712568, "userVote": null, "regex": "^[a-z0-9]+(?!.*(?:\\+{2,}|\\-{2,}|\\.{2,}))(?:[\\.+\\-]{0,1}[a-z0-9])*@gmail\\.com$", "permalinkFragment": "pO0jF8", "isFavorite": false, "isStarred": true}, {"title": "Matching email addresses per RFC5322", "description": "The BNF rules from RFC 5322 transformed to PCRE by Nikita Popov and described in the post http://nikic.github.io/2012/06/15/The-true-power-of-regular-expressions.html.", "dateCreated": "2013-10-23T17:46:18.000Z", "dateModified": "2013-10-23T17:46:18.000Z", "author": "Michael Musson", "flavor": "pcre", "delimiter": "/", "flags": "xmg", "version": 1, "upvotes": 717, "downvotes": 481, "score": 0.570466322157401, "userVote": null, "regex": "(?(DEFINE)\r\n    (?<addr_spec> (?&local_part) @ (?&domain) )\r\n    (?<local_part> (?&dot_atom) | (?&quoted_string) | (?&obs_local_part) )\r\n    (?<domain> (?&dot_atom) | (?&domain_literal) | (?&obs_domain) )\r\n    (?<domain_literal> (?&CFWS)? \\[ (?: (?&FWS)? (?&dtext) )* (?&FWS)? \\] (?&CFWS)? )\r\n    (?<dtext> [\\x21-\\x5a] | [\\x5e-\\x7e] | (?&obs_dtext) )\r\n    (?<quoted_pair> \\\\ (?: (?&VCHAR) | (?&WSP) ) | (?&obs_qp) )\r\n    (?<dot_atom> (?&CFWS)? (?&dot_atom_text) (?&CFWS)? )\r\n    (?<dot_atom_text> (?&atext) (?: \\. (?&atext) )* )\r\n    (?<atext> [a-zA-Z0-9!#$%&'*+\\/=?^_`{|}~-]+ )\r\n    (?<atom> (?&CFWS)? (?&atext) (?&CFWS)? )\r\n    (?<word> (?&atom) | (?&quoted_string) )\r\n    (?<quoted_string> (?&CFWS)? \" (?: (?&FWS)? (?&qcontent) )* (?&FWS)? \" (?&CFWS)? )\r\n    (?<qcontent> (?&qtext) | (?&quoted_pair) )\r\n    (?<qtext> \\x21 | [\\x23-\\x5b] | [\\x5d-\\x7e] | (?&obs_qtext) )\r\n    # comments and whitespace\r\n    (?<FWS> (?: (?&WSP)* \\r\\n )? (?&WSP)+ | (?&obs_FWS) )\r\n    (?<CFWS> (?: (?&FWS)? (?&comment) )+ (?&FWS)? | (?&FWS) )\r\n    (?<comment> \\( (?: (?&FWS)? (?&ccontent) )* (?&FWS)? \\) )\r\n    (?<ccontent> (?&ctext) | (?&quoted_pair) | (?&comment) )\r\n    (?<ctext> [\\x21-\\x27] | [\\x2a-\\x5b] | [\\x5d-\\x7e] | (?&obs_ctext) )\r\n    # obsolete tokens\r\n    (?<obs_domain> (?&atom) (?: \\. (?&atom) )* )\r\n    (?<obs_local_part> (?&word) (?: \\. (?&word) )* )\r\n    (?<obs_dtext> (?&obs_NO_WS_CTL) | (?&quoted_pair) )\r\n    (?<obs_qp> \\\\ (?: \\x00 | (?&obs_NO_WS_CTL) | \\n | \\r ) )\r\n    (?<obs_FWS> (?&WSP)+ (?: \\r\\n (?&WSP)+ )* )\r\n    (?<obs_ctext> (?&obs_NO_WS_CTL) )\r\n    (?<obs_qtext> (?&obs_NO_WS_CTL) )\r\n    (?<obs_NO_WS_CTL> [\\x01-\\x08] | \\x0b | \\x0c | [\\x0e-\\x1f] | \\x7f )\r\n    # character class definitions\r\n    (?<VCHAR> [\\x21-\\x7E] )\r\n    (?<WSP> [ \\t] )\r\n)\r\n^(?&addr_spec)$", "permalinkFragment": "gJ7pU0", "isFavorite": false, "isStarred": false}, {"title": "MikroTik FireWall", "description": "Regex used in Splunk to extract fields from Mikrotik FW.\nNOTES:\n- Mikrotik must be configured to use \"BSD Syslog\" format\n- FW rules must add, as log prefix, the action:\n    - drop\n    - accep\n    - reject\n    - etc...", "dateCreated": "2015-05-30T10:27:10.000Z", "dateModified": "2015-05-30T10:27:10.000Z", "author": "HappyIdeasMaker", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 13, "downvotes": 3, "score": 0.5699064013154177, "userVote": null, "regex": ".+HappyMK\\s?(?<action>\\S+)\\s(?<chain>\\w+):\\sin:(?<int_in>\\S+)\\sout:(?<int_out>\\S+), src-mac\\s(?<src_mac>\\S+),\\sproto\\s(?<prot>\\w+)(\\s(?<flags>\\S+),|,)\\s(?<src_ip>\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b):(?<src_port>\\d+)->(?<dest_ip>\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b):(?<dest_port>\\d+),(\\s(?<NAT>\\w+)\\s\\((?<src_nat_localip>\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b):(?<src_nat_local_port>\\d+)->(?<src_nat_public_ip>\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b):(?<src_nat_public_port>\\d+)\\)->(?<dest_nat_ip>\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b):(?<dest_nat_port>\\d+),)?(\\sprio\\s(?<prio>\\d+->\\d+),)?\\slen\\s(?<len>\\d+)", "permalinkFragment": "sW8kS0", "isFavorite": false, "isStarred": false}, {"title": "Credit Card Expiry Date", "description": "Allows inserting expiry date as MM/YYYY or MM-YYYY format", "dateCreated": "2015-05-26T05:34:07.000Z", "dateModified": "2015-05-26T05:34:07.000Z", "author": "Rider", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 19, "downvotes": 6, "score": 0.5656994004476144, "userVote": null, "regex": "^(0[1-9]|1[0-2])(\\/|-)([0-9]{4})$", "permalinkFragment": "iI3iN4", "isFavorite": false, "isStarred": false}, {"title": "US Currency Format", "description": "", "dateCreated": "2016-01-23T17:46:37.000Z", "dateModified": "2016-01-23T17:46:37.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 17, "downvotes": 5, "score": 0.5655964392335989, "userVote": null, "regex": "^\\$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(\\.[0-9][0-9])?$", "permalinkFragment": "uV1jN3", "isFavorite": false, "isStarred": false}, {"title": "Find All Python imports", "description": "", "dateCreated": "2014-10-07T12:03:30.000Z", "dateModified": "2014-10-07T12:03:30.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 0, "score": 0.565508505247919, "userVote": null, "regex": "import \\S+\\w+", "permalinkFragment": "qL5hW5", "isFavorite": false, "isStarred": false}, {"title": "relative to absolute", "description": "relative to absolute", "dateCreated": "2015-01-20T01:16:55.000Z", "dateModified": "2015-01-20T01:16:55.000Z", "author": "xp_prg", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 5, "downvotes": 0, "score": 0.565508505247919, "userVote": null, "regex": "^(.*)((<img|<script|<link)(.*) (src|href))\\=(\\\"|')(?!cdn|https|https|\\/\\/)(\\/)?(<\\/script>|\\>)?(.*)$", "permalinkFragment": "zY1lJ7", "isFavorite": false, "isStarred": false}, {"title": "Quartz Cron Validation", "description": "http://stackoverflow.com/questions/2362985/verifying-a-cron-expression-is-valid-in-java", "dateCreated": "2015-07-27T12:13:13.000Z", "dateModified": "2015-07-27T12:13:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 0, "score": 0.565508505247919, "userVote": null, "regex": "^\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?(?:,(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?)*)\\s+(\\?|\\*|(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?(?:,(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))$", "permalinkFragment": "cU7zG2", "isFavorite": false, "isStarred": false}, {"title": "IP Address (with 0s)", "description": "Matches all valid IP addresses from 0.0.0.0 to 255.255.255.255", "dateCreated": "2015-09-28T21:24:49.000Z", "dateModified": "2015-09-28T21:24:49.000Z", "author": "Ryan Plummer", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 0, "score": 0.565508505247919, "userVote": null, "regex": "^((1?[\\d]?[\\d]|2([0-4][\\d]|5[0-5]))[.]){3}(1?[\\d]?[\\d]|2([0-4][\\d]|5[0-5]))$", "permalinkFragment": "qZ1yC3", "isFavorite": false, "isStarred": false}, {"title": "Codice fiscale italiano", "description": "Oltre a supportare le omocodie controlla in modo restrittivo il carattere relativo al mese di nascita", "dateCreated": "2015-10-09T09:14:46.000Z", "dateModified": "2015-10-09T09:14:46.000Z", "author": "Aldo Medri", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 0, "score": 0.565508505247919, "userVote": null, "regex": "[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST]{1}[0-7LMNPQRST]{1}[0-9LMNPQRSTUV]{1}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1}", "permalinkFragment": "bK2iF7", "isFavorite": false, "isStarred": false}, {"title": "look for any $_POST['name']", "description": "if you are as lazy as me and want to replace every \"=$_POST['name'];\" using Dreamweaver or any development tool that allows using regular expressions to search in current file/document.", "dateCreated": "2016-01-14T23:35:48.000Z", "dateModified": "2016-01-14T23:35:48.000Z", "author": "Kevinator", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 0, "score": 0.565508505247919, "userVote": null, "regex": "\\=\\$_POST\\['[a-zA-z0-9]*'\\];", "permalinkFragment": "mV8aP8", "isFavorite": false, "isStarred": false}, {"title": "Form Tag", "description": "Form Tag", "dateCreated": "2016-02-26T06:49:56.000Z", "dateModified": "2016-02-26T06:49:56.000Z", "author": "Jay Patel", "flavor": "python", "delimiter": "\"", "flags": "gi", "version": 1, "upvotes": 5, "downvotes": 0, "score": 0.565508505247919, "userVote": null, "regex": "((?!\\[)\\w+(?=\\]))", "permalinkFragment": "pB8bN3", "isFavorite": false, "isStarred": false}, {"title": "psswd", "description": "", "dateCreated": "2016-03-24T09:04:02.000Z", "dateModified": "2016-03-24T09:04:02.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 0, "score": 0.565508505247919, "userVote": null, "regex": "^.*(?=.{8,32})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!?@#$%^&*()\\-+|=}{/:;\",'\\]\\[_\\~<>\u20ac\u00a3\u00a5\u2022\\\\]).*$", "permalinkFragment": "oJ3hF1", "isFavorite": false, "isStarred": false}, {"title": "Find and extract email domain", "description": "Find and extract email domain. \nEx: test@example.pt -> extract 'example.pt'", "dateCreated": "2016-04-03T17:03:23.000Z", "dateModified": "2016-04-03T17:03:23.000Z", "author": "Fnxk", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 5, "downvotes": 0, "score": 0.565508505247919, "userVote": null, "regex": ".*@(\\S+)", "permalinkFragment": "aS3xU5", "isFavorite": false, "isStarred": false}, {"title": "Match Only Text", "description": "", "dateCreated": "2016-07-05T03:56:17.000Z", "dateModified": "2016-07-05T03:56:17.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "ig", "version": 1, "upvotes": 5, "downvotes": 0, "score": 0.565508505247919, "userVote": null, "regex": "(\\w+)([\\W+^\\s])", "permalinkFragment": "uO0bR3", "isFavorite": false, "isStarred": false}, {"title": "get specific value from html tag", "description": "", "dateCreated": "2016-09-25T06:08:33.000Z", "dateModified": "2016-09-25T06:08:33.000Z", "author": "A.ROA", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 5, "downvotes": 0, "score": 0.565508505247919, "userVote": null, "regex": "<div[^>]+id\\s*=\\s*['\"]([^'\"]+)['\"][^>]*>", "permalinkFragment": "kA9mL8", "isFavorite": false, "isStarred": false}, {"title": "extract subdomain(if available) or domain from URL", "description": "This regex should extract the subdomain, if any, or the domain, if no subdomain is used, from an arbitrary URL", "dateCreated": "2016-04-08T13:05:11.000Z", "dateModified": "2016-04-08T13:05:11.000Z", "author": "trevi@twanda.com", "flavor": "python", "delimiter": "\"", "flags": "igm", "version": 1, "upvotes": 8, "downvotes": 1, "score": 0.5649937853799394, "userVote": null, "regex": "^(http://|https://|http://www\\.|https://www\\.|www\\.)?(www\\.(twanda))?(([\\w\\-]+)?\\.?(twanda|))(\\.ch|\\.com)(:\\d+)?/.+$", "permalinkFragment": "bA0qV5", "isFavorite": false, "isStarred": false}, {"title": "validate US (5 & 9 digit) ZipCodes and CA PostalCodes", "description": "", "dateCreated": "2015-05-15T18:00:32.000Z", "dateModified": "2015-05-15T18:00:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 8, "downvotes": 1, "score": 0.5649937853799394, "userVote": null, "regex": "^((\\d{5}-\\d{4})|(\\d{5})|([A-Z]\\d[A-Z]\\s\\d[A-Z]\\d))$", "permalinkFragment": "xH5sD3", "isFavorite": false, "isStarred": false}, {"title": "simple email", "description": "", "dateCreated": "2015-06-11T01:12:45.000Z", "dateModified": "2015-06-11T01:12:45.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 8, "downvotes": 1, "score": 0.5649937853799394, "userVote": null, "regex": ".+\\@.+\\..+", "permalinkFragment": "mF3pK7", "isFavorite": false, "isStarred": false}, {"title": "Extract currency with currency symbol if present", "description": "Extracts values of the form \u00a3nnn,nnn.nn or $nnn.nnn from text", "dateCreated": "2015-09-11T11:35:52.000Z", "dateModified": "2015-09-11T11:35:52.000Z", "author": "Simon Gardner", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 8, "downvotes": 1, "score": 0.5649937853799394, "userVote": null, "regex": "([\u00a3\\$])*([\\d,.]*)", "permalinkFragment": "nK0jK7", "isFavorite": false, "isStarred": false}, {"title": "Remove Widows (PHP)", "description": "Adds a non-breaking space between the last two words of sentences", "dateCreated": "2015-09-13T13:44:29.000Z", "dateModified": "2015-09-13T13:44:29.000Z", "author": "herkulano", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 8, "downvotes": 1, "score": 0.5649937853799394, "userVote": null, "regex": "\\s(([a-zA-Z]+\\-[a-zA-Z]+|[a-zA-Z]+)\\.)", "permalinkFragment": "aE7cE0", "isFavorite": false, "isStarred": false}, {"title": "Regex for telephone numbers all over the world", "description": "Detects most of the phone numbers all over the world", "dateCreated": "2014-04-08T07:58:37.000Z", "dateModified": "2023-10-09T14:47:20.000Z", "author": "Aditya Joshi", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 2, "upvotes": 410, "downvotes": 338, "score": 0.5123068491047523, "userVote": null, "regex": "(?:([+]\\d{1,4})[-.\\s]?)?(?:[(](\\d{1,3})[)][-.\\s]?)?(\\d{1,4})[-.\\s]?(\\d{1,4})[-.\\s]?(\\d{1,9})", "permalinkFragment": "wZ4uU6", "isFavorite": false, "isStarred": true}, {"title": "semver", "description": "Semantic Versioning regex pattern according to Tom Preston-Werner\n\nhttp://semver.org/\nhttps://github.com/mojombo/semver/blob/master/semver.md\n\nFirst version of this regex follows semver 2.0.0.\n\nDiscussion of semver and this regex was posted on https://github.com/mojombo/semver.org/issues/59", "dateCreated": "2014-10-03T18:53:32.000Z", "dateModified": "2014-10-03T18:53:32.000Z", "author": "@gvlx <Gerardo Lisboa>", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "^(?'MAJOR'0|(?:[1-9]\\d*))\\.(?'MINOR'0|(?:[1-9]\\d*))\\.(?'PATCH'0|(?:[1-9]\\d*))(?:-(?'prerelease'(?:0|(?:[1-9A-Za-z-][0-9A-Za-z-]*))(?:\\.(?:0|(?:[1-9A-Za-z-][0-9A-Za-z-]*)))*))?(?:\\+(?'build'(?:0|(?:[1-9A-Za-z-][0-9A-Za-z-]*))(?:\\.(?:0|(?:[1-9A-Za-z-][0-9A-Za-z-]*)))*))?$", "permalinkFragment": "gG8cK7", "isFavorite": false, "isStarred": true}, {"title": "IP Address validator", "description": "Validates IPv4 IP Address", "dateCreated": "2015-06-18T12:52:34.000Z", "dateModified": "2015-06-18T12:52:34.000Z", "author": "krzysp", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 77, "downvotes": 42, "score": 0.5578251751661882, "userVote": null, "regex": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", "permalinkFragment": "dT0vT3", "isFavorite": false, "isStarred": false}, {"title": "Date Regex(DD/MM/yyyy)", "description": "", "dateCreated": "2015-08-26T06:25:23.000Z", "dateModified": "2015-08-26T06:25:23.000Z", "author": "alcaamado", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 31, "downvotes": 13, "score": 0.557795206610381, "userVote": null, "regex": "^(((0[1-9]|[12]\\d|3[01])\\/(0[13578]|1[02])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)\\/(0[13456789]|1[012])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])\\/02\\/((19|[2-9]\\d)\\d{2}))|(29\\/02\\/((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$", "permalinkFragment": "jZ4kA4", "isFavorite": false, "isStarred": false}, {"title": "IPv4 Validator", "description": "", "dateCreated": "2020-07-26T21:19:49.000Z", "dateModified": "2023-08-07T17:36:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 10, "downvotes": 2, "score": 0.5519636427801428, "userVote": null, "regex": "^(?:(?:25[0-5]|2[0-4]\\d|1?\\d{1,2})(?:\\.(?!$)|$)){4}$", "permalinkFragment": "ChFXjy", "isFavorite": false, "isStarred": false}, {"title": "Hashtag", "description": "The secret of the Twitterverse.", "dateCreated": "2014-10-05T17:14:03.000Z", "dateModified": "2014-10-05T17:14:03.000Z", "author": "Joogl", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 25, "downvotes": 10, "score": 0.5494475190519303, "userVote": null, "regex": "#\\w+", "permalinkFragment": "pP4vQ0", "isFavorite": false, "isStarred": false}, {"title": "Codice fiscale", "description": "Check \"codice fiscale\"", "dateCreated": "2015-08-19T10:43:09.000Z", "dateModified": "2015-08-19T10:43:09.000Z", "author": "Luca ", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 16, "downvotes": 5, "score": 0.5490841799576655, "userVote": null, "regex": "[A-Z]{6}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-7LMNPQRST]{1}[0-9LMNPQRSTUV]{1}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1}", "permalinkFragment": "aG5sW0", "isFavorite": false, "isStarred": false}, {"title": "Full url parse, domain, path, params", "description": "", "dateCreated": "2015-08-25T20:54:08.000Z", "dateModified": "2015-08-25T20:54:08.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 16, "downvotes": 5, "score": 0.5490841799576655, "userVote": null, "regex": "https?:\\/\\/(?:www\\.)?([-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b)*(\\/[\\/\\d\\w\\.-]*)*(?:[\\?])*(.+)*", "permalinkFragment": "qV3iR4", "isFavorite": false, "isStarred": false}, {"title": "English date in \"dd mmmm yyyy\" format", "description": "Parse an English date following the \"dd mmmm yyyy\" format.", "dateCreated": "2015-05-18T19:41:31.000Z", "dateModified": "2015-05-18T19:41:31.000Z", "author": "Tantale", "flavor": "python", "delimiter": "\"", "flags": "giu", "version": 1, "upvotes": 12, "downvotes": 3, "score": 0.5481406466790456, "userVote": null, "regex": "(?P<LongDate>(?P<Day>\\d+)[\\s\u00a0\u2009]+(?P<Month>January|February|March|April|May|June|July|August|September|October|November|December)[\\s\u00a0\u2009]+(?P<Year>\\d{4}))", "permalinkFragment": "vJ0pI0", "isFavorite": false, "isStarred": false}, {"title": "Letters, numbers and blank space", "description": "The following regular expression matches only letter a-z A-Z numbers 0-9 and a blank space for a given string.", "dateCreated": "2016-01-04T17:31:36.000Z", "dateModified": "2016-01-04T17:31:36.000Z", "author": "Jordan Raychev", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 12, "downvotes": 3, "score": 0.5481406466790456, "userVote": null, "regex": "^[a-zA-Z0-9 ]*$", "permalinkFragment": "cW5nP4", "isFavorite": false, "isStarred": false}, {"title": "Capture comma separated numbers", "description": "Capture comma separated numbers, no matter if there are spaces before or after the commas.", "dateCreated": "2015-07-19T01:57:26.000Z", "dateModified": "2015-07-19T01:57:26.000Z", "author": "Fernando Nunes", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 31, "downvotes": 14, "score": 0.5433492002651223, "userVote": null, "regex": "(\\d+)[^,]?+", "permalinkFragment": "cW3eA9", "isFavorite": false, "isStarred": false}, {"title": "Password Validation", "description": "Checks that a password has a minimum of 6 characters, at least 1 uppercase letter, 1 lowercase letter, and 1 number with no spaces.", "dateCreated": "2015-07-08T18:46:24.000Z", "dateModified": "2015-07-08T18:46:24.000Z", "author": "Christian Klemp", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 297, "downvotes": 211, "score": 0.541313882419622, "userVote": null, "regex": "^((?=\\S*?[A-Z])(?=\\S*?[a-z])(?=\\S*?[0-9]).{6,})\\S$", "permalinkFragment": "fX8dY0", "isFavorite": false, "isStarred": false}, {"title": "ninite", "description": "", "dateCreated": "2015-09-29T11:28:24.000Z", "dateModified": "2015-09-29T11:28:24.000Z", "author": "peek", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 77, "downvotes": 46, "score": 0.5379069476442195, "userVote": null, "regex": "<label class=\"icn16 .*\" for=\".*\">(.*)<[^>]+>", "permalinkFragment": "rY7bM3", "isFavorite": false, "isStarred": false}, {"title": "Wrap long string to spec length", "description": "", "dateCreated": "2013-07-21T20:34:53.000Z", "dateModified": "2013-07-21T20:34:53.000Z", "author": "fullpipe", "flavor": "pcre", "delimiter": "/", "flags": "iug", "version": 1, "upvotes": 70, "downvotes": 41, "score": 0.5378804783527543, "userVote": null, "regex": "(\\b.{1,40})(?:\\s+|\\n|$)", "permalinkFragment": "xJ6rE8", "isFavorite": false, "isStarred": false}, {"title": "find all link(<a>) tags expect your links in href attribute", "description": "<a href=\"yourlink.com\">YourLink</a> - not found\n<a href=\"anotherlink.com\">AnotherLink</a> - found", "dateCreated": "2015-07-29T11:09:01.000Z", "dateModified": "2015-07-29T11:09:01.000Z", "author": "KoT", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 17, "downvotes": 6, "score": 0.5352960947886367, "userVote": null, "regex": "<(a+) (?!(?:href=([\"|']+)([http:\\/\\/])*link\\.com([\\/])?(.*?)[\"|'])) *[^>]*>(.*?)[^>]>", "permalinkFragment": "yX3pS3", "isFavorite": false, "isStarred": false}, {"title": "Just validate one sequence of ", "description": " sdfs  sdfs FLBREV00022230 dsfsdfs  sdfsf FLBREV00022234 \n\nIn this case is false", "dateCreated": "2014-10-23T13:22:47.000Z", "dateModified": "2014-10-23T13:22:47.000Z", "author": "Fiipe", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 15, "downvotes": 5, "score": 0.5312949900419365, "userVote": null, "regex": "(\\s[a-zA-Z]{6}[0-9]{8}\\s){1}", "permalinkFragment": "vD4mC4", "isFavorite": false, "isStarred": false}, {"title": "Valid Telephone Number", "description": "This regex validates varying types of telephone numbers.", "dateCreated": "2015-12-09T01:04:05.000Z", "dateModified": "2015-12-09T01:04:05.000Z", "author": "Adam Recvlohe", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 15, "downvotes": 5, "score": 0.5312949900419365, "userVote": null, "regex": "(^(1?)(\\s?)([\\s]?)((\\(\\d{3}\\))|(\\d{3}))([\\s]?)([\\s-]?)(\\d{3})([\\s-]?)(\\d{4})+$)", "permalinkFragment": "dT7jZ1", "isFavorite": false, "isStarred": false}, {"title": "Between tags content", "description": "", "dateCreated": "2015-10-24T10:52:13.000Z", "dateModified": "2015-10-24T10:52:13.000Z", "author": "Agust\u00edn Bouillet", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 34, "downvotes": 17, "score": 0.5296812190519493, "userVote": null, "regex": "(?P<group>(?P<starttag><(?P<tagname>p)[^>]*>)(?P<data>.*)(?P<endtag><\\/\\3>))", "permalinkFragment": "sB3tK3", "isFavorite": false, "isStarred": false}, {"title": "SO: fail2ban regular to find 403 request in nginx", "description": "http://stackoverflow.com/q/25778420/2072035", "dateCreated": "2014-09-15T11:32:28.000Z", "dateModified": "2023-07-27T20:59:57.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 2, "upvotes": 7, "downvotes": 1, "score": 0.5291051942301385, "userVote": null, "regex": "^(?:::f{4,6}:)?(?P<host>\\S+) .* \\\"(GET|POST) [^\\\"]+\\\" 403", "permalinkFragment": "rY4cJ0", "isFavorite": false, "isStarred": false}, {"title": "[A-Za-z\\x{0600}-\\x{06FF}\\x{1000}-\\x{1021}_-][-\\w]*", "description": "[A-Za-z\\x{0600}-\\x{06FF}\\x{1000}-\\x{1021}_-][-\\w]*", "dateCreated": "2014-11-03T16:04:00.000Z", "dateModified": "2014-11-03T16:04:00.000Z", "author": "[A-Za-z\\x{0600}-\\x{06FF}\\x{1000}-\\x{1021}_-][-\\w]*", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 7, "downvotes": 1, "score": 0.5291051942301385, "userVote": null, "regex": "[A-Za-z\\x{0600}-\\x{06FF}\\x{1000}-\\x{1021}_-][-\\w]*", "permalinkFragment": "wD5xG9", "isFavorite": false, "isStarred": false}, {"title": "TimezoneOffset", "description": "used to parse timezone in the format -08:00 or +05:30", "dateCreated": "2014-12-09T07:00:25.000Z", "dateModified": "2014-12-09T07:00:25.000Z", "author": "Neha", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 1, "score": 0.5291051942301385, "userVote": null, "regex": "^([+|-]{1})([0-1]{1}[0-9]{1}):([0-6]{1}[0-9]{1})$", "permalinkFragment": "tU9jO5", "isFavorite": false, "isStarred": false}, {"title": "IPv4", "description": "", "dateCreated": "2015-12-17T08:14:01.000Z", "dateModified": "2015-12-17T08:14:01.000Z", "author": "robwa", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 29, "downvotes": 14, "score": 0.5251593254069024, "userVote": null, "regex": "^(?:25[0-5]|2[0-4]\\d|[0-1]?\\d{1,2})(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d{1,2})){3}$", "permalinkFragment": "nU3dT7", "isFavorite": false, "isStarred": false}, {"title": "Extract url GET parameters", "description": "Returns key/value pair of a url. Also works with google fonts which has additional information", "dateCreated": "2014-09-16T08:37:48.000Z", "dateModified": "2014-09-16T08:37:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 11, "downvotes": 3, "score": 0.5241027617117374, "userVote": null, "regex": "(?:\\?|\\&)(?<key>[\\w]+)=(?<value>[\\w+,.-]+)(?:\\:?)(?<option>[\\w,]*)", "permalinkFragment": "oZ8cA0", "isFavorite": false, "isStarred": false}, {"title": "If-Then-Else Conditionals", "description": "", "dateCreated": "2015-08-28T15:52:48.000Z", "dateModified": "2015-08-28T15:52:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 11, "downvotes": 3, "score": 0.5241027617117374, "userVote": null, "regex": "(a)?b(?(1)c|d)", "permalinkFragment": "hP7hM9", "isFavorite": false, "isStarred": false}, {"title": "money: either 0 or 2 dp", "description": "", "dateCreated": "2015-11-18T19:34:19.000Z", "dateModified": "2015-11-18T19:34:19.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 11, "downvotes": 3, "score": 0.5241027617117374, "userVote": null, "regex": "^[0-9]*(\\.[0-9][0-9])?$", "permalinkFragment": "rC2zH7", "isFavorite": false, "isStarred": false}, {"title": "CSV line parsing", "description": "Captures all fields from a CSV file's line. Can be customized with user-defined field separator and protecting character.", "dateCreated": "2014-10-15T13:22:34.000Z", "dateModified": "2014-10-15T13:22:34.000Z", "author": "Various", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 77, "downvotes": 49, "score": 0.5239056153301175, "userVote": null, "regex": "(?:\\s*(?:\\\"([^\\\"]*)\\\"|([^,]+))\\s*,?)+?", "permalinkFragment": "eH1zP0", "isFavorite": false, "isStarred": false}, {"title": "Disorted Email Addresses", "description": "Matches distorted email addresses and converts them back to real ones.", "dateCreated": "2013-01-16T14:11:36.000Z", "dateModified": "2013-01-16T14:11:36.000Z", "author": "dislick", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 191, "downvotes": 140, "score": 0.5232317791302464, "userVote": null, "regex": "^(?'Username'[-\\w\\d\\.]+?)(?:\\s+at\\s+|\\s*@\\s*|\\s*(?:[\\[\\]@]){3}\\s*)(?'Domain'[-\\w\\d\\.]*?)\\s*(?:dot|\\.|(?:[\\[\\]dot\\.]){3,5})\\s*(?'TLD'\\w+)$", "permalinkFragment": "wB7xJ7", "isFavorite": false, "isStarred": false}, {"title": "Sentence grabber /w extra check", "description": "Grabs sentences including terms like: e.g. z.b. Figs.These get caught in 1st capturing group. \n\nProblem: how to only accept matching sentences which contain pattern \\b\\d+[a-z]{0,2}\\b? ", "dateCreated": "2014-05-29T17:30:26.000Z", "dateModified": "2014-05-29T17:30:26.000Z", "author": "light0", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 9, "downvotes": 2, "score": 0.5230138626833337, "userVote": null, "regex": "((?:(?(?=(e.g.|z.b.|Figs?\\.|\\d+\\.\\d))\\2|[^.!?])+[.!?]))", "permalinkFragment": "cJ6mV4", "isFavorite": false, "isStarred": false}, {"title": "Max - URL Extract", "description": "", "dateCreated": "2016-05-09T10:38:46.000Z", "dateModified": "2016-05-09T10:38:46.000Z", "author": "Ayush", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 9, "downvotes": 2, "score": 0.5230138626833337, "userVote": null, "regex": "<a href=\"(\\/doctor\\/.+)\">View Full Profile", "permalinkFragment": "lP1uQ3", "isFavorite": false, "isStarred": false}, {"title": "Date: DD-MM-YYYY hh:mm:ss", "description": "Validate and capture dateTime parts, includes validation for leap years, range 1000-2999. Fixed bug", "dateCreated": "2013-05-17T13:07:17.000Z", "dateModified": "2013-05-17T13:07:17.000Z", "author": "Ka.", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 310, "downvotes": 292, "score": 0.47505807388048177, "userVote": null, "regex": "^(0[1-9]|1\\d|2[0-8]|29(?=-\\d\\d-(?!1[01345789]00|2[1235679]00)\\d\\d(?:[02468][048]|[13579][26]))|30(?!-02)|31(?=-0[13578]|-1[02]))-(0[1-9]|1[0-2])-([12]\\d{3}) ([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$", "permalinkFragment": "tH1cV7", "isFavorite": false, "isStarred": true}, {"title": "trim", "description": "trim string", "dateCreated": "2013-09-10T08:21:48.000Z", "dateModified": "2013-09-10T08:21:48.000Z", "author": "fp", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 601, "downvotes": 495, "score": 0.5187765612099037, "userVote": null, "regex": "^[\\s]*(.*?)[\\s]*$", "permalinkFragment": "uX2cB6", "isFavorite": false, "isStarred": false}, {"title": "Quote Macthing with escape", "description": "Matches text within quotes (\", ') and escapes the charecters.", "dateCreated": "2015-05-10T20:48:05.000Z", "dateModified": "2015-05-10T20:48:05.000Z", "author": "Vihan Bhargava", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 67, "downvotes": 43, "score": 0.5156976364721346, "userVote": null, "regex": "([\"'])((?:(?=(?:\\\\)*)\\\\.|.)*?)\\1", "permalinkFragment": "mS1zJ8", "isFavorite": false, "isStarred": false}, {"title": "html color match: transparent, #fff, #123456, rgb, rgba, hsl, hsla", "description": "This may be useful or not to test whether a given string is a valid (more or less) html color value. It matches color values such as:\n- #123 - short hex color value\n- #123456 - hex color value\n- rgb(255,255,0) - rgb color value\n- rgba(255,255,0,1.0) - rgba color value\n- hsl(360,100%,100%) - hsl color value\n- hsla(360,100%,100%,0.5334) - hsla color value\n\nRegex allows whitespaces between i.e. rgb and (, also between numbers and commas, but not in value like 55% between number and percentage. To change this behaviour simply remove \\s*? from appriopriate places.", "dateCreated": "2014-12-17T13:00:15.000Z", "dateModified": "2014-12-17T13:00:15.000Z", "author": "grouch", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 19, "downvotes": 8, "score": 0.5151896660274896, "userVote": null, "regex": "^(rgb\\s*?\\(\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?,\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?,\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?\\))$|^(rgba\\s*?\\(\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?,\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?,\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?,\\s*?(0|0\\.\\d*|1|1.0*)\\s*?\\))$|^(transparent)$|^(#([a-fA-F0-9]){3})$|^(#([a-fA-F0-9]){6}$)|(^hsl\\s*?\\(\\s*?(000|0?\\d{1,2}|[1-2]\\d\\d|3[0-5]\\d|360)\\s*?,\\s*?(000|100|0?\\d{2}|0?0?\\d)%\\s*?,\\s*?(000|100|0?\\d{2}|0?0?\\d)%\\s*?\\)$)|(^hsla\\s*?\\(\\s*?(000|0?\\d{1,2}|[1-2]\\d\\d|3[0-5]\\d|360)\\s*?,\\s*?(000|100|0?\\d{2}|0?0?\\d)%\\s*?,\\s*?(000|100|0?\\d{2}|0?0?\\d)%\\s*?,\\s*?(0|0\\.\\d*|1|1.0*)\\s*?\\)$)$", "permalinkFragment": "sY0nN9", "isFavorite": false, "isStarred": false}, {"title": "UK Postcode Checker", "description": "Checks for valid UK/British postcodes.\n\nThere was another on here that had for some reason been upvoted, but it was actually incorrect as it worked on none of my valid own postcodes! Namely that it assumed two letters and a number (BS3) when you can have variations (M20). Allows for an optional space and separates the two parts into groups.", "dateCreated": "2014-10-21T08:23:05.000Z", "dateModified": "2014-10-21T08:23:05.000Z", "author": "MaffooBristol", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 59, "downvotes": 37, "score": 0.5146051821231726, "userVote": null, "regex": "^([a-zA-Z]{1,2}\\d{1,2})\\s*?(\\d[a-zA-Z]{2})$", "permalinkFragment": "tH9mQ1", "isFavorite": false, "isStarred": false}, {"title": "Google like regex", "description": "Attempts to mimic Google search box behavior, returning an array with the separated search strings (that keep the +/- indicator for following operations)", "dateCreated": "2014-05-12T13:35:01.000Z", "dateModified": "2014-05-12T13:35:01.000Z", "author": "mettjus", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 123, "downvotes": 89, "score": 0.5129044227851216, "userVote": null, "regex": "([+-]?(?:'.+?'|\".+?\"|[^+\\- ]{1}[^ ]*))", "permalinkFragment": "rR1fI0", "isFavorite": false, "isStarred": false}, {"title": "For Auto RTFs", "description": "", "dateCreated": "2013-03-22T03:32:39.000Z", "dateModified": "2013-03-22T03:32:39.000Z", "author": "Dan Bloomquist", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "<\\&(\\w*)(?:(?:\\[(\\d*)\\]|)([~'])([^\\&^@]*)@?(\\w*)|())\\&>", "permalinkFragment": "jQ9pV9", "isFavorite": false, "isStarred": false}, {"title": "outer Parentheses", "description": "Finds the outermost pair of parentheses. Compatible with any amount of nesting", "dateCreated": "2014-04-25T11:43:49.000Z", "dateModified": "2014-04-25T11:43:49.000Z", "author": "Jonas Gerneth", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(\\((?:([^\\(\\)]*)|(?:(?2)(?1)(?2))*)\\))", "permalinkFragment": "rR3vA7", "isFavorite": false, "isStarred": false}, {"title": "Command handling", "description": "Handles commands like in CMD", "dateCreated": "2014-09-07T07:03:17.000Z", "dateModified": "2014-09-07T07:03:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "#Command handler\n#===============\n#Start of the line\n^ #Match the command name\n(?<cmd>[\\w\\d\\-\\_\\?]+)\n#Catch as many parameters as possible\n(?<params>\n  (\n    \\ +\n    (?<pre>[^\\-\\\\\\/\\w\\d\\s\\n\\r]?)\n    [^\\\"]*\\k<pre>\n  )*\n)?\n#Catch as many switches as possible and save them into group\n(?<switches>\n  (\n    \\ +\n    #Switch starts with -- or - or /\n    (?:\\-\\-|\\-|\\/)\n    #Gotcha!\n    [\\w\\d\\_]+\n  )*\n)?\n#At the end of the line can be some spaces\n\\ *$ #End of the line", "permalinkFragment": "cO3fN2", "isFavorite": false, "isStarred": false}, {"title": "parsing a numeric strings with backslash using regexp", "description": "", "dateCreated": "2014-11-13T17:42:31.000Z", "dateModified": "2014-11-13T17:42:31.000Z", "author": "A.K. Asik", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(?<slot>\\d+)\\/(?<daughter_slot>\\d+)\\/(?<port>\\d+)", "permalinkFragment": "gJ6gU7", "isFavorite": false, "isStarred": false}, {"title": "uri parser", "description": "", "dateCreated": "2015-03-25T13:20:28.000Z", "dateModified": "2015-03-25T13:20:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mx", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(?<protocol>(?:[^:]+)s?)?:\\/\\/(?:(?<user>[^:\\n\\r]+):(?<pass>[^@\\n\\r]+)@)?(?<host>(?:www\\.)?(?:[^:\\/\\n\\r]+))(?::(?<port>\\d+))?\\/?(?<request>[^?#\\n\\r]+)?\\??(?<query>[^#\\n\\r]*)?\\#?(?<anchor>[^\\n\\r]*)?", "permalinkFragment": "pO5nL8", "isFavorite": false, "isStarred": false}, {"title": "Match nth occurence of pattern", "description": "Match nth occurence of the patterns in the inner parenthesis. Put nth that you want to match in the curly braces (here, {3}).", "dateCreated": "2015-05-01T17:34:42.000Z", "dateModified": "2015-05-01T17:34:42.000Z", "author": "Alex Hall", "flavor": "pcre", "delimiter": "/", "flags": "s", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(?:.*?(Constr1)+){3}.*?((Constr1)+)", "permalinkFragment": "eR5aR7", "isFavorite": false, "isStarred": false}, {"title": "Equation matching (without equal)", "description": "use this to get value of any side of an equation.\nYou can combine this with https://regex101.com/r/fH5kJ1/1", "dateCreated": "2015-07-01T19:50:21.000Z", "dateModified": "2015-07-01T19:50:21.000Z", "author": "Kerosene2000", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(?:^\\s*([+-])?|\\s*(?<![+-])([+-]))\\s*(?:(\\d+(?:\\.\\d*)?)\\s*\\*)?\\s*(?<![+-])([+-])?(\\d+(?:\\.\\d*)?)?([xX])?(?:\\^(\\d+))?\\s*", "permalinkFragment": "qT7fO0", "isFavorite": false, "isStarred": false}, {"title": "Epic EHR Sticker QR code patient information", "description": "Text output produced by reading the QR code present on patient stickers created by Epic (R) medical record software", "dateCreated": "2015-07-28T06:54:16.000Z", "dateModified": "2015-07-28T06:54:16.000Z", "author": "MeWa", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(?P<mrn>\\d{8}).*\\s+(?P<lastname>\\D+),(?P<firstname>\\D+)\\s+(?P<dob>[\\d\\/]{10})\\s(?P<age>\\w+)\\s(?P<sex>\\w)", "permalinkFragment": "tU9uR1", "isFavorite": false, "isStarred": false}, {"title": "TV series season and episode names", "description": "This regex matches against season and series names", "dateCreated": "2015-08-16T00:43:48.000Z", "dateModified": "2015-08-16T00:43:48.000Z", "author": "mikey", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(.*?)[.\\s][sS](\\d{1,2})[eE](\\d{1,3}).*", "permalinkFragment": "uU9wW9", "isFavorite": false, "isStarred": false}, {"title": "Typescript - /// <reference path=\"...\"/> Expression", "description": "Finds Typescript's reference path syntax.", "dateCreated": "2015-09-08T22:26:58.000Z", "dateModified": "2015-09-08T22:26:58.000Z", "author": "Lovelidge, Shawn", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(\\/\\/\\/)\\s+(<|>)(.*)(<|>)", "permalinkFragment": "iQ5gH1", "isFavorite": false, "isStarred": false}, {"title": "Variable name of code", "description": "To get a variable name from a source code: The variable name is before the '=' (equal sign) This is the way to detect.\nProblem:\n1. Only 1 variable can get from 1 line.\n2. Unfortunately, this can get variable between after \"//\" and before \";\" too. \n\nI made this for fake script debugger. Just get variable from source code and put that after last semicolon with so much tab and messagebox code for every line.", "dateCreated": "2015-09-19T11:18:40.000Z", "dateModified": "2015-09-19T11:18:40.000Z", "author": "Setsuna", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "^(.*?([^\\(=\\s!<>]+?)\\s*?=[^=<>].*;)(.*)$", "permalinkFragment": "hB3rX4", "isFavorite": false, "isStarred": false}, {"title": "Remove common numeric suffixes (eg: 40m, 60%)", "description": "Usage: \"40%\".replace(/\\b([\\d\\.]+)[mkb%](?!\\S)/ig, '$1')", "dateCreated": "2015-09-24T15:38:44.000Z", "dateModified": "2015-09-24T15:38:44.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "\\b([\\d\\.]+)[mkb%](?!\\S)", "permalinkFragment": "vZ7fN4", "isFavorite": false, "isStarred": false}, {"title": "Validate hex color", "description": "Validates hexadecimal color codes based on the following rule set:\n\n- Optionally starting with a hash.\n- 3 or 6 characters in length.\n- Using the [0-9a-f] character set.", "dateCreated": "2015-12-02T11:14:43.000Z", "dateModified": "2015-12-02T11:14:43.000Z", "author": "Nathaniel Blackburn", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "^#?([0-9a-f]{6}|[0-9a-f]{3})$", "permalinkFragment": "bJ8bL6", "isFavorite": false, "isStarred": false}, {"title": "Jeff Test", "description": "Valid and Invalid emails", "dateCreated": "2015-12-10T21:35:21.000Z", "dateModified": "2015-12-10T21:35:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "^[\\w-\\+\\.\\_]+(\\.[\\w-\\+\\.\\_]+)*@[\\w-\\+\\.\\_]+(\\.[\\w\\+\\.\\_]+)*(\\.[A-Za-z]{2,})$", "permalinkFragment": "rJ8eT5", "isFavorite": false, "isStarred": false}, {"title": "import url image", "description": "import url image", "dateCreated": "2015-12-18T08:44:18.000Z", "dateModified": "2015-12-18T08:44:18.000Z", "author": "bartimeys", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(?:http:\\/\\/)(.*?)\\/(.+?)(?:\\/|\\?|\\#|$|\\n)\\w*.jpg", "permalinkFragment": "hF8yP8", "isFavorite": false, "isStarred": false}, {"title": "kenteken validator", "description": "validator voor kenteken\nvb: 11-AA-BB", "dateCreated": "2016-01-06T14:30:40.000Z", "dateModified": "2016-01-06T14:30:40.000Z", "author": "Senne Root", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "[1-9]{2}[-][A-JL-Z][A-Z][-][A-Z]{2}", "permalinkFragment": "xV2nJ4", "isFavorite": false, "isStarred": false}, {"title": "find uncommented coffeescript console.logs", "description": "", "dateCreated": "2016-01-18T01:52:33.000Z", "dateModified": "2016-01-18T01:52:33.000Z", "author": "valiafetisov", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "^( *)(?!# +console)(console\\.log .*)$", "permalinkFragment": "tP6rE3", "isFavorite": false, "isStarred": false}, {"title": "Version Matcher", "description": "Matches version strings.", "dateCreated": "2016-01-25T18:44:06.000Z", "dateModified": "2016-01-25T18:44:06.000Z", "author": "anmols", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "^v(\\d+\\.)?(\\d+\\.)?(\\*|\\d+)$", "permalinkFragment": "iD7tN2", "isFavorite": false, "isStarred": false}, {"title": "extract domain with port", "description": "", "dateCreated": "2016-02-18T08:29:28.000Z", "dateModified": "2016-02-18T08:29:28.000Z", "author": "yooresh", "flavor": "javascript", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "^(?:https?:\\/\\/)?(?:[^@\\/\\n]+@)?(?:www\\.)?([^\\/\\n]+)", "permalinkFragment": "tQ9hF5", "isFavorite": false, "isStarred": false}, {"title": "Function Declaration / Expression", "description": "matches both function declarations and expressions in javascript.\nex. function name () {...} || function () {} ", "dateCreated": "2016-03-09T09:13:36.000Z", "dateModified": "2016-03-09T09:13:36.000Z", "author": "Ja Superior", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "function\\s*([A-z0-9]+)?\\s*\\((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*\\)\\s*\\{(?:[^}{]+|\\{(?:[^}{]+|\\{[^}{]*\\})*\\})*\\}", "permalinkFragment": "zD3nE9", "isFavorite": false, "isStarred": false}, {"title": "DNS hostname well-formedness validation", "description": "Validates that a DNS hostname is well-formed only. You will still need to check that the overall length of the hostname, including the implied trailing \".\" (if not present), does not exceed 255 bytes.", "dateCreated": "2016-03-10T19:44:47.000Z", "dateModified": "2016-03-10T19:44:47.000Z", "author": "Jeff Walter", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "^(?:_?(?>[a-z\\d][a-z\\d-]{0,61}[a-z\\d]|[a-z\\d])\\.)*(?:_?(?>[a-z\\d][a-z\\d-]{0,61}[a-z\\d]|[a-z\\d]))\\.?$", "permalinkFragment": "dP9dD3", "isFavorite": false, "isStarred": false}, {"title": "MasterCard validate 2017", "description": "Match a MasterCard with new range for 2017: 51-55 and 2221-2720\n\n@incarnated", "dateCreated": "2016-03-22T03:14:53.000Z", "dateModified": "2016-03-22T03:14:53.000Z", "author": "John C", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(^5[1-5][0-9]{14}$)|(^2221[0-9]{12}$)|(^222[2-9][0-9]{12}$)|(^22[3-9][0-9]{13}$)|(^2[3-6][0-9]{14}$)|(^2720[0-9]{12}$)|(^27[0-1][0-9]{13}$)", "permalinkFragment": "eS2iB6", "isFavorite": false, "isStarred": false}, {"title": "UK Postcode", "description": "", "dateCreated": "2016-04-04T13:37:33.000Z", "dateModified": "2016-04-04T13:37:33.000Z", "author": "msyed", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "^([Gg][Ii][Rr][ ]0[Aa]{2})|([a-zA-Z]){1}([0-9][0-9]|[0-9]|[a-zA-Z][0-9][a-zA-Z]|[a-zA-Z][0-9][0-9]|[a-zA-Z][0-9]){1}(\\s?)([0-9][a-zA-z][a-zA-z]){1}$", "permalinkFragment": "fL7oP1", "isFavorite": false, "isStarred": false}, {"title": "Validate Argentinian postal code", "description": "Validates CPA (C\u00f3digo Postal Argentino, spanish for Argentinian Postal Code).", "dateCreated": "2016-05-28T13:57:04.000Z", "dateModified": "2016-05-28T13:57:04.000Z", "author": "Agust\u00edn Bouillet", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(?i)(?P<provincia>[a-hj-np-z])(?P<numero>[\\d]{1,4})(?P<calle>[a-z]{3})", "permalinkFragment": "uG3uU6", "isFavorite": false, "isStarred": false}, {"title": "Validates argentinian postal code", "description": "Validates the two valid postal codes in Argentina", "dateCreated": "2016-05-28T14:05:13.000Z", "dateModified": "2016-05-28T14:05:13.000Z", "author": "Agust\u00edn Bouillet", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(?i)(^[a-hj-np-z][\\d]{4}[a-z]{3}$|^[\\d]{4}$)", "permalinkFragment": "eQ5fJ9", "isFavorite": false, "isStarred": false}, {"title": ",(?=([^\\\"]*\\\"[^\\\"]*\\\")*(?![^\\\"]*\\\"))", "description": "", "dateCreated": "2016-05-31T12:17:10.000Z", "dateModified": "2016-05-31T12:17:10.000Z", "author": "", "flavor": "pcre", "delimiter": ";", "flags": "", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": ",(?=([^\\\"]*\\\"[^\\\"]*\\\")*(?![^\\\"]*\\\"))", "permalinkFragment": "iT4sW7", "isFavorite": false, "isStarred": false}, {"title": "remove blank keys in query string", "description": "looks for blank keys in the query string and remove it, in order to make shorter request.", "dateCreated": "2016-07-03T12:36:42.000Z", "dateModified": "2016-07-03T12:36:42.000Z", "author": "M.Nizam", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(\\w+=[\\w]{0})(?:&|$)", "permalinkFragment": "dH3yA0", "isFavorite": false, "isStarred": false}, {"title": "Credit Card Validation - MasterCard, Visa, Amex, Discover", "description": "MasterCard -  ^5[1-5]\\d+\nVisa - ^4\\d+\nAmex - ^3[47]\\d+\nDiscover - 6011|65|64...", "dateCreated": "2016-07-09T21:06:12.000Z", "dateModified": "2016-07-09T21:06:12.000Z", "author": "Eric Foster", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(^5[1-5]|^4|^3[47])|(^6011|65|64[4-9]|622(1(2[6-9]|[3-9]\\d)|[2-8]\\d{2}|9([01]\\d|2[0-5])))\\d+", "permalinkFragment": "kY0jJ0", "isFavorite": false, "isStarred": false}, {"title": "Campos Decimais (pt_br)", "description": "Funciona para campos decimais para moeda nacional brasileira. Aceita n\u00fameros inteiros, separa\u00e7\u00e3o por milhar e a separa\u00e7\u00e3o decimal.", "dateCreated": "2016-07-21T20:52:24.000Z", "dateModified": "2016-07-21T20:52:24.000Z", "author": "Murilo C. Cumerlatto", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "^(((\\d+)(\\.\\d{3})*(,\\d{2}))|(\\d*))$", "permalinkFragment": "nL6eI3", "isFavorite": false, "isStarred": false}, {"title": "INI Parser", "description": "Created for purpose of reading an INI file in C# applications.\nSupports comments and comment escape characters. I plan to add more escape characters (such as \\=).\n\n    s    - Section\n    scp  - Section Comment Prefix\n    sc   - Section Comment\n    k    - Key\n    v    - Value\n    kvcp - KeyValue Comment Prefix\n    kvc  - KeyValue Comment\n    cp   - Comment Prefix\n    c    - Comment\n\nI am open to any suggestion that may improve upon this regex, and/or would allow me to learn more.\n<br />\n##### Created by [Raxdiam](https://github.com/Raxdiam)", "dateCreated": "2020-03-03T01:56:07.000Z", "dateModified": "2020-03-03T01:56:07.000Z", "author": "Raxdiam", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(^( +|)\\[(?<name>[^#;\\r\\n]+)\\])|(^( +|)(?<key>[^\\[\\]\\r\\n=#;]+)( |)=( |)(?<value>[^#;\\\\\\r\\n]*(?:\\\\.[^#;\\\\\\r\\n]*)*))|((#|;)(?<comm>.+)$)", "permalinkFragment": "Yn6dAs", "isFavorite": false, "isStarred": false}, {"title": "CloudFlare", "description": "Cloud Flare ", "dateCreated": "2021-06-29T16:27:00.000Z", "dateModified": "2021-06-29T16:27:00.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "gs", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(\\\"WAFFlags\\\":\\\"1\\\"|\\\"FirewallMatchesActions\\\":\\[\\\"log\\\"\\]|\\\"FirewallMatchesActions\\\":\\[\\\"log\\\",\\\"log\\\"\\]|\\\"FirewallMatchesSources\\\":\\[\\\"firewallRules\\\",\\\"waf\\\"\\]|\\\"FirewallMatchesActions\\\":\\[\\\"block\\\"\\]|\\\"FirewallMatchesActions\\\":\\[\\\"challengeSolved\\\"\\]|\\\"FirewallMatchesActions\\\":\\[\\\"challenge\\\"\\])", "permalinkFragment": "cHoUnP", "isFavorite": false, "isStarred": false}, {"title": "Email", "description": "email format control", "dateCreated": "2021-07-10T13:06:06.000Z", "dateModified": "2021-07-10T13:06:06.000Z", "author": "ahmetbarut", "flavor": "pcre2", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 4, "downvotes": 0, "score": 0.5100999795960008, "userVote": null, "regex": "(^[a-zA-Z0-9_.]+[@]{1}[a-z0-9]+[\\.][a-z]+$)", "permalinkFragment": "SxCdMO", "isFavorite": false, "isStarred": false}, {"title": "Username with \"_\" \"-\"", "description": "", "dateCreated": "2015-10-16T15:44:08.000Z", "dateModified": "2015-10-16T15:44:08.000Z", "author": "Gianvy", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 23, "downvotes": 11, "score": 0.5084258398280276, "userVote": null, "regex": "^(?=.{3,20}$)(?![_.-])(?!.*[_.-]{2})[a-zA-Z0-9_-]+([^._-])$", "permalinkFragment": "jJ2zN2", "isFavorite": false, "isStarred": false}, {"title": "match valid JSON", "description": "Matches any valid JSON object, matches recursively.\n\nPasses all JSON test cases I found.", "dateCreated": "2014-11-17T20:47:44.000Z", "dateModified": "2014-11-17T20:47:44.000Z", "author": "Mateon1", "flavor": "pcre", "delimiter": "/", "flags": "x", "version": 1, "upvotes": 91, "downvotes": 65, "score": 0.5048742655572506, "userVote": null, "regex": "(?(DEFINE)\n# Note that everything is atomic, JSON does not need backtracking if it's valid\n# and this prevents catastrophic backtracking\n(?<json>(?>\\s*(?&object)\\s*|\\s*(?&array)\\s*))\n(?<object>(?>\\{\\s*(?>(?&pair)(?>\\s*,\\s*(?&pair))*)?\\s*\\}))\n(?<pair>(?>(?&STRING)\\s*:\\s*(?&value)))\n(?<array>(?>\\[\\s*(?>(?&value)(?>\\s*,\\s*(?&value))*)?\\s*\\]))\n(?<value>(?>true|false|null|(?&STRING)|(?&NUMBER)|(?&object)|(?&array)))\n(?<STRING>(?>\"(?>\\\\(?>[\"\\\\\\/bfnrt]|u[a-fA-F0-9]{4})|[^\"\\\\\\0-\\x1F\\x7F]+)*\"))\n(?<NUMBER>(?>-?(?>0|[1-9][0-9]*)(?>\\.[0-9]+)?(?>[eE][+-]?[0-9]+)?))\n)\n\\A(?&json)\\z", "permalinkFragment": "tA9pM8", "isFavorite": false, "isStarred": false}, {"title": "Removing an XML Nodes namespace prefix from a XML string wit", "description": "", "dateCreated": "2013-11-23T16:21:24.000Z", "dateModified": "2013-11-23T16:21:24.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 15, "downvotes": 6, "score": 0.5004322611198401, "userVote": null, "regex": "<(\\/?)\\w+:(\\w+\\/?) ?(\\w+:\\w+.*)?>", "permalinkFragment": "qX0wV5", "isFavorite": false, "isStarred": false}, {"title": "Strip Email ID from Name", "description": "Use this regex to select all characters up to the \"<\" bracket. Then, reverse the direction of the bracket to select the closing \">\" bracket. It works across multiple lines. You can get an email list with only the IDs. This is the pattern it matches:\n\nAlpha Person <aperson@whatever.org>\n\nStep 1 (.*) [$<$] gives you aperson@whatever.org>\nStep 2 [$.$] (.*) gives you aperson@whatever.org\n", "dateCreated": "2014-11-24T22:41:22.000Z", "dateModified": "2014-11-24T22:41:22.000Z", "author": "Jonathan Davidar", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 18, "downvotes": 8, "score": 0.5001138845955662, "userVote": null, "regex": "(.*)[$<$]", "permalinkFragment": "tR9kQ9", "isFavorite": false, "isStarred": false}, {"title": "Email address (most used)", "description": "Email address, most used cases", "dateCreated": "2015-07-01T09:32:00.000Z", "dateModified": "2015-07-01T09:32:00.000Z", "author": "Jago", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 142, "downvotes": 111, "score": 0.49965276424782396, "userVote": null, "regex": "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$", "permalinkFragment": "mX1xW0", "isFavorite": false, "isStarred": false}, {"title": "rsyslog test", "description": "global modifier", "dateCreated": "2015-03-18T16:42:26.000Z", "dateModified": "2015-03-18T16:42:26.000Z", "author": "dtmland", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 10, "downvotes": 3, "score": 0.4974312598922744, "userVote": null, "regex": "(?:;([^;]+)){5}", "permalinkFragment": "lS0nU1", "isFavorite": false, "isStarred": false}, {"title": "Any positive integer except zero", "description": "", "dateCreated": "2015-08-27T10:04:13.000Z", "dateModified": "2015-08-27T10:04:13.000Z", "author": "Harsh", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 10, "downvotes": 3, "score": 0.4974312598922744, "userVote": null, "regex": "^[1-9]\\d*$", "permalinkFragment": "qQ0pD1", "isFavorite": false, "isStarred": false}, {"title": "Date and time format - ISO 8601", "description": "Matches ISO 8601 date formats", "dateCreated": "2016-02-03T08:21:16.000Z", "dateModified": "2016-02-03T08:21:16.000Z", "author": "Ettienne", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 10, "downvotes": 3, "score": 0.4974312598922744, "userVote": null, "regex": "\\d{4}(.\\d{2}){2}(\\s|T)(\\d{2}.){2}\\d{2}", "permalinkFragment": "zZ1pF9", "isFavorite": false, "isStarred": false}, {"title": "Remove Special Ascii Characters from unicode String", "description": "By Using this string you can just remove ascii special characters from a unicode string characters like \u00e2\u2122\u00a5\u00e2\u2122\u00a5\u00e2\u2122\u00a5\u00e2\u2122\u00a5  \u00e2\u2013\u201c\u00e2\u2013\u2019 and other non unicode letters.", "dateCreated": "2015-03-12T11:00:22.000Z", "dateModified": "2015-03-12T11:00:22.000Z", "author": "Hummad Hassan", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 22, "downvotes": 11, "score": 0.4960758178525453, "userVote": null, "regex": "[^\\p{L}\\s._0-9\\-]+", "permalinkFragment": "gZ2wF1", "isFavorite": false, "isStarred": false}, {"title": "userName", "description": "1-15 alphanumeric login name", "dateCreated": "2015-06-06T08:00:10.000Z", "dateModified": "2015-06-06T08:00:10.000Z", "author": "gsanchezc", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 88, "downvotes": 65, "score": 0.4959377097375945, "userVote": null, "regex": "^(?=.*[a-zA-Z]{1,})(?=.*[\\d]{0,})[a-zA-Z0-9]{1,15}$\n", "permalinkFragment": "qB2bB4", "isFavorite": false, "isStarred": false}, {"title": "http://", "description": "", "dateCreated": "2014-03-26T06:44:34.000Z", "dateModified": "2014-03-26T06:44:34.000Z", "author": "Mitus M.", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 236, "downvotes": 201, "score": 0.49317038191601537, "userVote": null, "regex": "(https?:\\/\\/).*", "permalinkFragment": "nR2cR9", "isFavorite": false, "isStarred": false}, {"title": "URL regexp", "description": "A quite neat regular expression for URLs, e-mails..., I found on Matthew O'Riordan's blog.", "dateCreated": "2013-01-14T17:52:31.000Z", "dateModified": "2013-01-14T17:52:31.000Z", "author": "Matthew O'Riordan", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 325, "downvotes": 285, "score": 0.49311161052864727, "userVote": null, "regex": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!\\/\\\\w]*))?)", "permalinkFragment": "cX0pJ8", "isFavorite": false, "isStarred": false}, {"title": "repeat group match", "description": "", "dateCreated": "2015-07-24T21:02:45.000Z", "dateModified": "2015-07-24T21:02:45.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 13, "downvotes": 5, "score": 0.49126922435565085, "userVote": null, "regex": "/?t?e?s?t?/(\\w+)+", "permalinkFragment": "oU5pF2", "isFavorite": false, "isStarred": false}, {"title": "Extract style", "description": "", "dateCreated": "2015-05-07T08:32:52.000Z", "dateModified": "2015-05-07T08:32:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "s", "version": 1, "upvotes": 8, "downvotes": 2, "score": 0.4901568467207233, "userVote": null, "regex": "\\<style\\>(.*)\\<\\/style\\>", "permalinkFragment": "aC9zH0", "isFavorite": false, "isStarred": false}, {"title": "Find consecutive duplicate words", "description": "", "dateCreated": "2015-08-31T22:17:21.000Z", "dateModified": "2015-08-31T22:17:21.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gi", "version": 1, "upvotes": 8, "downvotes": 2, "score": 0.4901568467207233, "userVote": null, "regex": "\\b(\\w+)\\s+\\1\\b", "permalinkFragment": "fR9oL4", "isFavorite": false, "isStarred": false}, {"title": "Spanish DNI/NIE check fist pass", "description": "", "dateCreated": "2015-09-27T22:27:30.000Z", "dateModified": "2015-09-27T22:27:30.000Z", "author": "Rafael Casanova Morera", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 8, "downvotes": 2, "score": 0.4901568467207233, "userVote": null, "regex": "^(x?\\d{8}|[xyz]\\d{7})[trwagmyfpdxbnjzsqvhlcke]$", "permalinkFragment": "wZ9jG6", "isFavorite": false, "isStarred": false}, {"title": "Email", "description": "", "dateCreated": "2016-04-25T17:30:50.000Z", "dateModified": "2016-04-25T17:30:50.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 8, "downvotes": 2, "score": 0.4901568467207233, "userVote": null, "regex": "[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$", "permalinkFragment": "pN8kV9", "isFavorite": false, "isStarred": false}, {"title": "Address Check Validation", "description": "Check for true or false street address format", "dateCreated": "2014-01-30T13:56:42.000Z", "dateModified": "2014-01-30T13:56:42.000Z", "author": "Dilip Borad", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 24, "downvotes": 13, "score": 0.48758729504411086, "userVote": null, "regex": "[0-9]+\\s*([a-zA-Z]+\\s*[a-zA-Z]+\\s)*[0-9]*", "permalinkFragment": "aO5rV7", "isFavorite": false, "isStarred": false}, {"title": "RegEx to validate oAuth 2.0 redirect_uri", "description": "A simple RegEx rule which should validate redirect_uri for oAuth2 ", "dateCreated": "2014-09-24T07:02:44.000Z", "dateModified": "2014-09-24T07:02:44.000Z", "author": "Vlad Miller", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 6, "downvotes": 1, "score": 0.4868654965983112, "userVote": null, "regex": "^(http|https):\\/\\/[\\d\\w]{1,64}\\.?[\\d\\w]{2,15}(\\/[\\d\\w]*)*\\??[\\d\\w&=]*$", "permalinkFragment": "wX2nT9", "isFavorite": false, "isStarred": false}, {"title": "Replace caracters not inside HTM tags", "description": "Select a character (or string) ingnoring if that element is inside the HTML tags. Useful to apply html tags using replace.", "dateCreated": "2015-04-27T11:50:51.000Z", "dateModified": "2015-04-27T11:50:51.000Z", "author": "Alex5B", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 6, "downvotes": 1, "score": 0.4868654965983112, "userVote": null, "regex": "(\")(?![^<>]*>)", "permalinkFragment": "gN4vI6", "isFavorite": false, "isStarred": false}, {"title": "email (tikhonov)", "description": "CheckEmail\nLogin start or end simbols [._- ]\n.login@domain.com - fail\n-login@domain.com - fail\n_login@domain.com - fail\nlogin.@domain.com - fail\nlogin-@domain.com - fail\nlogin_@domain.com - fail\n\nLogin double simbol [._-]\nlogin..name@domain.com - fail\nlogin--name@domain.com - fail\nlogin__name@domain.com - fail\nlogin_-name@domain.com - fail\nlogin_.name@domain.com - fail\n\nDomain start or end simbol [.-]\nlogin@-domain.com - fail\nlogin@.domain.com - fail\nlogin@domain.com. - fail\n\nDomain not march simbol [_]\nlogin@dom_ain.com - fail\n\nDomain double simbol [.-]\nlogin@domain..com - fail\nlogin@domain--domain2.com - fail\n\nBig subdomain\nlogin@dom1.dom2.dom-3.dom-4.com - good\n\nDomain end two or more simbol\nlogin@domain.c - fail\nlogin@domain.ru - good\n\nLogin or domain can contain numbers\n123login456@123domain456.com - good\n\n<script>\nvar reg = /^([a-z0-9]+(?:[._-][a-z0-9]+)*)@([a-z0-9]+(?:[.-][a-z0-9]+)*\\.[a-z]{2,})$/i \nvar result = reg.exec(\"login@domain.com\"); //['login@domain.com', 'login', 'domain.com'];\n</script>", "dateCreated": "2015-12-31T12:13:01.000Z", "dateModified": "2023-07-24T12:11:06.000Z", "author": "Tikhonov Alexander <123546.90@mail.ru>", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 2, "upvotes": 6, "downvotes": 1, "score": 0.4868654965983112, "userVote": null, "regex": "^([a-z0-9]+(?:[._-][a-z0-9]+)*)@([a-z0-9]+(?:[.-][a-z0-9]+)*\\.[a-z]{2,})$", "permalinkFragment": "jZ2cC4", "isFavorite": false, "isStarred": false}, {"title": "Bible reference extractor", "description": "For scraping http://skepticsannotatedbible.com/", "dateCreated": "2016-04-04T08:31:57.000Z", "dateModified": "2016-04-04T08:31:57.000Z", "author": "antaytheist-owner", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 6, "downvotes": 1, "score": 0.4868654965983112, "userVote": null, "regex": "(.*?)\\s(\\d{1,2})(?::(\\d{1,2})(?:-(\\d{1,2})?)?)?", "permalinkFragment": "wX7nO0", "isFavorite": false, "isStarred": false}, {"title": "PHP variable name", "description": "Valid PHP variable name as defined in the manual at http://php.net/manual/en/language.variables.basics.php", "dateCreated": "2013-02-05T09:18:36.000Z", "dateModified": "2013-02-05T09:18:36.000Z", "author": "Erin Millard", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 35, "downvotes": 22, "score": 0.48429496423791346, "userVote": null, "regex": "[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*", "permalinkFragment": "wB6cH3", "isFavorite": false, "isStarred": false}, {"title": "Full name (Turkish)", "description": "Matches case insensitive first name, optional unlimited number of middle names and last name separated with space format.\nReplaced `\\w` with explicit char range for Turkish support. (\u00c4\u017e accepted as first char not to over complex)", "dateCreated": "2014-09-29T13:31:11.000Z", "dateModified": "2014-09-29T13:31:11.000Z", "author": "CKK", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 31, "downvotes": 19, "score": 0.48150195022393577, "userVote": null, "regex": "^[a-zA-Z\u00c3\u00a7\u00c3\u2021\u00c4\u00b1\u00c4\u0178\u00c4\u017e\u00c4\u00b0\u00c3\u00b6\u00c3\u2013\u00c5\u0178\u00c5\u017e\u00c3\u00bc\u00c3\u0153]+(?:\\s[a-zA-Z\u00c3\u00a7\u00c3\u2021\u00c4\u00b1\u00c4\u0178\u00c4\u017e\u00c4\u00b0\u00c3\u00b6\u00c3\u2013\u00c5\u0178\u00c5\u017e\u00c3\u00bc\u00c3\u0153]+)+$", "permalinkFragment": "pQ6uF6", "isFavorite": false, "isStarred": false}, {"title": "RFC 3987 compliant URL regex", "description": "This is a JavaScript port of the URL regex from http://stackoverflow.com/a/190405/384062 that includes a bug fix and some optimization.\n\nMathias Bynens's Regenerate was used to convert unicode escapes.\n\nBug fix: Eliminated stray | falsely allowing querystring to contain |\n\nOptimization: Merged alternated character classes in querystring and fragment identifier portions for better performance.", "dateCreated": "2015-06-24T14:07:42.000Z", "dateModified": "2015-06-24T14:07:42.000Z", "author": "Hans Meyer", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 11, "downvotes": 4, "score": 0.48049110315619437, "userVote": null, "regex": "^[a-z](?:[-a-z0-9\\+\\.])*:(?:\\/\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:\\xA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[\\uD800-\\uD83E\\uD840-\\uD87E\\uD880-\\uD8BE\\uD8C0-\\uD8FE\\uD900-\\uD93E\\uD940-\\uD97E\\uD980-\\uD9BE\\uD9C0-\\uD9FE\\uDA00-\\uDA3E\\uDA40-\\uDA7E\\uDA80-\\uDABE\\uDAC0-\\uDAFE\\uDB00-\\uDB3E\\uDB44-\\uDB7E][\\uDC00-\\uDFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F][\\uDC00-\\uDFFD])*@)?(?:\\[(?:(?:(?:[0-9a-f]{1,4}:){6}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|::(?:[0-9a-f]{1,4}:){5}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4}:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|v[0-9a-f]+[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:]+)\\]|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}|(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=@\\xA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[\\uD800-\\uD83E\\uD840-\\uD87E\\uD880-\\uD8BE\\uD8C0-\\uD8FE\\uD900-\\uD93E\\uD940-\\uD97E\\uD980-\\uD9BE\\uD9C0-\\uD9FE\\uDA00-\\uDA3E\\uDA40-\\uDA7E\\uDA80-\\uDABE\\uDAC0-\\uDAFE\\uDB00-\\uDB3E\\uDB44-\\uDB7E][\\uDC00-\\uDFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F][\\uDC00-\\uDFFD])*)(?::[0-9]*)?(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:@\\xA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[\\uD800-\\uD83E\\uD840-\\uD87E\\uD880-\\uD8BE\\uD8C0-\\uD8FE\\uD900-\\uD93E\\uD940-\\uD97E\\uD980-\\uD9BE\\uD9C0-\\uD9FE\\uDA00-\\uDA3E\\uDA40-\\uDA7E\\uDA80-\\uDABE\\uDAC0-\\uDAFE\\uDB00-\\uDB3E\\uDB44-\\uDB7E][\\uDC00-\\uDFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F][\\uDC00-\\uDFFD]))*)*|\\/(?:(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:@\\xA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[\\uD800-\\uD83E\\uD840-\\uD87E\\uD880-\\uD8BE\\uD8C0-\\uD8FE\\uD900-\\uD93E\\uD940-\\uD97E\\uD980-\\uD9BE\\uD9C0-\\uD9FE\\uDA00-\\uDA3E\\uDA40-\\uDA7E\\uDA80-\\uDABE\\uDAC0-\\uDAFE\\uDB00-\\uDB3E\\uDB44-\\uDB7E][\\uDC00-\\uDFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F][\\uDC00-\\uDFFD]))+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:@\\xA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[\\uD800-\\uD83E\\uD840-\\uD87E\\uD880-\\uD8BE\\uD8C0-\\uD8FE\\uD900-\\uD93E\\uD940-\\uD97E\\uD980-\\uD9BE\\uD9C0-\\uD9FE\\uDA00-\\uDA3E\\uDA40-\\uDA7E\\uDA80-\\uDABE\\uDAC0-\\uDAFE\\uDB00-\\uDB3E\\uDB44-\\uDB7E][\\uDC00-\\uDFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F][\\uDC00-\\uDFFD]))*)*)?|(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:@\\xA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[\\uD800-\\uD83E\\uD840-\\uD87E\\uD880-\\uD8BE\\uD8C0-\\uD8FE\\uD900-\\uD93E\\uD940-\\uD97E\\uD980-\\uD9BE\\uD9C0-\\uD9FE\\uDA00-\\uDA3E\\uDA40-\\uDA7E\\uDA80-\\uDABE\\uDAC0-\\uDAFE\\uDB00-\\uDB3E\\uDB44-\\uDB7E][\\uDC00-\\uDFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F][\\uDC00-\\uDFFD]))+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:@\\xA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[\\uD800-\\uD83E\\uD840-\\uD87E\\uD880-\\uD8BE\\uD8C0-\\uD8FE\\uD900-\\uD93E\\uD940-\\uD97E\\uD980-\\uD9BE\\uD9C0-\\uD9FE\\uDA00-\\uDA3E\\uDA40-\\uDA7E\\uDA80-\\uDABE\\uDAC0-\\uDAFE\\uDB00-\\uDB3E\\uDB44-\\uDB7E][\\uDC00-\\uDFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F][\\uDC00-\\uDFFD]))*)*|(?!(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:@\\xA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[\\uD800-\\uD83E\\uD840-\\uD87E\\uD880-\\uD8BE\\uD8C0-\\uD8FE\\uD900-\\uD93E\\uD940-\\uD97E\\uD980-\\uD9BE\\uD9C0-\\uD9FE\\uDA00-\\uDA3E\\uDA40-\\uDA7E\\uDA80-\\uDABE\\uDAC0-\\uDAFE\\uDB00-\\uDB3E\\uDB44-\\uDB7E][\\uDC00-\\uDFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F][\\uDC00-\\uDFFD])))(?:\\?(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:@\\/\\?\\xA0-\\uD7FF\\uE000-\\uFDCF\\uFDF0-\\uFFEF]|[\\uD800-\\uD83E\\uD840-\\uD87E\\uD880-\\uD8BE\\uD8C0-\\uD8FE\\uD900-\\uD93E\\uD940-\\uD97E\\uD980-\\uD9BE\\uD9C0-\\uD9FE\\uDA00-\\uDA3E\\uDA40-\\uDA7E\\uDA80-\\uDABE\\uDAC0-\\uDAFE\\uDB00-\\uDB3E\\uDB44-\\uDB7E\\uDB80-\\uDBBE\\uDBC0-\\uDBFE][\\uDC00-\\uDFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDC00-\\uDFFD])*)?(?:\\#(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:@\\/\\?\\xA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[\\uD800-\\uD83E\\uD840-\\uD87E\\uD880-\\uD8BE\\uD8C0-\\uD8FE\\uD900-\\uD93E\\uD940-\\uD97E\\uD980-\\uD9BE\\uD9C0-\\uD9FE\\uDA00-\\uDA3E\\uDA40-\\uDA7E\\uDA80-\\uDABE\\uDAC0-\\uDAFE\\uDB00-\\uDB3E\\uDB44-\\uDB7E][\\uDC00-\\uDFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F][\\uDC00-\\uDFFD])*)?$", "permalinkFragment": "vF2bZ4", "isFavorite": false, "isStarred": false}, {"title": "http url regex", "description": "general purpose HTTP URL regex", "dateCreated": "2015-06-21T19:49:12.000Z", "dateModified": "2015-06-21T19:49:12.000Z", "author": "Miguel Castillo @manchagnu", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 74, "downvotes": 58, "score": 0.4754112148530398, "userVote": null, "regex": "^((https?:)(\\/\\/\\/?)([\\w]*(?::[\\w]*)?@)?([\\d\\w\\.-]+)(?::(\\d+))?)?([\\/\\\\\\w\\.()-]*)?(?:([?][^#]*)?(#.*)?)*", "permalinkFragment": "kX6uO2", "isFavorite": false, "isStarred": false}, {"title": "Email validation", "description": "", "dateCreated": "2014-09-16T13:45:00.000Z", "dateModified": "2014-09-16T13:45:00.000Z", "author": "tutsplus.com", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 119, "downvotes": 101, "score": 0.47492067126844617, "userVote": null, "regex": "^([a-z0-9_\\.-]+\\@[\\da-z\\.-]+\\.[a-z\\.]{2,6})$", "permalinkFragment": "kI6rE7", "isFavorite": false, "isStarred": false}, {"title": "Password", "description": "Safe Password that allow only with a number, a lowercase, a uppercase, and a special character", "dateCreated": "2015-04-28T16:49:54.000Z", "dateModified": "2015-04-28T16:49:54.000Z", "author": "davidlondono", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 90, "downvotes": 74, "score": 0.4723722550896166, "userVote": null, "regex": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=.\\-_*])([a-zA-Z0-9@#$%^&+=*.\\-_]){3,}$", "permalinkFragment": "sW0eK7", "isFavorite": false, "isStarred": false}, {"title": "Alphanumeric Regex", "description": "", "dateCreated": "2015-06-15T13:57:29.000Z", "dateModified": "2015-06-15T13:57:29.000Z", "author": "Deepan", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 101, "downvotes": 85, "score": 0.47127236814982654, "userVote": null, "regex": "^(?=.*[a-zA-Z])(?=.*[0-9])[a-zA-Z0-9]+$", "permalinkFragment": "yY1eU9", "isFavorite": false, "isStarred": false}, {"title": "domain - host", "description": "", "dateCreated": "2015-09-29T17:50:59.000Z", "dateModified": "2015-09-29T17:50:59.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 20, "downvotes": 11, "score": 0.4694763801290484, "userVote": null, "regex": "(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{1,63}(?<!-)\\.)+[a-zA-Z]{2,63}$)", "permalinkFragment": "oX5kI7", "isFavorite": false, "isStarred": false}, {"title": "regex101.com id grabber", "description": "grabs the ID for the regex101.com permalink to code", "dateCreated": "2014-08-19T16:10:07.000Z", "dateModified": "2014-08-19T16:10:07.000Z", "author": "chris mccoy", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 53, "downvotes": 40, "score": 0.46847341601011955, "userVote": null, "regex": "^https?:\\/\\/regex101\\.com\\/?(?:r\\/(?P<link>(?:[a-zA-Z]{2}\\d){2})(?:\\/(?P<version>\\d+)?)?)?$", "permalinkFragment": "kB2eO5", "isFavorite": false, "isStarred": false}, {"title": "ID003 device info", "description": "", "dateCreated": "2014-03-12T09:38:20.000Z", "dateModified": "2014-03-12T09:38:20.000Z", "author": "sasjaq", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 9, "downvotes": 3, "score": 0.4676896604924321, "userVote": null, "regex": "(?<ModelCode>\\w{1})\\((?<CountryCode>\\w{3,4})\\)\\-(?<ModelNumber>\\w{2})(\\-(?<StackerType>\\w{2}))? (?<InterfaceType>ID003\\-\\d{2})v(?<SoftwareVersion>\\d{3}\\-\\d{2}) (?<SotfwareDate>\\w+) (?<Crc>\\w{4})", "permalinkFragment": "vN8jT8", "isFavorite": false, "isStarred": false}, {"title": "Validate Birth Date (d/m/Y)", "description": "From 1970 to 2015\n  Replace: (\\d{4})$ for\n    (19[7-9]\\d|20[0-1][0-5])$", "dateCreated": "2015-11-20T05:28:33.000Z", "dateModified": "2015-11-20T05:28:33.000Z", "author": "Valdeir Santana", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 9, "downvotes": 3, "score": 0.4676896604924321, "userVote": null, "regex": "^(0[1-9]|[1-2][0-9]|3[0-1])\\/(0[1-9]|1[0-2])\\/(\\d{4})$", "permalinkFragment": "zY7pR5", "isFavorite": false, "isStarred": false}, {"title": "Phone Number", "description": "Allows phone numbers with optional country code, optional special characters and whitespace", "dateCreated": "2015-08-11T17:07:10.000Z", "dateModified": "2015-08-11T17:07:10.000Z", "author": "Tlmader", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 92, "downvotes": 78, "score": 0.46618597853486243, "userVote": null, "regex": "^([+]?\\d{1,2}[-\\s]?|)\\d{3}[-\\s]?\\d{3}[-\\s]?\\d{4}$", "permalinkFragment": "rL2lD5", "isFavorite": false, "isStarred": false}, {"title": "URL Validator", "description": "Validates - \n\n1. URLs with schemes - http, https and ftp\n\n2. Relative URL starting with / and ../", "dateCreated": "2014-09-24T08:41:31.000Z", "dateModified": "2014-09-24T08:41:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 76, "downvotes": 63, "score": 0.46385752068201014, "userVote": null, "regex": "(((ftp|http|https):\\/\\/)|(\\/)|(..\\/))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?", "permalinkFragment": "zB1sS9", "isFavorite": false, "isStarred": false}, {"title": "Alphanumeric and Spaces", "description": "Alow alphanumeric characters and spaces", "dateCreated": "2015-08-22T06:46:38.000Z", "dateModified": "2023-07-20T10:55:34.000Z", "author": "JTN", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 2, "upvotes": 17, "downvotes": 9, "score": 0.46220228936176194, "userVote": null, "regex": "^[a-z\\d\\-_\\s]+$", "permalinkFragment": "hI9cR2", "isFavorite": false, "isStarred": false}, {"title": "Date(Including Leap Year) YYYY-MM-DD hh:mm:ss", "description": "Validates DateTime of format YYYY-MM-DD hh:mm:ss including Leap Year", "dateCreated": "2014-03-14T16:49:02.000Z", "dateModified": "2014-03-14T16:49:02.000Z", "author": "Madhan", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 42, "downvotes": 31, "score": 0.4609917402107883, "userVote": null, "regex": "/(^(((\\d\\d)(([02468][048])|([13579][26]))-02-29)|(((\\d\\d)(\\d\\d)))-((((0\\d)|(1[0-2]))-((0\\d)|(1\\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))\\s(([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d))$)/", "permalinkFragment": "qW3tW2", "isFavorite": false, "isStarred": false}, {"title": "Date time Advanced", "description": "", "dateCreated": "2013-12-03T19:19:21.000Z", "dateModified": "2013-12-03T19:19:21.000Z", "author": "Mr.Neutro", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 18, "downvotes": 10, "score": 0.45829977507501124, "userVote": null, "regex": "(?<day>0[1-9]|1[0-9]|2[0-9]|3[01]).(?<month>0[1-9]|1[012]).(?<year>[0-9]{4})(?: (?<hour>[0-1]\\d|2[0-3]):(?<minute>[0-5]\\d):(?<second>[0-5]\\d)|)", "permalinkFragment": "lW6sV9", "isFavorite": false, "isStarred": false}, {"title": "PAN CARD validation", "description": "checks for valid PAN card for Indian users.", "dateCreated": "2014-05-06T07:06:45.000Z", "dateModified": "2014-05-06T07:06:45.000Z", "author": "karan thakkar", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 14, "downvotes": 7, "score": 0.4537307564292592, "userVote": null, "regex": "^[A-Z]{5}\\d{4}[A-Z]$", "permalinkFragment": "jZ2lV1", "isFavorite": false, "isStarred": false}, {"title": "Split quotes and single words", "description": "Find \" and ' quoted strings and \"orphaned\"/single words in a string", "dateCreated": "2013-12-29T18:41:02.000Z", "dateModified": "2013-12-29T18:41:02.000Z", "author": "LoveIsGrief", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 10, "downvotes": 4, "score": 0.453504588054977, "userVote": null, "regex": "\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|\\w+|'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'", "permalinkFragment": "wZ8xB4", "isFavorite": false, "isStarred": false}, {"title": "Password", "description": "", "dateCreated": "2013-12-06T14:02:15.000Z", "dateModified": "2023-07-21T04:59:11.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 2, "upvotes": 150, "downvotes": 144, "score": 0.4532991717518598, "userVote": null, "regex": "^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$", "permalinkFragment": "xU7rY4", "isFavorite": false, "isStarred": false}, {"title": "parsing CSV file", "description": "It correctly handles simple values, empty values, and quoted values with commas inside. ", "dateCreated": "2015-03-09T19:02:02.000Z", "dateModified": "2015-03-09T19:02:02.000Z", "author": "Viktor Lova aka nsinreal", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 7, "downvotes": 2, "score": 0.4525833438405084, "userVote": null, "regex": "(?:(?<=^)|(?<=,)) # start of line or comma\n(?:(?!$)\\s)* # skip whitespace\n\"? # skip opening quote mark\n(\n  (?<=\").*?(?=\") # capture value in quotes\n  | # or\n  ((?!,)\\S)* # capture just value\n)\n\"? # skip closing quote mark\n(?:(?!$)\\s)* # skip whitespace\n(?=$|,) # command or the end of the line", "permalinkFragment": "tS5mB9", "isFavorite": false, "isStarred": false}, {"title": "Latitude,Longitude fetcher", "description": "Useful to work with GoogleMap API.", "dateCreated": "2015-08-07T08:25:11.000Z", "dateModified": "2015-08-07T08:25:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 2, "score": 0.4525833438405084, "userVote": null, "regex": "^([-+]?[1-8]?\\d(?:\\.\\d+)?|90(?:\\.0+)?),\\s*([-+]?(?:180(?:\\.0+)?|(?:(?:1[0-7]\\d)|(?:[1-9]?\\d))(?:\\.\\d+)?))$", "permalinkFragment": "fZ1oR3", "isFavorite": false, "isStarred": false}, {"title": "Password strength", "description": "Regular expression for password validation\n  Rules:\n    - 8-120 chars\n    - no spaces\n    - must contain at least one a-z char\n    - must contain at least one A-Z char\n    - must contain at least one digit\n    - must contain at least one of the folowing chars:\n       !@#$%^&*()-=\u00a1\u00a3_+`~.,<>/?;:'\\\"|[]{}", "dateCreated": "2015-08-20T14:32:18.000Z", "dateModified": "2015-08-20T14:32:18.000Z", "author": "@razvanz", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 2, "score": 0.4525833438405084, "userVote": null, "regex": "^.*(?=.{8,120})(?!.*\\s)(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\\u00a1\\\u00a3\\_\\+\\`\\~\\.\\,\\<\\>\\/\\?\\;\\:\\'\\\"\\\\\\|\\[\\]\\{\\}]).*$", "permalinkFragment": "rU3vW6", "isFavorite": false, "isStarred": false}, {"title": "ipv6", "description": "Match an ipv6 address", "dateCreated": "2016-05-25T09:37:49.000Z", "dateModified": "2016-05-25T09:37:49.000Z", "author": "Frusty", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 7, "downvotes": 2, "score": 0.4525833438405084, "userVote": null, "regex": "^([[:xdigit:]]{1,4}(?::[[:xdigit:]]{1,4}){7}|::|:(?::[[:xdigit:]]{1,4}){1,6}|[[:xdigit:]]{1,4}:(?::[[:xdigit:]]{1,4}){1,5}|(?:[[:xdigit:]]{1,4}:){2}(?::[[:xdigit:]]{1,4}){1,4}|(?:[[:xdigit:]]{1,4}:){3}(?::[[:xdigit:]]{1,4}){1,3}|(?:[[:xdigit:]]{1,4}:){4}(?::[[:xdigit:]]{1,4}){1,2}|(?:[[:xdigit:]]{1,4}:){5}:[[:xdigit:]]{1,4}|(?:[[:xdigit:]]{1,4}:){1,6}:)$", "permalinkFragment": "rB9pG1", "isFavorite": false, "isStarred": false}, {"title": "only numbers", "description": "A string with only numbers in", "dateCreated": "2015-11-26T16:19:12.000Z", "dateModified": "2015-11-26T16:19:12.000Z", "author": "Gotts", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 35, "downvotes": 26, "score": 0.4489500681445118, "userVote": null, "regex": "^[0-9]+$", "permalinkFragment": "mG3lT2", "isFavorite": false, "isStarred": false}, {"title": "Youtube ID match", "description": "This regex will match any Youtube video ID thrown at it and return one capturing group containing the ID.", "dateCreated": "2013-11-28T13:30:26.000Z", "dateModified": "2013-11-28T13:30:26.000Z", "author": "Jacob Overgaard", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 67, "downvotes": 58, "score": 0.4488067826456516, "userVote": null, "regex": "(?<=\\d\\/|\\.be\\/|v[=\\/])([\\w\\-]{11,})|^([\\w\\-]{11})$", "permalinkFragment": "kU7bP8", "isFavorite": false, "isStarred": false}, {"title": "Validate Base64 single-line string", "description": "", "dateCreated": "2013-05-31T00:35:32.000Z", "dateModified": "2013-05-31T00:35:32.000Z", "author": "ka.", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 23, "downvotes": 15, "score": 0.44717587004527143, "userVote": null, "regex": "^(?:([a-z0-9A-Z+\\/]){4})*(?1)(?:(?1)==|(?1){2}=|(?1){3})$", "permalinkFragment": "xA4cT9", "isFavorite": false, "isStarred": false}, {"title": "search word with an accent", "description": "search any word with an accent", "dateCreated": "2015-08-04T08:06:15.000Z", "dateModified": "2015-08-04T08:06:15.000Z", "author": "Thegner Pierre", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 11, "downvotes": 5, "score": 0.4440393186673406, "userVote": null, "regex": "\\S*[\\u00E0-\\u00FC]\\S*", "permalinkFragment": "oT8jM4", "isFavorite": false, "isStarred": false}, {"title": "HTML tag stripper", "description": "This regex will identify all html start and end tags.", "dateCreated": "2015-10-29T12:03:34.000Z", "dateModified": "2015-10-29T12:03:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 11, "downvotes": 5, "score": 0.4440393186673406, "userVote": null, "regex": "<([^>]+)>", "permalinkFragment": "qS0gE2", "isFavorite": false, "isStarred": false}, {"title": "split URL into location-resource-params (JavaScript)", "description": "Extract resource location, name and query parameters from a URL (JavaScript version)", "dateCreated": "2014-05-22T17:18:48.000Z", "dateModified": "2014-05-22T17:18:48.000Z", "author": "cebence", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 17, "downvotes": 10, "score": 0.44228904610014924, "userVote": null, "regex": "(.+)(?:\\/([\\w\\-\\._]+\\.js))(?:\\?(.+))?", "permalinkFragment": "jC1fR2", "isFavorite": false, "isStarred": false}, {"title": "Phone number", "description": "", "dateCreated": "2015-06-23T19:15:46.000Z", "dateModified": "2015-06-23T19:15:46.000Z", "author": "Mark Landry", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 95, "downvotes": 91, "score": 0.4394248872065534, "userVote": null, "regex": "^((((\\+[\\d\\-.]{1,5})?[ \\-.]?\\d{3})|(\\+[\\d\\-.]{1,5})?[ \\-.]?\\((\\d{3}\\)))?[ \\-.]?\\d{3}[ \\-.]?\\d{4}\\s?(e?x?t?\\.?\\s?\\d{1,7})?)?$", "permalinkFragment": "xX3hO8", "isFavorite": false, "isStarred": false}, {"title": "SQL select columns", "description": "", "dateCreated": "2013-09-07T13:09:19.000Z", "dateModified": "2013-09-07T13:09:19.000Z", "author": "Phan", "flavor": "pcre", "delimiter": "/", "flags": "sg", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "select (.+?)\\s+from\\s+", "permalinkFragment": "aT8sP5", "isFavorite": false, "isStarred": false}, {"title": "Task 2, part 1", "description": "Finds all source numbers in square brackets", "dateCreated": "2014-02-25T06:13:42.000Z", "dateModified": "2014-02-25T06:13:42.000Z", "author": "Kovalev Evgeny", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(\\[\\d\\])", "permalinkFragment": "wI1lH2", "isFavorite": false, "isStarred": false}, {"title": "how to match both lines?", "description": "f_name may contain spaces, numbers, characters,... so I would go for a [^\\|] but then I couldn't use [...]? anymore to match the second line?", "dateCreated": "2014-07-22T09:38:57.000Z", "dateModified": "2014-07-22T09:38:57.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "time=(\\d+\\-\\d+\\-\\d+\\s+\\d+:\\d+:\\d+)\\|action=(\\w+)\\|[f_name=(\\S*)]?\\|has_accounting=0", "permalinkFragment": "qX8bN8", "isFavorite": false, "isStarred": false}, {"title": "Find URLs in markdown where the lines have been wrapped", "description": "", "dateCreated": "2014-08-26T21:13:05.000Z", "dateModified": "2014-08-26T21:13:05.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(\\(http[s]?:\\/\\/[\\w\\-\\_\\.\\/]*)(\\n)([\\w\\-\\_\\.\\/]*\\))", "permalinkFragment": "qU0vE4", "isFavorite": false, "isStarred": false}, {"title": "TimezoneOffset", "description": "parses timezones in the format -08:00 or -8:0", "dateCreated": "2014-12-09T07:38:21.000Z", "dateModified": "2014-12-09T07:38:21.000Z", "author": "Neha Kadam", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^([+|-]{1})([0-1]{0,1}[0-9]{1}):([0-6]{0,1}[0-9]{1})$", "permalinkFragment": "yB2dG8", "isFavorite": false, "isStarred": false}, {"title": "URL with matching categories", "description": "Finds the protocol, subdomain, ((domain, extension)/ipaddress), port, filepath (split in path and filename), the route and the query string. ", "dateCreated": "2015-01-26T20:38:24.000Z", "dateModified": "2015-01-26T20:38:24.000Z", "author": "fps", "flavor": "pcre", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^(?<protocol>[a-z]{2,6}):\\/\\/((?<subdomain>[a-z0-9]{0,10}\\.{1}){0,2}(?<domain>[a-z\\-0-9]{1,30}){1}\\.{1}(?<extension>[a-z]{1,10}){1}|(?<ipaddress>([0-9\\.]{2,5}){3,8}))(?<port>\\:[0-9]{1,6}){0,1}\\/?(?<filepath>(?<path>[a-z0-9\\-_%]{1,20}\\/{1}){0,}(?<filename>[a-z0-9\\-_]{1,20}\\.{1}[a-z0-9]{2,6}){0,1}){0,1}(?<route>(\\/{1}[a-z_0-9\\-_]{1,20}){1,}){0,10}(?<query>\\?{1}[a-z0-9%\\+_\\-&=\\.@\\!,\\:]{0,200}){0,1}$", "permalinkFragment": "sA4zI1", "isFavorite": false, "isStarred": false}, {"title": "Smart Target Blank", "description": "Allow you to check if the JavaScript `location.pathname` is a link required adding a target=\"_blank\".", "dateCreated": "2015-02-02T16:57:31.000Z", "dateModified": "2015-02-02T16:57:31.000Z", "author": "Bruno Lesieur", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "\\.(?!html?)([a-z]{0,3}|[a-z]{0,4})$", "permalinkFragment": "yH9kX9", "isFavorite": false, "isStarred": false}, {"title": "Request mask idea", "description": "Do you like apis and nodejs as I do?, then this must be for you, have you noticed that all the famous apis have a common functionality? the ability to request partial responses with masks, so if you have a friend list you may want to return only a few fields you know just in case. You will end up requesting someting like /me/friends?fields=name,email,address. But also may want to return complex references like your friend's friends, so this regex let you match things like name,email,address,friends(name,email) as the 4 fields they are, then you can use a portion of the regex to extract the inner fields. Why the fancy introduction? we need some context :P enjoy", "dateCreated": "2015-04-11T19:49:59.000Z", "dateModified": "2015-04-11T19:49:59.000Z", "author": "Marco Villarreal<erick.slayer.m.v@gmail.com>", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(([a-zA-Z]+)\\,)|(\\,[a-zA-Z]+)|([a-zA-Z]+)\\(([a-zA-Z,]+)\\)", "permalinkFragment": "iH1kD0", "isFavorite": false, "isStarred": false}, {"title": "javascript regex ftp directory list", "description": "javascript regex ftp directory list", "dateCreated": "2015-06-23T11:55:59.000Z", "dateModified": "2015-06-23T11:55:59.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^([\\-ld])(([\\-r][\\-w][\\-xs]){3})\\s+(\\d+)\\s+(\\w+)\\s+(\\w+)\\s+(\\d+)\\s+(((\\w{3})\\s+(\\d{2})\\s+(\\d{1,2}):(\\d{2}))|((\\w{3})\\s+(\\d{2})\\s+(\\d{4})))\\s+(.+)$", "permalinkFragment": "rA2mE9", "isFavorite": false, "isStarred": false}, {"title": "Cisco ASA ", "description": "", "dateCreated": "2015-06-29T12:57:41.000Z", "dateModified": "2015-06-29T12:57:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "%(ASA|PIX|FWSM)-\\w+-\\d+-(\\d+):.*", "permalinkFragment": "jA5nC3", "isFavorite": false, "isStarred": false}, {"title": "Italian ZIP code (CAP)", "description": "Codice avviamento postale Italiano (ZIP)", "dateCreated": "2015-07-03T13:40:05.000Z", "dateModified": "2015-07-03T13:40:05.000Z", "author": "Italo", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^[0-9]{5}$", "permalinkFragment": "pV5yA3", "isFavorite": false, "isStarred": false}, {"title": "@font-face stuff", "description": "bits and pieces of reusable replacements in CSS @font-face rules", "dateCreated": "2015-07-10T21:46:10.000Z", "dateModified": "2015-07-10T21:46:10.000Z", "author": "mroncetwice", "flavor": "pcre", "delimiter": "~", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "Garde-(.*?)(svg#Uni)(.*?)'", "permalinkFragment": "pN5mH7", "isFavorite": false, "isStarred": false}, {"title": "Roman numeral detector", "description": "Detects valid Roman numerals (up to 3999), and splits into 4 capture groups: thousands, hundreds, tens, and units.", "dateCreated": "2015-07-11T18:42:08.000Z", "dateModified": "2015-07-11T18:42:08.000Z", "author": "Terence Linnell", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^(M{0,3})(C(?:D|M)|D?C{0,3})(X(?:L|C)|L?X{0,3})(I(?:V|X)|V?I{0,3})$", "permalinkFragment": "zH9eV9", "isFavorite": false, "isStarred": false}, {"title": "sql: insert into", "description": "insert into (a,b,c) values (1,2.3,\"test\");", "dateCreated": "2015-07-25T11:00:59.000Z", "dateModified": "2015-07-25T11:00:59.000Z", "author": "suat erenler - sua.gen.tr", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "insert[\\s]+into[\\s]+\\([\\s]*(?<columns>.*?)[\\s]*\\)[\\s]+values[\\s]+\\((?<values>.*?)[\\s]*\\);", "permalinkFragment": "eA7fS1", "isFavorite": false, "isStarred": false}, {"title": "hj", "description": "hj", "dateCreated": "2015-08-03T18:39:44.000Z", "dateModified": "2015-08-03T18:39:44.000Z", "author": "hj", "flavor": "pcre", "delimiter": "/", "flags": "im", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?!<\\S)(?!\\S{11})(?!\\S*berry\\S)(\\S+berry)(?!$)", "permalinkFragment": "xZ5jH0", "isFavorite": false, "isStarred": false}, {"title": "Match a URL from a text message", "description": "I use this to match the first url present in a text message.", "dateCreated": "2015-08-06T06:16:26.000Z", "dateModified": "2015-08-06T06:16:26.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b[-a-zA-Z0-9@:%_\\+.~#?&//=]*", "permalinkFragment": "qI8iQ9", "isFavorite": false, "isStarred": false}, {"title": "currency", "description": "", "dateCreated": "2015-08-12T20:06:49.000Z", "dateModified": "2015-08-12T20:06:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^\\$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(.[0-9][0-9])?$", "permalinkFragment": "aN7lR2", "isFavorite": false, "isStarred": false}, {"title": "Currencies", "description": "Matches numbers formatted like currencies", "dateCreated": "2015-08-17T14:14:50.000Z", "dateModified": "2015-08-17T14:14:50.000Z", "author": "elgehelge", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "\\d{1,3}(?:[.,]\\d{3})*(?:[.,]\\d{2})", "permalinkFragment": "cG6iO8", "isFavorite": false, "isStarred": false}, {"title": "Forum user validation", "description": "Pedro al DAMS", "dateCreated": "2015-09-03T10:07:18.000Z", "dateModified": "2015-09-03T10:07:18.000Z", "author": "giacomo", "flavor": "pcre", "delimiter": "/", "flags": "mgi", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^([-_ \u0298a-z\u00e0-\u00f90-9]+)$", "permalinkFragment": "uK6qQ4", "isFavorite": false, "isStarred": false}, {"title": "Nombres 4 chiffres", "description": "Nombres 4 chifres", "dateCreated": "2015-09-07T21:55:29.000Z", "dateModified": "2015-09-07T21:55:29.000Z", "author": "EA", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "\\b\\d{1}\\s\\d{3}(?!\\s\\d{3})\\b", "permalinkFragment": "jY5yM6", "isFavorite": false, "isStarred": false}, {"title": "Shortcode parser", "description": "Parse shortcodes, its attributes values and html", "dateCreated": "2015-09-11T10:12:22.000Z", "dateModified": "2015-09-11T10:12:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ug", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?P<shortcode>(?:(?:\\s?\\[))(?P<name>[\\w\\-]{3,})(?:\\s(?P<attrs>[\\w\\d,\\s=\\\"\\'\\-\\+\\#\\%\\!\\~\\`\\&\\.\\s\\:\\/\\?\\|]+))?(?:\\])(?:(?P<html>[\\w\\d\\,\\!\\@\\#\\$\\%\\^\\&\\*\\(\\\\)\\s\\=\\\"\\'\\-\\+\\&\\.\\s\\:\\/\\?\\|\\<\\>]+)(?:\\[\\/[\\w\\-\\_]+\\]))?)", "permalinkFragment": "jX4qE4", "isFavorite": false, "isStarred": false}, {"title": "Arrow function to Normal function", "description": "Convert Arrow Function to Normal Function", "dateCreated": "2015-09-13T17:51:15.000Z", "dateModified": "2015-09-13T17:51:15.000Z", "author": "Abhisek Pattnaik", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(\\([\\w\\s].*[\\w\\s]\\)|\\(\\)) =>", "permalinkFragment": "nI1jB8", "isFavorite": false, "isStarred": false}, {"title": "SemVer chain parsing", "description": "", "dateCreated": "2015-09-18T09:48:00.000Z", "dateModified": "2015-09-18T09:48:00.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^((?:0|(?:[1-9]\\d*)))\\.((?:0|(?:[1-9]\\d*)))\\.((?:0|(?:[1-9]\\d*)))(?:-([0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*))?(?:\\+([0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*))?$", "permalinkFragment": "lA7fS6", "isFavorite": false, "isStarred": false}, {"title": "POST OFFICE BOX", "description": "", "dateCreated": "2015-09-20T21:54:07.000Z", "dateModified": "2015-09-20T21:54:07.000Z", "author": "jmweekes", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "((^|[^A-Z]+)((P[. ]*O[. ]*(B((O?X)|IN)?)?)|(P(OST(AL)?)?[. ]*((OFF(ICE)?)|(B((O?X)|IN)))))[^A-Z])", "permalinkFragment": "yB9uK9", "isFavorite": false, "isStarred": false}, {"title": "Camel case to space-separated string", "description": "Takes any camel case and returns it plus spaces.", "dateCreated": "2015-09-21T20:34:06.000Z", "dateModified": "2015-09-21T20:34:06.000Z", "author": "Rougeware", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?<=[a-zA-Z])(?=[A-Z])", "permalinkFragment": "yO0sH5", "isFavorite": false, "isStarred": false}, {"title": "BOOLEAN EXPRESSION WITH BRACKETS MATCHER", "description": "comapre simbols used just !=, ==, <=, >=, <, > beacose of task\nkeyword \"not\" can be used only before leftside value beacose of task", "dateCreated": "2015-09-22T14:55:36.000Z", "dateModified": "2015-09-22T14:55:36.000Z", "author": "Ilya Filisteev", "flavor": "pcre", "delimiter": "/", "flags": "xmi", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?(DEFINE)\n    (?<exprs> (?&expr)(\\s+(?&bool)\\s+((?&expr)|\\(\\s*(?&exprs)\\s*\\)))* )\n    (?<expr> (?&valleft)\\s?(?&comp)\\s?(?&valright) )\n    (?<comp> ((!=)|(==)|(<=)|(>=)|(<)|(>)){1} )\n    (?<valleft> (?&not)[\\w\\.]+ )\n    (?<valright> [\\w\\.]+ )\n    (?<bool> (and|or) )\n    (?<not> (not\\s+)?)\n)\n(?&exprs)", "permalinkFragment": "cX6dB3", "isFavorite": false, "isStarred": false}, {"title": "ln -l linux parse", "description": "parse linux ln -l output command", "dateCreated": "2015-09-23T17:42:36.000Z", "dateModified": "2015-09-23T17:42:36.000Z", "author": "guignol95", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?<type>.{1})(?<user_access>.{3})(?<group_access>.{3})(?<other_access>.{3}) +(?<oder>[0-9]*) +(?<owner>[a-z]*) +(?<group>[a-z]*) +(?<size>\\d*) +(?<month>[a-z]{3}) +(?<day>\\d{1,2}) +(?<year>\\d{0,4})(?<time>(?<hour>\\d{2}):(?<minute>\\d{2}))? +(?<filename>(?<basename>.+)\\.(?<extension>.*)|(?<no_extension_filename>.*))", "permalinkFragment": "pZ7rG5", "isFavorite": false, "isStarred": false}, {"title": "yyyy-MM-dd hh:MM", "description": "date format for \"yyyy-MM-dd hh:MM\" valid strict model.", "dateCreated": "2015-09-28T13:36:37.000Z", "dateModified": "2015-09-28T13:36:37.000Z", "author": "image72", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]$", "permalinkFragment": "gM1kI7", "isFavorite": false, "isStarred": false}, {"title": "MySQL Full-Text BOOLEAN mode", "description": "Checks if an input string is compatible with the BOOLEAN mode of MySQL full text search system", "dateCreated": "2015-10-01T01:47:44.000Z", "dateModified": "2015-10-01T01:47:44.000Z", "author": "greezybacon", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^(?:[<>~+-]?\\((?:(?:[<>~+-]?[\\w][\\w-]+[*]?|\"[^\"]+\")(?:\\s+(?:[<>~+-]?[\\w][\\w-]+[*]?|\"[^\"]+\"))+)\\)|[<>~+-]?[\\w][\\w-]+[*]?|\"[^\"]+\")(?:\\s+(?:[<>~+-]?\\((?:(?:[<>~+-]?[\\w][\\w-]+[*]?|\"[^\"]+\")(?:\\s+(?:[<>~+-]?[\\w][\\w-]+[*]?|\"[^\"]+\"))+)\\)|[<>~+-]?[\\w][\\w-]+[*]?|\"[^\"]+\"))*$", "permalinkFragment": "vH3qA8", "isFavorite": false, "isStarred": false}, {"title": "Get bad iframe (with white-list)", "description": "In (?!www.youtube.com\\/|youtube.com\\/|player.vimeo.com\\/)\nu can add good sites for iframes:\nwww.youtube.com/\nplayer.vimeo.com/", "dateCreated": "2015-10-06T01:02:15.000Z", "dateModified": "2015-10-06T01:02:15.000Z", "author": "Resager", "flavor": "pcre", "delimiter": "/", "flags": "gmis", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?:<iframe\\s((?!src)[^=]*=\"[^\"]*\"\\s){0,3}src=\"(?:https|http):\\/\\/(?!www.youtube.com\\/|youtube.com\\/|player.vimeo.com\\/)[^\"]*\"[^>]*>.*?<\\/iframe>)", "permalinkFragment": "nU6gE2", "isFavorite": false, "isStarred": false}, {"title": "coffeescript operator", "description": "", "dateCreated": "2015-10-22T07:37:20.000Z", "dateModified": "2015-10-22T07:37:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?:(?:and|or|<<|>>>?|(?<!\\()\\/|[=!<>*%+\\-&^])?=(?!>)|[!%&^*\\/~<>?|:]|\\-?\\-(?!>)|\\+\\+?|<>|&&|\\.\\.\\.?|\\|\\||\\b(?<![\\.\\$])(instanceof|new|delete|typeof|and|or|is|isnt|not|super)(?!\\s*:)\\b)", "permalinkFragment": "jV2tZ7", "isFavorite": false, "isStarred": false}, {"title": "Extract Java Exception Message Field", "description": "Exception Message:\n\njava.lang.NullPointerException: Sample Java Logback Exception\nat Sample.errorLevel3(Sample.java:35)\nat Sample.errorLevel2(Sample.java:31)\nat Sample.errorLevel1(Sample.java:27)\nat Sample.main(Sample.java:15)", "dateCreated": "2015-11-10T08:51:42.000Z", "dateModified": "2015-11-10T08:51:42.000Z", "author": "Amit", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?:([^:,\\s]+):\\s+([^:\\n]+)|\\G(?!\\A))\\s*at\\s+(\\S+)\\((\\w+\\.\\w+):(\\d+)\\)$", "permalinkFragment": "iX4vW9", "isFavorite": false, "isStarred": false}, {"title": "Match text in square brackets", "description": "Drupal7 Media Element in node body - A regex to match the media module square bracketted token/element for embedde images in node body. Use case - using the body text trimmed in a meta description - need to remove the media element as well as strip tags.", "dateCreated": "2015-11-25T14:03:37.000Z", "dateModified": "2015-11-25T14:03:37.000Z", "author": "iAugur", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "\\[([^\\[\\]]++|(?R))*+\\]", "permalinkFragment": "yR0sS4", "isFavorite": false, "isStarred": false}, {"title": "Get Headings From Markdown Format", "description": "Get all headings in a Markdown Format Text", "dateCreated": "2015-11-30T04:23:27.000Z", "dateModified": "2015-11-30T04:23:27.000Z", "author": "Ferdinand Dimas", "flavor": "javascript", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(<=\\s|^)###(.*?)$", "permalinkFragment": "xV3fF1", "isFavorite": false, "isStarred": false}, {"title": "Get Hyperlinks From Markdown Format", "description": "Get all hyperlinks in a Markdown Format Text", "dateCreated": "2015-11-30T04:28:58.000Z", "dateModified": "2015-11-30T04:28:58.000Z", "author": "Ferdinand Dimas", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(\\[(.*?)\\])(\\((.*?)\\))", "permalinkFragment": "aI4yA0", "isFavorite": false, "isStarred": false}, {"title": "R\u00e9cup\u00e9rer la bonne information", "description": "Groupe d'information $1 $2 $3\n\n$1 = Pr\u00e9nom + Nom\n$2 = (Information \u00e0 r\u00e9cup\u00e9rer ou \u00e0 supprimer)\n$3 = Num\u00e9ro de t\u00e9l\u00e9phone", "dateCreated": "2015-12-01T15:08:43.000Z", "dateModified": "2015-12-01T15:08:43.000Z", "author": "Terence DEMOL", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(.*)\\((.*)\\) (.*)", "permalinkFragment": "eV5zU6", "isFavorite": false, "isStarred": false}, {"title": "Removes duplicate lines in text editor", "description": "\"dot matches newline\" must be activated.\nSearch and replace by \"\" (empty string) removes duplicate lines anywhere in text.\n\nExample for Notepad++ use shown under\nhttp://stackoverflow.com/questions/3958350/removing-duplicate-rows-in-notepad", "dateCreated": "2015-12-04T13:34:46.000Z", "dateModified": "2015-12-04T13:34:46.000Z", "author": "Stackoverflow user stema", "flavor": "pcre", "delimiter": "/", "flags": "gms", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^(.*?)$\\s+?^(?=.*^\\1$)\n", "permalinkFragment": "xY8jT3", "isFavorite": false, "isStarred": false}, {"title": "Remove br tags inside anchor tags", "description": "", "dateCreated": "2015-12-15T17:36:14.000Z", "dateModified": "2015-12-15T17:36:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "<a ([^>]*)>([^<]*)(<\\/?br\\/?>)+([^<]*)<\\/a", "permalinkFragment": "hY7sA3", "isFavorite": false, "isStarred": false}, {"title": "Non vowel words", "description": "/\\b([^aeiou\\s]+)\\b/ig", "dateCreated": "2015-12-29T19:32:35.000Z", "dateModified": "2015-12-29T19:32:35.000Z", "author": "regexe", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "\\b([^aeiou\\s]+)\\b", "permalinkFragment": "mT0qF3", "isFavorite": false, "isStarred": false}, {"title": "TV Series filename parsing", "description": "Get TV Series name, season and episode numbers.", "dateCreated": "2016-01-04T20:50:36.000Z", "dateModified": "2016-01-04T20:50:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mgxi", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^((?<ShowNameA>.*[^ (_.]) [ (_.]+ (?!720p|1080p|264|265)\n(\n# Shows with preceding Year\n#(?<ShowYearA>\\d{4}) ([ (_.]+ ( \n(?<ShowYearA>(?:19|20)\\d{2}) ([ (_.]+ ( \n(?<SeasonA>\\d{1,2})x(?<EpisodeA>\\d{1,2})\n|(?<SeasonB>[0-3]?[0-9])(?<EpisodeB>\\d{2})\n|S(?<SeasonC>\\d{1,2})E(?<EpisodeC>\\d{1,2}) ) )? \n\n| # Shows without preceding Year\n (?<!\\d{4})(\nS(?<SeasonD>\\d{1,2})E(?<EpisodeD>\\d{1,2})\n|(?<SeasonF>[0-3]?[0-9])(?<EpisodeF>\\d{2})\n|(?<SeasonE>\\d{1,2})x(?<EpisodeE>\\d{1,2}))\n\n)\n|(?<ShowNameB>.+))\n", "permalinkFragment": "qK6yF8", "isFavorite": false, "isStarred": false}, {"title": "iframe src parser", "description": "Get iframe src", "dateCreated": "2016-01-05T12:41:28.000Z", "dateModified": "2016-01-05T12:41:28.000Z", "author": "Sumeet Fefar", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(<iframe.*?src=\\\\\")([^ ]*?)(\\\\\".*?>)(.*?)(<\\/iframe>)", "permalinkFragment": "fR9qM7", "isFavorite": false, "isStarred": false}, {"title": "JWT Validation", "description": "Validate a Json Web Token (JWT).", "dateCreated": "2016-01-06T09:29:23.000Z", "dateModified": "2016-01-06T09:29:23.000Z", "author": "Erik Maas", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-\\+\\/=]*)", "permalinkFragment": "oI0rR9", "isFavorite": false, "isStarred": false}, {"title": "TTML time expression offset-time", "description": "", "dateCreated": "2016-01-10T16:52:23.000Z", "dateModified": "2016-01-10T16:52:23.000Z", "author": "ovvland", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^(\\d+\\.?\\d*)(h|m|s|ms|f|t)$", "permalinkFragment": "wZ0mH3", "isFavorite": false, "isStarred": false}, {"title": "Remove _1 suffix from image filenames", "description": "Remove autogenerated file name suffixes from images whilst preserving the extension (e.g. .jpg) \n\nThese suffixes are usually added when filename already exists in the directory an image is being saved to by an application. \n\nMagento is a fine example of a system that does this.", "dateCreated": "2016-01-18T15:03:43.000Z", "dateModified": "2016-01-18T15:03:43.000Z", "author": "John Hughes", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "_([_\\d]*)[.]", "permalinkFragment": "nM6cU6", "isFavorite": false, "isStarred": false}, {"title": "pronouceable strings", "description": "find pronouceable 10 letter srings that are either all caps or all lowercases\nbased on jsbin.com pronouceable urls", "dateCreated": "2016-01-24T19:11:50.000Z", "dateModified": "2016-01-24T19:11:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(([b-df-hj-np-tv-xz][aeiou]){5})|(([B-DF-HJ-NP-TV-XZ][AEIOU]){5})", "permalinkFragment": "nM8qN6", "isFavorite": false, "isStarred": false}, {"title": "To search for a image tag", "description": "This pattern would select the whole image tag", "dateCreated": "2016-01-27T15:47:11.000Z", "dateModified": "2016-01-27T15:47:11.000Z", "author": "Dulsara Dhanuka Sethunga", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "<img[^>]*>", "permalinkFragment": "wT3gA3", "isFavorite": false, "isStarred": false}, {"title": "Active Affiliate, Contractor or Employee", "description": "", "dateCreated": "2016-01-27T22:18:33.000Z", "dateModified": "2016-01-27T22:18:33.000Z", "author": "MR", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "[ACE]_.{2}:A", "permalinkFragment": "aW1pD4", "isFavorite": false, "isStarred": false}, {"title": "CSS Length Units", "description": "Matches CSS Length Units according to: \nhttp://www.w3schools.com/cssref/css_units.asp", "dateCreated": "2016-03-11T08:38:31.000Z", "dateModified": "2016-03-11T08:38:31.000Z", "author": "Sander Backus", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^(-?\\d+(em|ex|%|px|cm|mm|in|pt|pc|ch|rem|vh|vw|vmin|vmax)|0)$", "permalinkFragment": "jR4jY4", "isFavorite": false, "isStarred": false}, {"title": "Script Tags", "description": "This is used when removing Script Tags and their content.", "dateCreated": "2016-03-22T13:30:58.000Z", "dateModified": "2016-03-22T13:30:58.000Z", "author": "Chris Sumners", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "((<(\\s*)(script)(\\s*)(\\/*)(\\s*)>((.|\\n)*?)<(\\s*)(\\/+)(\\s*)(script)(\\s*)>)|<(\\s*)(\\/*)(\\s*)(script)(\\s*)(\\/*)(\\s*)>)*", "permalinkFragment": "wT8dL5", "isFavorite": false, "isStarred": false}, {"title": "Time duration format", "description": "Match time duration in the following formats only:\n1h\n30m\n59m\n1h 33m\n11h 2m", "dateCreated": "2016-03-23T08:24:46.000Z", "dateModified": "2016-03-23T08:24:46.000Z", "author": "Pooja Khorjuvekar", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^(\\d{1,2}[h])$|^(\\d+[m])$|^((\\d{1,2}[h])\\s((([0]?|[1-5]{1})[0-9])[m]))$", "permalinkFragment": "hS8iM9", "isFavorite": false, "isStarred": false}, {"title": "Proxy matcher", "description": "Matches proxies in ip:port format.\nTakes into account that octets cant start with a 0, and that octets that are not the first octet can be a 0 if there are no more numbers behind it.", "dateCreated": "2016-03-29T00:35:20.000Z", "dateModified": "2016-03-29T00:35:20.000Z", "author": "Dank meme machine", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(([1-9][0-9]{2}|[1-9][0-9]|[1-9])\\.([1-9][0-9]|[1-9][0-9]{2}|[0-9]))\\.([0-9]|[1-9][0-9]|[1-9][0-9]{2})\\.([0-9]|[1-9][0-9]|[1-9][0-9]{2})\\:([1-9][0-9]{4}|[1-9][0-9]{3}|[1-9][0-9]{2}|[1-9][0-9]|[1-9])", "permalinkFragment": "oV8cD4", "isFavorite": false, "isStarred": false}, {"title": "Escherichia coli, partial genome simple coding region search", "description": ">NC_000913.3 Escherichia coli str. K-12 substr. MG1655, patial genome", "dateCreated": "2016-03-29T10:34:59.000Z", "dateModified": "2016-03-29T10:34:59.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(ATG(?:[ATCG]{3}){100,}?[(?:TAG)(?:TAA)(?:TGA)])", "permalinkFragment": "bB2nI7", "isFavorite": false, "isStarred": false}, {"title": "Multiple emails seperated with comma", "description": "Multiple emails seperated with comma allowed multiple dot ltds", "dateCreated": "2016-04-22T14:20:21.000Z", "dateModified": "2016-04-22T14:20:21.000Z", "author": "Hassan Youssef", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^([a-z][a-z0-9_.]+@([a-z0-9-]+\\.)+[a-z]{2,6}(, )*)+$", "permalinkFragment": "vO2aL0", "isFavorite": false, "isStarred": false}, {"title": "Find css lines with px sizing", "description": "Use to find css sizing that migh need conversion to vs or alike.", "dateCreated": "2016-04-27T12:39:44.000Z", "dateModified": "2016-04-27T12:39:44.000Z", "author": "Bob", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^(?=.*px\\;)([ \\S]*)", "permalinkFragment": "qA1bK5", "isFavorite": false, "isStarred": false}, {"title": "File name Cleanup", "description": "Strips all non \"A-Z,a-z,0-9+-_\" characters and replaces them with a single \"-\"", "dateCreated": "2016-05-13T15:08:19.000Z", "dateModified": "2016-05-13T15:08:19.000Z", "author": "Apsis0215", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "[^a-zA-Z0-9\\+(\\-){1,}]{1,}", "permalinkFragment": "jJ8tC6", "isFavorite": false, "isStarred": false}, {"title": "Capture Query Strings", "description": "A solution for capture query params.", "dateCreated": "2016-05-15T10:22:51.000Z", "dateModified": "2016-05-15T10:22:51.000Z", "author": "Rafael Laurindo", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "((?<=[\\?\\&])foo\\=[^\\&\\#]*)|((?<=[\\?\\&])foo(?=[\\&\\#]))|((?<=[\\?\\&])foo(?!.))", "permalinkFragment": "jZ9xS9", "isFavorite": false, "isStarred": false}, {"title": "Get any positive integer", "description": "All real numbers can be divided into three categories: positive, negative and zero;\nMatch all positive number\n\nMatch:\n2\n9 \n+8\n005\n0420\n123456789\n40.262,12\n+042 262,12\n421.265.195,52\n0420 $\n0420 \u20ac\n35 \u00b0C\n12 \u00b0F\n\nNo Match:\n0\n00000 0000\n-10\n-1\n10a", "dateCreated": "2016-05-20T10:03:40.000Z", "dateModified": "2016-05-20T10:03:40.000Z", "author": "norihiori, Me-me", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^\\+?(0*[1-9]\\d*(?:[\\., ]\\d+)*) *(?:\\p{Sc}|\u00b0[FC])?$", "permalinkFragment": "oK3xI0", "isFavorite": false, "isStarred": false}, {"title": "IBAN", "description": "The complete regex for IBAN numbers", "dateCreated": "2016-06-27T18:57:20.000Z", "dateModified": "2016-06-27T18:57:20.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^AL\\d{10}[0-9A-Z]{16}$|^AD\\d{10}[0-9A-Z]{12}$|^AT\\d{18}$|^BH\\d{2}[A-Z]{4}[0-9A-Z]{14}$|^BE\\d{14}$|^BA\\d{18}$|^BG\\d{2}[A-Z]{4}\\d{6}[0-9A-Z]{8}$|^HR\\d{19}$|^CY\\d{10}[0-9A-Z]{16}$|^CZ\\d{22}$|^DK\\d{16}$|^FO\\d{16}$|^GL\\d{16}$|^DO\\d{2}[0-9A-Z]{4}\\d{20}$|^EE\\d{18}$|^FI\\d{16}$|^FR\\d{12}[0-9A-Z]{11}\\d{2}$|^GE\\d{2}[A-Z]{2}\\d{16}$|^DE\\d{20}$|^GI\\d{2}[A-Z]{4}[0-9A-Z]{15}$|^GR\\d{9}[0-9A-Z]{16}$|^HU\\d{26}$|^IS\\d{24}$|^IE\\d{2}[A-Z]{4}\\d{14}$|^IL\\d{21}$|^IT\\d{2}[A-Z]\\d{10}[0-9A-Z]{12}$|^[A-Z]{2}\\d{5}[0-9A-Z]{13}$|^KW\\d{2}[A-Z]{4}22!$|^LV\\d{2}[A-Z]{4}[0-9A-Z]{13}$|^LB\\d{6}[0-9A-Z]{20}$|^LI\\d{7}[0-9A-Z]{12}$|^LT\\d{18}$|^LU\\d{5}[0-9A-Z]{13}$|^MK\\d{5}[0-9A-Z]{10}\\d{2}$|^MT\\d{2}[A-Z]{4}\\d{5}[0-9A-Z]{18}$|^MR13\\d{23}$|^MU\\d{2}[A-Z]{4}\\d{19}[A-Z]{3}$|^MC\\d{12}[0-9A-Z]{11}\\d{2}$|^ME\\d{20}$|^NL\\d{2}[A-Z]{4}\\d{10}$|^NO\\d{13}$|^PL\\d{10}[0-9A-Z]{,16}n$|^PT\\d{23}$|^RO\\d{2}[A-Z]{4}[0-9A-Z]{16}$|^SM\\d{2}[A-Z]\\d{10}[0-9A-Z]{12}$|^SA\\d{4}[0-9A-Z]{18}$|^RS\\d{20}$|^SK\\d{22}$|^SI\\d{17}$|^ES\\d{22}$|^SE\\d{22}$|^CH\\d{7}[0-9A-Z]{12}$|^TN59\\d{20}$|^TR\\d{7}[0-9A-Z]{17}$|^AE\\d{21}$|^GB\\d{2}[A-Z]{4}\\d{14}$", "permalinkFragment": "bA7xM5", "isFavorite": false, "isStarred": false}, {"title": "Song Splitter", "description": "Split an audio filename into a readable format for playlists (like jPlayer) assuming the audio file is named like the following: \nArtist - Song Title.mp3\nBand Name - Track Title ft. Another Artist.m4a\ndemon.devin - Faithless Angel (to no avail remix).mp3", "dateCreated": "2016-07-28T17:35:49.000Z", "dateModified": "2016-07-28T17:35:49.000Z", "author": "demon.devin", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "([A-Z0-9a-z\\'\\.\\s\\(\\)]*)(\\s\\-\\s)([A-Z0-9a-z\\'\\.\\s\\(\\)]*)(\\.)(mp3|m4a)", "permalinkFragment": "jQ1tZ4", "isFavorite": false, "isStarred": false}, {"title": "Sql Injection detection", "description": "this regex detect any sql injections .", "dateCreated": "2016-08-12T01:11:13.000Z", "dateModified": "2016-08-12T01:11:13.000Z", "author": "Saeed.Tabrizi@gamil.com", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(\\s*([\\0\\b\\'\\\"\\n\\r\\t\\%\\_\\\\]*\\s*(((select\\s*.+\\s*from\\s*.+)|(insert\\s*.+\\s*into\\s*.+)|(update\\s*.+\\s*set\\s*.+)|(delete\\s*.+\\s*from\\s*.+)|(drop\\s*.+)|(truncate\\s*.+)|(alter\\s*.+)|(exec\\s*.+)|(\\s*(all|any|not|and|between|in|like|or|some|contains|containsall|containskey)\\s*.+[\\=\\>\\<=\\!\\~]+.+)|(let\\s+.+[\\=]\\s*.*)|(begin\\s*.*\\s*end)|(\\s*[\\/\\*]+\\s*.*\\s*[\\*\\/]+)|(\\s*(\\-\\-)\\s*.*\\s+)|(\\s*(contains|containsall|containskey)\\s+.*)))(\\s*[\\;]\\s*)*)+)", "permalinkFragment": "qE9gR7", "isFavorite": false, "isStarred": false}, {"title": "Email", "description": "Python", "dateCreated": "2016-09-07T03:55:39.000Z", "dateModified": "2016-09-07T03:55:39.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^[\\w.-]+@[\\w.-]+\\.\\w+$", "permalinkFragment": "fQ2bD0", "isFavorite": false, "isStarred": false}, {"title": "Markdown link rewriting", "description": "A regular expression which finds all instances of markdown links and helps with rewriting link paths.", "dateCreated": "2016-09-07T21:06:39.000Z", "dateModified": "2016-09-07T21:06:39.000Z", "author": "Will Vaughn", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(!\\[\\]\\()([^)]+)(\\))", "permalinkFragment": "sK8kG1", "isFavorite": false, "isStarred": false}, {"title": "Thorough UK Postcode Validator with In/Out code capture groups", "description": "A more thorough UK postcode validator tested against all UK postcodes on a regular basis, but excluding the special GIRO postcode case out of personal preference.\n\nAdditionally has capture groups for the In-code and Out-code sections.\n\nRequires case insensitive matching.", "dateCreated": "2016-09-30T15:51:02.000Z", "dateModified": "2016-09-30T15:51:02.000Z", "author": "Chris G", "flavor": "python", "delimiter": "\"", "flags": "gi", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "([A-PR-UWYZ](?:[A-HK-Y][0-9](?:[0-9]|[ABEHMNPRV-Y])?|[0-9]([0-9]|[A-HJKPSTUW])?)) ?([0-9][ABD-HJLNP-UW-Z]{2})", "permalinkFragment": "2u39hk", "isFavorite": false, "isStarred": false}, {"title": "HSL(A) Color Matching", "description": "This allows for both hsl and hsla color patterns to be matched.\n`hsla(50.5deg, .531%, .9%, 1.0)` \n- The hue can be matched without the word `deg`.\n- Hue is from 0-360\n- Percentage allows for decimals.\n- Percentage is from 0-100%\n- Alpha is from 0.0-1.0", "dateCreated": "2019-06-13T12:08:57.000Z", "dateModified": "2019-06-13T12:08:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gxJi", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?(DEFINE)\n    (?<decimal>(?(int)([.][0-9]+)?|[.][0-9]+))\n    (?<percentage>\n        (100|\n            (?<int>([0-9]|[1-9][0-9]))? # Have integer be optional (0-100 only)\n            (?P>decimal)  # Have decimal required when an integer is not included\n        )\n        (?<symbol>%)\n    )\n    (?<hue> \n            (?<int>36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])? # Have integer be optional\n            (?P>decimal) # Have decimal required when an integer is not included\n            (?<symbol>\\s*deg\\s*)?\n    )\n    (?<alpha>\n\t\t    (?(alpha),\\s*(\n\t\t\t\t1[.]0|\n\t\t\t\t(?<int>0)? # Have integer be optional\n\t\t\t\t(?P>decimal) # Have decimal required when integer is not incldue\n\t\t\t)\\s*)\n\t)\n    (?<hsl>\\s*(?P>hue)\\s*,\\s*(?P>percentage)\\s*,\\s*(?P>percentage)\\s*)\n)\nhsl(?<alpha>a)?\\((?P>hsl)(?P>alpha)\\)", "permalinkFragment": "LvpF4s", "isFavorite": false, "isStarred": false}, {"title": "National Insurance Number regular expression", "description": "This regular expression is build from the description of NINO number of [GOV.UK](https://www.gov.uk/hmrc-internal-manuals/national-insurance-manual/nim39110),", "dateCreated": "2021-03-20T22:05:58.000Z", "dateModified": "2021-03-20T22:05:58.000Z", "author": "Iftakhar Husan", "flavor": "pcre2", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^(?!BG|GB|KN|NK|NT|TN|ZZ)[^DFIQUV][^DFIQUVo][0-9]{6}[ABCD]$", "permalinkFragment": "tV7dut", "isFavorite": false, "isStarred": false}, {"title": "Email", "description": "This is a bit simpler version that is **still quite robust.** It was taken from [a Formik example.](https://formik.org/docs/guides/validation#validate)", "dateCreated": "2021-03-20T22:30:24.000Z", "dateModified": "2021-03-20T22:30:24.000Z", "author": "codefinity", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$", "permalinkFragment": "5u1iiW", "isFavorite": false, "isStarred": false}, {"title": "Livestock - Visual tag and Back tag", "description": "Visual tag and Back tag cannot more than 15 characters or only can contain uppercase, lowercase, space and dash.", "dateCreated": "2021-03-26T17:11:56.000Z", "dateModified": "2021-03-26T17:11:56.000Z", "author": "Adrian Yim", "flavor": "pcre2", "delimiter": "`", "flags": "", "version": 2, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "([\\w\\W]{16,})|([^-\\s0-9[:alpha]])", "permalinkFragment": "99ibJE", "isFavorite": false, "isStarred": false}, {"title": "among us references", "description": "it detects among us references \namong us\naming us \nmongus\namogus\nsus\nsuspect\n<name> was not the impostor\nno imposters remain\n3 impostors remain", "dateCreated": "2021-05-03T17:10:53.000Z", "dateModified": "2021-05-07T18:00:43.000Z", "author": "h", "flavor": "javascript", "delimiter": "/", "flags": "gmiu", "version": 15, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "a?m(ou?|[ie])n?g(st)? ?us|(when ?the ?impost[oe]r ?is ?)?sus(picio(us|n)|pect)?|impost[oe]r|\\u0D9E|(?<=[\\x20-\\x7E]\\b)( was( not)? the impost[oe]r| was ejected)|\\w+ impost[oe]rs? remains?|emergency meeting|dead body reported", "permalinkFragment": "HlLg3l", "isFavorite": false, "isStarred": false}, {"title": "discord invite link", "description": "detect discord invite links such as:\n\ndiscord.gg/link\ndiscord.com/invite/link\n.gg/link\n.com/invite/link\n\nit also puts the link into a separate name group, so you can do http requests and stuff\n\nedited cuz whitespacing", "dateCreated": "2021-05-15T01:47:35.000Z", "dateModified": "2021-05-15T01:47:35.000Z", "author": "padero", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(https:\\/\\/)?(www\\.)?(((discord(app)?)?\\.com\\/invite)|((discord(app)?)?\\.gg))\\/(?<invite>.+)", "permalinkFragment": "QNPk9U", "isFavorite": false, "isStarred": false}, {"title": "camelCase2snake_case", "description": "Convert camelCase to snake_case\n\n```py\ndef camelCase2snake_case(txt):\n    \"\"\" \n    Convert camelCase to snake_case \n    https://regex101.com/library/wUcSv4\n    \"\"\"\n    txt = re.sub(r'([A-Z]+)', '_\\\\1', txt.strip())\n    txt = txt.lower()\n    return txt\n```\n\nIn Python \ud83d\udc0d the `\\L` case modifier in the substitution pattern to lower case is not supported.\n\nBy [JV-conseil](https://github.com/JV-conseil)", "dateCreated": "2023-03-23T19:10:02.000Z", "dateModified": "2023-03-23T19:10:02.000Z", "author": "JV-conseil", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "([A-Z]+)", "permalinkFragment": "wUcSv4", "isFavorite": false, "isStarred": false}, {"title": "Discord ID:NAME#DISCRIM match", "description": "For example, using ``Carl-bot`` to dump members of the ``@everyone`` role ordering highest of ``id``:\n``!dump @everyone %i:%u -o id``\n\nExample of return:\n```\n498984530968051713:lanjt#2129\n...\n```\nMatches with group ID, group NAME and group DISCRIMINATOR. ", "dateCreated": "2021-07-06T00:24:35.000Z", "dateModified": "2021-07-06T00:24:35.000Z", "author": "lanjt", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?'ID'\\d{15,23}):(?'NAME'.*?)#(?'DISCRIMINATOR'[0-9]{4})", "permalinkFragment": "9Zkiwr", "isFavorite": false, "isStarred": false}, {"title": "example", "description": "example", "dateCreated": "2021-07-13T06:44:29.000Z", "dateModified": "2021-07-13T06:44:29.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?:[d|e]{10})", "permalinkFragment": "TGpiRb", "isFavorite": false, "isStarred": false}, {"title": "Viet Nam Phone Number", "description": "Viet Nam Phone Number Regex. This regex include:\n- Cellphone number: Viettel, Vinaphone, Mobiphone, Vietnamobile, Iteltelecom, Reddi (055)\n- Telephone number (such as: 024, 028,...)\n- Start with ```0``` or ```84```\n- Exactly 10 or 11 numbers", "dateCreated": "2021-09-22T16:50:23.000Z", "dateModified": "2021-09-22T16:50:23.000Z", "author": "tuangt12", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$", "permalinkFragment": "JdjpqD", "isFavorite": false, "isStarred": false}, {"title": "Match any url in text or html (http, https)", "description": "Match any url in text or html (http, https)", "dateCreated": "2022-02-02T15:04:10.000Z", "dateModified": "2022-02-02T15:04:10.000Z", "author": "J\u00e9r\u00e9my Munsch", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "(?:http[s]?:\\/\\/.)?(?:www\\.)?[-a-zA-Z0-9@%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b(?:[-a-zA-Z0-9@:%_\\+.~#?&\\/\\/=]*)", "permalinkFragment": "3fYy3x", "isFavorite": false, "isStarred": false}, {"title": "Extract URL parts only named capturing groups", "description": "Extract URL parts only named capturing groups", "dateCreated": "2022-02-03T00:00:36.000Z", "dateModified": "2022-02-03T00:00:36.000Z", "author": "dixanms", "flavor": "golang", "delimiter": "`", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "^(?P<scheme>[^:\\/?#]+):(?:\\/\\/)?(?:(?:(?P<login>[^:]+)(?::(?P<password>[^@]+)?)?@)?(?P<host>[^@\\/?#:]*)(?::(?P<port>\\d+)?)?)?(?P<path>[^?#]*)(?:\\?(?P<query>[^#]*))?(?:#(?P<fragment>.*))?", "permalinkFragment": "ykDnyB", "isFavorite": false, "isStarred": false}, {"title": "C# Regex Extract/Match Nested HTML Elements/Tags", "description": "With this **C#** regex, you can easily match/Parse **Nested** HTML tags.\n\nExample input:\n\n    <!DOCTYPE html>\n    <html>\n    \t<head>\n    \t\t<title>someTitle</title>\n    \t</head>\n    \t<body>\n    \t\t<div class=\"outer\">\n    \t\t\t<h1>SomeHeader</h1>\n    \t\t\t<div id=\"target\">\n    \t\t\t\t<h2>anotherHeader</h2>\n    \t\t\t\t<div id=\"child\">\n    \t\t\t\t\t<div id=\"grand-child\">\n    \t\t\t\t\t\t<h4>HelloWorld</h4>\n    \t\t\t\t\t</div>\n    \t\t\t\t</div>\n    \t\t\t</div>\n    \t\t</div>\n    \t</body>\n    </html>\n\nOutput:\n\n    <div id=\"target\">\n    \t<h2>anotherHeader</h2>\n    \t<div id=\"child\">\n    \t\t<div id=\"grand-child\">\n    \t\t\t<h4>HelloWorld</h4>\n    \t\t</div>\n    \t</div>\n    </div>\n\n\n` string pattern = $@\"{ startP }((?'nested'{ openP })|{ closeP }(?'-nested')|[\\w\\W]*?)*{ closeP }\";`\n\n*'StartP' (Must include open tag), example: <div id=\"target\"\n*'openP' example: <div\n*'closeP' example: </div\n\n# References:\n[In Depth with RegEx Matching Nested Constructions](https://www.codeproject.com/Articles/21080/In-Depth-with-RegEx-Matching-Nested-Constructions)\n[In Depth with .NET RegEx Balanced Grouping](https://www.codeproject.com/Articles/21183/In-Depth-with-NET-RegEx-Balanced-Grouping)\n[Regular expression matches closed HTML tags (nesting is supported)\n](https://developpaper.com/regular-expression-matches-closed-html-tags-nesting-is-supported/)", "dateCreated": "2022-03-03T19:13:02.000Z", "dateModified": "2023-08-01T07:26:02.000Z", "author": "w4po", "flavor": "dotnet", "delimiter": "\"", "flags": "gm", "version": 3, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "<div id=\"\"target\"\"((?'nested'<div)|</div(?'-nested')|[\\w\\W]*?)*</div>", "permalinkFragment": "wlNY5k", "isFavorite": false, "isStarred": false}, {"title": "Match any layer bracket pair (.NET)", "description": "Match any layer bracket pair", "dateCreated": "2022-03-10T03:13:33.000Z", "dateModified": "2022-03-10T03:13:33.000Z", "author": "Yakumo Yukari", "flavor": "dotnet", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "\\w+\\([^()]*(((?'parenthesesPair'\\()[^()]*)+((?'-parenthesesPair'\\))[^()]*)+)*(?(parenthesesPair)(?!))\\)", "permalinkFragment": "v9ktFy", "isFavorite": false, "isStarred": false}, {"title": "Caltrans EA validation with optional XX-XXXXXX entry and C##-#????#", "description": "Checks validity of an EA number first two digits 01-12 followed by hyphen then a number from 0-4 and then 4 numbers or uppercase letters and ending in a 1 or 4 for example \"**05-1J7601**\".  Adding a capital C to the beginning is also accepted \"**C05-1J7601**\", along with the entry of 2 X's hyphen and 6 X's \"**XX-XXXXXX**\"", "dateCreated": "2023-04-07T19:11:13.000Z", "dateModified": "2023-04-07T19:51:28.000Z", "author": "RDJ@Ct", "flavor": "dotnet", "delimiter": "\"", "flags": "n", "version": 2, "upvotes": 3, "downvotes": 0, "score": 0.43849391932274523, "userVote": null, "regex": "\\AX{2}-X{6}\\z|\\A(C?((0[1-9])|(1[0-2])))-[0-4][0-9A-Z]{4}[14]\\z", "permalinkFragment": "yYrpaj", "isFavorite": false, "isStarred": false}, {"title": "simple common lisp tokenizer", "description": "main symbols and comments are supported", "dateCreated": "2015-03-10T16:24:55.000Z", "dateModified": "2015-03-10T16:24:55.000Z", "author": "d4rw1n1s7@gmail.com", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 19, "downvotes": 12, "score": 0.43823801155468217, "userVote": null, "regex": "(?:\\;.*$|(\\(|\\)|\\\"(?:\\\\\\\"|\\\\\\\\|[^\\\"])*\\\"|[\\w\\+\\-\\*\\/\\.\\<\\>\\=]+|\\'|\\;|\\\\|\\||\\#|\\`|\\,|\\:))", "permalinkFragment": "fO0lU6", "isFavorite": false, "isStarred": false}, {"title": "Split address line into street name and house number", "description": "This regular expression splits an address line like for example \"1117 Franklin Blvd\" into the street name and house number. It also supports addresses where street name and house number are the other way around (e.g. \"Mustermannstr. 1\"). Furthermore, this regular expression also supports address lines where additional information is given that is neither a street name nor a house number (e.g. \"3940 Radio Road, Unit 110\", \"Pallaswiesenstr. 57 App. 235\", \"Suite 1500, 802 Docklands Street\"). The regular expression has 8 capture groups in total. The first 4 capture groups get used when the house number precedes the street name. The names of these capture groups are prefixed with \"A_\". If the house number succeeds the street name, the last 4 capture groups are used. These are prefixed with \"B_\".", "dateCreated": "2015-04-01T11:28:32.000Z", "dateModified": "2015-04-01T11:28:32.000Z", "author": "Andre Wisplinghoff", "flavor": "pcre", "delimiter": "/", "flags": "x", "version": 1, "upvotes": 12, "downvotes": 6, "score": 0.4374906928816456, "userVote": null, "regex": "\\A\\s*\n(?: #########################################################################\n    # Option A: [<Addition to address 1>] <House number> <Street name>      #\n    # [<Addition to address 2>]                                             #\n    #########################################################################\n    (?:(?P<A_Addition_to_address_1>.*?),\\s*)? # Addition to address 1\n(?:No\\.\\s*)?\n    (?P<A_House_number_1>\\pN+[a-zA-Z]?(?:\\s*[-\\/\\pP]\\s*\\pN+[a-zA-Z]?)*) # House number\n\\s*,?\\s*\n    (?P<A_Street_name_1>(?:[a-zA-Z]\\s*|\\pN\\pL{2,}\\s\\pL)\\S[^,#]*?(?<!\\s)) # Street name\n\\s*(?:(?:[,\\/]|(?=\\#))\\s*(?!\\s*No\\.)\n    (?P<A_Addition_to_address_2>(?!\\s).*?))? # Addition to address 2\n|   #########################################################################\n    # Option B: [<Addition to address 1>] <Street name> <House number>      #\n    # [<Addition to address 2>]                                             #\n    #########################################################################\n    (?:(?P<B_Addition_to_address_1>.*?),\\s*(?=.*[,\\/]))? # Addition to address 1\n    (?!\\s*No\\.)(?P<B_Street_name>\\S\\s*\\S(?:[^,#](?!\\b\\pN+\\s))*?(?<!\\s)) # Street name\n\\s*[\\/,]?\\s*(?:\\sNo\\.)?\\s+\n    (?P<B_House_number>\\pN+\\s*-?[a-zA-Z]?(?:\\s*[-\\/\\pP]?\\s*\\pN+(?:\\s*[\\-a-zA-Z])?)*|[IVXLCDM]+(?!.*\\b\\pN+\\b))(?<!\\s) # House number\n\\s*(?:(?:[,\\/]|(?=\\#)|\\s)\\s*(?!\\s*No\\.)\\s*\n    (?P<B_Addition_to_address_2>(?!\\s).*?))? # Addition to address 2\n)\n\\s*\\Z", "permalinkFragment": "lU7gY7", "isFavorite": false, "isStarred": false}, {"title": "Email with + symbol", "description": "email that accepts the plus (+) symbol", "dateCreated": "2015-09-14T18:06:14.000Z", "dateModified": "2015-09-14T18:06:14.000Z", "author": "luckcheese", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 12, "downvotes": 6, "score": 0.4374906928816456, "userVote": null, "regex": "^([_a-z0-9]+[\\._a-z0-9]*)(\\+[a-z0-9]+)?@(([a-z0-9-]+\\.)*[a-z]{2,4})$", "permalinkFragment": "qB2yK5", "isFavorite": false, "isStarred": false}, {"title": "CSS Import", "description": "", "dateCreated": "2014-05-03T00:51:35.000Z", "dateModified": "2014-05-03T00:51:35.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 20, "downvotes": 13, "score": 0.43683142755800103, "userVote": null, "regex": "@import \\b.*[\\\"']([^)]*)[\\\"']", "permalinkFragment": "kF2dM6", "isFavorite": false, "isStarred": false}, {"title": "1st TSV", "description": "", "dateCreated": "2013-04-08T22:00:36.000Z", "dateModified": "2013-04-08T22:00:36.000Z", "author": "DynV", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "(\\w+)\\s.*", "permalinkFragment": "oN1eB3", "isFavorite": false, "isStarred": false}, {"title": "Hungarian ANDOK system id", "description": "", "dateCreated": "2014-03-12T15:35:29.000Z", "dateModified": "2014-03-12T15:35:29.000Z", "author": "Tana", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "^(BEJ|KIM)-([0-9]{8})\\/([0-9]{3})\\/([0-9]{4})$", "permalinkFragment": "kD6fT5", "isFavorite": false, "isStarred": false}, {"title": "REGEX to parse IIS7 Log File into FluentD", "description": "This regex parses the entire line of the IIS log files (without detail on the AgentID) for usage into FluentD.\nQ&C - juan.carniglia@gmail.com", "dateCreated": "2014-05-13T14:50:09.000Z", "dateModified": "2014-05-13T14:50:09.000Z", "author": "Juan Carniglia", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "^(?<date>\\d{4}\\-\\d{2}\\-\\d{2}\\s+)(?<time>\\d{2}\\:\\d{2}\\:\\d{2}\\s+)(?<sip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\s+)(?<csmethod>.+?\\s+)(?<csuristem>.+?\\s+)(?<csuriquery>.+?\\s+)(?<sport>\\d{1,3}\\s+)(.+?\\s+)(?<cip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\s+)(?<csUseragent>.+?\\s+)(?<scstatus>\\d{1,3}\\s+)(?<scsubstatus>\\d{1,3}\\s+)(?<scwin32status>\\d+\\s+)(?<scbytes>\\d+\\s+)(?<csbytes>\\d+\\s+)(?<timetaken>\\d+)?$", "permalinkFragment": "bZ5lX8", "isFavorite": false, "isStarred": false}, {"title": "AMEX, VISA, MASTERCARD, and DISCOVER REGEX", "description": "First pass at a way to find credit card data using regex.", "dateCreated": "2015-01-22T04:23:49.000Z", "dateModified": "2015-01-22T04:23:49.000Z", "author": "David Maislin", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "(?<AMEX>3[47]\\d\\d[\\s\\-]?(?!(\\d)\\2{5}|123456|234567|345678)\\d{6}[\\s\\-]?(?!(\\d)[\\s\\-]{4}|12345|56789)\\d{5})|(?<MASTERCARD>5[1-5]\\d{2}[\\s\\-]?\\d{4}[\\s\\-]?\\d{4}[\\s\\-]?\\d{4})|(?<VISA>4\\d{3}[\\s\\-]?(?:\\d{4}[\\s\\-]?){2}\\d(?:\\d{3})?)|(?<DISCOVER>6(?:011|22?=[\\s\\-]?[6-9]|[3-9]|[2-8]|9[\\s\\-]?[01]|2[0-5]|4[4-9]\\d|5\\d\\d)[\\s\\-]?\\d{4}[\\s\\-]?\\d{4}[\\s\\-]?\\d{4})", "permalinkFragment": "wL3iP2", "isFavorite": false, "isStarred": false}, {"title": "Hibernate SQL Reductor", "description": "If you want to understand an SQL statement for Hibernate: this replaces the selected fields in an SQL statement generated by Hibernate by a shorthand, since you usually just care about the logic.\nE.g. it changes\nselect foo0_.bla as bla1_3, foo0_.bar as bar1_3, foo0_.baz1_3 as baz1_3 from ...\nto\nselect foo0_.**1_3 from ...", "dateCreated": "2015-03-19T16:11:46.000Z", "dateModified": "2015-03-19T16:11:46.000Z", "author": "Hans-Peter Stoerr www.stoerr.net", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "((\\w+)\\.(\\w+) as \\3(\\d_\\d)_)(, \\2\\.\\w+ as \\w+)*", "permalinkFragment": "pY1uD8", "isFavorite": false, "isStarred": false}, {"title": "match brackets outside quotes", "description": "", "dateCreated": "2015-06-29T08:29:01.000Z", "dateModified": "2015-06-29T08:29:01.000Z", "author": "Jerry", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "\\[\\d*\\]((?=[^\"]*(?:\"[^\"]*\"[^\"]*)*$)(?=[^']*(?:'[^']*'[^']*)*$))", "permalinkFragment": "lC7zO9", "isFavorite": false, "isStarred": false}, {"title": "youtube url match", "description": "extract video id, index, play list id from youtube URL", "dateCreated": "2015-08-19T03:03:37.000Z", "dateModified": "2015-08-19T03:03:37.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|playlist\\?|watch\\?v=|watch\\?.+(?:&|&#38;);v=))([a-zA-Z0-9\\-_]{11})?(?:(?:\\?|&|&#38;)index=((?:\\d){1,3}))?(?:(?:\\?|&|&#38;)?list=([a-zA-Z\\-_0-9]{34}))?(?:\\S+)?", "permalinkFragment": "cN7bT5", "isFavorite": false, "isStarred": false}, {"title": "Find Lat/Long Coordinate pair regex", "description": "", "dateCreated": "2015-08-25T21:13:21.000Z", "dateModified": "2015-08-25T21:13:21.000Z", "author": "Mike", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "(\\-?\\d+(\\.\\d+)?),\\s*(\\-?\\d+(\\.\\d+)?)", "permalinkFragment": "hN4pD6", "isFavorite": false, "isStarred": false}, {"title": "Currency Formater Accept , & .", "description": "", "dateCreated": "2015-10-05T19:59:34.000Z", "dateModified": "2015-10-05T19:59:34.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "^[0-9]{1,3}(?:,?[0-9]{3})*(?:\\.[0-9]{1,9})?$", "permalinkFragment": "fJ4mH2", "isFavorite": false, "isStarred": false}, {"title": "Mask an email regex", "description": "Replaces second to last but one characters in email with asterisks (@ and last . are protected): john.travolta@gmail.com > j***********a@g****.**m", "dateCreated": "2016-02-03T12:38:06.000Z", "dateModified": "2016-02-03T12:38:06.000Z", "author": "Wiktor Stribi\u017cew", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "(?<=.).(?=[^@]*?.@)|(?:(?<=@.)|(?!^)\\G(?=[^@]*$))(.)(?=.*\\.)|(?:(?<=\\.)(?=[^.]+$)|(?!^)\\G(?=[^@.]*$))[^.](?!$)", "permalinkFragment": "qQ0iS7", "isFavorite": false, "isStarred": false}, {"title": "c#", "description": "", "dateCreated": "2016-02-18T15:54:29.000Z", "dateModified": "2016-02-18T15:54:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "^[a-zA-Z_\\s\\w.]*(?![\\w\\.\\(\\[])", "permalinkFragment": "qO5cX9", "isFavorite": false, "isStarred": false}, {"title": "BEST simple mail regex validator", "description": "# **VALIDATE ALL WOLRD MAIL RULES**\n\n1. Very simple expression\n2. Less than 140 caracters. \n3. Validate on SonarQube typescript, javascript, angular rules\n\n\n# **EXAMPLES**\n\nJOAO!DA.SILVA@CNN,COM (INVALID)\njoao@microsoft.com\nmauricio.teste@site.ba.gov.br\nsantana.teste@sistema-ba.ba.gov.br\nteste.teste.teste.igor.caza@google.com\nteste.teste.teste.igor.caza@globo.com.br\nayslan-johnson@teste.com.br\njoao@123.com\nayslanjohnson@google.com\nteste.teste.teste.igor.caza@globo (INVALID)\nSILVA.teste@SITE-ba.ba.gov.br. (INVALID)", "dateCreated": "2018-05-04T12:38:41.000Z", "dateModified": "2018-05-04T12:38:41.000Z", "author": "Ayslan Johnson (ayslanjohnson@gmail.com)", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "^((\\w[^\\W]+)[\\.\\-]?){1,}\\@(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$", "permalinkFragment": "zYGskP", "isFavorite": false, "isStarred": false}, {"title": "replace-last-comma with semicolon", "description": "replace-last-comma with semicolon similar to http://stackoverflow.com/questions/3829483/how-to-replace-last-occurrence-of-characters-in-a-string-using-javascript", "dateCreated": "2016-04-20T01:57:15.000Z", "dateModified": "2016-04-20T01:57:15.000Z", "author": "Michael Freidgeim", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": ",([^,]*)$", "permalinkFragment": "iU4nC6", "isFavorite": false, "isStarred": false}, {"title": "Date yyyy/mm/dd", "description": "Regex following \"ISO 8601\" without hour : allowing only month 1 to 12, the day of 1 to 31 for the months of 31 days, the months from 1 to 30 for the months of 30 days, the day of 1 to 28 for February, and the day from 1 to 29 for February of leap years", "dateCreated": "2016-04-29T13:24:22.000Z", "dateModified": "2016-04-29T13:24:22.000Z", "author": "Sara DULMAR", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 1, "score": 0.4364905632321056, "userVote": null, "regex": "^20(((([248][048])|([13579][26]))\\/(((0[13578]|1[02])\\/([0-2][0-9]|3[01]))|((0[469]|11)\\/([0-2][0-9]|30))|(02\\/([0-2][0-9]))))|((([248][1-35-79])|([13579][013-57-9]))\\/(((0[13578]|1[02])\\/([0-2][0-9]|3[01]))|((0[469]|11)\\/([0-2][0-9]|30))|(02\\/(((0|1)[0-9])|(2[0-8]))))))$", "permalinkFragment": "sS1zY8", "isFavorite": false, "isStarred": false}, {"title": "Date validation", "description": "Besides leap year handling, this takes care of date validation in the yy-mm-dd format.", "dateCreated": "2015-07-24T11:21:17.000Z", "dateModified": "2015-07-24T11:21:17.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 46, "downvotes": 39, "score": 0.43576147502337553, "userVote": null, "regex": "^\\d{4}-(((0[13578]|1[02])-(0[1-9]|[12]\\d|3[0-1]))|(02-(0[1-9]|[12]\\d))|((0[469]|11)-(0[1-9]|[12]\\d|30)))$", "permalinkFragment": "kB7uA3", "isFavorite": false, "isStarred": false}, {"title": "if, else if, else condtion match", "description": "matches full if condition statment eg:\nif(condition){\n  ...\n} else if(condition){\n  ...\n}else{\n  ...\n}", "dateCreated": "2014-10-20T13:50:52.000Z", "dateModified": "2014-10-20T13:50:52.000Z", "author": "Ivan Jakesevic", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 21, "downvotes": 14, "score": 0.4357241958151947, "userVote": null, "regex": "if\\s*\\((.+?)\\)\\s*{(.*?)}\\s*?(else\\s*?if\\s*?\\((.+?)\\)\\s*?{.*?})?\\s*?(else\\s*?{(.*?)})?", "permalinkFragment": "yH6sY6", "isFavorite": false, "isStarred": false}, {"title": "Match text (not within html tag)", "description": "", "dateCreated": "2015-05-12T12:38:40.000Z", "dateModified": "2015-05-12T12:38:40.000Z", "author": "Moistly", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 22, "downvotes": 15, "score": 0.43485683123301627, "userVote": null, "regex": "(me)(?!([^<]+)?>)", "permalinkFragment": "lO7qL7", "isFavorite": false, "isStarred": false}, {"title": "Numeric values greater than zero with decimal", "description": "Pattern that only accept numeric value and greater than zero with up to decimal places\u0000( you can change the decimal places just replace {1,2} depend on how many decimal places you like", "dateCreated": "2015-07-16T03:19:32.000Z", "dateModified": "2015-07-16T03:19:32.000Z", "author": "Eugene To", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 8, "downvotes": 3, "score": 0.4343497071577128, "userVote": null, "regex": "^[^0|\\D]\\d{0,9}(\\.\\d{1,2})?$", "permalinkFragment": "dV0qK5", "isFavorite": false, "isStarred": false}, {"title": "Extract Protocol, URL, URL Path, get parameters and hash from URI", "description": "This is simplified from my last submission.", "dateCreated": "2014-05-22T23:34:10.000Z", "dateModified": "2014-05-22T23:34:10.000Z", "author": "Dale O'Brien", "flavor": "python", "delimiter": "\"", "flags": "i", "version": 1, "upvotes": 30, "downvotes": 23, "score": 0.43265114988636255, "userVote": null, "regex": "^(http[s]?:)+\\/\\/([^:\\/\\s]+)([^#?\\s]+)\\?([^#]*)?(#.*)?$", "permalinkFragment": "aT1hS5", "isFavorite": false, "isStarred": false}, {"title": "Match quoted strings, ignoring escaped quotes", "description": "Matches single or double quoted strings, and ignores backslash-escaped quotes within the string.", "dateCreated": "2013-06-26T14:28:15.000Z", "dateModified": "2013-06-26T14:28:15.000Z", "author": "Maddingue", "flavor": "pcre", "delimiter": "/", "flags": "xg", "version": 1, "upvotes": 65, "downvotes": 62, "score": 0.4258126382251357, "userVote": null, "regex": "(?| (\")((?:\\\\\"|[^\"])+)\\1 | (')((?:\\\\'|[^'])+)\\1 )", "permalinkFragment": "rX4rL7", "isFavorite": false, "isStarred": false}, {"title": "reg Ex number range check", "description": "Hi, I am trying to get a reg ex that will test a number range and also allow european number convention like , for decimal point. I have this one for range check - ^([4-9][0-9]{3}|[1-9][0-9]{4,5}|[12][0-9]{6}|3[0-4][0-9]{5}|3500000)$ \nand I have this one for allow comma \n^\\s*?([\\d\\.]+(\\,\\d{1,2})?|\\,\\d{1,2})\\s*$\nbut I need a combination of both,\nThanks if you can help", "dateCreated": "2014-05-22T06:48:06.000Z", "dateModified": "2014-05-22T06:48:06.000Z", "author": "TimJ", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 16, "downvotes": 10, "score": 0.4253452000595094, "userVote": null, "regex": "^\\s*?([\\d\\.]+(\\,\\d{1,2})?|\\,\\d{1,2})\\s*$", "permalinkFragment": "yJ6gP7", "isFavorite": false, "isStarred": false}, {"title": "Repair unquoted HTML attribute values", "description": "Usually MSWord HTML exports", "dateCreated": "2013-06-21T16:45:06.000Z", "dateModified": "2013-06-21T16:45:06.000Z", "author": "Ka.", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 9, "downvotes": 4, "score": 0.42368887788469817, "userVote": null, "regex": "\\s+([a-zA-Z-]+)=([a-zA-Z0-9-]+)", "permalinkFragment": "iO3gE4", "isFavorite": false, "isStarred": false}, {"title": "Hello world !", "description": "", "dateCreated": "2013-09-10T09:01:21.000Z", "dateModified": "2013-09-10T09:01:21.000Z", "author": "Fedir RYKHTIK", "flavor": "javascript", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 9, "downvotes": 4, "score": 0.42368887788469817, "userVote": null, "regex": "[0-9a-z !]*", "permalinkFragment": "mB0oA7", "isFavorite": false, "isStarred": false}, {"title": "All href in a tag", "description": "Find all href in a tag", "dateCreated": "2013-12-03T11:50:40.000Z", "dateModified": "2013-12-03T11:50:40.000Z", "author": "Miron Yanovskiy", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 9, "downvotes": 4, "score": 0.42368887788469817, "userVote": null, "regex": "<a.+?\\s*href\\s*=\\s*[\"\\']?([^\"\\'\\s>]+)[\"\\']?", "permalinkFragment": "rQ8mR1", "isFavorite": false, "isStarred": false}, {"title": "FIlename sanitization regular expression", "description": "Useful for filename sanitization. Matches invalid filename characters. Can be used in preg_replace() calls.", "dateCreated": "2015-06-23T15:11:13.000Z", "dateModified": "2015-06-23T15:11:13.000Z", "author": "FractalizeR@yandex.ru", "flavor": "pcre", "delimiter": "/", "flags": "isg", "version": 1, "upvotes": 9, "downvotes": 4, "score": 0.42368887788469817, "userVote": null, "regex": "([^\\p{L}\\s\\d\\-_~,;:\\[\\]\\(\\).'])", "permalinkFragment": "oC7qP8", "isFavorite": false, "isStarred": false}, {"title": "Username:Password", "description": "Regex For finding username:password", "dateCreated": "2015-07-12T06:50:35.000Z", "dateModified": "2015-07-12T06:50:35.000Z", "author": "Ghost", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 18, "downvotes": 12, "score": 0.4232005245168031, "userVote": null, "regex": "[0-9A-Za-z.@]+:[0-z]+", "permalinkFragment": "bM0iE1", "isFavorite": false, "isStarred": false}, {"title": "Matching balanced parens, brackets, and braces", "description": "", "dateCreated": "2013-09-29T18:23:49.000Z", "dateModified": "2013-09-29T18:23:49.000Z", "author": "Noah Luck Easterly", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 28, "downvotes": 22, "score": 0.4230578680014352, "userVote": null, "regex": "# match a body pattern alone on a line\n^\\g<body>$\n\n# we'll use (?<name>...){0} to define the pattern \\g<name>\n# without having to match the pattern at the current position\n\n# a body pattern matches\n(?<body>\n  # a sequence of\n  (?: [^\\[\\]{}()\\n]       # non-delimiters\n    | \\g<parens>          # parenthesized pattern\n    | \\g<square_brackets> # bracketed pattern\n    | \\g<curly_braces>    # braced pattern\n  )*\n){0}\n\n# a parenthesized pattern matches\n(?<parens>\n  \\(       # an open paren\n  \\g<body> # a valid body\n  \\)       # a close paren\n){0}\n\n# a bracketed pattern matches\n(?<square_brackets>\n  \\[       # an open square bracket\n  \\g<body> # a valid body\n  \\]       # a close square bracket\n){0}\n\n# a braced pattern matches\n(?<curly_braces>\n  \\{       # an open curly brace\n  \\g<body> # a valid body\n  \\}       # a close curly brace\n){0}", "permalinkFragment": "tC6vM5", "isFavorite": false, "isStarred": false}, {"title": "Simple Number", "description": "Verifies Number is a negative/positive number. Number may be a decimal, but if it is, it requires at least one number before and after the decimal place. Decimal numbers may also be negative or positive. Only 1 decimal place is allowed.", "dateCreated": "2015-10-20T16:06:20.000Z", "dateModified": "2015-10-20T16:06:20.000Z", "author": "David P Smith", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 26, "downvotes": 20, "score": 0.42247182791312177, "userVote": null, "regex": "^[\\-]{0,1}[0-9]+[\\.][0-9]+|[\\-]{0,1}[0-9]+$", "permalinkFragment": "pH8cJ8", "isFavorite": false, "isStarred": false}, {"title": "json", "description": "{1:aa,2:bb,3:\"aa:bb\"}", "dateCreated": "2014-08-14T17:30:24.000Z", "dateModified": "2014-08-14T17:30:24.000Z", "author": "suat & umut", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 25, "downvotes": 19, "score": 0.4222389071760255, "userVote": null, "regex": "\\{?(?<key>.*?):(?<val>[\"].*[\"]?|.*?)[,\\W]\\}?", "permalinkFragment": "gF1dN4", "isFavorite": false, "isStarred": false}, {"title": "Two or more whitespace", "description": "Reeplace all two or more whitespace in string with a single chararter(ej. one whitespace)", "dateCreated": "2014-12-04T20:16:07.000Z", "dateModified": "2014-12-04T20:16:07.000Z", "author": "Lanxe", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 10, "downvotes": 5, "score": 0.41713125174188526, "userVote": null, "regex": "\\x20{2,}", "permalinkFragment": "iB1kH1", "isFavorite": false, "isStarred": false}, {"title": "Accept url without www", "description": "", "dateCreated": "2014-01-10T05:30:40.000Z", "dateModified": "2014-01-10T05:30:40.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 11, "downvotes": 6, "score": 0.4129996667423167, "userVote": null, "regex": "^(http:\\/\\/www\\.|https:\\/\\/www\\.|ftp:\\/\\/www.|www\\.)[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$", "permalinkFragment": "pG3oF4", "isFavorite": false, "isStarred": false}, {"title": "URL", "description": "URL Description from Dr. M. G. @ Brookes", "dateCreated": "2015-03-02T15:00:36.000Z", "dateModified": "2015-03-02T15:00:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 11, "downvotes": 6, "score": 0.4129996667423167, "userVote": null, "regex": "^([a-z\\-]+:\\/\\/)?([a-zA-Z0-9]+)(\\.[a-zA-Z0-9]+)*(\\/[a-zA-Z0-9]*)?$", "permalinkFragment": "jC6gE4", "isFavorite": false, "isStarred": false}, {"title": "HTML img", "description": "Grabs all HTML <img> tags", "dateCreated": "2015-10-17T05:48:00.000Z", "dateModified": "2015-10-17T05:48:00.000Z", "author": "Pirate11", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 11, "downvotes": 6, "score": 0.4129996667423167, "userVote": null, "regex": "<img[^>]*?src\\s*=\\s*[\"\"']?([^'\"\" >]+?)[ '\"\"][^>]*?>", "permalinkFragment": "zX5nH3", "isFavorite": false, "isStarred": false}, {"title": "password 1upper 1lower 1number 1specialcharater", "description": "fjk@1Qaa$", "dateCreated": "2016-01-23T03:48:35.000Z", "dateModified": "2016-01-23T03:48:35.000Z", "author": "Anuswadh", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 11, "downvotes": 6, "score": 0.4129996667423167, "userVote": null, "regex": "^(?=.{7,15}$)(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#\\.,\\/\\$%\\^&\\*\\(\\)\\\\\\-\\_=\\[\\]{}:;\"'<>\\?]).*$", "permalinkFragment": "sF2jK2", "isFavorite": false, "isStarred": false}, {"title": "Youtube ID matcher", "description": "Credit: https://gist.github.com/FinalAngel/1876898", "dateCreated": "2013-09-29T00:48:21.000Z", "dateModified": "2013-09-29T00:48:21.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 12, "downvotes": 7, "score": 0.41039157505072466, "userVote": null, "regex": "(youtu(?:\\.be|be\\.com)\\/(?:.*v(?:\\/|=)|(?:.*\\/)?)([\\w'-]+))", "permalinkFragment": "aG2pU8", "isFavorite": false, "isStarred": false}, {"title": "MAC address", "description": "a mac address separated by dashes or colons.", "dateCreated": "2015-07-31T17:12:36.000Z", "dateModified": "2015-07-31T17:12:36.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 12, "downvotes": 7, "score": 0.41039157505072466, "userVote": null, "regex": "((?:[a-zA-Z0-9]{2}[:-]){5}[a-zA-Z0-9]{2})", "permalinkFragment": "oR6fA2", "isFavorite": false, "isStarred": false}, {"title": "Repeated words (JS)", "description": "", "dateCreated": "2014-05-20T01:44:24.000Z", "dateModified": "2014-05-20T01:44:24.000Z", "author": "paconaranjo", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 6, "downvotes": 2, "score": 0.40926987910258916, "userVote": null, "regex": "([\\W\\S]\\s[\\w\\W]{2}.+),\\s(.+)\\1([!?.])", "permalinkFragment": "bS7sP2", "isFavorite": false, "isStarred": false}, {"title": "Simple Linux File Absolute Path Tester", "description": "Match simple linux file absolute path as /usr/share/my-folder/helloworld.jpg", "dateCreated": "2014-11-18T07:39:45.000Z", "dateModified": "2014-11-18T07:39:45.000Z", "author": "FLonpl6", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 2, "score": 0.40926987910258916, "userVote": null, "regex": "^(\\/[\\w-]+)+(.[a-zA-Z]+?)$", "permalinkFragment": "dS0bZ3", "isFavorite": false, "isStarred": false}, {"title": "url matching", "description": "supports all major protocols", "dateCreated": "2015-01-16T07:06:22.000Z", "dateModified": "2015-01-16T07:06:22.000Z", "author": "matheus silva", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 6, "downvotes": 2, "score": 0.40926987910258916, "userVote": null, "regex": "((?:http|https|ftp|ftps)(?:\\:\\/\\/)+)?(?:([A-z0-9\\-]+)\\:([A-z0-9\\-]+))?\\@?([A-z0-9\\-]+)(\\.[a-z\\.]+)", "permalinkFragment": "wV9pW4", "isFavorite": false, "isStarred": false}, {"title": "Validate a Particular File Extension", "description": "Validates a File Path and makes sure the correct extension is at the end.", "dateCreated": "2015-01-28T13:18:47.000Z", "dateModified": "2015-01-28T13:18:47.000Z", "author": "Andrew Morpurgo", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 2, "score": 0.40926987910258916, "userVote": null, "regex": "(?i:^.*\\.(xls|xlsx|doc|docx)$)", "permalinkFragment": "cZ2tC9", "isFavorite": false, "isStarred": false}, {"title": "tgs data delivery .zip ID", "description": "Pull zip download ID from default links. Works with datadelivery and datadelivery1", "dateCreated": "2015-09-11T15:16:40.000Z", "dateModified": "2015-09-11T15:16:40.000Z", "author": "TRL", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 2, "score": 0.40926987910258916, "userVote": null, "regex": "(\\d*\\.zip)", "permalinkFragment": "wT7nM0", "isFavorite": false, "isStarred": false}, {"title": "vowel words", "description": "([!-\\~]*[aeiou][!-\\~]*)", "dateCreated": "2015-12-29T07:14:44.000Z", "dateModified": "2015-12-29T07:14:44.000Z", "author": "Ipsita Mohanty", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 6, "downvotes": 2, "score": 0.40926987910258916, "userVote": null, "regex": "\\b([^aeiou\\s]+)\\b", "permalinkFragment": "jA8eQ9", "isFavorite": false, "isStarred": false}, {"title": "Timestamp", "description": "12.04.1975T03:02:00.88\n\nWith milliseconds and T seperator. Excludes most invalid dates, except 30/31ths of month, leap years/february heaving only 29/28.", "dateCreated": "2016-04-03T21:11:09.000Z", "dateModified": "2016-04-03T21:11:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 6, "downvotes": 2, "score": 0.40926987910258916, "userVote": null, "regex": "([0-2][0-9]|[3][0|1])[.]([0][1-9]|[1][1|2])[.]([0-9]{4})[T]([0|1][0-9]|[2][0-3])([:][0-5][0-9]){2}[.][0-9]{2}", "permalinkFragment": "kQ6bY0", "isFavorite": false, "isStarred": false}, {"title": "Skype ConversationText Extraction", "description": "When you copy a skype conversation and paste it in a text area then it includes timestamps, User's name and whether or not the message had been edited.\nThis matches all of those in seperate groups for easy substitution", "dateCreated": "2016-04-04T07:56:21.000Z", "dateModified": "2016-04-04T07:56:21.000Z", "author": "Zalatos", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 6, "downvotes": 2, "score": 0.40926987910258916, "userVote": null, "regex": "((\\[\\d+:\\d+:\\d+ \\w+\\][\\w ]+:)|(\\[\\d+:\\d+:\\d+ \\w+ \\| \\w+ \\d+:\\d+:\\d+ \\w+\\][\\w ]+:))([ \\w'.,]+)", "permalinkFragment": "bH8mY9", "isFavorite": false, "isStarred": false}, {"title": "Get image tag attributes", "description": "", "dateCreated": "2016-05-09T17:53:15.000Z", "dateModified": "2016-05-09T17:53:15.000Z", "author": "Agust\u00edn Bouillet", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 6, "downvotes": 2, "score": 0.40926987910258916, "userVote": null, "regex": "(?:(?i)(javascript|longdesc|src|alt|style|class|title|data\\-[\\w\\-]+)\\=\\\"([\\w\\s\\#]+)?\\\")?", "permalinkFragment": "jM5wM6", "isFavorite": false, "isStarred": false}, {"title": "North American Phone Number", "description": "Validate **North American** **phone numbers** with capture groups for the **Area Code**, **Exchange Code**, **Line Number**, and **Extension**.", "dateCreated": "2017-02-28T17:31:29.000Z", "dateModified": "2017-02-28T17:31:29.000Z", "author": "AaronBoots", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 6, "downvotes": 2, "score": 0.40926987910258916, "userVote": null, "regex": "(?=(?:^(?:\\+?1\\s*(?:[.-]\\s*)?)?(?!(?:(?:.*\\(.*)|(?:.*\\).*)))(?:[2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))|(?:.*\\((?:[2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\).*))(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(?([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\)?)\\s*(?:[.-]\\s*)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})(?:\\s*(?:#|x\\.?|ext\\.?|extension)\\s*(\\d{1,15}))?$", "permalinkFragment": "W2wtR8", "isFavorite": false, "isStarred": false}, {"title": "ipv6 Validation", "description": "Handle all condition for ipv6\nexample: \n1) FE80::8329\n2) FE80::FFFF:8329\n3) FE80::B3FF:FFFF:8329\n4) FE80::0202:B3FF:FFFF:8329\n5) FE80::0000:0202:B3FF:FFFF:8329\n6) FE80::0000:0000:0202:B3FF:FFFF:8329\n7) FE80:0000:0000:0000:0202:B3FF:FFFF:8329", "dateCreated": "2015-09-04T16:46:52.000Z", "dateModified": "2015-09-04T16:46:52.000Z", "author": "Lim Yew Teck, Nicholas", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 13, "downvotes": 8, "score": 0.4087829576725588, "userVote": null, "regex": "^((([0-9A-Fa-f]{1,4}:){1,6}:)|(([0-9A-Fa-f]{1,4}:){7}))([0-9A-Fa-f]{1,4})$", "permalinkFragment": "aL7tV3", "isFavorite": false, "isStarred": false}, {"title": "Separate words (works with spaces, dashes and underscores)", "description": "", "dateCreated": "2014-10-07T17:30:10.000Z", "dateModified": "2014-10-07T17:30:10.000Z", "author": "marcoslhc", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 19, "downvotes": 14, "score": 0.4080697366717834, "userVote": null, "regex": "([^\\W_]+[^\\s-]*)*", "permalinkFragment": "dW4tS3", "isFavorite": false, "isStarred": false}, {"title": "url", "description": "", "dateCreated": "2015-07-23T21:43:56.000Z", "dateModified": "2015-07-23T21:43:56.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 26, "downvotes": 22, "score": 0.4029083307687033, "userVote": null, "regex": "\\(?(?:(http|https):\\/\\/)(?:((?:[^\\W\\s]|\\.|-|[:]{1})+)@{1})?((?:www.)?(?:[^\\W\\s]|\\.|-)+[\\.][^\\W\\s]{2,4}|localhost(?=\\/)|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})(?::(\\d*))?([\\/]?[^\\s\\?]*[\\/]{1})*(?:\\/?([^\\s\\n\\?\\[\\]\\{\\}\\#]*(?:(?=\\.)){1}|[^\\s\\n\\?\\[\\]\\{\\}\\.\\#]*)?([\\.]{1}[^\\s\\?\\#]*)?)?(?:\\?{1}([^\\s\\n\\#\\[\\]]*))?([\\#][^\\s\\n]*)?\\)?", "permalinkFragment": "rM5zR2", "isFavorite": false, "isStarred": false}, {"title": "phone", "description": "matches: +<country_code> <phone_number>\nexample:\n+52 33 3884 7720\n+1 770 343 5788", "dateCreated": "2015-05-07T17:14:08.000Z", "dateModified": "2015-05-07T17:14:08.000Z", "author": "miqui", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 33, "downvotes": 30, "score": 0.40270144254268325, "userVote": null, "regex": "(^[+]\\d+(?:[ ]\\d+)*)", "permalinkFragment": "aV5kN3", "isFavorite": false, "isStarred": false}, {"title": "Task 1", "description": "Finds a happy smile, except sad one", "dateCreated": "2014-02-25T05:48:59.000Z", "dateModified": "2014-02-25T05:48:59.000Z", "author": "Kovalev Evgeny", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 7, "downvotes": 3, "score": 0.3967732199795651, "userVote": null, "regex": "([8:;]-?[)DP}>]|[[({<]-?[8:;])", "permalinkFragment": "wB7vW5", "isFavorite": false, "isStarred": false}, {"title": "Mobile phone russia", "description": " ", "dateCreated": "2015-11-11T11:10:25.000Z", "dateModified": "2015-11-11T11:10:25.000Z", "author": "Johhny", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 3, "score": 0.3967732199795651, "userVote": null, "regex": "^(?:\\+7|8)?9(?:\\d{9})$", "permalinkFragment": "fU5fJ6", "isFavorite": false, "isStarred": false}, {"title": "Element's Attribute Value in XML (simple)", "description": "Simple regular expression for extracting attribute value of the element in XML-string. Attribute value should be in quotes.", "dateCreated": "2014-06-24T11:29:07.000Z", "dateModified": "2014-06-24T11:29:07.000Z", "author": "Nikita Danilov", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 20, "downvotes": 16, "score": 0.39580787310634136, "userVote": null, "regex": "<child\\s+[^<]*?attr2=[\\'\\\"](?<value>[^<]*?)[\\'\\\"]", "permalinkFragment": "pT4bB7", "isFavorite": false, "isStarred": false}, {"title": "Validate alphanumeric and numeric range", "description": "For Validating alphanumeric and numeric range", "dateCreated": "2014-09-22T09:13:36.000Z", "dateModified": "2014-09-22T09:13:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 37, "downvotes": 36, "score": 0.39472044225498676, "userVote": null, "regex": "^[A-Z0-9]+(?:-[A-Z0-9]+)?(?:,[A-Z0-9]+(?:-[A-Z0-9]+)?)*$", "permalinkFragment": "hB3fK2", "isFavorite": false, "isStarred": false}, {"title": "Remove HTML tags", "description": "This regex is used to remove HTML tag on string", "dateCreated": "2014-10-01T08:36:54.000Z", "dateModified": "2014-10-01T08:36:54.000Z", "author": "Jordane BACHELET", "flavor": "pcre", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 19, "downvotes": 15, "score": 0.39453617794474016, "userVote": null, "regex": "<\\/?[a-z][a-z0-9]*[^<>]*>|<!--.*?-->", "permalinkFragment": "aJ9hT9", "isFavorite": false, "isStarred": false}, {"title": "URL matching", "description": "Complete url matching with storage of various parameters", "dateCreated": "2014-07-02T06:34:20.000Z", "dateModified": "2014-07-02T06:34:20.000Z", "author": "hjpotter92", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 41, "downvotes": 41, "score": 0.39422642723512386, "userVote": null, "regex": "(?<protocol>(?:http|ftp|irc)s?:\\/\\/)?(?:(?<user>[^:\\n\\r]+):(?<pass>[^@\\n\\r]+)@)?(?<host>(?:www\\.)?(?:[^:\\/\\n\\r]+)(?::(?<port>\\d+))?)\\/?(?<request>[^?#\\n\\r]+)?\\??(?<query>[^#\\n\\r]*)?\\#?(?<anchor>[^\\n\\r]*)?", "permalinkFragment": "kX8hK8", "isFavorite": false, "isStarred": false}, {"title": "Credit Card Number", "description": "Validates Credit Card Numbers of different type.\nSupports Visa, MasterCard, American Express, Diners Club, Discover and JCB\n\nTaken from http://www.regular-expressions.info/creditcard.html\n\nIf you want to support only a particular type, customise it based on following.\n\n^(?:4[0-9]{12}(?:[0-9]{3})?          # Visa\n |  5[1-5][0-9]{14}                  # MasterCard\n |  3[47][0-9]{13}                   # American Express\n |  3(?:0[0-5]|[68][0-9])[0-9]{11}   # Diners Club\n |  6(?:011|5[0-9]{2})[0-9]{12}      # Discover\n |  (?:2131|1800|35\\d{3})\\d{11}      # JCB\n)$", "dateCreated": "2015-06-04T15:07:53.000Z", "dateModified": "2015-06-04T15:07:53.000Z", "author": "Ehsan", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 17, "downvotes": 13, "score": 0.39197009528110816, "userVote": null, "regex": "^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}(?:2131|1800|35\\d{3})\\d{11})$", "permalinkFragment": "uW8mC3", "isFavorite": false, "isStarred": false}, {"title": "Strip out domain extensions except for Microsoft .net technologies.", "description": "", "dateCreated": "2013-03-25T17:26:41.000Z", "dateModified": "2013-03-25T17:26:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 8, "downvotes": 4, "score": 0.39061758726539986, "userVote": null, "regex": "(^|\\s)(?!\\b(?:basic|studio|asp|v[bs]|c\\#)\\.net)(\\w+)(?:\\.co\\.[a-z]{2}|\\.[a-z]{2,6})\\b", "permalinkFragment": "uI4nL8", "isFavorite": false, "isStarred": false}, {"title": "YouTube Grabber Cleanup", "description": "", "dateCreated": "2013-09-22T15:13:07.000Z", "dateModified": "2013-09-22T15:13:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 8, "downvotes": 4, "score": 0.39061758726539986, "userVote": null, "regex": "^(.*)([\\w_-]{11})\\.(mp4|mkv|flv)$", "permalinkFragment": "fO8oU5", "isFavorite": false, "isStarred": false}, {"title": "Match Brackets and anything inside", "description": "", "dateCreated": "2013-11-19T18:43:07.000Z", "dateModified": "2013-11-19T18:43:07.000Z", "author": "andreayang", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 8, "downvotes": 4, "score": 0.39061758726539986, "userVote": null, "regex": "\\[([^)]+)\\]", "permalinkFragment": "qS4wL9", "isFavorite": false, "isStarred": false}, {"title": "html tags", "description": "", "dateCreated": "2016-04-07T18:24:34.000Z", "dateModified": "2016-04-07T18:24:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 8, "downvotes": 4, "score": 0.39061758726539986, "userVote": null, "regex": "^<(?:([A-Za-z0-9][A-Za-z0-9]*)\\b[^>]*>(?:.*?)<\\/\\1>|[A-Za-z0-9][A-Za-z0-9]*\\b[^>]*\\/>)$", "permalinkFragment": "fH3tT0", "isFavorite": false, "isStarred": false}, {"title": "Regex tutorial Case sensitive consonants", "description": "With regex you can count the number of matches. Can you make it return the number of uppercase consonants (B,C,D,F,..,X,Y,Z) in a given string? E.g.: it should return 3 with the text ABcDeFO!. Note: Only ASCII. We consider Y to be a consonant! Example: the regex /./g will return 3 when run against the string abc. ", "dateCreated": "2020-07-01T10:38:25.000Z", "dateModified": "2020-07-01T10:38:25.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 8, "downvotes": 4, "score": 0.39061758726539986, "userVote": null, "regex": "[^ -AEIOU[-\u00ff]", "permalinkFragment": "puexkl", "isFavorite": false, "isStarred": false}, {"title": "Strip multi-line (star) comments from JavaScript, while leaving any CDATA sections intact.", "description": "This regular expression removes multi-line (star) comments from JavaScript, while leaving any CDATA sections intact. Use the global (g) modifier to match them all (if you plan to use PHP's preg_replace, the g modifier is not necessary), and use the (s) modifier to make dots match newlines (this will be required in for using with PHP's preg_replace function). This regular expression does not exhaust all possibilities (such as a space between the opening or closing star comment and the CDATA tag), but it functions if the style guidelines are of the more popularized variety.", "dateCreated": "2013-03-21T20:42:30.000Z", "dateModified": "2013-03-21T20:42:30.000Z", "author": "Dane MacMillan", "flavor": "pcre", "delimiter": "/", "flags": "gs", "version": 1, "upvotes": 15, "downvotes": 11, "score": 0.3894829692652742, "userVote": null, "regex": "\\/\\*(?!(\\<\\!\\[CDATA\\[)|(\\]\\]>))(.*?)\\*\\/", "permalinkFragment": "qM6sP4", "isFavorite": false, "isStarred": false}, {"title": "Get stuff inside <a> tags", "description": "Get stuff inside <a> tags, which are between certain words", "dateCreated": "2013-09-07T18:19:19.000Z", "dateModified": "2013-09-07T18:19:19.000Z", "author": "Jerry", "flavor": "pcre", "delimiter": "/", "flags": "gsi", "version": 1, "upvotes": 14, "downvotes": 10, "score": 0.3883433761468813, "userVote": null, "regex": "(?:startString|\\G)[^<>]*+\\K(?:<a>([^<>]++)</a>)(?=(?:(?!startString).)*?endString)", "permalinkFragment": "aM1zG8", "isFavorite": false, "isStarred": false}, {"title": "Capturing items from multiple lists using a single regex", "description": "", "dateCreated": "2014-10-21T15:19:04.000Z", "dateModified": "2014-10-21T15:19:04.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 9, "downvotes": 5, "score": 0.3876400461564996, "userVote": null, "regex": "([\\d]+)\\b", "permalinkFragment": "fF0nD0", "isFavorite": false, "isStarred": false}, {"title": "Complete imgur link regex", "description": "This regex grabs all kinds of imgur links and groups them in meaningful names aswell. This way you have full flow-control in your python-scripts.", "dateCreated": "2015-03-13T11:26:49.000Z", "dateModified": "2015-03-13T11:26:49.000Z", "author": "Mio", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 9, "downvotes": 5, "score": 0.3876400461564996, "userVote": null, "regex": "(^(http|https):\\/\\/)?(i\\.)?imgur.com\\/((?P<gallery>gallery\\/)(?P<galleryid>\\w+)|(?P<album>a\\/)(?P<albumid>\\w+)#?)?(?P<imgid>\\w*)", "permalinkFragment": "mA7vD8", "isFavorite": false, "isStarred": false}, {"title": "Full e-mail validator", "description": "", "dateCreated": "2015-08-03T12:07:37.000Z", "dateModified": "2015-08-03T12:07:37.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 9, "downvotes": 5, "score": 0.3876400461564996, "userVote": null, "regex": "(((?:(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?(?:(?:[\\x41-\\x5a\\x61-\\x7a]|[\\x30-\\x39]|[\\x21\\x23-\\x27\\x2a\\x2b\\x2d\\x2f\\x3d\\x3f\\x5e\\x5f\\x60\\x7b-\\x7e])+(?:\\x2e(?:[\\x41-\\x5a\\x61-\\x7a]|[\\x30-\\x39]|[\\x21\\x23-\\x27\\x2a\\x2b\\x2d\\x2f\\x3d\\x3f\\x5e\\x5f\\x60\\x7b-\\x7e])+)*)(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?))|((?:(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?\\x22(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21\\x23-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))+(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x22(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?))|((?:(?:(?:(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?(?:(?:[\\x41-\\x5a\\x61-\\x7a]|[\\x30-\\x39]|[\\x21\\x23-\\x27\\x2a\\x2b\\x2d\\x2f\\x3d\\x3f\\x5e\\x5f\\x60\\x7b-\\x7e]))+(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?)|(?:(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?\\x22(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21\\x23-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))+(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x22(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?))(?:\\x2e(?:(?:(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?(?:(?:[\\x41-\\x5a\\x61-\\x7a]|[\\x30-\\x39]|[\\x21\\x23-\\x27\\x2a\\x2b\\x2d\\x2f\\x3d\\x3f\\x5e\\x5f\\x60\\x7b-\\x7e]))+(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?)|(?:(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?\\x22(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21\\x23-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))+(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x22(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?)))*)))\\x40(((?:(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?(?:(?:[\\x41-\\x5a\\x61-\\x7a]|[\\x30-\\x39]|[\\x21\\x23-\\x27\\x2a\\x2b\\x2d\\x2f\\x3d\\x3f\\x5e\\x5f\\x60\\x7b-\\x7e])+(?:\\x2e(?:[\\x41-\\x5a\\x61-\\x7a]|[\\x30-\\x39]|[\\x21\\x23-\\x27\\x2a\\x2b\\x2d\\x2f\\x3d\\x3f\\x5e\\x5f\\x60\\x7b-\\x7e])+)*)(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?))|((?:(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?\\x5b(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x5a\\x5e-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x5d(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?))|((?:(?:(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?(?:(?:[\\x41-\\x5a\\x61-\\x7a]|[\\x30-\\x39]|[\\x21\\x23-\\x27\\x2a\\x2b\\x2d\\x2f\\x3d\\x3f\\x5e\\x5f\\x60\\x7b-\\x7e]))+(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?)(?:\\x2e(?:(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?(?:(?:[\\x41-\\x5a\\x61-\\x7a]|[\\x30-\\x39]|[\\x21\\x23-\\x27\\x2a\\x2b\\x2d\\x2f\\x3d\\x3f\\x5e\\x5f\\x60\\x7b-\\x7e]))+(?:(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29))*(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:\\x28(?:(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|[\\x21-\\x27\\x2A-\\x5b\\x5d-\\x7e])|(?:\\x5c(?:\\x0a*\\x0d*[\\x00-\\x09\\x0b\\x0c\\x0e-\\x7f]\\x0a*\\x0d*)|(?:\\x5c[\\x00-\\x7f]))))*(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))?\\x29)|(?:(?:(?:[\\x20\\x09]*(?:\\x0d\\x0a))?[\\x20\\x09]+)|(?:[\\x20\\x09]+(?:(?:\\x0d\\x0a)[\\x20\\x09]+)*))))?))*)))", "permalinkFragment": "mP7iR9", "isFavorite": false, "isStarred": false}, {"title": "Mask credit card", "description": "", "dateCreated": "2016-01-14T11:11:16.000Z", "dateModified": "2016-01-14T11:11:16.000Z", "author": "Albert Paris", "flavor": "pcre", "delimiter": "/", "flags": "Ug", "version": 1, "upvotes": 9, "downvotes": 5, "score": 0.3876400461564996, "userVote": null, "regex": "(?<=\\d{6})(\\d+)(?=\\d{4})", "permalinkFragment": "lO1iV0", "isFavorite": false, "isStarred": false}, {"title": "utf-8 hex.", "description": "utf-8 hex. code armenian. Firs character regexp", "dateCreated": "2015-02-18T06:26:56.000Z", "dateModified": "2015-02-18T06:26:56.000Z", "author": "Dyxx", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 10, "downvotes": 6, "score": 0.38640647097934805, "userVote": null, "regex": "^(\\%d[4-6]\\%[ab89]([0-9]|[a-f]))$", "permalinkFragment": "zJ6wW3", "isFavorite": false, "isStarred": false}, {"title": "Extract asp label", "description": "I am trying to extract the asp:label syntax using Regex but I am getting some error can some one help me", "dateCreated": "2013-12-02T05:53:07.000Z", "dateModified": "2013-12-02T05:53:07.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "(?<openingtag><asp:Label.*?>)(?<content>.*?)(?<closingtag><.*?asp:Label>)", "permalinkFragment": "xN4cZ8", "isFavorite": false, "isStarred": false}, {"title": "Outside Quotes", "description": "match any string outside of single or double quotes", "dateCreated": "2014-03-08T11:13:47.000Z", "dateModified": "2014-03-08T11:13:47.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "(str)(?=(?:[^'\"]|[\"'][^'\"]*[\"'])*$)", "permalinkFragment": "yJ6vF5", "isFavorite": false, "isStarred": false}, {"title": "xferlog parser (proftpd, ftpd, vsftpd, etc..)", "description": "This pulls out all the fields from a standard xferlog format log. Format specified here http://www.castaglia.org/proftpd/doc/xferlog.html", "dateCreated": "2014-08-31T13:06:39.000Z", "dateModified": "2014-08-31T13:06:39.000Z", "author": "Robin Kearney", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "(?<time>\\w{3} \\w{3} \\d{2} \\d{2}:\\d{2}:\\d{2} \\d{4}) (?<xferTime>\\d*) (?<remoteHost>\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b) (?<fileSize>\\d*) (?<fileName>\\S*) (?<transferType>[a|b]) (?<specialActionFlag>\\S{1}) (?<direction>\\S{1}) (?<accessMode>\\S{1}) (?<userName>\\S*) (?<serviceName>\\S*) (?<authenticationMethod>\\S*) (?<authenticatedUserId>\\S*) (?<completionStatus>\\S*)", "permalinkFragment": "nB1kA6", "isFavorite": false, "isStarred": false}, {"title": "UUID", "description": "", "dateCreated": "2014-09-03T13:30:12.000Z", "dateModified": "2014-09-03T13:30:12.000Z", "author": "Jason", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}", "permalinkFragment": "nF0kX0", "isFavorite": false, "isStarred": false}, {"title": "Finds dates lacking period before month (Norwegian)", "description": "", "dateCreated": "2014-09-09T22:54:52.000Z", "dateModified": "2014-09-09T22:54:52.000Z", "author": "EB", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "[0-9][^.](januar($| |\\n)|februar($| |\\n)|mars($| |\\n)|april($| |\\n)|mai($| |\\n)|juni($| |\\n)|juli($| |\\n)|august($| |\\n)|september($| |\\n)|oktober($| |\\n)|november($| |\\n)|desember($| |\\n))", "permalinkFragment": "sR8qE6", "isFavorite": false, "isStarred": false}, {"title": "Get URL parameters", "description": "", "dateCreated": "2014-09-16T08:46:31.000Z", "dateModified": "2014-09-16T08:46:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "(?:\\?|\\&)(?<key>[\\w]+)(?:\\=|\\&?)(?<value>[\\w+,.-]*)", "permalinkFragment": "aV9uX5", "isFavorite": false, "isStarred": false}, {"title": "TEST", "description": "negation", "dateCreated": "2014-12-29T22:00:06.000Z", "dateModified": "2014-12-29T22:00:06.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "(<XX>){1}([^#]*)(<\\/XX>){1}", "permalinkFragment": "iN2hZ6", "isFavorite": false, "isStarred": false}, {"title": "Alternative Capture Country Codes", "description": "", "dateCreated": "2015-01-21T13:59:49.000Z", "dateModified": "2015-01-21T13:59:49.000Z", "author": "Branden", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "(\\s*-en|\\s*-en-us|\\s*-us)$", "permalinkFragment": "iP2rM5", "isFavorite": false, "isStarred": false}, {"title": "How do I write a Regex to inspect Cisco Interfaces", "description": "\n\nI am asking for help in writing a regular expression to shorten this expression. I need the string below to search every interface within the range of 1 -24 to validate the configuration. If one interface does not have the required configuration then the expression fails.\n\ninterface GigabitEthernet1/***1 thru 24***.\\n(.\\n). description ** Unused Port **.\\n(.\\n). switchport access vlan 333\n", "dateCreated": "2015-04-11T19:39:28.000Z", "dateModified": "2015-04-11T19:39:28.000Z", "author": "Pirates", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "interface GigabitEthernet1\\/(1[2-9]|[1-2][0-1]).*\\n(.*\\n)*.* description \\*\\* Unused Port \\*\\*.*\\n(.*\\n)*.* switchport access vlan 1002.*\\n(.*\\n)*.* switchport mode access.*\\n(.*\\n)*.* switchport port-security.*\\n(.*\\n)*.* switchport port-security mac-address sticky.*\\n(.*\\n)*.* shutdown.*\\n(.*\\n)*.* no cdp enable.*\\n(.*\\n)*.* spanning-tree portfast\n", "permalinkFragment": "cX4gD0", "isFavorite": false, "isStarred": false}, {"title": "Test a string against CamelCase", "description": "See if a string is in CamelCase format", "dateCreated": "2015-04-22T03:44:18.000Z", "dateModified": "2015-04-22T03:44:18.000Z", "author": "Tonny Xu", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "^[a-zA-Z]+([A-Z][a-z]+)+$", "permalinkFragment": "uR7tT3", "isFavorite": false, "isStarred": false}, {"title": "images url match in text", "description": "", "dateCreated": "2015-06-09T00:14:33.000Z", "dateModified": "2015-06-09T00:14:33.000Z", "author": "Redfern.89", "flavor": "pcre", "delimiter": "/", "flags": "gsim", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "(?:(?:https?)+\\:\\/\\/+[a-zA-Z0-9\\/\\._-]{1,})+(?:(?:jpe?g|png|gif))", "permalinkFragment": "sY6lI0", "isFavorite": false, "isStarred": false}, {"title": "prices in nis", "description": "", "dateCreated": "2015-06-15T15:16:18.000Z", "dateModified": "2015-06-15T15:16:18.000Z", "author": "molaxx", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "((?:[0-9]{1,3},(?:[0-9]{3},)*[0-9]{3}|[0-9]+)(?:.[0-9][0-9])?)\\s*(?:\u05e9\\\"\u05d7|\u20aa|nis|NIS|\u05e9\u05e7\u05dc)(?:\\W|$)", "permalinkFragment": "hN4xT4", "isFavorite": false, "isStarred": false}, {"title": "Div content", "description": "", "dateCreated": "2015-06-23T08:44:47.000Z", "dateModified": "2015-06-23T08:44:47.000Z", "author": "mohammadsaleh", "flavor": "pcre", "delimiter": "/", "flags": "isg", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "<div[^>]*>((?:(?:(?!<div[^>]*>|<\\/div>).)+|<div[^>]*>(?1)<\\/div>)*)<\\/div>", "permalinkFragment": "dS4gM0", "isFavorite": false, "isStarred": false}, {"title": "HH:MM:SS", "description": "Validates 00:00:00 to 23:59:59", "dateCreated": "2015-07-27T20:21:44.000Z", "dateModified": "2015-07-27T20:21:44.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d", "permalinkFragment": "iV7pU3", "isFavorite": false, "isStarred": false}, {"title": "youtube id und link", "description": "", "dateCreated": "2015-08-03T12:24:17.000Z", "dateModified": "2015-08-03T12:24:17.000Z", "author": "ogerly", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "<a href=\"http.?:.*(?:youtube.com\\/|youtu.be\\/)(?:watch\\?v=|watch\\?t=.*v=|embed\\/|)(\\w{11})<\\/a>", "permalinkFragment": "oZ9bM0", "isFavorite": false, "isStarred": false}, {"title": "URL Regex (protocol strict)", "description": "Includes resource strings, taken from here:\nhttps://gist.github.com/dperini/729294", "dateCreated": "2015-08-11T10:49:06.000Z", "dateModified": "2015-08-11T10:49:06.000Z", "author": "Diego Perini", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$", "permalinkFragment": "kE6aO8", "isFavorite": false, "isStarred": false}, {"title": "Validate Base64 with new lines (e.g. GPG base64 messages)", "description": "This regular expression validates if given string is formatted in Base64, additional it accepts new lines, since payload can have new lines in it.", "dateCreated": "2015-10-02T09:27:25.000Z", "dateModified": "2015-10-02T09:27:25.000Z", "author": "wpodgorski", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "(?:^(?:[A-Za-z0-9+\\/]{4}\\n?)*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)$)", "permalinkFragment": "dS0sM8", "isFavorite": false, "isStarred": false}, {"title": "Select all number greater than 36", "description": "", "dateCreated": "2015-10-18T08:30:50.000Z", "dateModified": "2015-10-18T08:30:50.000Z", "author": "Mansoor", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "3[7-9]|[4-9]\\d+|\\d{3,}", "permalinkFragment": "gS0jO1", "isFavorite": false, "isStarred": false}, {"title": "Extract All Steam Keys", "description": "Extract all Steam Keys from a Given String", "dateCreated": "2015-10-21T01:53:02.000Z", "dateModified": "2015-10-21T01:53:02.000Z", "author": "Ashesh Kumar", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "[A-Z0-9]{4,5}-[A-Z0-9]{4,5}-[A-Z0-9]{4,5}", "permalinkFragment": "dN6yJ5", "isFavorite": false, "isStarred": false}, {"title": "Firt letter of names capitalize with exceptions", "description": "Check if brazilian names are imputed correctly. Ex: Paulo da Silva", "dateCreated": "2015-12-04T16:10:00.000Z", "dateModified": "2015-12-04T16:10:00.000Z", "author": "William", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "^\\b(?:[A-Z]\\w+\\b(?:\\s*)?)+$", "permalinkFragment": "oE4vU7", "isFavorite": false, "isStarred": false}, {"title": "apache access log", "description": "parse the apache access log", "dateCreated": "2016-01-19T14:35:57.000Z", "dateModified": "2016-01-19T14:35:57.000Z", "author": "pagu", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}) - - \\[(\\d{2}\\/[a-zA-Z]{3}\\/\\d{4}:\\d{2}:\\d{2}:\\d{2} (\\+|\\-)\\d{4})\\] ((\\\"(GET|POST|HEAD|OPTIONS) )(.+)(HTTP\\/1\\.(1|0)\")) (\\d{3}) (\\d+) ([\"]((\\-)|(.+))[\"]) ([\"](.+)[\"])", "permalinkFragment": "oT6xN5", "isFavorite": false, "isStarred": false}, {"title": "Match a valid IPv4 or IPv6 address", "description": "This regular expression will match an IPv4 address as well as both compressed or uncompressed IPv6 address.", "dateCreated": "2016-03-07T13:17:19.000Z", "dateModified": "2016-03-07T13:17:19.000Z", "author": "Tom Groeneveld, SevOne.com", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-fA-F]|[a-fA-F][a-fA-F0-9\\-]*[a-fA-F0-9])\\.)*([A-Fa-f]|[A-Fa-f][A-Fa-f0-9\\-]*[A-Fa-f0-9])$|^(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,1}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,2}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,3}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:[0-9a-fA-F]{1,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,4}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,5}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,6}(?:(?:[0-9a-fA-F]{1,4})))?::)))))$", "permalinkFragment": "tF7zQ1", "isFavorite": false, "isStarred": false}, {"title": "YouTubeVideoUrl", "description": "YouTubeVideoUrl", "dateCreated": "2023-01-30T16:07:03.000Z", "dateModified": "2023-01-30T16:08:29.000Z", "author": "EdwardKonovalov", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "https:\\/\\/(youtu.be|www.youtube.com)\\/([A-z0-9-_]{11}(\\?.*)?$|(watch?.*v=[A-z0-9-_]{11}(\\&.*)?$))", "permalinkFragment": "K6fyAm", "isFavorite": false, "isStarred": false}, {"title": "french phone number + match right part", "description": "Matches french numbers (not special numbers like 115, 18).\nFirst matching group contains the right part without prefix (0, +33, 33, 033, or 0033).", "dateCreated": "2016-04-18T14:25:23.000Z", "dateModified": "2016-04-18T14:25:23.000Z", "author": "xdrm-brackets", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "^(?:0|\\+33 ?|0?0?33 ?|)([1-9] ?(?:[0-9] ?){8})$", "permalinkFragment": "sB9nA4", "isFavorite": false, "isStarred": false}, {"title": "JSON recognition", "description": "", "dateCreated": "2016-04-22T07:11:59.000Z", "dateModified": "2016-04-22T07:11:59.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "\"html_content\"\\s*:\\s*\"(.*?(?<!\\\\))\"", "permalinkFragment": "sS3qK7", "isFavorite": false, "isStarred": false}, {"title": "strong password validation", "description": "**This regex matches only when all the following are true:**\n1. password has minimum 2 uppercase letters\n2. password has minimum 2 lowercase letters\n3. password has minimum 2 numerals (0-9)\n4. password has minimum 2 special characters, of the group !@#$%^&*()-_=+{};:,<.>\n5. password has no more than 2 consecutive identical characters\n6.  password is composed of 12 to 20 characters belonging ONLY to the above character classes (i.e., no whitespace)", "dateCreated": "2017-07-04T03:44:07.000Z", "dateModified": "2017-07-04T03:44:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 4, "downvotes": 1, "score": 0.3755282641185389, "userVote": null, "regex": "^ # start of line\n(?=(?:.*[A-Z]){2,}) # 2 upper case letters\n(?=(?:.*[a-z]){2,}) # 2 lower case letters\n(?=(?:.*\\d){2,}) # 2 digits\n(?=(?:.*[!@#$%^&*()\\-_=+{};:,<.>]){2,}) # 2 special characters\n(?!.*(.)\\1{2}) # negative lookahead, dont allow more than 2 repeating characters\n([A-Za-z0-9!@#$%^&*()\\-_=+{};:,<.>]{12,20}) # length 12-20, only above char classes (disallow spaces)\n$ # end of line\n", "permalinkFragment": "cOMsKw", "isFavorite": false, "isStarred": false}, {"title": "split sentence regex", "description": "", "dateCreated": "2015-06-05T01:31:52.000Z", "dateModified": "2015-06-05T01:31:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 15, "downvotes": 12, "score": 0.3731271947013256, "userVote": null, "regex": "(?<=[.?!;])\\s+(?=\\p{Lu})", "permalinkFragment": "bF3rK7", "isFavorite": false, "isStarred": false}, {"title": "Prime number regex", "description": "", "dateCreated": "2013-07-20T21:13:54.000Z", "dateModified": "2013-07-20T21:13:54.000Z", "author": "originally \"Abigail\", comp.lang.perl.misc", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 13, "downvotes": 10, "score": 0.36811049268189805, "userVote": null, "regex": "^1?$|^(11+?)\\1+$", "permalinkFragment": "lS5lN3", "isFavorite": false, "isStarred": false}, {"title": "IP Addresses", "description": "Matches IP Addresses with minimum false positives", "dateCreated": "2015-07-16T16:42:42.000Z", "dateModified": "2015-07-16T16:42:42.000Z", "author": "Austin-Hanson", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 21, "downvotes": 20, "score": 0.3648425930828482, "userVote": null, "regex": "(((1[0-9]{2})|(2[0-5]{2})|[0-9]{1,2})\\.){3}(((1[0-9]{2})|(2[0-5]{2})|[0-9]{1,2}))", "permalinkFragment": "lA0mU8", "isFavorite": false, "isStarred": false}, {"title": "Replace \\n by <br />", "description": "Replace non-ending string \\n by the <br /> HTML tag", "dateCreated": "2014-03-27T08:56:25.000Z", "dateModified": "2014-03-27T08:56:25.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 17, "downvotes": 15, "score": 0.3644923793257382, "userVote": null, "regex": "(\\n|\\\\n)(?!$)", "permalinkFragment": "eE6cF9", "isFavorite": false, "isStarred": false}, {"title": "utf-8 language", "description": "this regex is support for all languages", "dateCreated": "2015-09-15T13:13:07.000Z", "dateModified": "2015-09-15T13:13:07.000Z", "author": "Jigar Dhaduk", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 23, "downvotes": 23, "score": 0.36118701617799, "userVote": null, "regex": "([\\pL\\pM _()$&\"'0-9\\/!@^=+*-])+", "permalinkFragment": "rG7gV1", "isFavorite": false, "isStarred": false}, {"title": "HTML image tag src", "description": "Capture src attribute of HTML image tags", "dateCreated": "2013-10-08T17:29:29.000Z", "dateModified": "2013-10-08T17:29:29.000Z", "author": "Simon Altschuler", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 10, "downvotes": 7, "score": 0.3600507437092285, "userVote": null, "regex": "<img.*?src=\"([^\"]*)\"[^>]*>(?:</img>)?", "permalinkFragment": "zC3cG9", "isFavorite": false, "isStarred": false}, {"title": "UK Postcode Checker", "description": "This is an improvement of the very good tH9mQ1/1.\nIt did not pickup on the first two postcodes found here: //http://en.wikipedia.org/wiki/Postcodes_in_the_United_Kingdom", "dateCreated": "2014-11-06T11:41:27.000Z", "dateModified": "2014-11-06T11:41:27.000Z", "author": "Flexander", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 10, "downvotes": 7, "score": 0.3600507437092285, "userVote": null, "regex": "^([a-zA-Z]{1,2}\\d{1,2}[a-zA-Z]{0,2})\\s*?(\\d[a-zA-Z]{2})$", "permalinkFragment": "cU7sU7", "isFavorite": false, "isStarred": false}, {"title": "Get Nth value (3 times)", "description": "capture Nth character from string, 3 times", "dateCreated": "2013-10-04T03:08:12.000Z", "dateModified": "2013-10-04T03:08:12.000Z", "author": "K.", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 2, "score": 0.35892908999715684, "userVote": null, "regex": "^(?=.{2}(.))(?=.{5}(.))(?=.{7}(.))", "permalinkFragment": "uC6yO2", "isFavorite": false, "isStarred": false}, {"title": "split URL into location-resource-params", "description": "Extract resource location, name and query parameters from a URL", "dateCreated": "2014-05-22T17:10:25.000Z", "dateModified": "2014-05-22T17:10:25.000Z", "author": "cebence", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 5, "downvotes": 2, "score": 0.35892908999715684, "userVote": null, "regex": "(?'location'.+)(?:\\/(?'resource'[\\w\\-\\._]+\\.js))(?:\\?(?'params'.+))?", "permalinkFragment": "jE9wY5", "isFavorite": false, "isStarred": false}, {"title": "javascript template replacement", "description": "", "dateCreated": "2014-11-14T06:21:38.000Z", "dateModified": "2014-11-14T06:21:38.000Z", "author": "akamaozu", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 2, "score": 0.35892908999715684, "userVote": null, "regex": "{{color}}", "permalinkFragment": "hT7uN3", "isFavorite": false, "isStarred": false}, {"title": "Capture only top-level (root) domain in URL", "description": "", "dateCreated": "2015-05-01T10:03:53.000Z", "dateModified": "2015-05-01T10:03:53.000Z", "author": "guyfawkes", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 2, "score": 0.35892908999715684, "userVote": null, "regex": "^(?:(?:http[s]?|ftp):\\/)?\\/?(?:[^:\\/\\s]+?\\.)*([^:\\/\\s]+\\.[^:\\/\\s]+)", "permalinkFragment": "qI8nA7", "isFavorite": false, "isStarred": false}, {"title": "@media query tokenizer", "description": "Separates media query into rule and content", "dateCreated": "2015-05-05T10:16:11.000Z", "dateModified": "2015-05-05T10:16:11.000Z", "author": "Stephan --> CTS_AE", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 2, "score": 0.35892908999715684, "userVote": null, "regex": "@media([^{]+)\\{([\\s\\S]+?})\\s*}", "permalinkFragment": "tE4sT3", "isFavorite": false, "isStarred": false}, {"title": "IPv4 validation", "description": "validate an IP v4", "dateCreated": "2016-04-19T00:12:31.000Z", "dateModified": "2016-04-19T00:12:31.000Z", "author": "harimambura", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 2, "score": 0.35892908999715684, "userVote": null, "regex": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", "permalinkFragment": "nU1xO0", "isFavorite": false, "isStarred": false}, {"title": "email", "description": "", "dateCreated": "2016-05-11T21:08:43.000Z", "dateModified": "2016-05-11T21:08:43.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 5, "downvotes": 2, "score": 0.35892908999715684, "userVote": null, "regex": "^[a-z0-9#!$%&'*+-/=?^_`{}|~]+[\\.a-z0-9!#$%&'*+/=?^_`{|}~-]*[^.]@[a-z0-9]+[a-z0-9\\.]*\\.[a-z]{2,24}$", "permalinkFragment": "vF1vD1", "isFavorite": false, "isStarred": false}, {"title": "mm/dd/yyyy Date", "description": "", "dateCreated": "2014-01-16T20:26:13.000Z", "dateModified": "2014-01-16T20:26:13.000Z", "author": "jay johnson", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 8, "downvotes": 5, "score": 0.35522480941814866, "userVote": null, "regex": "^\\d{2}\\/\\d{2}\\/\\d{4}$", "permalinkFragment": "wD5vU9", "isFavorite": false, "isStarred": false}, {"title": "date time ", "description": "1/Jul/2013 03:27:12", "dateCreated": "2014-01-29T03:45:37.000Z", "dateModified": "2014-01-29T03:45:37.000Z", "author": "himel", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 8, "downvotes": 5, "score": 0.35522480941814866, "userVote": null, "regex": "(0?[1-9]|1[0-2])\\/(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\/(1|2)[0-9]{3}\\s((0|1)[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])", "permalinkFragment": "tR6nT3", "isFavorite": false, "isStarred": false}, {"title": "everything that doesn't match .gitignore at the end", "description": "must match:\nselection/nl/example.xml\nselection/example.xml\nselection/blabla.txt\nselection/es/\n\nmust NOT match:\n(anything that ends with .gitignore, in any subfolder)", "dateCreated": "2014-10-17T12:16:55.000Z", "dateModified": "2014-10-17T12:16:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 8, "downvotes": 5, "score": 0.35522480941814866, "userVote": null, "regex": "!(\\.gitignore)$", "permalinkFragment": "kR0qW4", "isFavorite": false, "isStarred": false}, {"title": "Italian VAT (IVA)", "description": "Italian VAT", "dateCreated": "2015-07-03T13:38:06.000Z", "dateModified": "2015-07-03T13:38:06.000Z", "author": "Italo", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 8, "downvotes": 5, "score": 0.35522480941814866, "userVote": null, "regex": "^[0-9]{11}$", "permalinkFragment": "xQ6xR7", "isFavorite": false, "isStarred": false}, {"title": "Social Security Number (SSN)", "description": "tests for valid social security numbers according to the social security administration. more specifically:\n-disallows a group to have all 0s\n-disallows first group to have all 6s\n-disallows a ssn to begin with 9\n\nnote that this does not test for issued ssn's. that would be impossible to implement here, because the high group document is continuously updated on a monthly basis.", "dateCreated": "2015-07-08T20:29:58.000Z", "dateModified": "2015-07-08T20:29:58.000Z", "author": "noxToken", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 8, "downvotes": 5, "score": 0.35522480941814866, "userVote": null, "regex": "^((?!666|000)[0-8][0-9\\_]{2}\\-(?!00)[0-9\\_]{2}\\-(?!0000)[0-9\\_]{4})*$", "permalinkFragment": "oN2wB6", "isFavorite": false, "isStarred": false}, {"title": "time format HH:mm", "description": "validates strings in time format HH:mm with hour in 24h format. only accepts up to 23:59", "dateCreated": "2015-10-28T13:13:34.000Z", "dateModified": "2023-07-20T21:38:32.000Z", "author": "Kelps Leite de Sousa", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 2, "upvotes": 8, "downvotes": 5, "score": 0.35522480941814866, "userVote": null, "regex": "(0?[0-9]|1[0-9]|2[0-3]):[0-9]+:(0?[0-9]|[1-5][0-9])", "permalinkFragment": "jG7fB6", "isFavorite": false, "isStarred": false}, {"title": "po box", "description": "", "dateCreated": "2014-04-28T04:13:24.000Z", "dateModified": "2014-04-28T04:13:24.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 6, "downvotes": 3, "score": 0.35419734698644245, "userVote": null, "regex": "(p\\.?\\s?[o|0]\\.?\\s?b\\.?([o|0]x)?|post\\soffice\\sbox)", "permalinkFragment": "qK2zH3", "isFavorite": false, "isStarred": false}, {"title": "Fetch data between curly braces with plain text", "description": "This regex fetch only the data between content in curly braces (first occurrence, use preg_match_all in php, for all occurrences). This is useful for bad JSON files with wrong format or text between.", "dateCreated": "2014-10-10T13:35:18.000Z", "dateModified": "2014-10-10T13:35:18.000Z", "author": "shakaran87", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 3, "score": 0.35419734698644245, "userVote": null, "regex": "(?=\\{((?:[^{}]++|\\{(?1)\\})++)\\})", "permalinkFragment": "wX1dQ7", "isFavorite": false, "isStarred": false}, {"title": "Simple math regex", "description": "", "dateCreated": "2015-01-18T19:47:52.000Z", "dateModified": "2015-01-18T19:47:52.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 6, "downvotes": 3, "score": 0.35419734698644245, "userVote": null, "regex": "([0-9]+)(\\+|\\*|\\-|\\/)([0-9]+)", "permalinkFragment": "lH5hR5", "isFavorite": false, "isStarred": false}, {"title": "^.*(\\/Summary\\/).*(chelaxe\\.ru).*$", "description": "", "dateCreated": "2015-03-18T17:23:10.000Z", "dateModified": "2015-03-18T17:23:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 3, "score": 0.35419734698644245, "userVote": null, "regex": "^.*(\\/Summary\\/).*(chelaxe\\.ru).*$", "permalinkFragment": "eJ4nI1", "isFavorite": false, "isStarred": false}, {"title": "US Zip Code", "description": "This pattern matches the US Postal Code format and captures the seperate parts; basic and +4.", "dateCreated": "2015-07-20T21:33:51.000Z", "dateModified": "2015-07-20T21:33:51.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 3, "score": 0.35419734698644245, "userVote": null, "regex": "^(\\d{5})(?:-?(\\d{4}))?$", "permalinkFragment": "oG0yM9", "isFavorite": false, "isStarred": false}, {"title": "Invalid Unicode characters in XML", "description": "This pattern matches all the Unicode characters that are not allowed in an XML document. It's based on the Wikipedia article \"Valid characters in XML\".", "dateCreated": "2015-08-12T23:19:09.000Z", "dateModified": "2015-08-12T23:19:09.000Z", "author": "Aaron Wells", "flavor": "pcre", "delimiter": "/", "flags": "u", "version": 1, "upvotes": 6, "downvotes": 3, "score": 0.35419734698644245, "userVote": null, "regex": "[^\\x{0009}\\x{000A}\\x{000D}\\x{0020}-\\x{007E}\\x{0085}\\x{00A0}-\\x{D7FF}\\x{E000}-\\x{FDCF}\\x{FDE0}-\\x{FFFD}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E0000}-\\x{EFFFD}\\x{F0000}-\\x{FFFFD}\\x{100000}-\\x{10FFFD}]", "permalinkFragment": "uX5sG0", "isFavorite": false, "isStarred": false}, {"title": "php input:date yyyy-mm-dd", "description": "improved \"Ahmed Z\" regexp. PHP date format (and input[type=text] format date too): YYYY-MM-DD. Year between [1900-2099]. No leap year check. Month 02 is limited to 29 days. ", "dateCreated": "2014-10-06T11:58:36.000Z", "dateModified": "2014-10-06T11:58:36.000Z", "author": "Oropesa", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 4, "score": 0.35379677693977796, "userVote": null, "regex": "^((19\\d{2})|(20\\d{2}))-(((02)-(0[1-9]|[1-2][0-9]))|(((0(1|[3-9]))|(1[0-2]))-(0[1-9]|[1-2][0-9]|30))|((01|03|05|07|08|10|12)-(31)))$", "permalinkFragment": "yR3rA3", "isFavorite": false, "isStarred": false}, {"title": "youtube id match", "description": "youtube id 17 matches", "dateCreated": "2014-11-21T17:18:16.000Z", "dateModified": "2014-11-21T17:18:16.000Z", "author": "Wiliam Castilhos, Ramon Barros", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 7, "downvotes": 4, "score": 0.35379677693977796, "userVote": null, "regex": "^.*(youtu.be\\/|v\\/|u\\/\\w+\\/|embed|e\\/|watch\\?v|\\?v=|\\&v=)([^#\\&\\?]{11,11}).*", "permalinkFragment": "kW4bU8", "isFavorite": false, "isStarred": false}, {"title": "ISO 8601 date", "description": "Validates a date with ISO 8601 format.\n\nSource: http://www.pelagodesign.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/", "dateCreated": "2014-11-26T23:50:31.000Z", "dateModified": "2014-11-26T23:50:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mgi", "version": 1, "upvotes": 7, "downvotes": 4, "score": 0.35379677693977796, "userVote": null, "regex": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$", "permalinkFragment": "eX3cI8", "isFavorite": false, "isStarred": false}, {"title": "Twitch URL Regex", "description": "Can grab all kinds of valid twitch URLs.", "dateCreated": "2015-03-15T12:53:10.000Z", "dateModified": "2015-03-15T12:53:10.000Z", "author": "Mio", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 7, "downvotes": 4, "score": 0.35379677693977796, "userVote": null, "regex": "(^http(s)?://)?((www|en-es|en-gb|secure|beta|ro|www-origin|en-ca|fr-ca|lt|zh-tw|he|id|ca|mk|lv|ma|tl|hi|ar|bg|vi|th)\\.)?twitch.tv/(?!directory|p|user/legal|admin|login|signup|jobs)(?P<channel>\\w+)", "permalinkFragment": "xC0fY4", "isFavorite": false, "isStarred": false}, {"title": "white space before punctuations, outside script and code tags", "description": "white space before punctuations, outside script and code tags", "dateCreated": "2015-05-06T12:02:35.000Z", "dateModified": "2015-05-06T12:02:35.000Z", "author": "ced", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 7, "downvotes": 4, "score": 0.35379677693977796, "userVote": null, "regex": "(?!<(script|code)[^>]*?>)((\\s)(\\?|\\!|\\;|\\:))(?![^<]*?<\\/(script|code)>)", "permalinkFragment": "fF9oK2", "isFavorite": false, "isStarred": false}, {"title": "email", "description": "", "dateCreated": "2015-07-21T11:04:28.000Z", "dateModified": "2015-07-21T11:04:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 4, "score": 0.35379677693977796, "userVote": null, "regex": "^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)i", "permalinkFragment": "jC7rU1", "isFavorite": false, "isStarred": false}, {"title": "Perl", "description": "", "dateCreated": "2015-08-27T18:20:37.000Z", "dateModified": "2015-08-27T18:20:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 4, "score": 0.35379677693977796, "userVote": null, "regex": "\\D+", "permalinkFragment": "eM3wB8", "isFavorite": false, "isStarred": false}, {"title": "Name", "description": "Simple name matching\nMatches english names only, you may add international characters to list of characters.", "dateCreated": "2015-06-04T14:55:01.000Z", "dateModified": "2015-06-04T14:55:01.000Z", "author": "Ehsan", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 19, "downvotes": 19, "score": 0.34849675521273893, "userVote": null, "regex": "^([A-Z][A-Za-z ,.'`-]{3,30})$", "permalinkFragment": "jT4mY0", "isFavorite": false, "isStarred": false}, {"title": "MIME type verification", "description": "See http://tools.ietf.org/html/rfc2045#section-5.1", "dateCreated": "2013-03-15T01:41:14.000Z", "dateModified": "2013-03-15T01:41:14.000Z", "author": "Erin Millard", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[\\w-]+\\/[\\w-]+(?:;\\s*[\\w-]+=[\\w-]+)*$", "permalinkFragment": "pG2cK7", "isFavorite": false, "isStarred": false}, {"title": "hghdgh", "description": "", "dateCreated": "2013-10-03T10:00:08.000Z", "dateModified": "2013-10-03T10:00:08.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?=.*\\d)(?=.*[^\\w\\s]).{8,}$", "permalinkFragment": "fZ2mQ3", "isFavorite": false, "isStarred": false}, {"title": "Split Date", "description": "", "dateCreated": "2013-11-27T11:37:26.000Z", "dateModified": "2013-11-27T11:37:26.000Z", "author": "Arun Kumar Sekar", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?<day>[\\d]*)(?:-|\\/)(?<month>[\\d]*)(?:-|\\/)(?<year>[\\d]*)$", "permalinkFragment": "zS2jM4", "isFavorite": false, "isStarred": false}, {"title": "code bracket parser", "description": "", "dateCreated": "2014-01-25T16:56:28.000Z", "dateModified": "2014-01-25T16:56:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[code][^\\[]*\\[\\/code]", "permalinkFragment": "nK8tF7", "isFavorite": false, "isStarred": false}, {"title": "the the", "description": "", "dateCreated": "2014-01-29T02:27:10.000Z", "dateModified": "2014-01-29T02:27:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "the( the)?", "permalinkFragment": "tT3hC8", "isFavorite": false, "isStarred": false}, {"title": "Find 'console.' but not 'console.log'", "description": "", "dateCreated": "2014-03-06T18:26:07.000Z", "dateModified": "2014-03-06T18:26:07.000Z", "author": "Jay Johnson", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?:console\\.(?!log))", "permalinkFragment": "jP7yN4", "isFavorite": false, "isStarred": false}, {"title": "Punto antes de \u00c2\u00bf o \u00c2\u00a1", "description": "Corregir la falta de punto cuando se abre un signo de exclamaci\u00c3\u00b3n o interrogaci\u00c3\u00b3n para el idioma espa\u00c3\u00b1ol.", "dateCreated": "2014-05-15T21:29:04.000Z", "dateModified": "2014-05-15T21:29:04.000Z", "author": "paconaranjo", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([\\w\u00c3\u00a1-\u00c3\u00ba])\\s(?=(\u00c2\u00bf|\u00c2\u00a1)[A-Z\u00c3\u0081-\u00c3\u0161])", "permalinkFragment": "fA7bX2", "isFavorite": false, "isStarred": false}, {"title": "PHP file path with wrappers", "description": "Breaks file path up into wrappers, root, and path components. Understands both Windows (DOS) and Unix style paths. Wrappers and path components can be farther processed in code. Path component should support any visible Unicode character but not things like VT, HT or any other non-printing character. Most of the non-printable characters would also be allowed by file systems but are near impossible to enter.", "dateCreated": "2014-05-20T13:07:53.000Z", "dateModified": "2014-05-20T13:07:53.000Z", "author": "Dragonaire", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?<wrappers>(?:[[:alpha:]][[:alnum:]]+://)*)(?<root>(?:[[:alpha:]]:/|/)?)(?<path>(?:[[:print:]]*))$", "permalinkFragment": "jC3gS9", "isFavorite": false, "isStarred": false}, {"title": "Search abbreviations", "description": "This reges searches all abbreviations of command \"var|iable\" in multiline script", "dateCreated": "2014-05-22T10:13:31.000Z", "dateModified": "2014-05-22T10:13:31.000Z", "author": "ibes", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\bvari?((?<=i)a)?((?<=a)b)?((?<=b)l)?((?<=l)e)?\\b", "permalinkFragment": "gN2uW0", "isFavorite": false, "isStarred": false}, {"title": "Minecraft Entity Target Splitter", "description": "Regex to match part of minecraft command entity targets", "dateCreated": "2014-06-23T23:23:30.000Z", "dateModified": "2014-06-23T23:23:30.000Z", "author": "aziis98", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<name>\\w+)=(?<value>.+?)(?=[,\\]])(?#The following text makes sure that the match isn't inside quotes, #found_on_internet )(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$)", "permalinkFragment": "iA4dF7", "isFavorite": false, "isStarred": false}, {"title": "xbmc - videodevil - chaturbate - test", "description": "", "dateCreated": "2014-06-28T16:05:28.000Z", "dateModified": "2014-06-28T16:05:28.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<a href=\"([^\"]+)\" >(?:\\s+)<img src=\"([^\"]+)\\\"(?:\\s.*).+?(?:\\s.*)alt=\"([^\"]+)\" ", "permalinkFragment": "mT8jG0", "isFavorite": false, "isStarred": false}, {"title": "Parse keywords from search string", "description": "", "dateCreated": "2014-09-05T13:22:31.000Z", "dateModified": "2014-09-05T13:22:31.000Z", "author": "@bananascript", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([+-]?)(?:\"([^\"]*)\"|'([^']*)'|([^\\s+]+))", "permalinkFragment": "zJ1cD1", "isFavorite": false, "isStarred": false}, {"title": "parse images", "description": "", "dateCreated": "2014-09-15T17:11:46.000Z", "dateModified": "2014-09-15T17:11:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<img[^>]*?itemprop=\"logo\"[^>]*?src=\"([^>\"]*)\"[^>]*>", "permalinkFragment": "pL6jA2", "isFavorite": false, "isStarred": false}, {"title": "DNS SOA", "description": "oneliner SOA record matching regexp.\nlike \"ns1.domain.com.ge. mail.ns1.domain.com.ge. (2014061613 3600 600 604800 1800 )\" \nwithout @ IN SOA in begging, usefull when implementing something like DNS GUI.", "dateCreated": "2014-09-18T16:54:44.000Z", "dateModified": "2014-09-18T16:54:44.000Z", "author": "Nick Chkhikvishvili", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(([a-z0-9]+|([a-z0-9]+[-]+[a-z0-9]+))[.])+[ \\t]*(([a-z0-9]+|([a-z0-9]+[-]+[a-z0-9]+))[.])+[ \\t]*+\\(+\\d{10,10}+[ \\t]*+\\d{3,10}+[ \\t]*+\\d{3,10}+[ \\t]*+\\d{3,10}+[ \\t]*+\\d{3,10}+[ \\t]*\\)", "permalinkFragment": "zD4tA9", "isFavorite": false, "isStarred": false}, {"title": "Li match", "description": "", "dateCreated": "2014-09-22T14:39:23.000Z", "dateModified": "2014-09-22T14:39:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((?:<li\\b[^>]*>.*?<\\/li>))", "permalinkFragment": "hA9aU4", "isFavorite": false, "isStarred": false}, {"title": "Replace text domain in WP i18n", "description": "This will find all instances where the WP i18n function `__()` is used, and change the text domain to something else.\nThis will recognize instances of the function use as separate, even if they appear in the same function", "dateCreated": "2014-09-22T21:03:57.000Z", "dateModified": "2014-09-22T21:03:57.000Z", "author": "Xedin Unknown", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "__\\(\\s?((['\"])(((?!(?<!\\\\)\\2).)*)\\2), 'wprss'\\s?\\)", "permalinkFragment": "xX7vH7", "isFavorite": false, "isStarred": false}, {"title": "SO \u00e2\u20ac\u015300000000000000000000000000000\u00e2\u20ac\u009d is match to Regex \u00e2\u20ac\u0153^[1-9]|0$\u00e2\u20ac\u009d in .N", "description": "Test regex for question.", "dateCreated": "2014-09-24T07:59:31.000Z", "dateModified": "2014-09-24T07:59:31.000Z", "author": "pwas", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[1-9]|0$", "permalinkFragment": "xJ6wN1", "isFavorite": false, "isStarred": false}, {"title": "log trillian", "description": "", "dateCreated": "2014-10-06T10:46:55.000Z", "dateModified": "2014-10-06T10:46:55.000Z", "author": "NTP-[SADAS]", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[(?P<timelog>\\d*:\\d*)]\\W*\"(?P<name>.*) \\(-*(?P<ID>\\d+)\\W.*(?P<longtime>\\w{3}.\\w{3}.[0-9 :]*)\\.", "permalinkFragment": "eU5hN1", "isFavorite": false, "isStarred": false}, {"title": "PAN verification regex ", "description": "Regex to verify PAN in India", "dateCreated": "2014-10-06T11:04:30.000Z", "dateModified": "2014-10-06T11:04:30.000Z", "author": "Anirban", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([a-zA-Z]){3}([Pp]){1}([a-zA-Z]){1}([0-9]){4}([a-zA-Z]){1}?$", "permalinkFragment": "iT9vA1", "isFavorite": false, "isStarred": false}, {"title": "donotbackup", "description": "finding directories w/ donotbackup", "dateCreated": "2014-11-06T21:21:02.000Z", "dateModified": "2014-11-06T21:21:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": ".*donotbackup.*", "permalinkFragment": "yH4gM5", "isFavorite": false, "isStarred": false}, {"title": "Regular Expression For Date", "description": "Regular expression for asp:RegularExpressionValidator with format MMddyy.\ni have Resolved leap year issue as well as month ending day issue with Regular expression\n\n", "dateCreated": "2014-11-07T06:50:13.000Z", "dateModified": "2014-11-07T06:50:13.000Z", "author": "Priyanka Khadilkar", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:^(?:(?:(?:(?:(?:0?[13578]|1[02])[- /.]31)|(?:(?:0?[13-9]|1[0-2])[- /.](?:29|30)))[- /.](?:1[6-9]|[2-9]\\d)\\d{2})|(?:0?2[- /.]29[- /.](?:(?:(?:1[6-9]|[2-9]\\d)(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))|(?:(?:0?[1-9])|(?:1[0-2]))[- /.](?:0?[1-9]|1\\d|2[0-8])[- /.](?:(?:1[6-9]|[2-9]\\d)\\d{2}))$)$", "permalinkFragment": "tQ2wX8", "isFavorite": false, "isStarred": false}, {"title": "Finding a string along with a few other words", "description": "", "dateCreated": "2014-11-13T19:31:40.000Z", "dateModified": "2014-11-13T19:31:40.000Z", "author": "A.K. Asik", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "from:\\s*([0-9\\-\\s:]+),\\s*to:([0-9\\-\\s:]+),\\s*downtime:\\s*([0-9\\shms]+)", "permalinkFragment": "dC0vP0", "isFavorite": false, "isStarred": false}, {"title": "Extract Fields from Mailexpire", "description": "Given the HTML of an alias's control panel, apply the XPath \"//span[@class='maintext']\". The second result returned can be parsed by this regex to yield the most pertinent field names and their values.", "dateCreated": "2014-12-20T00:16:01.000Z", "dateModified": "2014-12-20T00:16:01.000Z", "author": "Crumeniferus", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(Alias):\\W+([[:print:]]+).+(Email address):\\W+([[:print:]]+).+(Starts):\\W+([[:print:]]+).+(Expires):\\W+([[:print:]]+).+(Reminder):\\W+([[:print:]]+).+", "permalinkFragment": "jM6pH6", "isFavorite": false, "isStarred": false}, {"title": "Route Regex", "description": "", "dateCreated": "2014-12-25T19:37:56.000Z", "dateModified": "2014-12-25T19:37:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^.*?[=]([a-zA-Z0-9]*)", "permalinkFragment": "mW8aI1", "isFavorite": false, "isStarred": false}, {"title": "Array formatting (serialized)", "description": "Check for correctly formatted array of this type:\narray(\n\tarray('name'=>'War and Peace', 'year'=>1865),\n\tarray('name'=>'Different Seasons', 'year'=>1982),\n)", "dateCreated": "2015-01-13T15:58:08.000Z", "dateModified": "2015-01-13T15:58:08.000Z", "author": "oneperfectsunrise", "flavor": "pcre", "delimiter": "/", "flags": "xi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^a:\\d+:{(i:\\d+;a:\\d+:{s:\\d+:\\\"name\\\";s:\\d+:\\\"[\\w+\\s+]+\\\";s:\\d+:\\\"year\\\";i:\\d{4};})+}$", "permalinkFragment": "pJ8jD3", "isFavorite": false, "isStarred": false}, {"title": "paren strip test", "description": "paren strip test", "dateCreated": "2015-02-11T01:20:04.000Z", "dateModified": "2015-02-11T01:20:04.000Z", "author": "marie bacuno", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\((?=([^\\(\\)\\[\\]]*(\\b)(ARR|ARRANGEMENT|ARRANGEMENTS|ARRANGED|CHOPPED|DUB|EDIT|FT|FEAT|FEATURING|INSTRUMENTAL|MASH UP|MASHUP|MASH-UP|MIX|REMIX|REPRISE|SCREWED|TITLE|VERSION)(\\b)[^\\(\\)\\[\\]]*)).*?\\)", "permalinkFragment": "dN9nR1", "isFavorite": false, "isStarred": false}, {"title": "YouTube Embed Video & Playlist from URL", "description": "It gets the playlistID and the videoID to conform the embed URL from the video URL", "dateCreated": "2015-03-11T17:45:52.000Z", "dateModified": "2015-03-11T17:45:52.000Z", "author": "@rubenlopezgea", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(https?:\\/\\/)?(www.)?(youtube\\.com|youtu\\.be|youtube-nocookie\\.com)\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?list=(.*)&v=)?((\\w|-){11})(&list=(\\w+)&?)?", "permalinkFragment": "qE6dO9", "isFavorite": false, "isStarred": false}, {"title": "Dice Regex with Modifier", "description": "", "dateCreated": "2015-04-07T02:02:31.000Z", "dateModified": "2015-04-07T02:02:31.000Z", "author": "derek robati", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "roll (\\d+)d(\\d+)([\\+-]\\d+)?$", "permalinkFragment": "oL8bE6", "isFavorite": false, "isStarred": false}, {"title": "selectin multiple image pattern", "description": "", "dateCreated": "2015-04-14T15:08:50.000Z", "dateModified": "2015-04-14T15:08:50.000Z", "author": "cool_jesus", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\d{1,2}\\/optimized\\/.+\\.tif", "permalinkFragment": "oK0rG0", "isFavorite": false, "isStarred": false}, {"title": "PL Phone number", "description": "PL Phone number", "dateCreated": "2015-04-23T13:50:33.000Z", "dateModified": "2015-04-23T13:50:33.000Z", "author": "Dawid", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\\s*((\\+48)?|(\\(\\+48\\))?)[-. ]?[5678]?(\\d{2})[-. ]?(\\d{3})[-. ]?(\\d{3})[-. ]?\\s*$", "permalinkFragment": "xG1xB3", "isFavorite": false, "isStarred": false}, {"title": "filter noreply-ish e-mail addresses", "description": "no reply e-mail addresses don't want to receive a reply. Unfortunately, not all no reply e-mail addresses are formatted like noreply@domain.tld, so in order to catch as many of them as possible I made this regular expression which matches many forms of no reply e-mail addresses.", "dateCreated": "2015-04-25T09:52:28.000Z", "dateModified": "2015-04-25T09:52:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": ".*n.?t?.*reply.*@(.+\\.)+.+", "permalinkFragment": "jH6sZ8", "isFavorite": false, "isStarred": false}, {"title": "Match domain part in Http(s)  URLs", "description": "", "dateCreated": "2015-05-01T04:06:26.000Z", "dateModified": "2015-05-01T04:06:26.000Z", "author": "Nilratan", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^http[s]{0,1}:\\/\\/(.*?)(?:[\\/?&#]|$)", "permalinkFragment": "dI3qA2", "isFavorite": false, "isStarred": false}, {"title": "Dim name", "description": "Gets all variable names", "dateCreated": "2015-05-06T12:51:37.000Z", "dateModified": "2015-05-06T12:51:37.000Z", "author": "Tyrone Moodley", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "Dim (...+).*", "permalinkFragment": "kM9yK9", "isFavorite": false, "isStarred": false}, {"title": "File filtering by extension", "description": "You would like to scan a folder containing many files (Example : *.pb, *.pbi, *.pbp and *.pbf) and you are interested only by two type of files (example : *.pb and *.pbi). This expression will match only if extension match (in this case *.pb and *.pbi) otherwise no reaction. Feel free to change file extensions has need.", "dateCreated": "2015-05-11T04:37:42.000Z", "dateModified": "2015-05-11T04:37:42.000Z", "author": "StarBootics", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([a-z A-Z 0-9 \u00c0-\u00ff]*).(?i)(\\bpb\\b|\\bpbi\\b)", "permalinkFragment": "qI4tJ6", "isFavorite": false, "isStarred": false}, {"title": "Extract info from anime filename", "description": "", "dateCreated": "2015-05-26T20:40:52.000Z", "dateModified": "2015-05-26T20:40:52.000Z", "author": "Haellsigh", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[(.+)?\\] (.+?) (S\\d* )?- (\\d+) \\[(.+)\\]", "permalinkFragment": "aL9mC8", "isFavorite": false, "isStarred": false}, {"title": "Gentoo atom parsing", "description": "", "dateCreated": "2015-05-28T17:28:27.000Z", "dateModified": "2015-05-28T17:28:27.000Z", "author": "selurvedu", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?'prefix'(?:[<>]=?|=)|~|!!?|\\+)?(?'base'(?'category'[A-Za-z\\d\\-]+)\\/(?'packagename'[A-Za-z][\\w\\-\\+]*?))(?:-(?'version'\\d[\\w\\.]*\\*?)(?:-r(?'revision'[\\d\\.]+))?)?(?:\\:(?'slot'[\\d\\.]*\\=?|\\*)(?:\\/(?'subslot'[\\d\\.]+\\=?))?)?(?: +(?'useflags'[\\w\\s\\-]+))? *$", "permalinkFragment": "gE7dQ6", "isFavorite": false, "isStarred": false}, {"title": "suricata OSSIM regex-1", "description": "", "dateCreated": "2015-06-03T19:38:57.000Z", "dateModified": "2015-06-03T19:38:57.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?P<date>\\S+\\s+\\d\\s\\d\\d:\\d\\d:\\d\\d) (?P<hostname>\\S+) suricata\\[(?P<pid>\\d+)\\]: \\[(?P<sid>\\d+:\\d+:\\d+)\\] (?P<msg>.+) \\[Classification:(?P<classification>.+)\\] \\[Priority:(?P<priority> \\d+)\\] \\{(?P<proto>.+)\\} (?P<src_ip>[\\d.]{7,15}):(?P<src_port>\\d+) -> (?P<dst_ip>[\\d.]{7,15}):(?P<dst_port>\\d+)$", "permalinkFragment": "jO9lJ5", "isFavorite": false, "isStarred": false}, {"title": "Find scripts or css URIs", "description": "Given script or link tags, find and extracts URIs, excluding the double quotes", "dateCreated": "2015-06-08T21:20:49.000Z", "dateModified": "2015-06-08T21:20:49.000Z", "author": "Rodrigo Kaveski", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\"(.+)(?:\"\\s|\">)", "permalinkFragment": "gX9rJ6", "isFavorite": false, "isStarred": false}, {"title": "Filtrar inicio string", "description": "Filtrar inicio da string por BRN ou 201", "dateCreated": "2015-06-09T14:24:29.000Z", "dateModified": "2015-06-09T14:24:29.000Z", "author": "Leandro", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(^BRN|^201)", "permalinkFragment": "mO7gD4", "isFavorite": false, "isStarred": false}, {"title": "Check if the title ends in is alid or not in java using regex", "description": "testing patterns\nhttp://stackoverflow.com/questions/30751885/check-if-a-string-ends-in-is-valid-or-not-in-java-using-regex", "dateCreated": "2015-06-10T17:35:32.000Z", "dateModified": "2015-06-10T17:35:32.000Z", "author": "Sriharsha", "flavor": "pcre", "delimiter": "~", "flags": "igm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\s*)(\\d+)?(\\.\\d+)?(\\s*)(?i:years|year|yrs|y|months|month|m)?(\\s*)(/)?(\\s*)(\\d+)?(\\.\\d+)?(\\s*)(?i:years|year|yrs|y|months|month|m)?(\\s*)(-)?(\\s*)(\\d+)(\\.\\d+)?(\\s*)?(?i:years|year|yrs|y|months|month|m)", "permalinkFragment": "kL7rQ1", "isFavorite": false, "isStarred": false}, {"title": "Parse \"ipconfig /all\" output and grab all MAC Adresses", "description": "Parse \"ipconfig /all\" output and grab all MAc Adresses.", "dateCreated": "2015-06-14T11:20:55.000Z", "dateModified": "2015-06-14T11:20:55.000Z", "author": "j0inty", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([[:blank:]][[:xdigit:]]{2}-[[:xdigit:]]{2}-[[:xdigit:]]{2}-[[:xdigit:]]{2}-[[:xdigit:]]{2}-[[:xdigit:]]{2})$", "permalinkFragment": "vQ1cL8", "isFavorite": false, "isStarred": false}, {"title": "composer package", "description": "", "dateCreated": "2015-06-17T12:12:27.000Z", "dateModified": "2015-06-17T12:12:27.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\"([A-Z0-9-_]*\\/[A-Z0-9-_]*)\":\\s\"([\\,<>=-~*.@A-Z0-9]*)\"", "permalinkFragment": "iJ6sV6", "isFavorite": false, "isStarred": false}, {"title": "Country calling codes", "description": "Parses countries list from https://countrycode.org/", "dateCreated": "2015-06-23T09:28:33.000Z", "dateModified": "2015-06-23T09:28:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(.+?)\\t([-\\d, ]+)\\t(.+?) .+$", "permalinkFragment": "yQ4cP8", "isFavorite": false, "isStarred": false}, {"title": "UK TEL", "description": "UK Telephone Number REGEX no () and no spaces", "dateCreated": "2015-06-24T16:47:52.000Z", "dateModified": "2015-06-24T16:47:52.000Z", "author": "\\JOLLY", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^((^\\+44)|^(4{2})|(^0{2}4{2})|(^0)|)([123789])\\d{8,9}$", "permalinkFragment": "aM3xH9", "isFavorite": false, "isStarred": false}, {"title": "CSS Minimizer", "description": "Takes any valid CSS and minimizes it, removing comments and whitespace. Can be called with something like PHP's preg_replace() to dynamically minimize css files.", "dateCreated": "2015-06-24T17:28:29.000Z", "dateModified": "2015-06-24T17:28:29.000Z", "author": "skoskie", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\/\\*(.|\\s)*?\\*\\/|(\\n|\\t|\\r|\\v|\\f|\\a){1,}|\\s(?=\\s)|(?<=})\\s|(?<={)\\s|\\s(?={)|\\s(?=})|(?<=;)\\s|[[:blank:]](?=;)|(?<=:)[[:blank:]]|(?<=,)[[:blank:]])", "permalinkFragment": "nC7lJ7", "isFavorite": false, "isStarred": false}, {"title": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430", "description": "", "dateCreated": "2015-06-30T08:25:34.000Z", "dateModified": "2015-06-30T08:25:34.000Z", "author": "summer_rain", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(.*\\D)(\\d*)$", "permalinkFragment": "yU0rH0", "isFavorite": false, "isStarred": false}, {"title": "Match at least 2-letters (international)", "description": "RegExp to match that user has entered at least 2-letters (including international letters) in a field", "dateCreated": "2015-06-30T19:36:09.000Z", "dateModified": "2015-06-30T19:36:09.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([\\p{L}][^\\p{L}]*){2,}$", "permalinkFragment": "nX5wB2", "isFavorite": false, "isStarred": false}, {"title": "regex 1 or more json array", "description": "", "dateCreated": "2015-07-02T11:57:39.000Z", "dateModified": "2015-07-02T11:57:39.000Z", "author": "me", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?:^{\\s*|\\s*,\\s*)\"([^\\[\\]]+)\"\\s*:\\s*(\\[[^\\]]+\\])(?:\\s*}\\s*|\\s*)", "permalinkFragment": "fR2uR2", "isFavorite": false, "isStarred": false}, {"title": "Find any URL with no trailing slash", "description": "Not perfect, but better than none.", "dateCreated": "2015-07-07T16:34:40.000Z", "dateModified": "2015-07-07T16:34:40.000Z", "author": "oneglory", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(https?:\\/\\/)?(www.)?([\\da-zA-z\\_\\-]+)\\.(com|(|[\\da-zA-Z]{2,6}))([\\/\\w \\.\\-\\#\\&\\?\\%\\_]*)?([^\\/| |\\s])$", "permalinkFragment": "oG0rN9", "isFavorite": false, "isStarred": false}, {"title": "i18 language lines extraction", "description": "Extracts lines with i18 prefix from text", "dateCreated": "2015-07-22T07:13:56.000Z", "dateModified": "2015-07-22T07:13:56.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "i18\\s*\\(\\s*['\"](.+)['\"]\\,.*\\)", "permalinkFragment": "dN0tB8", "isFavorite": false, "isStarred": false}, {"title": "python:S117", "description": "Local variable and function parameter names should comply with a naming convention", "dateCreated": "2015-07-23T15:46:12.000Z", "dateModified": "2015-07-23T15:46:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[a-z_][_a-zA-Z0-9]{2,30}$", "permalinkFragment": "hK7mM4", "isFavorite": false, "isStarred": false}, {"title": "Simple @user replacement", "description": "", "dateCreated": "2015-07-24T14:37:27.000Z", "dateModified": "2015-07-24T14:37:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((?:(?<=\\s)|)@(\\w+))", "permalinkFragment": "pT5hX8", "isFavorite": false, "isStarred": false}, {"title": "credit card", "description": "Based on http://www.regular-expressions.info/creditcard.html\n\nThis example includes test strings.\n\nThis only validates the pattern, and not whether the credit card number passes a checksum validation. See the Luhn algorithm for details\nhttps://en.wikipedia.org/wiki/Luhn_algorithm\n\nFor an implementation in Lasso, see https://github.com/stevepiercy/sp_valid_creditcard", "dateCreated": "2015-07-25T03:39:35.000Z", "dateModified": "2015-07-25T03:39:35.000Z", "author": "Steve Piercy", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\\d{3})\\d{11})$", "permalinkFragment": "wE2lV9", "isFavorite": false, "isStarred": false}, {"title": "Function Parameter Switcher", "description": "Switches the order of two functions in a parameter.", "dateCreated": "2015-07-28T16:24:26.000Z", "dateModified": "2015-07-28T16:24:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "assertEquals\\(([^,]+),\\s(.+)\\);", "permalinkFragment": "iE5kV7", "isFavorite": false, "isStarred": false}, {"title": "youtube link + id + <a>", "description": "", "dateCreated": "2015-08-01T14:05:40.000Z", "dateModified": "2015-08-01T14:05:40.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<a href=\"http.?:.*(youtube.com|.*be\\/|.*embed\\/|watch?. v=|(\\w{11})).?<\\/a>", "permalinkFragment": "nP9oA3", "isFavorite": false, "isStarred": false}, {"title": "better orf finder", "description": "don't use my older one", "dateCreated": "2015-08-03T08:43:48.000Z", "dateModified": "2015-08-03T08:43:48.000Z", "author": "tnrich", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?=((A[TU]G)(?:.{3})*?(?:[TU]AG|[TU]AA|[TU]GA)))", "permalinkFragment": "jE6zD5", "isFavorite": false, "isStarred": false}, {"title": "JSON BizTalk schema output", "description": "To convert the BizTalk schema output to one string", "dateCreated": "2015-08-03T12:21:14.000Z", "dateModified": "2015-08-03T12:21:14.000Z", "author": "Emiel Kool", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\s(?=([^\"]*\"[^\"]*\")*[^\"]*$)", "permalinkFragment": "lM9yZ9", "isFavorite": false, "isStarred": false}, {"title": "Valmaks_rename_big_strings", "description": "", "dateCreated": "2015-08-06T16:09:36.000Z", "dateModified": "2015-08-06T16:09:36.000Z", "author": "witamin", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\w.*(_|-).*(\\d{2})|(\\d{3}))((_|-)(\\d{3})|(\\d{4})_)(.*)(\\..*)", "permalinkFragment": "bD5fR3", "isFavorite": false, "isStarred": false}, {"title": "Match 'words' with internal punctuation retained", "description": "Matches words without external punctuation but with internal punctuation. ", "dateCreated": "2015-08-07T05:52:54.000Z", "dateModified": "2015-08-07T05:52:54.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[\\w'-.]+\\w|[\\w'-]+\\s*", "permalinkFragment": "hN9jN9", "isFavorite": false, "isStarred": false}, {"title": "remove n lines after matching pattern", "description": "stackoverflow question", "dateCreated": "2015-08-12T20:23:17.000Z", "dateModified": "2015-08-12T20:23:17.000Z", "author": "irom77", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([\\s\\S]*?)\\n#Guest(?:\\n.*){3}", "permalinkFragment": "vU0tE2", "isFavorite": false, "isStarred": false}, {"title": "inline img", "description": "", "dateCreated": "2015-08-14T02:19:02.000Z", "dateModified": "2015-08-14T02:19:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "src=\"[^\"]*\\/kultpohod\\/userfiles\\/([^\"]*)\"[^>]*style=\"([^\"]*)", "permalinkFragment": "rK0jW3", "isFavorite": false, "isStarred": false}, {"title": "calibre book parse", "description": "", "dateCreated": "2015-08-20T06:33:02.000Z", "dateModified": "2015-08-20T06:33:02.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<![[:punct:]].|\\>|\\w)\\<\\/[p]\\>", "permalinkFragment": "sJ7aW8", "isFavorite": false, "isStarred": false}, {"title": "Match 3 Repeating Numbers", "description": "", "dateCreated": "2015-08-20T16:07:23.000Z", "dateModified": "2015-08-20T16:07:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\d)\\d*\\1\\d*\\1", "permalinkFragment": "lN2gY7", "isFavorite": false, "isStarred": false}, {"title": "WindowsUpdate.log Line Breaker", "description": "This regex defines the end and the beginning of a WindowsUpdate.log event.", "dateCreated": "2015-08-20T22:50:12.000Z", "dateModified": "2015-08-20T22:50:12.000Z", "author": "Dion Pezzimenti", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[]\\r\\n]+\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}\\:\\d{2}\\:\\d{2}\\.\\d{7}\\s\\d{4}", "permalinkFragment": "iA7gW9", "isFavorite": false, "isStarred": false}, {"title": "anyword plus word", "description": "", "dateCreated": "2015-08-21T20:36:08.000Z", "dateModified": "2015-08-21T20:36:08.000Z", "author": "7 HJ", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\b(?!any )(\\w+ Cafe)", "permalinkFragment": "dM2bZ8", "isFavorite": false, "isStarred": false}, {"title": "URI without Trailing Slash", "description": "", "dateCreated": "2015-08-26T12:50:52.000Z", "dateModified": "2015-08-26T12:50:52.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": ".*\\/[A-Za-z][A-Za-z]*\"", "permalinkFragment": "wC8fP8", "isFavorite": false, "isStarred": false}, {"title": "src of img tag", "description": "get contents of src attribute", "dateCreated": "2015-09-01T08:40:38.000Z", "dateModified": "2015-09-01T08:40:38.000Z", "author": "me", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<\\s*img\\s+src\\s*=\\s*\\\"(.*)\\\">", "permalinkFragment": "oE0vH0", "isFavorite": false, "isStarred": false}, {"title": "Beautiful Regex for detecting Slack URL's", "description": "just lovely", "dateCreated": "2015-09-03T10:21:55.000Z", "dateModified": "2015-09-03T10:21:55.000Z", "author": "the boiz aka ben and chris", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<(https?:\\/\\/[\\w]+(?:\\.[\\w]+)+(?:\\/[\\w-?=%&@$#_.+]+)*\\/?)(?:\\|((?:[^>])+))?>", "permalinkFragment": "qO4zS9", "isFavorite": false, "isStarred": false}, {"title": "Password Log", "description": "Matches a password that has been passed in as a url query parameter or in a post dictionary.", "dateCreated": "2015-09-03T20:15:28.000Z", "dateModified": "2015-09-03T20:15:28.000Z", "author": "Anthony Miller", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<=pwd(?:=|:))[^&,\\v]*", "permalinkFragment": "vN4mK5", "isFavorite": false, "isStarred": false}, {"title": "identity", "description": "", "dateCreated": "2015-09-04T17:51:16.000Z", "dateModified": "2015-09-04T17:51:16.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([\\d\\.]+%) identity", "permalinkFragment": "eL2uR9", "isFavorite": false, "isStarred": false}, {"title": "File name without extension from linux path", "description": "If given a linux file path match the filename without the extension. It extracts FileNameWithoutExtension into its own match group so that you can use it in things like Logstash Grok.", "dateCreated": "2015-09-11T01:54:31.000Z", "dateModified": "2015-09-11T01:54:31.000Z", "author": "Chris Magnuson, by combining other peoples starting points", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<FileNameWithoutExtension>\\w+)(\\.\\w+)?[^\\/]*$", "permalinkFragment": "jG2cM7", "isFavorite": false, "isStarred": false}, {"title": "update match", "description": "", "dateCreated": "2015-09-11T21:32:54.000Z", "dateModified": "2015-09-11T21:32:54.000Z", "author": "ozarzu", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?i)UPDATE[ \\t\\n]{1,}(fact)(.*)\\n(from)?([ \\t\\n]{1,})?(.*)?\\n*set[ \\n\\t]{1,}(coloana)[ \\t\\n]*=[ \\t\\n]*(ifnull\\(\\s*)*([\\w\\d]*)([\\ ,'\\w\\n\\t)(\\n=.]*);", "permalinkFragment": "lS8kY3", "isFavorite": false, "isStarred": false}, {"title": "English-Hungarian (non-/)obfuscated email adresses", "description": "Finds email addresses even when cleverly obfuscated in both english and hungarian", "dateCreated": "2015-09-16T20:41:57.000Z", "dateModified": "2015-09-16T20:41:57.000Z", "author": "WolfyD", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[\\w-\\.]{1,64}((\\[|\\()?@(\\]|\\))?|(\\[|\\()?at(\\]|\\))?|(\\[|\\()?kukac(\\]|\\))?)[\\w-]{1,64}((\\[|\\()?\\.(\\]|\\))?|(\\[|\\()?dot(\\]|\\))?|(\\[|\\()?pont(\\]|\\))?)[a-zA-Z]{2,3}", "permalinkFragment": "wO2hB7", "isFavorite": false, "isStarred": false}, {"title": "mask the credit card number", "description": "", "dateCreated": "2015-09-18T10:29:31.000Z", "dateModified": "2015-09-18T10:29:31.000Z", "author": "vj", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[0-9](?=.*.{4})", "permalinkFragment": "vK9zE5", "isFavorite": false, "isStarred": false}, {"title": "Messages.properties language file validator", "description": "", "dateCreated": "2015-09-18T11:27:11.000Z", "dateModified": "2015-09-18T11:27:11.000Z", "author": "spec4u.net", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(.*[a-zA-Z_0-9] = [a-zA-Z0-9 \u00f3\u0144\u0119\u0105\u0142\u015b\u0107\u017c\u017a\\-.,?'\":\\\\/<>_\\(\\)\\!=]+)|(#[a-zA-Z0-9 \u00d3\u0143\u0118\u0104\u0141\u015a\u0106\u017b\u0179\u00f3\u0144\u0119\u0105\u0142\u015b\u0107\u017c\u017a\\-.,?'\":\\\\/<>_\\(\\)\\!=]+)$", "permalinkFragment": "iA4xK4", "isFavorite": false, "isStarred": false}, {"title": "Telefoonnummer", "description": "", "dateCreated": "2015-09-24T09:42:55.000Z", "dateModified": "2015-09-24T09:42:55.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[0\\+][0-9 \\.\\-\\/]*$", "permalinkFragment": "qF4pC2", "isFavorite": false, "isStarred": false}, {"title": "Find PHP-like variables", "description": "Search a string for PHP-like variables starting with $, containing an unlimited number of non-whitespace characters and ending with a word boundary of any kind", "dateCreated": "2015-09-26T19:33:24.000Z", "dateModified": "2015-09-26T19:33:24.000Z", "author": "Pascal Vorwerk", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\$([\\S]+)\\b", "permalinkFragment": "rQ0pP5", "isFavorite": false, "isStarred": false}, {"title": "flex", "description": "", "dateCreated": "2015-10-01T03:53:30.000Z", "dateModified": "2015-10-01T03:53:30.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\"*\"[^/])|[^*]", "permalinkFragment": "wG3hF4", "isFavorite": false, "isStarred": false}, {"title": "Franklin Regex", "description": "Testing Franklin related regex matching cases.", "dateCreated": "2015-10-02T22:33:00.000Z", "dateModified": "2015-10-02T22:33:00.000Z", "author": "Arthur", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(Franklin,\\s|franklin,\\s)", "permalinkFragment": "bL5gB2", "isFavorite": false, "isStarred": false}, {"title": "Ultimate URL/IP validator", "description": "Validates most types of URL's and IP addresses.\nNOTICE!\nremove \"?\" after first non-capturing group to forse check protocol.", "dateCreated": "2015-10-05T09:26:51.000Z", "dateModified": "2015-10-05T09:26:51.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:(?:https?|ftp):\\/\\/)?(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$", "permalinkFragment": "kK0oM2", "isFavorite": false, "isStarred": false}, {"title": "capture balisephp", "description": "it's to use to get all <?php ?> tags.\nnot easy to implement because some link in php with ? or >  can make trouble to get the closure ?>", "dateCreated": "2015-10-12T12:47:03.000Z", "dateModified": "2015-10-12T12:47:03.000Z", "author": "simon", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<\\?php((?:(?:(?!php)[^?]>|(?!php)[^?]|...\\?[^?])*))\\?>", "permalinkFragment": "nJ0hP0", "isFavorite": false, "isStarred": false}, {"title": "Get consecutive capitalized words", "description": "\"Bank Negara Malaysia\", \"1Malaysia Development Bhd\"", "dateCreated": "2015-10-13T04:04:37.000Z", "dateModified": "2015-10-13T04:04:37.000Z", "author": "aizu", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([A-Z][a-z]+(?=\\s[A-Z])(?:\\s[A-Z][a-z]+)+)", "permalinkFragment": "pV8iS2", "isFavorite": false, "isStarred": false}, {"title": "US zip Code", "description": "US zip Code", "dateCreated": "2015-10-13T12:56:14.000Z", "dateModified": "2015-10-13T12:56:14.000Z", "author": "Aloke", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\d{5}(?:-?\\d{4})?", "permalinkFragment": "nZ7tC5", "isFavorite": false, "isStarred": false}, {"title": "Date Testing", "description": "Javascript date regex", "dateCreated": "2015-10-14T13:42:21.000Z", "dateModified": "2015-10-14T13:42:21.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([1-9]{1}|(0[0-9]|1[0-2]))\\/([1-9]{1}|0[1-9]|1\\d|2\\d|3[01])\\/\\d{4}$", "permalinkFragment": "sG8zC2", "isFavorite": false, "isStarred": false}, {"title": "5", "description": "", "dateCreated": "2015-10-17T05:46:40.000Z", "dateModified": "2015-10-17T05:46:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([0-2][0-9]|3[0-1])\\-(0[1-9]|1[0-2])\\-\\d{4}", "permalinkFragment": "sP2xB5", "isFavorite": false, "isStarred": false}, {"title": "Markup link", "description": "", "dateCreated": "2015-10-19T15:24:06.000Z", "dateModified": "2015-10-19T15:24:06.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[([^\\[]+)\\](\\(.*\\))", "permalinkFragment": "pF6dB2", "isFavorite": false, "isStarred": false}, {"title": "yowsup-cli message parsing", "description": "This pattern parses the yowsup-cli message output to recover (otherwise lost) messages.\n\nCurrent yowsup version: v2.4", "dateCreated": "2015-10-19T19:36:55.000Z", "dateModified": "2015-10-19T19:36:55.000Z", "author": "kerel", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[(?P<a>[0-9]*)\\/(?P<b>[0-9]*-[0-9]*)@g.us\\((?P<c>(?:[0-9]{2}\\-){2}2015) [0-9]{2}:[0-9]{2}\\)\\]:\\[(?P<d>[A-Z0-9a-z]{13}|.*)\\](?P<e>.*)\\nMessage (?P=d): Sent delivered receipt\\n\\[connected]:", "permalinkFragment": "sQ6uK6", "isFavorite": false, "isStarred": false}, {"title": "Any variable between @", "description": "", "dateCreated": "2015-10-26T13:40:50.000Z", "dateModified": "2015-10-26T13:40:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^@[a-zA-Z0-9._]*@$", "permalinkFragment": "cK3iV8", "isFavorite": false, "isStarred": false}, {"title": "Iranian National Code Pattern", "description": "Iranian National Code aka Code Melli", "dateCreated": "2015-10-28T16:56:10.000Z", "dateModified": "2015-10-28T16:56:10.000Z", "author": "Saeed Tabrizi", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[0-9]{10}$", "permalinkFragment": "cS1tN8", "isFavorite": false, "isStarred": false}, {"title": "find action,form,forward struts", "description": "find action,form,forward struts\nRemplace @ACTION@ = action struts\nRemplace @FORM@ = form name struts\nRemplace @FORWARD@ = forward name struts", "dateCreated": "2015-10-29T15:38:34.000Z", "dateModified": "2015-10-29T15:38:34.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(action\\s.{0,}path.{1,}\\/(@ACTION@)\")|(form-bean\\s.{0,}name=\"(@FORM@))\"|(forward\\s.{0,}name=\"(@FORWARD@)\")", "permalinkFragment": "zZ7iK5", "isFavorite": false, "isStarred": false}, {"title": "IRC protocol global parsing", "description": "1. prefix (IRC protocol prefix parsing)\n2. command\n3. parameters (IRC protocol arguments parsing)", "dateCreated": "2015-10-30T15:09:52.000Z", "dateModified": "2015-10-30T15:09:52.000Z", "author": "kerosene2000", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:(:[a-zA-Z0-9.-]+) )?([a-zA-Z]+|[0-9]+)((?: [a-zA-Z0-9]+)*(?: :.+)?)$", "permalinkFragment": "aB1aA2", "isFavorite": false, "isStarred": false}, {"title": "1", "description": "", "dateCreated": "2015-10-30T16:26:43.000Z", "dateModified": "2015-10-30T16:26:43.000Z", "author": "\u0432", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^abc$|i10n", "permalinkFragment": "wT1yW5", "isFavorite": false, "isStarred": false}, {"title": "Maritime Container Number Pattern", "description": "Pattern for container numbers.\nWithout the digit verification of course.", "dateCreated": "2015-10-31T14:29:37.000Z", "dateModified": "2015-10-31T14:29:37.000Z", "author": "Philippe Michiels", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([A-Z]{4})\\s*([0-9]{6})[\\s-\\/]?([0-9])", "permalinkFragment": "aW0lB2", "isFavorite": false, "isStarred": false}, {"title": "contents of square brackets ", "description": "eg.  test[test Inner] returns 'test inner'", "dateCreated": "2015-11-05T02:15:05.000Z", "dateModified": "2015-11-05T02:15:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[([^]]*)\\]", "permalinkFragment": "uV8vG5", "isFavorite": false, "isStarred": false}, {"title": "ISO 8601 Duration Validator", "description": "Validates format of ISO-8601 duration.", "dateCreated": "2015-11-05T07:41:15.000Z", "dateModified": "2015-11-05T07:41:15.000Z", "author": "ed0wolf", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^P(([0-9]+Y)?([0-9]+M)?([0-9]+W)?([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+(\\.?[0-9]+)?S)?))?$", "permalinkFragment": "bT0wL2", "isFavorite": false, "isStarred": false}, {"title": "Version parsing", "description": "Version parsing from following format:\n<major>.<minor>[.build][-postfix]\nGets 4 groups: major, minor, build and postfix (last two only of they present in input string)\n\nFor example:\n1.2.3456-SNAPSHOT gets major=1, minor=2, build=3456, postfix=\"SNAPSHOT\"\n", "dateCreated": "2015-11-08T17:33:13.000Z", "dateModified": "2015-11-08T17:33:13.000Z", "author": "Ivkond", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\d+)\\.(\\d+)(?:\\.(\\d+))?(?:\\-(\\w+))?", "permalinkFragment": "rV6gX1", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "test", "dateCreated": "2015-11-09T12:34:16.000Z", "dateModified": "2015-11-09T12:34:16.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(\\+|\\-)?(^:[0-9]{1,2}|[012][0-9]{2}|3[0-5][0-9])$", "permalinkFragment": "uC2nF6", "isFavorite": false, "isStarred": false}, {"title": "search script tags", "description": "found if is content src atributes", "dateCreated": "2015-11-10T07:37:50.000Z", "dateModified": "2015-11-10T07:37:50.000Z", "author": "Kun Csaba", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(<script[^>]*src=[\\'\\\"](.*?)[\\'\\\"].*?\\>(<\\/script>)?)", "permalinkFragment": "wK1gC7", "isFavorite": false, "isStarred": false}, {"title": "GHS - PF LIMIT EXTRACTOR", "description": "Extracts from a PF file the summary table from the RAH command", "dateCreated": "2015-11-11T13:47:19.000Z", "dateModified": "2015-11-11T13:47:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gims", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?:Attained \\n)(.*?)(?: ----)", "permalinkFragment": "gP2cH3", "isFavorite": false, "isStarred": false}, {"title": "Argentine postal code validation", "description": "validation for Argentina postal codes, previous four digits + new CPA", "dateCreated": "2015-11-12T18:11:26.000Z", "dateModified": "2015-11-12T18:11:26.000Z", "author": "jpaulini", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(^[a-z]{1}\\d{4}[a-z]{3}$|^\\d{4}$)", "permalinkFragment": "yM9qU4", "isFavorite": false, "isStarred": false}, {"title": "math chain comparisons with optional matched paren", "description": "", "dateCreated": "2015-11-13T16:25:01.000Z", "dateModified": "2015-11-13T16:25:01.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "x", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<![-+\\/*(\\s])((\\s*\\()?(?:(?:\\s*\\$Q\\w+\\s*|\\d+\\.?\\d*\\s*)[-+\\/*])+(?:\\s*\\$Q\\w+|\\d+\\.?\\d*)\\s*(?(2)\\)))(\\s*[=!><]+\\s*)(\\d+\\.?\\d*)", "permalinkFragment": "jU2iT5", "isFavorite": false, "isStarred": false}, {"title": "US City Validation", "description": "United States City name validation", "dateCreated": "2015-11-16T20:42:41.000Z", "dateModified": "2015-11-16T20:42:41.000Z", "author": "Jagadesh ", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[a-zA-Z]+(?:[\\s-'.&/][a-zA-Z]+)*(?:[.|\\s])?(?:[\\(a-z\\)])*$", "permalinkFragment": "hT1oL6", "isFavorite": false, "isStarred": false}, {"title": "RGB [0;255]", "description": "Color RGB in shape: 255, 255, 255\n',' or ';' are accepted", "dateCreated": "2015-11-16T21:17:41.000Z", "dateModified": "2015-11-16T21:17:41.000Z", "author": "theBlueBisu", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((?<!\\d|\\.)([0-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?!\\d|\\.) *[,;] *){2}(?<!\\d|\\.)([0-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?!\\d|\\.)", "permalinkFragment": "nE2sJ5", "isFavorite": false, "isStarred": false}, {"title": "Fecha ISO", "description": "Comprueba si una fecha est\u00e1 en formato ISO: aaaa/mm/dd. Obtiene 3 datos: 1=a\u00f1o; 2=mes; 3=dia, para su cambio al formato espa\u00f1ol dd/mm/aaaa. Detecta si el mes y el d\u00eda pueden existir (no incluye mes febrero ni bisiestos)", "dateCreated": "2015-11-18T20:11:58.000Z", "dateModified": "2015-11-18T20:11:58.000Z", "author": "Alfonso", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(\\d{4})[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$", "permalinkFragment": "sS7kG3", "isFavorite": false, "isStarred": false}, {"title": "preprocess text files to include only readable and text words", "description": " for large corpus cleaning", "dateCreated": "2015-11-23T12:37:01.000Z", "dateModified": "2015-11-23T12:37:01.000Z", "author": "aliabbas petiwala", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\\W|^\\d|^[A-Z ]+$|^[tT]able.+|^[Ff]igure.+|^[fF][aA][Xx].+|^[Ee]mail.+|^EMAIL.+|\\.[\\w]+\\.|\\d[\\+\\-\\\\\\*\\/]\\d|[\\(\\)\\+\\-\\\\\\*\\/] [\\(\\)\\+\\-\\\\\\*\\/]", "permalinkFragment": "fL3jW3", "isFavorite": false, "isStarred": false}, {"title": "parse tag data with multiline", "description": "parse tag data with multiline", "dateCreated": "2015-11-24T00:35:01.000Z", "dateModified": "2015-11-24T00:35:01.000Z", "author": "Ali G\u00d6REN", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[content\\]([\\s\\S]*?)\\[\\/content\\]", "permalinkFragment": "tG4eL6", "isFavorite": false, "isStarred": false}, {"title": "po box", "description": "", "dateCreated": "2015-11-25T00:58:36.000Z", "dateModified": "2015-11-25T00:58:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^.*[P|p]*(OST|ost)*\\.*\\s*[O|o|0]*(ffice|FFICE)*\\.*\\s*[B|b][O|o|0][X|x]\\s*(\\d.)*", "permalinkFragment": "pK5bE4", "isFavorite": false, "isStarred": false}, {"title": "76", "description": "", "dateCreated": "2015-11-25T09:00:29.000Z", "dateModified": "2015-11-25T09:00:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "76", "permalinkFragment": "pS7qX2", "isFavorite": false, "isStarred": false}, {"title": "Simple domain.tld tester", "description": "For testing domain with TLD\n\nregExp.test(\"google.com\") => true\nregExp.test(\"mad.engineering\") => true", "dateCreated": "2015-11-26T18:33:27.000Z", "dateModified": "2015-11-26T18:33:27.000Z", "author": "Sergio de la Garza", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[a-zA-Z0-9-\\_]+\\.[a-zA-Z]+?$", "permalinkFragment": "aZ6qF6", "isFavorite": false, "isStarred": false}, {"title": "Linux ARP-Table", "description": "Matches `cat /proc/net/arp`.\nIt returns the IP, MAC and interface.", "dateCreated": "2015-11-27T15:31:35.000Z", "dateModified": "2015-11-27T15:31:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?<ip>[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}).*(?<mac>..:..:..:..:..:..)\\s*.\\s*(?<interface>.*)$", "permalinkFragment": "cU8gU3", "isFavorite": false, "isStarred": false}, {"title": "Nato Stock Number (Add dashes)", "description": "Takes a 13 digit non-dashed Nato Stock Number and uses the Substitution to add the dashes in", "dateCreated": "2015-12-01T12:15:38.000Z", "dateModified": "2015-12-01T12:15:38.000Z", "author": "Matthew Perryman", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\d{4})(\\d{2})(\\d{3})(\\d{4})", "permalinkFragment": "mH1qL9", "isFavorite": false, "isStarred": false}, {"title": "Expanded Visual Basic Properties", "description": "I've been using this regex to get a list of expanded properties (specifically the property names from the 'prop' capture group) from VB code that is used as input in a code converter for a project at work.", "dateCreated": "2015-12-01T18:09:50.000Z", "dateModified": "2015-12-01T18:09:50.000Z", "author": "Timothy Smith", "flavor": "pcre", "delimiter": "/", "flags": "gis", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "Public(?: ReadOnly)? Property (?<prop>.*?)\\(\\) As [a-zA-Z]*(?: Implements )?.*? End Property", "permalinkFragment": "jI1mB4", "isFavorite": false, "isStarred": false}, {"title": "uri template validation", "description": "validating uri template", "dateCreated": "2015-12-03T08:25:17.000Z", "dateModified": "2015-12-03T08:25:17.000Z", "author": "Tirta Wijaya", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(((ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*))?(\\/?)(\\{?)([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+\\~\\{\\}\\&%\\$#_]*)?(\\}?)(\\/?)$", "permalinkFragment": "dL2vY6", "isFavorite": false, "isStarred": false}, {"title": "Brazilian Telephone Regex", "description": "A regex for brazilian telephones", "dateCreated": "2015-12-04T21:10:33.000Z", "dateModified": "2015-12-04T21:10:33.000Z", "author": "Andr\u00e9 Ramos (github.com/andrelramos)", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[0-9]{2}[\\s]?[0-9]{4}[-]?[0-9]{4}$", "permalinkFragment": "qQ7fI5", "isFavorite": false, "isStarred": false}, {"title": "ACTGatewaTranscript", "description": "Regex to find ACTGateway Transcript entries when discarding logs", "dateCreated": "2015-12-06T13:10:59.000Z", "dateModified": "2015-12-06T13:10:59.000Z", "author": "jfilipek", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\d{2,4}\\/){2}\\d\\d\\d\\d.*\\n\\s+Logs are not written", "permalinkFragment": "fD0dM5", "isFavorite": false, "isStarred": false}, {"title": "Basic Email", "description": "", "dateCreated": "2015-12-08T20:50:49.000Z", "dateModified": "2015-12-08T20:50:49.000Z", "author": "Kareem Cambridge", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\\S{1,}@\\S{1,}[.]\\S{1,}$", "permalinkFragment": "vS9iW0", "isFavorite": false, "isStarred": false}, {"title": "Shorten file path with /../ ", "description": "\nExample usage:\n$Path = preg_replace('/(?:^|(?<=\\/))(?:[^\\s.\\/]+|\\.(?!\\.\\/))++\\/\\.\\.\\//i', '', $Path);\n", "dateCreated": "2015-12-11T22:51:59.000Z", "dateModified": "2015-12-11T22:51:59.000Z", "author": "Mr.Deek & +OnlineCop", "flavor": "pcre", "delimiter": "/", "flags": "gmix", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?:^|(?<=\\/))\n(?:[^\\s.\\/]+|\\.(?!\\.\\/))++\n\\/\\.\\.\\/", "permalinkFragment": "rK3dC3", "isFavorite": false, "isStarred": false}, {"title": "MyFRegex", "description": "Hi", "dateCreated": "2015-12-14T09:58:56.000Z", "dateModified": "2015-12-14T09:58:56.000Z", "author": "mymoon", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\\d+\\n\\[*\\\"tb\\\"", "permalinkFragment": "dT6yR4", "isFavorite": false, "isStarred": false}, {"title": "Email Address Matching", "description": "Picks out valid email addresses from string.", "dateCreated": "2015-12-14T20:50:15.000Z", "dateModified": "2015-12-14T20:50:15.000Z", "author": "Rob Lester", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([\\S]+@[\\w]+(?:\\.[\\w]+)+)", "permalinkFragment": "cS5aB5", "isFavorite": false, "isStarred": false}, {"title": "whitespaces and positive numerics (3 precisions accpet . or ,)", "description": "//Accepts whitespaces and positive numeric values including integers and decimals(dot or comma optional) with 3 precisions only. \n\n//Ex: \"999\",  \" 999.999\",  \"      999.999\",  \n      \" 999,999\",  \"      999,999\" -> ACCEPTABLE", "dateCreated": "2015-12-16T07:17:35.000Z", "dateModified": "2015-12-16T07:17:35.000Z", "author": "Pubudu (motustudio)", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\\s*[0-9]+([\\,\\.][0-9][0-9]{0,2})?$|^$|^\\s*$", "permalinkFragment": "pS9eB2", "isFavorite": false, "isStarred": false}, {"title": "Dir\\File.Ext", "description": "", "dateCreated": "2015-12-16T11:38:05.000Z", "dateModified": "2015-12-16T11:38:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(.*(?<=\\\\))?+(.*$|$)", "permalinkFragment": "sJ9hI0", "isFavorite": false, "isStarred": false}, {"title": "Url parser and validator", "description": "Validate an url with hostname or ip and port.\nFurthermore provides:\n- the entire url\n- the protocol\n- the hostname/ip\n- the port\n- the path\n- the querystring", "dateCreated": "2015-12-16T15:14:10.000Z", "dateModified": "2015-12-16T15:14:10.000Z", "author": "Antonino Sirchia", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^((?:(https?):\\/\\/)?((?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[0-9][0-9]|[0-9])\\.(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[0-9][0-9]|[0-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[0-9][0-9]|[0-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[0-9][0-9]|[0-9]))|(?:(?:(?:\\w+\\.){1,2}[\\w]{2,3})))(?::(\\d+))?((?:\\/[\\w]+)*)(?:\\/|(\\/[\\w]+\\.[\\w]{3,4})|(\\?(?:([\\w]+=[\\w]+)&)*([\\w]+=[\\w]+))?|\\?(?:(wsdl|wadl))))$", "permalinkFragment": "aB9fM8", "isFavorite": false, "isStarred": false}, {"title": "email", "description": "", "dateCreated": "2015-12-19T00:30:55.000Z", "dateModified": "2015-12-19T00:30:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([a-zA-Z0-9_+-]+.{1})*[a-zA-Z0-9_+-]+@([a-zA-Z0-9_+-]+[.]{1})+[a-zA-Z]{1,5}$", "permalinkFragment": "wU3sB6", "isFavorite": false, "isStarred": false}, {"title": "imdb id", "description": "imdb", "dateCreated": "2015-12-21T11:42:06.000Z", "dateModified": "2015-12-21T11:42:06.000Z", "author": "little badger", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:http:\\/\\/|https:\\/\\/)?(?:www\\.)?(?:imdb.com\\/title\\/)?(tt[0-9]*)", "permalinkFragment": "uO6fZ6", "isFavorite": false, "isStarred": false}, {"title": "permalinks", "description": "skip if the url is a permalink", "dateCreated": "2015-12-21T12:26:03.000Z", "dateModified": "2015-12-21T12:26:03.000Z", "author": "andreasonny83@gmail.com", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^#\\/", "permalinkFragment": "kP7cF6", "isFavorite": false, "isStarred": false}, {"title": "Wordpress Plugins Readme Parse Youtube", "description": "Wordpress Plugins Readme Parse Youtube", "dateCreated": "2015-12-22T03:09:10.000Z", "dateModified": "2015-12-22T03:09:10.000Z", "author": "onigetoc", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[(youtube )(\\s*)([http:\\/\\/(?:www\\.)?youtube.com\\/watch\\?(?=.*v=\\w+)(?:\\S+)?$]+)\\]", "permalinkFragment": "fP4yL9", "isFavorite": false, "isStarred": false}, {"title": "Detecting numbers", "description": "signed or unsigned numbers with exponents or not", "dateCreated": "2015-12-28T12:07:49.000Z", "dateModified": "2015-12-28T12:07:49.000Z", "author": "Mohammed Yehia", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[\\-]?(\\d+\\.?(?:\\d+)?(?:[eE][\\-]?\\d+)?)", "permalinkFragment": "hX3vC1", "isFavorite": false, "isStarred": false}, {"title": "Extract .mp3 url", "description": "", "dateCreated": "2015-12-28T13:46:41.000Z", "dateModified": "2015-12-28T13:46:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((http:)[A-Z0-9a-z\\.\\/]*(\\.mp3))", "permalinkFragment": "qY2kI7", "isFavorite": false, "isStarred": false}, {"title": "Angular 2 property access", "description": "", "dateCreated": "2015-12-30T18:35:57.000Z", "dateModified": "2015-12-30T18:35:57.000Z", "author": "jros", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<? #([a-zA-Z0-9-]+).+?>", "permalinkFragment": "qV2dL2", "isFavorite": false, "isStarred": false}, {"title": "bash", "description": "bash", "dateCreated": "2015-12-31T17:46:23.000Z", "dateModified": "2015-12-31T17:46:23.000Z", "author": "b10n1k", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "'$1==\"####\"{x=$0;next} $1==\"###\"{print x, $0; next} 1'", "permalinkFragment": "vR5mM2", "isFavorite": false, "isStarred": false}, {"title": "Float Representation", "description": "", "dateCreated": "2016-01-01T13:03:38.000Z", "dateModified": "2016-01-01T13:03:38.000Z", "author": "S-YOU", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((?<![\\w.])[+-]?(?:\\d+\\.\\d+|\\d+\\.|\\.\\d+|\\d+)(?:[eE][+-]?\\d+)?(?![\\w.]))", "permalinkFragment": "pA2cY1", "isFavorite": false, "isStarred": false}, {"title": "Chinese slang words regex", "description": "", "dateCreated": "2016-01-02T09:20:10.000Z", "dateModified": "2016-01-02T09:20:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[\u5e79\u4e7e\u6de6\u8d1b\u5e72\u808f\u64cd\u7cd9\u53bb\u585e\u8cfd]?[\u6797\u8cc3\u541d\u62ce\u6041\u4f60\u4ed6\u5979\u5b83\u7942\u7260](\u5a18|\u5abd|\u8001\u5e2b|\u59b9|\u7956?(\u5b24|\u5abd|\u7f75))(\u7684|\u6a02|\u53fb|\u5783|\u52d2|\u54a7|([\u57fa\u5527\u96de\u6a5f\u6fc0][\u63b0\u6b6a]))?|([\u57fa\u5527\u96de\u6a5f\u6fc0][\u63b0\u6b6a])", "permalinkFragment": "wM9mP9", "isFavorite": false, "isStarred": false}, {"title": "Common Taiwanese slang regex", "description": "", "dateCreated": "2016-01-02T11:44:30.000Z", "dateModified": "2016-01-02T11:44:30.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[\u5e79\u4e7e\u6de6\u8d1b\u5e72\u808f\u64cd\u7cd9\u53bb\u8349\u585e\u8cfd]?[\u6797\u8cc3\u541d\u96f6\u9748\u9f61\u62ce\u6041\u4f60\u4ed6\u5979\u5b83\u7942\u7260]([\u99ac\u9a6c\u91cf\u6881\u826f\u7ce7\u6dbc\u5a18\u59b9\u5abd]|\u8001[\u5e2b\u8607\u8a69\u5c4d\u6fd5\u6ebc]|\u5976\u5976|\u7956?(\u5b24|\u5abd|\u7f75))(\u7684|\u6a02|\u53fb|\u5783|\u52d2|\u54a7|([\u57fa\u5527\u96de\u6a5f\u6fc0][\u63b0\u6b6a]))?|[\u9760\u5c3b\u54ed][\u676f\u500d\u80cc\u8c9d\u8f29\u6096\u5317\u76c3\u60b2\u5351\u63f9\u8170\u9080\u5996\u592d\u5e7a\u4e48]|([\u57fa\u5527\u96de\u6a5f\u6fc0](\u8eca|[\u6559\u8f4e\u7a96\u5da0\u53eb\u8f03\u8db4\u8469]|[\u63b0\u6b6a]))|(([\u9b6f\u76e7\u64c4\u865c\u76e7\u7210]|[\u5047\u5477\u5403\u7532\u8cc8\u5361]|[\u885d\u6c96\u5145\u9283\u6b09\u8b25]?[\u4e09\u6bba\u6c99\u7802\u5565])[\u5c0f\u6d28\u66c9])|(\u7834[\u9ebb\u76ee])|([\u4fd7\u5352][\u4ed4\u81d8\u8fa3])|[\u8ce4\u5c4c\u808f\u64cd\u7cd9]|(\u5e79(?![\u9ebb\u561b\u55ce]|(\u5565|[\u86c7\u795e\u4ec0\u751a]\u9ebc|[\u597d\u58de]\u4e8b)))|(\u9760(?!\u5728|\u7684|\u4ed6|\u4f60|\u59b3|\u5979))|([\u6797\u8cc3\u541d\u62ce\u6041\u4f60][\u9738\u7238\u5317\u80cc])|([\u61f6\u85cd\u89bd\u652c\u6b16][\u6559\u8f4e\u7a96\u5da0\u53eb\u8f03\u8db4\u8469])|([\u767d\u5317\u5ea6\u675c\u6e21\u809a\u864e\u552c][\u721b\u6feb\u7e9c\u85cd\u89bd\u61f6])|(\u667a[\u7f3a\u969c\u4ed7\u4e08\u7634])|(\u53bb\u4f60\u7684)|((?i)GG\\s?IN\\s?IN)|(\u60f3[\u6a13\u63c9])|(\u3108\u3108\u5c3a)|((?i)ccr|fuck|hell|shit|ass(hole)?|idiot|damn|bitch|phycho|bastard|Whore|Slut)", "permalinkFragment": "yT4bL9", "isFavorite": false, "isStarred": false}, {"title": "prova1", "description": ".*((black\\-?friday\\.ga)|(alibestsale\\.com)|(build\\-?a\\-?better\\-?business\\.2your\\.site)|(callmebold\\.com)|(centurylink\\.net)|(cyber\\-?monday\\.ga)|(digg\\.com)|(euro\\.typepad\\.jp)|(exmail\\.qq\\.com)).*\n", "dateCreated": "2016-01-07T16:42:51.000Z", "dateModified": "2016-01-07T16:42:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\n.*((black\\-?friday\\.ga)|(alibestsale\\.com)|(build\\-?a\\-?better\\-?business\\.2your\\.site)|(callmebold\\.com)|(centurylink\\.net)|(cyber\\-?monday\\.ga)|(digg\\.com)|(euro\\.typepad\\.jp)|(exmail\\.qq\\.com)).*\n", "permalinkFragment": "vM2oA6", "isFavorite": false, "isStarred": false}, {"title": "file extension validation", "description": "", "dateCreated": "2016-01-07T19:04:43.000Z", "dateModified": "2016-01-07T19:04:43.000Z", "author": "Lisa", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\.(doc|docx|log|odt|pages|rtf|txt|csv|key|pps|ppt|pptx|tar|xml|json|pdf|xls|xlsx|db|sql|rar|gz|zip)", "permalinkFragment": "fY3kY2", "isFavorite": false, "isStarred": false}, {"title": "pdf url link", "description": "", "dateCreated": "2016-01-13T10:00:30.000Z", "dateModified": "2016-01-13T10:00:30.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^http(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+&amp;%\\$#_]*)?(.pdf)$", "permalinkFragment": "jP1qI2", "isFavorite": false, "isStarred": false}, {"title": "get file Extensions", "description": "var fileExtensionPatter = /\\.([0-9a-z]+)(?=[?#])|(\\.)(?:[\\w]+)$/\n\n    var ma1 = 'css/global.css?v=1.2'.match(fileExtensionPatter)[0];\n    console.log(ma1);\n    // return .css\n\n    var ma2 = 'index.html?a=param'.match(fileExtensionPatter)[0];\n    console.log(ma2);\n    // return .html\n\n    var ma3 = 'default.aspx?'.match(fileExtensionPatter)[0];\n    console.log(ma3);\n    // return .aspx\n\n    var ma4 = 'pages.jsp#firstTab'.match(fileExtensionPatter)[0];\n    console.log(ma4);\n    // return .jsp\n\n    var ma5 = 'jquery.min.js'.match(fileExtensionPatter)[0];\n    console.log(ma5);\n    // return .js\n\n    var ma6 = 'file.123'.match(fileExtensionPatter)[0];\n    console.log(ma6);\n    // return .123", "dateCreated": "2016-01-13T17:36:27.000Z", "dateModified": "2016-01-13T17:36:27.000Z", "author": "Ahbap Ald\u0131rmaz", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\.([0-9a-z]+)(?=[?#])|(\\.)(?:[\\w]+)$", "permalinkFragment": "lC9xU2", "isFavorite": false, "isStarred": false}, {"title": "Delimite a number with 3-digital block", "description": "", "dateCreated": "2016-01-19T12:07:25.000Z", "dateModified": "2016-01-19T12:07:25.000Z", "author": "Willy", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\B(?=(\\d{3})+(?!\\d))", "permalinkFragment": "bM6zS4", "isFavorite": false, "isStarred": false}, {"title": "Parse string like: \"[!type|name] http://some.url/to.file\"", "description": "http://some.url/to.file\n\n[!css|name]http://some.url/to.file\n\n[!css] http://some.url/to.file\n\n[ css ] http://some.url/to.file\n\n[!|name] http://some.url/to.file\n\n[|name] http://some.url/to.file", "dateCreated": "2016-01-20T15:08:05.000Z", "dateModified": "2016-01-20T15:08:05.000Z", "author": "Max Chuhryaev", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\s*\\[+?\\s*(\\!?)\\s*([a-z]*)\\s*\\|?\\s*([a-z0-9\\.\\-_]*)\\s*\\]+?)?\\s*([^\\s]+)\\s*", "permalinkFragment": "hW9zY8", "isFavorite": false, "isStarred": false}, {"title": "Strong password", "description": "Password require: lowercase, uppercase, symbol, not consecutive same letter/number, and not some specific words", "dateCreated": "2016-01-20T22:20:25.000Z", "dateModified": "2016-01-20T22:20:25.000Z", "author": "@cadete_kdt", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[#$%/()=\u00bf?*+-])(?=(?:([\\w\\d])\\1?(?!\\1\\1)))(?!(?=.*(palabra1|palabra2|palabraN))).{8,20}$", "permalinkFragment": "wW1hK7", "isFavorite": false, "isStarred": false}, {"title": "Fix Card Def", "description": "", "dateCreated": "2016-01-24T15:29:22.000Z", "dateModified": "2016-01-24T15:29:22.000Z", "author": "yyrkroon", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(.*:.*)(')(.*)(')},$", "permalinkFragment": "oT5bY3", "isFavorite": false, "isStarred": false}, {"title": "emoji short-code detection", "description": "Detects the short-code words for emojis (a la jemoji).", "dateCreated": "2016-01-26T14:32:12.000Z", "dateModified": "2016-01-26T14:32:12.000Z", "author": "Eric McCormick", "flavor": "javascript", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\:(\\w|\\+|\\-)+\\:)(?=\\s|[\\!\\.\\?]|$)", "permalinkFragment": "bZ4cJ6", "isFavorite": false, "isStarred": false}, {"title": "bye", "description": "", "dateCreated": "2016-01-28T18:19:16.000Z", "dateModified": "2016-01-28T18:19:16.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(\\\\|\\/)(bye|end)$", "permalinkFragment": "uP8fN9", "isFavorite": false, "isStarred": false}, {"title": "LUN UID", "description": "", "dateCreated": "2016-01-29T06:12:51.000Z", "dateModified": "2016-01-29T06:12:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})", "permalinkFragment": "oB4fG6", "isFavorite": false, "isStarred": false}, {"title": "Parse Cabrillo Amateur Radio Log Record", "description": "", "dateCreated": "2016-01-30T05:39:31.000Z", "dateModified": "2016-01-30T05:39:31.000Z", "author": "NY4I", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "QSO:\\s+(\\d{4,})\\s(\\w{2,})\\s(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)\\s(\\d\\d\\d\\d)\\s([A-Z0-9\\/]{3,})\\s+(\\d{2,3})\\s+(\\w+)\\s+([A-Z0-9\\/]{3,})\\s+(\\d{2,3})\\s+(\\w+)\\s*", "permalinkFragment": "hS8uM5", "isFavorite": false, "isStarred": false}, {"title": "css class finder", "description": "\u0627\u06cc\u0646 \u0639\u0628\u0627\u0631\u062a \u0645\u0646\u0638\u0645 \u06cc\u06a9 \u06a9\u0644\u0627\u0633 \n\u0633\u06cc \u0627\u0633 \u0627\u0633 \u0631\u0627 \u067e\u06cc\u062f\u0627 \u0645\u06cc \u06a9\u0646\u062f", "dateCreated": "2016-01-30T10:11:27.000Z", "dateModified": "2016-01-30T10:11:27.000Z", "author": "ehsan abbasi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([a-zA-Z0-9-_]+)((\\s)*)({)((\\s)*)(([a-zA-Z0-9-_;:%]*\\s*)*)(})", "permalinkFragment": "vV9sQ9", "isFavorite": false, "isStarred": false}, {"title": "comment", "description": "", "dateCreated": "2016-01-31T01:33:10.000Z", "dateModified": "2016-01-31T01:33:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "{.*}", "permalinkFragment": "rV1nV5", "isFavorite": false, "isStarred": false}, {"title": "Regex to find if/while constructs", "description": "Find if/while in JS code written in PCRE", "dateCreated": "2016-02-01T15:13:28.000Z", "dateModified": "2016-02-01T15:13:28.000Z", "author": "Deepak Subramanian", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(^if|^while|[ ;}\\n]if|while)[ ]*([(]([^()]|(?2))*[)])", "permalinkFragment": "sV5gZ4", "isFavorite": false, "isStarred": false}, {"title": "Find url('./xxx)", "description": "", "dateCreated": "2016-02-03T04:23:22.000Z", "dateModified": "2016-02-03T04:23:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "url\\('[\\.]{2}\\/", "permalinkFragment": "oB7eI8", "isFavorite": false, "isStarred": false}, {"title": "Password Validation", "description": "Checks for password containing at least 1 Upper case, 1 lower case, 1 digit and 1 special character, all together with a length of at least 8. (This pattern allows any order of the requried elements, other than what was been distributed here before)", "dateCreated": "2016-02-03T13:16:27.000Z", "dateModified": "2016-02-03T13:16:27.000Z", "author": "Tom Spielvogel", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?P<password>((?=\\S*[A-Z])(?=\\S*[a-z])(?=\\S*\\d)(?=\\S*[\\!\\\"\\\u00a7\\$\\%\\&\\/\\(\\)\\=\\?\\+\\*\\#\\'\\^\\\u00b0\\,\\;\\.\\:\\<\\>\\\u00e4\\\u00f6\\\u00fc\\\u00c4\\\u00d6\\\u00dc\\\u00df\\?\\|\\@\\~\\\u00b4\\`\\\\])\\S{8,}))", "permalinkFragment": "lX5fD5", "isFavorite": false, "isStarred": false}, {"title": "Bitstream with not more than 4 repeating bits", "description": "0111100 will be matched whereas 0111110 will not.\nChange \\1{4} to max repeating count. For max 9 repeating -> \\1{9} ", "dateCreated": "2016-02-04T21:05:46.000Z", "dateModified": "2016-02-04T21:05:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\b(?![01]*([01])\\1{4})[01]+\\b", "permalinkFragment": "xK3uZ9", "isFavorite": false, "isStarred": false}, {"title": "ukrainian alphabet ", "description": "", "dateCreated": "2016-02-06T17:06:29.000Z", "dateModified": "2016-02-06T17:06:29.000Z", "author": "benderlio", "flavor": "pcre", "delimiter": "/", "flags": "ug", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([\\x{0410}-\\x{042F}\\x{0406}\\x{0407}\\x{0404}][\\x{0430}-\\x{044F}\\x{0456}\\x{0457}\\x{0454}\\x{0401}\\s\\.]+)", "permalinkFragment": "pW9xQ8", "isFavorite": false, "isStarred": false}, {"title": "Date or N/A", "description": "Accepts Date or not applicable string.", "dateCreated": "2016-02-08T14:28:39.000Z", "dateModified": "2016-02-08T14:28:39.000Z", "author": "Toufique Ahmed", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?:(^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$)|(NA)|N\\/A)", "permalinkFragment": "zV7pA7", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "", "dateCreated": "2016-02-09T19:50:50.000Z", "dateModified": "2016-02-09T19:50:50.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?!9{9})(?!0{9})[0-9]{9}$\n", "permalinkFragment": "mF7nQ7", "isFavorite": false, "isStarred": false}, {"title": "Email Cleanup", "description": "Working on email link cleanup.", "dateCreated": "2016-02-12T06:07:12.000Z", "dateModified": "2016-02-12T06:07:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(href=.*?span\\>)", "permalinkFragment": "vC6tW1", "isFavorite": false, "isStarred": false}, {"title": "ICD-10-CD Diagnosis Code", "description": "ICD-10-CM Diagnosis Code per\nhttps://www.cms.gov/Medicare/Coding/ICD10/downloads/ICD-10Overview.pdf", "dateCreated": "2016-02-12T15:48:05.000Z", "dateModified": "2016-02-12T15:48:05.000Z", "author": "Cloud Cray", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[a-zA-Z]{1}[0-9]{1}[a-zA-Z0-9]{1}.{1}[a-zA-Z0-9]{0,4}", "permalinkFragment": "lG2oP4", "isFavorite": false, "isStarred": false}, {"title": "extract hostname", "description": "extracts hostname from url", "dateCreated": "2016-02-13T07:55:01.000Z", "dateModified": "2016-02-13T07:55:01.000Z", "author": "Kristine Poghosyan", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:http|ftp)s?:\\/\\/([\\w][^\\/=\\s]+)\\/?|(^w{3}[\\.\\w][^\\/\\=\\s]{2,})\\/?", "permalinkFragment": "kC8aR6", "isFavorite": false, "isStarred": false}, {"title": "problem for homework", "description": "", "dateCreated": "2016-02-15T06:28:15.000Z", "dateModified": "2016-02-15T06:28:15.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(([^f]|f([^io]|o([^r]|r[a-z])|i([^ln]|l([^e]|e[a-z])|n([^d]|d[a-z]))))[a-z]*|(f(o|i|i(l|n))))?$", "permalinkFragment": "xE6sN4", "isFavorite": false, "isStarred": false}, {"title": "extension libre office", "description": "", "dateCreated": "2016-02-15T08:48:36.000Z", "dateModified": "2016-02-15T08:48:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\.odp|ods|odt$)", "permalinkFragment": "mA8dT0", "isFavorite": false, "isStarred": false}, {"title": "Observatorio do Trabalho", "description": "", "dateCreated": "2016-02-15T13:34:52.000Z", "dateModified": "2016-02-15T13:34:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "abrirTabela\\([^\\)]*\\)", "permalinkFragment": "jT0lU5", "isFavorite": false, "isStarred": false}, {"title": "Logix Designer tag operand", "description": "Locates valid Logix Designer tag operands", "dateCreated": "2016-02-15T14:51:53.000Z", "dateModified": "2016-02-15T14:51:53.000Z", "author": "", "flavor": "pcre", "delimiter": "@", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?<tag>(?:[a-zA-Z]\\w*|_\\w+))(?<memspec>(?:(?:(?:\\s*\\.(?:[a-zA-Z]\\w*|_\\w+)|(?:\\s*\\[(?:[^,\\]]+)(?:,(?:[^,\\]]+))*\\]))*)(?:(?:\\s*\\.\\d+|\\.\\s*(?:\\s*\\[(?:[^,\\]]+)\\]))?)))?(?<metadataspec>(?:\\s*\\.\\@(?<metadataid>(?:[a-zA-Z]\\w*|_\\w+))(?<metadatamemspec>(?:(?:(?:\\s*\\.(?:[a-zA-Z]\\w*|_\\w+)|(?:\\s*\\[(?:[^,\\]]+)(?:,(?:[^,\\]]+))*\\]))*)(?:(?:\\s*\\.\\d+|\\.\\s*(?:\\s*\\[(?:[^,\\]]+)\\]))?)))?))?$", "permalinkFragment": "qI2nR2", "isFavorite": false, "isStarred": false}, {"title": "FEN Regex", "description": "This will match an FEN string (https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation). It is not strict in having each rank separated by a '\\' character, although it is strict in the order of characters for the Castling section. Anything not following the order of KQkq in the case where castling is available, will fail the Regex. It is also case sensitive for the Side and the \"en passant\" column letter. ", "dateCreated": "2016-02-15T21:37:27.000Z", "dateModified": "2016-02-15T21:37:27.000Z", "author": "NazarioJL", "flavor": "pcre", "delimiter": "/", "flags": "x", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\n(?# Piece Placement Section)(?<PiecePlacement>((?<RankItem>[pnbrqkPNBRQK1-8]{1,8})\\/?){8})\n(?# Section Separator)\\s+\n(?# Side To Move Section)   (?<SideToMove>b|w)\n(?# Section Separator)\\s+\n(?# Castling Ability)       (?<Castling>-|K?Q?k?q)\n(?# Section Separator)\\s+\n(?# En passant)             (?<EnPassant>-|[a-h][3-6])\n(?# Section Separator)\\s+\n(?# Half Move Clock)        (?<HalfMoveClock>\\d+)\n(?# Section Separator)\\s+\n(?# Full Move Number)       (?<FullMoveNumber>\\d+)\n\\s*\n$", "permalinkFragment": "bA8eQ1", "isFavorite": false, "isStarred": false}, {"title": "matching regex and boolean patterns in a string", "description": "", "dateCreated": "2016-02-18T07:47:54.000Z", "dateModified": "2016-02-18T07:47:54.000Z", "author": "haris", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([A-Za-z0-9\\._]+?)\\s*(=|~|>|<)\\s*(\\\".+?\\\"|[^\\s)]+)", "permalinkFragment": "lO2rD8", "isFavorite": false, "isStarred": false}, {"title": "Match a specific CSV field. ", "description": "Fields terminated by ';' even if the fields are surrounded by \"\ndoes not accept newlines.\nChange the central qualifier to get the column.\nif you want the Xth field write X-1 and use the 3\u00b0 mathing group OR write X and use the 2\u00b0 match.\n\n", "dateCreated": "2016-02-19T13:33:43.000Z", "dateModified": "2016-02-19T13:33:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(([^\";\\n]*|\"[^\"\\n]*\");){4}([^\";\\n]*|\"[^\"\\n]*\");", "permalinkFragment": "dZ3lT3", "isFavorite": false, "isStarred": false}, {"title": "RAR and ZIP files", "description": "recognizes RAR archives (including splitted archives) and ZIP archives", "dateCreated": "2016-02-19T16:28:41.000Z", "dateModified": "2016-02-19T16:28:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": ".(?:r\\d\\d|r\\d\\d\\d|rar|zip)", "permalinkFragment": "jJ8kN5", "isFavorite": false, "isStarred": false}, {"title": "kasd; fk.!@#$%^&*()*()%^&*()_", "description": "", "dateCreated": "2016-02-19T21:22:47.000Z", "dateModified": "2016-02-19T21:22:47.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[^A-Za-z0-9-$_ ]|\n\n\n", "permalinkFragment": "oO0qU5", "isFavorite": false, "isStarred": false}, {"title": "mystem", "description": "", "dateCreated": "2016-02-20T08:55:12.000Z", "dateModified": "2016-02-20T08:55:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "iug", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([\\w]+)\\{([\\w]+)\\:([0-9.]+)\\}", "permalinkFragment": "rN4eB5", "isFavorite": false, "isStarred": false}, {"title": "thy_reservation_flights", "description": "", "dateCreated": "2016-02-20T10:39:20.000Z", "dateModified": "2016-02-20T10:39:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\s[0-9]\\s([A-Z]{2,3})([0-9\\s]{4})\\s([A-Z])\\s\\s([A-Z]{1,2})\\s([0-9]{1,2})(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)\\s\\s([A-Z]{3})([A-Z]{3})\\s([A-Z0-9]{3})\\s(X|\\s)\\s([0-9]{2})([0-9]{2})\\s([0-9]{2})([0-9]{2})(\\s|\\*)([A-Z]*)\\s(.*)", "permalinkFragment": "qC7oI2", "isFavorite": false, "isStarred": false}, {"title": "thy_reservations_names", "description": "", "dateCreated": "2016-02-20T10:41:05.000Z", "dateModified": "2016-02-20T10:41:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[0-9][.]([A-Z]\\/[0-9]|[0-9])([^\\s\\/]*)\\/([^\\s]*)", "permalinkFragment": "uG6gJ9", "isFavorite": false, "isStarred": false}, {"title": "sun_reservation_flights", "description": "", "dateCreated": "2016-02-20T12:29:28.000Z", "dateModified": "2016-02-20T12:29:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([A-Za-z]+)\\s([A-Za-z]+)\\s([A-Z]{2})\\s([0-9]+)\\s([A-Za-z]+)(\\s+)([A-Z])\\s([0-9]{1,2})\\/([0-9]{1,2})\\/([0-9]{4}\\s)([0-9]{1,2}):([0-9]{1,2})\\s", "permalinkFragment": "uG5xL8", "isFavorite": false, "isStarred": false}, {"title": "sun-reservation-2-flights", "description": "", "dateCreated": "2016-02-20T13:02:10.000Z", "dateModified": "2016-02-20T13:02:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([0-9]{1,2})\\/([0-9]{1,2})\\/([0-9]{4})\\s([0-9]{1,2}):([0-9]{1,2})\\s([0-9]{1,2}):([0-9]{1,2})\\s([A-Za-z]+)\\s([A-Za-z]+)\\s([A-Z]{2})\\-([0-9]+)", "permalinkFragment": "oO6iI6", "isFavorite": false, "isStarred": false}, {"title": "<a href=\" replacer", "description": "to put # instead of url", "dateCreated": "2016-02-20T21:11:06.000Z", "dateModified": "2016-02-20T21:11:06.000Z", "author": "mrBakop", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<a href=\".*?\"", "permalinkFragment": "cU7cR3", "isFavorite": false, "isStarred": false}, {"title": "Href parse", "description": "matches href, title, innerhtml", "dateCreated": "2016-02-21T21:05:24.000Z", "dateModified": "2016-02-21T21:05:24.000Z", "author": "chrysls", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<a.+?\\s*href\\s*=\\s*[\"\\']?([^\"\\'\\s>]+)[\"\\']\\s*title=[\"\\'](\\w+)[\"\\']\\s*[>](\\w*)[<]?", "permalinkFragment": "eP0tR5", "isFavorite": false, "isStarred": false}, {"title": "Regex for Chemical Compounds", "description": "", "dateCreated": "2016-02-23T17:09:28.000Z", "dateModified": "2016-02-23T17:09:28.000Z", "author": "Haiming Zhao", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([\\w*-\u2032]*([\\[(]([\\[(]?[a-zA-Z\u03b1-\u03c9\u0391-\u03a9\u00b5\\-\u2032,:]+\\d?[+-]?[\\])]?)+[\\])\\d+-]{1,})[\\w*-\u2032]*)|(([A-z]+[a-z]*\\d)+([A-z]+[a-z]*\\d?)*)", "permalinkFragment": "zS5oR4", "isFavorite": false, "isStarred": false}, {"title": "Remove XSS", "description": "", "dateCreated": "2016-02-25T09:17:21.000Z", "dateModified": "2016-02-25T09:17:21.000Z", "author": "Harish Thakur", "flavor": "javascript", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<script.*?>.*?<\\/script>", "permalinkFragment": "bP2sU6", "isFavorite": false, "isStarred": false}, {"title": "DateWithDay", "description": "", "dateCreated": "2016-02-25T13:32:57.000Z", "dateModified": "2016-02-25T13:32:57.000Z", "author": "BobD", "flavor": "pcre", "delimiter": "/", "flags": "gmix", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([ADFJMNOS]{1,3}\\w*\\s) ([0-9]{1,2},\\s) ([0-9]{4})", "permalinkFragment": "eD0gE9", "isFavorite": false, "isStarred": false}, {"title": "String Interpolation", "description": "String Interpolation. Works Like Angular", "dateCreated": "2016-02-26T13:11:49.000Z", "dateModified": "2016-02-26T13:11:49.000Z", "author": "Aykut Alpgiray Ate\u015f", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "{{((\\w+)(.\\w+|\\[\\d+\\])+?)}}", "permalinkFragment": "mK8gM8", "isFavorite": false, "isStarred": false}, {"title": "SSN", "description": "allow nine digits only", "dateCreated": "2016-02-29T12:56:55.000Z", "dateModified": "2016-02-29T12:56:55.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[0-9]{9}$", "permalinkFragment": "oZ7gC9", "isFavorite": false, "isStarred": false}, {"title": "Bible verse, biblical string in text", "description": "Matches biblical strings in text. Two capture groups are used - one for the books name and another for the passages of the same book. \n* RegEx is long because it is strict!!!\n* If you want to also match books names without specified chapter and verses use:\n/((?:[1234]\\s?)?[a-z\u0430-\u044f]+)(\\s?\\d+(?::(?:\\d+[\u2014\u2013-]\\d+|\\d+)(?:,\\d+[\u2014\u2013-]\\d+|,\\d+)*(?:;\\s?\\d+(?::(?:\\d+[\u2014\u2013-]\\d+|\\d+)(?:,\\d+[\u2014\u2013-]\\d+|,\\d+)*|;))*)?)?/ig", "dateCreated": "2016-03-02T11:01:40.000Z", "dateModified": "2016-03-02T11:01:40.000Z", "author": "Desislavsd", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((?:[1234]\\s?)?[a-z\u0430-\u044f]+)(\\s?\\d+(?::(?:\\d+[\u2014\u2013-]\\d+|\\d+)(?:,\\d+[\u2014\u2013-]\\d+|,\\d+)*(?:;\\s?\\d+(?::(?:\\d+[\u2014\u2013-]\\d+|\\d+)(?:,\\d+[\u2014\u2013-]\\d+|,\\d+)*|;))*)?)", "permalinkFragment": "fS3wA0", "isFavorite": false, "isStarred": false}, {"title": "IPv4 strict", "description": "Valid:\n000.01.249.255\n1.199.200.0\n0.0.0.0\n\nInvalid:\n1000..256.300", "dateCreated": "2016-03-03T15:48:39.000Z", "dateModified": "2016-03-03T15:48:39.000Z", "author": "MaxusR", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.([01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.([01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.([01]?\\d{1,2}|2[0-4]\\d|25[0-5])$", "permalinkFragment": "jX5pB6", "isFavorite": false, "isStarred": false}, {"title": "Password Regex", "description": "Atleast one charector\nAtleast one number\nMin 6 and Max 20\nSpecial charectors optional", "dateCreated": "2016-03-04T07:23:05.000Z", "dateModified": "2016-03-04T07:23:05.000Z", "author": "Bijjala", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z$&+,:;=?@#|'<>.-^*()%!]{6,20}$", "permalinkFragment": "qX5mU3", "isFavorite": false, "isStarred": false}, {"title": "csv split, accounting for 'sub-csv' groups inside brackets", "description": "This came up as a need for splitting a url param into an array ofr stings, where such a string may be a sublist contained within a bracket pair", "dateCreated": "2016-03-04T08:58:54.000Z", "dateModified": "2016-03-04T08:58:54.000Z", "author": "Martin Renvoize", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[,](?![^(]*\\))", "permalinkFragment": "oK3cQ5", "isFavorite": false, "isStarred": false}, {"title": "Title Casing", "description": "for use in function to title case a string;\nfunction cap(str) {\n    return str.replace(/\\w\\S*/g, function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n}", "dateCreated": "2016-03-09T09:20:45.000Z", "dateModified": "2016-03-09T09:20:45.000Z", "author": "Tamara F", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\w\\S*", "permalinkFragment": "dG5yF0", "isFavorite": false, "isStarred": false}, {"title": "MONTHDAY", "description": "", "dateCreated": "2016-03-11T11:20:13.000Z", "dateModified": "2016-03-11T11:20:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])", "permalinkFragment": "nC4kT7", "isFavorite": false, "isStarred": false}, {"title": "hex number check", "description": "check if a string is a hex number", "dateCreated": "2016-03-14T10:15:33.000Z", "dateModified": "2016-03-14T10:15:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?:0[xX])?[0-9a-fA-F]+", "permalinkFragment": "hT9uW5", "isFavorite": false, "isStarred": false}, {"title": "Num\u00e9ro de s\u00e9curit\u00e9 sociale (France)", "description": "", "dateCreated": "2016-03-14T15:06:20.000Z", "dateModified": "2016-03-14T15:06:20.000Z", "author": "Anas", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[12][0-9]{2}(0[1-9]|1[0-2])(2[AB]|[0-9]{2})[0-9]{3}[0-9]{3}([0-9]{2})", "permalinkFragment": "sF0cT6", "isFavorite": false, "isStarred": false}, {"title": "get all between 2 lines", "description": "", "dateCreated": "2016-03-15T20:55:58.000Z", "dateModified": "2016-03-15T20:55:58.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\b(Information)\\b([\\S\\s]*?)\\b(Email)\\b", "permalinkFragment": "kJ3lJ2", "isFavorite": false, "isStarred": false}, {"title": "extract node values from xml string", "description": "extract node values from xml string", "dateCreated": "2016-03-17T07:13:26.000Z", "dateModified": "2016-03-17T07:13:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<suburb>(.+?)<\\/suburb>", "permalinkFragment": "zX6xV1", "isFavorite": false, "isStarred": false}, {"title": "Positive Ints", "description": "", "dateCreated": "2016-03-21T16:43:28.000Z", "dateModified": "2016-03-21T16:43:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[0-9]+$", "permalinkFragment": "nV5fT9", "isFavorite": false, "isStarred": false}, {"title": "mikrotik", "description": "", "dateCreated": "2016-03-22T01:32:32.000Z", "dateModified": "2016-03-22T01:32:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": ".+HappyMK\\s?(?<action>\\S+)\\s(?<chain>\\w+):\\sin:(?<int_in>\\S+)\\sout:(?<int_out>\\S+), src-mac\\s(?<src_mac>\\S+),\\sproto\\s(?<prot>\\w+)(\\s(?<flags>\\S+),|,)\\s(?<src_ip>\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b):(?<src_port>\\d+)->(?<dest_ip>\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b):(?<dest_port>\\d+),(\\s(?<NAT>\\w+)\\s\\((?<src_nat_localip>\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b):(?<src_nat_local_port>\\d+)->(?<src_nat_public_ip>\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b):(?<src_nat_public_port>\\d+)\\)->(?<dest_nat_ip>\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b):(?<dest_nat_port>\\d+),)?(\\sprio\\s(?<prio>\\d+->\\d+),)?\\slen\\s(?<len>\\d+)", "permalinkFragment": "vO8eJ4", "isFavorite": false, "isStarred": false}, {"title": "Diiff", "description": "", "dateCreated": "2016-03-25T16:12:55.000Z", "dateModified": "2016-03-25T16:12:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "yssdsdifff", "permalinkFragment": "yZ9bH5", "isFavorite": false, "isStarred": false}, {"title": "the many john smiths", "description": "", "dateCreated": "2016-03-29T19:24:18.000Z", "dateModified": "2016-03-29T19:24:18.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[jJ]o\\w+\\s[A-Z]*|S\\w+", "permalinkFragment": "tO3eL7", "isFavorite": false, "isStarred": false}, {"title": "Complete Machine Readable Passport pattern", "description": "Regex to identify and split the components of a machine readable passport pattern text", "dateCreated": "2016-03-30T12:46:33.000Z", "dateModified": "2016-03-30T12:46:33.000Z", "author": "Igor Ferreira", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<type>[A-Z])(?<subtype>[<A-Z])(?<country>\\w{3})(?<lname>[A-Z]+)(?<lname2><[A-Z]+){0,}<<(?<fname>[A-Z]+)(?<mname1><[A-Z]+){0,}(?<complement><){0,}\\n(?<pnum>[\\d\\w]{9})(?<pnumcheck>\\d{1})(?<nat>\\w{3})(?<yob>\\d{2})(?<mob>\\d{2})(?<dob>\\d{2})(?<dobcheck>\\d{1})(?<sex>M|F|<{1})(?<yoe>\\d{2})(?<moe>\\d{2})(?<doe>\\d{2})(?<expcheck>\\d{1})(?<pid>[\\d\\w<]{14})(?<pidcheck>\\d{1})(?<generalcheck>\\d{1})", "permalinkFragment": "oO6qN8", "isFavorite": false, "isStarred": false}, {"title": "Validaci\u00f3n de numeros de tel\u00e9fono", "description": "", "dateCreated": "2016-04-02T17:18:11.000Z", "dateModified": "2016-04-02T17:18:11.000Z", "author": "devsolarte@gmail.com", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:[\\+]{1})?(?:\\([0-9]{1,2}\\) ?)?(?:[0-9] ?-?){6,14}[0-9]$", "permalinkFragment": "oE4vN6", "isFavorite": false, "isStarred": false}, {"title": "get href", "description": "gets value of href", "dateCreated": "2016-04-03T00:32:34.000Z", "dateModified": "2016-04-03T00:32:34.000Z", "author": "me", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<a href=\"(.+?)\">.+<.+>", "permalinkFragment": "nK1nL4", "isFavorite": false, "isStarred": false}, {"title": "Separating Server and Domain from FQDN", "description": "", "dateCreated": "2016-04-05T03:10:50.000Z", "dateModified": "2016-04-05T03:10:50.000Z", "author": "Awan", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<ServerName>[^.][a-z 0-9 A-Z _ -]*)\\.(?<Domain>.*)", "permalinkFragment": "xX1fR2", "isFavorite": false, "isStarred": false}, {"title": "Local url detection", "description": "Detect if an url is local (even if written in an absolute way)\n", "dateCreated": "2016-04-06T09:48:02.000Z", "dateModified": "2016-04-06T09:48:02.000Z", "author": "Jean Fenouil", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((?:(?:https?):\\/\\/)?(?:regex101\\.com|www\\.regex101\\.com|regex101\\.com|(?<![:\\/])\\/)[-a-z0-9+&@#\\/%?=~_|!:,.;]*[-a-z0-9+&@#\\/%=~_|])", "permalinkFragment": "nE3kJ9", "isFavorite": false, "isStarred": false}, {"title": "Steam ID Regex", "description": "Will match and assign to named groups any form of identification for a steam user. Note that profile links and steamid64s are exclusive, preferring the more specific definition to the other, as well as is the case with customurls and full custom profile links.", "dateCreated": "2016-04-06T16:17:09.000Z", "dateModified": "2016-04-06T16:17:09.000Z", "author": "jokleinn", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<CUSTOMPROFILE>https?\\:\\/\\/steamcommunity.com\\/id\\/[A-Za-z_0-9]+)|(?<CUSTOMURL>\\/id\\/[A-Za-z_0-9]+)|(?<PROFILE>https?\\:\\/\\/steamcommunity.com\\/profiles\\/[0-9]+)|(?<STEAMID2>STEAM_[10]:[10]:[0-9]+)|(?<STEAMID3>\\[U:[10]:[0-9]+\\])|(?<STEAMID64>[^\\/][0-9]{8,})", "permalinkFragment": "gC6oY7", "isFavorite": false, "isStarred": false}, {"title": "fiddler raw to php array", "description": "", "dateCreated": "2016-04-07T14:04:19.000Z", "dateModified": "2016-04-07T14:04:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([^=]+)=([^&]*)&", "permalinkFragment": "hU3tT8", "isFavorite": false, "isStarred": false}, {"title": "URL with Port", "description": "", "dateCreated": "2016-04-08T08:47:43.000Z", "dateModified": "2016-04-08T08:47:43.000Z", "author": "rkl", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^https?:\\/\\/.+(:[0-9]{4,5})?\\/.*$", "permalinkFragment": "jK0sW3", "isFavorite": false, "isStarred": false}, {"title": "Course GUID", "description": "", "dateCreated": "2016-04-11T17:41:01.000Z", "dateModified": "2016-04-11T17:41:01.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gsUA", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([0-9A-F]{8})-([0-9A-F]{4})-([0-9A-F]{4})-([0-9A-F]{4})-([0-9A-F]{12})", "permalinkFragment": "mK4dM8", "isFavorite": false, "isStarred": false}, {"title": "Capture 2 digits after a dash", "description": "Find all '-' and capture 2 following digits", "dateCreated": "2016-04-12T14:49:55.000Z", "dateModified": "2016-04-12T14:49:55.000Z", "author": "Marie Imperial", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[-](\\d{2})", "permalinkFragment": "eG3hC3", "isFavorite": false, "isStarred": false}, {"title": "DNS and lenght", "description": "Ideal for filter Domain with or without subdomain, and length less than 256.", "dateCreated": "2016-04-18T12:36:49.000Z", "dateModified": "2016-04-18T12:36:49.000Z", "author": "Presta-Lab", "flavor": "pcre", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?=.{3,256}$)((?:[a-z0-9-]{2,65}\\.)?[a-z0-9-]{2,256}\\.[a-z\\.]{2,6})$", "permalinkFragment": "dH1yX2", "isFavorite": false, "isStarred": false}, {"title": "Asterisk channel name", "description": "Extract channel name from Asterisk channel line", "dateCreated": "2016-04-19T15:36:38.000Z", "dateModified": "2016-04-19T15:36:38.000Z", "author": "Denis Bondar", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[A-Z]*\\/?([^@]*)", "permalinkFragment": "nC3sA1", "isFavorite": false, "isStarred": false}, {"title": "Standard first and/or last name", "description": "This just checks for case insensitive first name, last name, or both.", "dateCreated": "2016-04-19T20:24:27.000Z", "dateModified": "2016-04-19T20:24:27.000Z", "author": "Josh Garnick", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([a-z]+)(\\s)?([a-z]*)", "permalinkFragment": "kI5kA7", "isFavorite": false, "isStarred": false}, {"title": "Regular expression for matching parenthesis, two words and comma", "description": "Regular expression for matching parenthesis, two words and comma", "dateCreated": "2016-04-24T11:40:01.000Z", "dateModified": "2016-04-24T11:40:01.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[(]\\w+,\\w+[)]", "permalinkFragment": "sT1fW7", "isFavorite": false, "isStarred": false}, {"title": "get Youtube & Vimeo id", "description": "grab youtube & vimeo id", "dateCreated": "2016-04-27T11:34:46.000Z", "dateModified": "2016-04-27T11:34:46.000Z", "author": "mi-ca.ch", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(http:|https:|)\\/\\/(player.|www.)?(vimeo\\.com|youtu(be\\.com|\\.be|be\\.googleapis\\.com))\\/(video\\/|embed\\/|watch\\?v=|v\\/)?([A-Za-z0-9._%-]*)(\\&\\S+)?", "permalinkFragment": "aY4eS8", "isFavorite": false, "isStarred": false}, {"title": "JavaScript RegEx for Version ID", "description": "This expression is used to attempt to ID version of code.", "dateCreated": "2016-04-27T16:14:47.000Z", "dateModified": "2016-04-27T16:14:47.000Z", "author": "Henry Rieke", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\b((v.+)|(a|alpha.+)|(b|beta.+))?\\s?(\\d+\\.)?(\\d+\\.)?(\\*|\\d+).+((a|alpha.+)|(b|beta.+))?", "permalinkFragment": "wP9kM2", "isFavorite": false, "isStarred": false}, {"title": "Select the first word of each paragraph", "description": "If you need to select only the firs complete word for each paragraph.", "dateCreated": "2016-04-28T18:54:57.000Z", "dateModified": "2016-04-28T18:54:57.000Z", "author": "fmathews28", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\b(^\\w+)", "permalinkFragment": "wC4gP1", "isFavorite": false, "isStarred": false}, {"title": "find colon inside a tag", "description": "", "dateCreated": "2016-05-03T10:34:51.000Z", "dateModified": "2016-05-03T10:34:51.000Z", "author": "RCVS", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "<[^<>]+(:)[^<>]+>", "permalinkFragment": "lW1eJ4", "isFavorite": false, "isStarred": false}, {"title": "url", "description": "took me way to long", "dateCreated": "2016-05-04T10:51:45.000Z", "dateModified": "2016-05-04T10:51:45.000Z", "author": "timmyRS", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((http|https)(\\:\\/\\/)((([a-zA-Z_\\-0-9]{1,2000})(\\.)([a-zA-Z_\\-0-9]{1,2000})(\\.)([a-zA-Z_\\-0-9]{1,16}))|(([a-zA-Z_\\-0-9]{1,2000})(\\.)([a-zA-Z_\\-0-9]{1,16})))((([\\/a-zA-Z\\ _\\-%0-9\\.\\?\\=]{1,3000})|(\\/)|())))", "permalinkFragment": "sE5kK9", "isFavorite": false, "isStarred": false}, {"title": "Simple obfuscated URL catcher", "description": "Sim regexp to try to catch a URL or a obfuscated URL (with spaces) from a string", "dateCreated": "2016-05-04T11:16:44.000Z", "dateModified": "2016-05-04T11:16:44.000Z", "author": "Eduardo Pereira", "flavor": "pcre", "delimiter": "/", "flags": "gui", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(http:\\/\\/\\s*|https:\\/\\/\\s*|ftp:\\/\\/\\s*)?(www\\s*)?(?(1)([.]\\s*))?(?(2)([.]\\s*))?([a-zA-Z0-9.-]{2,256})(\\s*[.]\\s*)(ru|pl|kz|by|ua|com|in|pt|br|co.uk)(?![a-zA-Z])([?|#]{1}[=&#a-zA-Z0-9]{2,128})?", "permalinkFragment": "fC4pU4", "isFavorite": false, "isStarred": false}, {"title": "regex1", "description": "", "dateCreated": "2016-05-06T13:52:26.000Z", "dateModified": "2016-05-06T13:52:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([\\@\\%]\\b[\\w.]+\\b\\%?)", "permalinkFragment": "aB4zG0", "isFavorite": false, "isStarred": false}, {"title": "Regex numbers and spaces", "description": "Get numbers and spaces from string.", "dateCreated": "2016-05-11T22:33:58.000Z", "dateModified": "2016-05-11T22:33:58.000Z", "author": "Emmanuel Tabares", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[0-9\\s]", "permalinkFragment": "uY7lG0", "isFavorite": false, "isStarred": false}, {"title": "Version Number", "description": "", "dateCreated": "2016-05-12T15:29:55.000Z", "dateModified": "2016-05-12T15:29:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\d+(?:\\.\\d+)+)", "permalinkFragment": "yP0nF0", "isFavorite": false, "isStarred": false}, {"title": "zip Ile de France", "description": "", "dateCreated": "2016-05-14T09:42:49.000Z", "dateModified": "2016-05-14T09:42:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(75|91|92|93|94)[0-9]{3}$", "permalinkFragment": "cG6mS6", "isFavorite": false, "isStarred": false}, {"title": "\u6c49\u5b57\u5339\u914d", "description": "", "dateCreated": "2016-05-16T14:41:32.000Z", "dateModified": "2016-05-16T14:41:32.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\\"[^\\\"]*[\\u2E80-\\u9FFF]+[^\\\"]*\\\"", "permalinkFragment": "uE7hD9", "isFavorite": false, "isStarred": false}, {"title": "exp1", "description": "", "dateCreated": "2016-05-18T13:24:58.000Z", "dateModified": "2016-05-18T13:24:58.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\(\\d+\\s\\w+\\W*)", "permalinkFragment": "mW4aD0", "isFavorite": false, "isStarred": false}, {"title": " html{ height:100%}body{ margin:0px; padding:0px; height:100%; min-hei", "description": "", "dateCreated": "2016-05-23T21:32:51.000Z", "dateModified": "2016-05-23T21:32:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\"|^[\" . preg_quote('a-zA-Z 0-9~%.:;*_') . \"]+$|i\"\n", "permalinkFragment": "eB3pX1", "isFavorite": false, "isStarred": false}, {"title": "validate german zip codes", "description": "", "dateCreated": "2016-05-24T11:23:40.000Z", "dateModified": "2016-05-24T11:23:40.000Z", "author": "dopa0002", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?!01000|99999)(0[1-9]\\d{3}|[1-9]\\d{4})$", "permalinkFragment": "uB0nK7", "isFavorite": false, "isStarred": false}, {"title": "Credit Card (Master/Visa)", "description": "Searches for credit card numbers from MasterCard or visa", "dateCreated": "2016-05-27T05:33:15.000Z", "dateModified": "2016-05-27T05:33:15.000Z", "author": "SamPad", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\d{4}[-\\s]?){3}\\d{4}", "permalinkFragment": "qV8zB2", "isFavorite": false, "isStarred": false}, {"title": "Match only first occurrence of word in a line.", "description": "Match only first occurrence of word in a line.", "dateCreated": "2016-05-27T16:24:47.000Z", "dateModified": "2016-05-27T16:24:47.000Z", "author": "Vivek Shah", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(.*?)\\bdefault\\b", "permalinkFragment": "kL3yR7", "isFavorite": false, "isStarred": false}, {"title": "Apache ErrorLog Parsing", "description": "Parse Apache Error Log Line (in default format).\n\nExample:\n[Wed Jun 01 20:05:21.194671 2016] [core:error] [pid 40699] [client ::1:64519] PHP Parse error:  syntax error, unexpected '$t' (T_VARIABLE) in /Projects/trunk/code/php/test.php on line 16", "dateCreated": "2016-06-01T10:48:27.000Z", "dateModified": "2016-06-01T10:48:27.000Z", "author": "garys", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[(?<dttm>.*?)\\]\\s\\[(?:(?<module>.*?):)?(?<level>.*?)\\]\\s\\[pid\\s(?<pid>\\d*)\\]\\s\\[client\\s(?<client>.*?)\\]\\s(?<message>.*)", "permalinkFragment": "tG6aV3", "isFavorite": false, "isStarred": false}, {"title": "OnTheJob CSV Export to Excel Tab Delimited Import", "description": "Lets you rearrange columns of time data exported from the On The Job app to something more useful in Excel as required.\nStill a work in progress as this gets tweaked for improvement and streamlining.", "dateCreated": "2016-06-03T19:48:19.000Z", "dateModified": "2016-06-03T19:48:19.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([1-3]{1,2}-[A-Z][a-z]{2}-[0-9]{2}).([0-9]{5}).([A-Z][A-Za-z].{2,}).([0-9]{1,2}\\.[0-9]{0,2})\\n", "permalinkFragment": "dX3mD9", "isFavorite": false, "isStarred": false}, {"title": "days_and_weeks", "description": "", "dateCreated": "2016-06-07T16:43:36.000Z", "dateModified": "2016-06-07T16:43:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(d)(?:ays?)?|(w)(?:eeks?)?", "permalinkFragment": "sT3wK9", "isFavorite": false, "isStarred": false}, {"title": "EclipseKeyword_2", "description": "", "dateCreated": "2016-06-10T09:05:58.000Z", "dateModified": "2016-06-10T09:05:58.000Z", "author": "Rashmin", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "SPECGRID.*\\n([\\s\\S]*?)\\/", "permalinkFragment": "pR5zT4", "isFavorite": false, "isStarred": false}, {"title": "Email validation", "description": "It validates an email address with alias", "dateCreated": "2016-06-20T23:08:31.000Z", "dateModified": "2016-06-20T23:08:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$", "permalinkFragment": "uU5uO3", "isFavorite": false, "isStarred": false}, {"title": "AliasMatch", "description": "", "dateCreated": "2016-06-22T12:27:30.000Z", "dateModified": "2016-06-22T12:27:30.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^/([^/]*)/([^/]*)/([^/]*)/([^/]*)/(.*)", "permalinkFragment": "zI9dX9", "isFavorite": false, "isStarred": false}, {"title": "Find PHP object variables", "description": "Find PHP object variables, and replace them with (array)brackets.", "dateCreated": "2016-06-22T15:33:15.000Z", "dateModified": "2016-06-22T15:33:15.000Z", "author": "The Milkman", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\$([\\w]+)->([^\\W]+)", "permalinkFragment": "kA2fL3", "isFavorite": false, "isStarred": false}, {"title": "Adress regex", "description": "", "dateCreated": "2016-06-28T18:02:56.000Z", "dateModified": "2016-06-28T18:02:56.000Z", "author": "Ali", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\d+\\s(.+)\\s\\d+\\s\\w+", "permalinkFragment": "nP7sM9", "isFavorite": false, "isStarred": false}, {"title": "Date of Birth ", "description": "with Leap Year support (dd/MM/yyyy)", "dateCreated": "2016-06-30T07:41:45.000Z", "dateModified": "2016-06-30T07:41:45.000Z", "author": "gdZeus (uploaded by limker)", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(^(((0[1-9]|1[0-9]|2[0-8])[\\/](0[1-9]|1[012]))|((29|30|31)[\\/](0[13578]|1[02]))|((29|30)[\\/](0[4,6,9]|11)))[\\/](19|[2-9][0-9])\\d\\d$)|(^29[\\/]02[\\/](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)$)", "permalinkFragment": "hZ3nT4", "isFavorite": false, "isStarred": false}, {"title": "8 Digits Password", "description": "", "dateCreated": "2016-06-30T10:34:27.000Z", "dateModified": "2016-06-30T10:34:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$", "permalinkFragment": "lD1tN4", "isFavorite": false, "isStarred": false}, {"title": "new anchor", "description": "", "dateCreated": "2016-07-13T07:11:50.000Z", "dateModified": "2016-07-13T07:11:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(<a.*href=)[\"'](.*)[\"']", "permalinkFragment": "lW9qA9", "isFavorite": false, "isStarred": false}, {"title": "Match directory path", "description": "match with or without prevailing/trailing slashes", "dateCreated": "2016-07-13T15:56:16.000Z", "dateModified": "2016-07-13T15:56:16.000Z", "author": "@zakiaziz", "flavor": "pcre", "delimiter": "~", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^/?[\\w-/]+$", "permalinkFragment": "wP8iY8", "isFavorite": false, "isStarred": false}, {"title": "httplinkresolver", "description": "get special tag contains html link", "dateCreated": "2016-07-14T12:39:18.000Z", "dateModified": "2016-07-14T12:39:18.000Z", "author": "okeskiner", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[[Video:(http)\\:\\/\\/[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(\\/\\S*)?4", "permalinkFragment": "gF6nP3", "isFavorite": false, "isStarred": false}, {"title": "Remove multiple white spaces between words", "description": "Remove multiple white spaces between words and replace it with the char of your choosing.", "dateCreated": "2016-07-14T19:46:57.000Z", "dateModified": "2016-07-14T19:46:57.000Z", "author": "binary_fm", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\s{2,}", "permalinkFragment": "jS1iV6", "isFavorite": false, "isStarred": false}, {"title": "URL extractor", "description": "Extract parts of an URL.", "dateCreated": "2016-07-16T18:05:49.000Z", "dateModified": "2016-07-16T18:05:49.000Z", "author": "Gilles Marchand", "flavor": "pcre", "delimiter": "/", "flags": "guim", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?#protocol)(?<protocol>(?:ht|f)tps?)\\:(?:\\/\\/)?(?#user/password)(?:(?<user>\\S+?)(?::(?<password>\\S+))?@)?(?#domaine)(?<domain>(?:(?:[a-z\\x{00a1}-\\x{ffff}0-9-]++\\.)+(?#top_level_domain)(?<top_level_domain>[a-z\\x{00a1}-\\x{ffff}]{2,}))|(?<ip>(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){3}))(?#port)(?::(?<port>\\d{1,5}))?(?#directory)(?<directory>\\/(?:[^?#\\s])*)?(?#query)(?:\\?(?<query>[^#\\s]*))?(?#anchor)(?:#(?<anchor>[^\\s]*))?$", "permalinkFragment": "vY7yN6", "isFavorite": false, "isStarred": false}, {"title": "RewriteMatch into subfolder", "description": "RegEx for an .htaccess rewrite into a subfolder without provoking a 'too many redirects' error", "dateCreated": "2016-07-25T11:54:01.000Z", "dateModified": "2016-07-25T11:54:01.000Z", "author": "Nils B.", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\\/(\\w+)$", "permalinkFragment": "mK3hX5", "isFavorite": false, "isStarred": false}, {"title": "Password (4 Classes)", "description": "1 Uppercase\n1 lower case\n1 number\n1 not a number or letter", "dateCreated": "2016-08-06T21:47:13.000Z", "dateModified": "2016-08-06T21:47:13.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?=^.{10,}$)(?=.*?\\d)(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[^a-zA-Z\\d])", "permalinkFragment": "yS3nH1", "isFavorite": false, "isStarred": false}, {"title": "paramaterised sql like expressions for sybase", "description": "", "dateCreated": "2016-08-10T12:00:11.000Z", "dateModified": "2016-08-10T12:00:11.000Z", "author": "robessog", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((?<=[ )()']where)|(?<=[ )()']and)|(?<=[ )()']o[rn])|(?<=[ )()']if)|(?<=[ )()']when)|(?<=having))+(\\s|\\()+[)(,'+_\u00a5\u00a3$#\\@\\w\\[\\]\\.\\s]+like\\s*\\(?\\s*(('((\\w|%|'{2})*)')\\s*\\+)*\\s*@p\\d+\\s*(\\+('%'))*\\)", "permalinkFragment": "qX2cQ2", "isFavorite": false, "isStarred": false}, {"title": "multiple sql like expressions", "description": "", "dateCreated": "2016-08-10T12:04:12.000Z", "dateModified": "2016-08-10T12:04:12.000Z", "author": "robessog", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\s|\\))like(\\s|\\()", "permalinkFragment": "bO9jY3", "isFavorite": false, "isStarred": false}, {"title": "search for a regex excluding a word", "description": "^((?!proposed_).)*((project|task)_details)\n\nmatches:\n\nproject_details\ntask_details\n\nNOT:\n\nproposed_project_details", "dateCreated": "2016-08-11T18:53:07.000Z", "dateModified": "2016-08-11T18:53:07.000Z", "author": "aymon", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^((?!proposed_).)*((project|task)_details)", "permalinkFragment": "rN2uG8", "isFavorite": false, "isStarred": false}, {"title": "Delete Blank Lines", "description": "", "dateCreated": "2016-08-12T17:19:35.000Z", "dateModified": "2016-08-12T17:19:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[ \\t]*$\\r?\\n", "permalinkFragment": "iV9dI6", "isFavorite": false, "isStarred": false}, {"title": "IPv6 detection", "description": "It's too large to match with all which seems like an IPv6. It's not perfect, but it's detects more valid IPv6 than some others regex.", "dateCreated": "2016-08-15T13:31:26.000Z", "dateModified": "2016-08-15T13:31:26.000Z", "author": "Ajabep", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[(?:[a-zA-Z0-9]{0,4}:?){1,8}\\]|\\[(?:[a-zA-Z0-9]{0,4}:?){1,4}(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\]", "permalinkFragment": "iQ4uE0", "isFavorite": false, "isStarred": false}, {"title": "Matches human genomic coordinates", "description": "This expression matches human genomic coordinates, similat to those being used by genome browsers (e.g. the UCSC Genome Browser). It can match: chromosome, chromosome start, chromosome start end, chromosome start end reference sequence, chromosome start end reference sequence alternative sequence. The last two are useful when searching for mutations.\n\nExamples:\n1 # matches chromosome 1 \nchr1 # matches chromosome 1 \n1:12345 # matches chromosome 1, start at base 12345\nchr11:12345-78900 # matches chromosome 1, start at base 12345, end at base 78900\nchr11 12345 78900 # matches chromosome 1, start at base 12345, end at base 78900\n11:12345-12345_A/G # matches chromosome 1, start at base 12345, end at base 12345 and a substitution of A to G\n11  12345  12347  AG GC # matches chromosome 1, start at base 12345, end at base 12345 and a substitution of AG to GC\n\n\n", "dateCreated": "2016-08-19T05:32:47.000Z", "dateModified": "2016-08-19T05:32:47.000Z", "author": "Panagiotis Moulos", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(chr)?(1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|X|Y)((:|\\s+)\\d+((-|\\s+)\\d+((_|\\s+)[ACGT]+((\\/|\\s+)[ACGT]+)?)?)?)?$", "permalinkFragment": "gU7xN4", "isFavorite": false, "isStarred": false}, {"title": "Escape regex meta characters", "description": "This expression escapes characters, which have a special meaning in regex, like .?[]/ and so on.\n\nUse it to transform a string that you want to use literally in another regex.", "dateCreated": "2016-08-20T09:22:32.000Z", "dateModified": "2016-08-20T09:22:32.000Z", "author": "Florian Andresen", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([-\\[\\]{}()*+?.,\\\\\\/^$|#])", "permalinkFragment": "zV6hA8", "isFavorite": false, "isStarred": false}, {"title": "match HTML-safe strings with at least one alphanumeric character", "description": "", "dateCreated": "2016-08-24T16:31:22.000Z", "dateModified": "2016-08-24T16:31:22.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?!^\\d+$)^[a-zA-Z\\d\\-\\_]*$", "permalinkFragment": "zR9mZ4", "isFavorite": false, "isStarred": false}, {"title": "Email combo to username combo", "description": "", "dateCreated": "2016-08-30T15:34:05.000Z", "dateModified": "2016-08-30T15:34:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "@(.+?):", "permalinkFragment": "nU3qA3", "isFavorite": false, "isStarred": false}, {"title": "negative lookahead", "description": "", "dateCreated": "2016-08-31T13:20:06.000Z", "dateModified": "2016-08-31T13:20:06.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(commit [0-9a-f]{40})(\\sMerge:\\s[0-9a-f]{7}\\s[0-9a-f]{7})?\\sAuthor:\\s(\\w*)\\sDate:\\s[a-zA-Z]{3}\\s[a-zA-z]{3}\\s\\d\\d\\s\\d\\d:\\d\\d:\\d\\d\\s[\\d]{4}\\s\\+0200\\s+(?<message>(?:(?!commit .{40}).)+)", "permalinkFragment": "uW4yX9", "isFavorite": false, "isStarred": false}, {"title": "Find IP", "description": "Regex to match an IPv4 address at beginning", "dateCreated": "2016-09-05T18:29:27.000Z", "dateModified": "2016-09-05T18:29:27.000Z", "author": "edoz90", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^((?:[0-9]{1,3}\\.)){3}[0-9]{1,3}", "permalinkFragment": "yO7kE2", "isFavorite": false, "isStarred": false}, {"title": "URL MATCH", "description": "URL MATCH", "dateCreated": "2016-09-08T00:45:15.000Z", "dateModified": "2016-09-08T00:45:15.000Z", "author": "activesatan", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(http(s)?(:\\/\\/))?(www\\.)?[a-zA-Z0-9-_\\.]+(\\.[a-zA-Z0-9]{2,})([-a-zA-Z0-9:%_\\+.~#?&\\/\\/=]*)", "permalinkFragment": "qB8dB5", "isFavorite": false, "isStarred": false}, {"title": "Number or Range", "description": "Allows either a number (e.g. \"1\", \"1.01\") or a range (e.g. \"1-2\", \"1.0 - 1.3\").  Also allows whitespace on either side of the numbers.", "dateCreated": "2016-09-10T17:57:56.000Z", "dateModified": "2016-09-10T17:57:56.000Z", "author": "Mark Newcomb", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\\s*(\\d+(?:\\.\\d+)?)(?:\\s*\\-\\s*(\\d+(?:\\.\\d+)?))?\\s*$", "permalinkFragment": "fT2hY3", "isFavorite": false, "isStarred": false}, {"title": ".*(\\d+).* Selects last number", "description": "", "dateCreated": "2016-09-13T20:27:18.000Z", "dateModified": "2016-09-13T20:27:18.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": ".*(\\d+).*", "permalinkFragment": "zI0wU1", "isFavorite": false, "isStarred": false}, {"title": "Test numeric input to be between 0,01 and 100,00", "description": "Tests a numeric input to be between 0,00 < input <= 100,00. Decimals are optional but have at max 2 places.", "dateCreated": "2016-09-14T11:55:56.000Z", "dateModified": "2016-09-14T11:55:56.000Z", "author": "Torsten Walter", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(0(?=,(0[1-9]|[1-9]\\d?))|[1-9]\\d?|100(?=,0{1,2}$)|100(?!,\\d{2}))(,\\d{1,2})?$", "permalinkFragment": "aQ9wX6", "isFavorite": false, "isStarred": false}, {"title": "IP Address", "description": "IPv4 Address Input", "dateCreated": "2016-09-19T10:31:34.000Z", "dateModified": "2016-09-19T10:31:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$", "permalinkFragment": "hU1hW8", "isFavorite": false, "isStarred": false}, {"title": "Eircode", "description": "Eircode validation for new postcodes identifiers in Republic of Ireland.\nCase-insensetive for easier user input. Added optional space separator to follow same pattern as in UK post codes and in examples used in eircode spec.", "dateCreated": "2016-09-19T14:19:17.000Z", "dateModified": "2016-09-19T14:19:17.000Z", "author": "Arek Jaworski", "flavor": "pcre", "delimiter": "/", "flags": "mgi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([AC-FHKNPRTV-Y]{1}[0-9]{2}|D6W)[ ]?[0-9AC-FHKNPRTV-Y]{4}$", "permalinkFragment": "mS4fO6", "isFavorite": false, "isStarred": false}, {"title": "Match multiline comments /* ... */", "description": "It won't match single line comments like this one:\n//* This comment won't be match */\n^ see the double /\n\nWorks in PHP without the g modifier.\n", "dateCreated": "2016-09-21T07:54:27.000Z", "dateModified": "2016-09-21T07:54:27.000Z", "author": "SimonaHalep", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<!\\/)\\/\\*((?:(?!\\*\\/).|\\s)*)\\*\\/", "permalinkFragment": "nW6hU2", "isFavorite": false, "isStarred": false}, {"title": "CSS @media selector", "description": "Matches a CSS @media selector, matches outer {} curly brackets, works with every CSS code, minified too.", "dateCreated": "2016-09-21T13:26:25.000Z", "dateModified": "2016-09-21T13:26:25.000Z", "author": "emd4", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(@.*?:[^}{@]+(\\{(?:[^}{]+|\\{(?:[^}{]+|\\{[^}{]*\\})*\\})*\\}))", "permalinkFragment": "pV0xQ8", "isFavorite": false, "isStarred": false}, {"title": "php naming convension (classes, vars, functions, constants)", "description": "PHP Basic coding standard\nNaming Convension pattern: /^[\\pL_][\\pL_\\pNd]*$/", "dateCreated": "2016-09-25T13:48:14.000Z", "dateModified": "2016-09-25T13:48:14.000Z", "author": "Najmuddeen Mohammed", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[\\pL_][\\pL_\\pNd]*$", "permalinkFragment": "yQ7hX2", "isFavorite": false, "isStarred": false}, {"title": "Palindrome", "description": "Captures a palindrome of 9 digits or less", "dateCreated": "2016-09-27T03:04:19.000Z", "dateModified": "2016-09-27T03:04:19.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(.?)(.?)(.?)(.?)(.?).?\\5\\4\\3\\2\\1$", "permalinkFragment": "wL2rL1", "isFavorite": false, "isStarred": false}, {"title": "foder add prefix", "description": "auto prefix (\"/\") to folder", "dateCreated": "2016-12-10T19:37:25.000Z", "dateModified": "2016-12-10T19:37:25.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?=[^\\/])", "permalinkFragment": "vu2eAY", "isFavorite": false, "isStarred": false}, {"title": "domain for Google Data Studio (re2 dialect)", "description": "Matches subdomain, domain and top level in a field that contains a urls.\n\nhttps://www.whatever.you.want ---> whatever.you.want", "dateCreated": "2016-12-12T04:12:36.000Z", "dateModified": "2016-12-12T04:12:36.000Z", "author": "", "flavor": "golang", "delimiter": "`", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "https?://w*[[:punct:]]?([^/]+)/?", "permalinkFragment": "NSTqIN", "isFavorite": false, "isStarred": false}, {"title": "Hostname validation", "description": "Validates subdomain, root domain, and wild card domains", "dateCreated": "2017-01-29T01:16:20.000Z", "dateModified": "2017-01-29T01:16:20.000Z", "author": "AnonymousDapper", "flavor": "golang", "delimiter": "`", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?i)^(?:([a-z0-9-]+|\\*)\\.)?([a-z0-9-]{1,61})\\.([a-z0-9]{2,7})$", "permalinkFragment": "dNccai", "isFavorite": false, "isStarred": false}, {"title": "IPv4 dotted decimal", "description": "This regexp was written for Regex Tuesday Challenge - Week Six.", "dateCreated": "2017-02-07T15:39:41.000Z", "dateModified": "2017-02-07T15:39:41.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([0-2]+\\d[0-5]?|[1]\\d?\\d+|[1-9][0-9])\\.([0-2]?\\d[0-5]?|[1]\\d?\\d+|[1-9][0-9])\\.([0-2]?\\d[0-5]?|[1]\\d?\\d+|[1-9][0-9])\\.([0-2]?\\d[0-5]?|[1]\\d?\\d+|[1-9][0-9])$", "permalinkFragment": "q266iW", "isFavorite": false, "isStarred": false}, {"title": "Ansible Host Var checking", "description": "We had an issue where the \"hosts=some_var\" value could cause mass deployments if the wrong value was passed through. Specifically a comma with nothing surrounding it (i.e. \"hosts=,\"). This regex will allow us to fail when certain characters are present.", "dateCreated": "2017-02-10T19:33:33.000Z", "dateModified": "2017-02-10T19:33:33.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([a-zA-Z0-9_\\-]+(,?[a-zA-Z0-9_\\-]+))*$", "permalinkFragment": "v355Mi", "isFavorite": false, "isStarred": false}, {"title": "check name", "description": "", "dateCreated": "2017-02-12T17:55:50.000Z", "dateModified": "2017-02-12T17:55:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "giu", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[[:alpha:]\\ \\-\\']+$", "permalinkFragment": "ZPi2JA", "isFavorite": false, "isStarred": false}, {"title": "URL parser", "description": "The best way to parse URL via Regex. This can be used in javascript, PHP, etc.", "dateCreated": "2017-03-08T06:26:15.000Z", "dateModified": "2023-07-20T23:11:42.000Z", "author": "Ivijan-Stefan Stipic", "flavor": "pcre2", "delimiter": "/", "flags": "", "version": 2, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(https?\\:)\\/\\/(([^:\\/?#]*)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#]*)(\\?[^#]*|)(#.*|)$", "permalinkFragment": "ibVctF", "isFavorite": false, "isStarred": false}, {"title": "Re Twitts", "description": "find retwitt hashtag on Twitters and add a label to highlight it.", "dateCreated": "2017-10-04T10:48:16.000Z", "dateModified": "2017-10-04T10:48:16.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "RT(\\A|\\s)@(\\w)+", "permalinkFragment": "WxWPxL", "isFavorite": false, "isStarred": false}, {"title": "Re Twitts", "description": "find retwitt hashtag on Twitters and add a label to highlight it.", "dateCreated": "2017-10-04T10:48:37.000Z", "dateModified": "2017-10-04T10:48:37.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "RT(\\A|\\s)@(\\w)+", "permalinkFragment": "HPauGH", "isFavorite": false, "isStarred": false}, {"title": "Iranian birth date", "description": "# **Iranian birth date aka tarikh tavalod**\n\u062a\u0627\u0631\u06cc\u062e \u062a\u0648\u0644\u062f \u0627\u06cc\u0631\u0627\u0646\u06cc \u0647\u0627", "dateCreated": "2017-10-30T20:10:44.000Z", "dateModified": "2017-10-30T20:10:44.000Z", "author": "ehsanJamalian", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "1[3-4]{1}[0-9]{2}\\/[0-1]{1}[0-9]{1}\\/[0-3]{1}[0-9]{1}", "permalinkFragment": "w6E9bf", "isFavorite": false, "isStarred": false}, {"title": "shenasname code", "description": "# Iranian identity code aka shenasname code\n\u0634\u0645\u0627\u0631\u0647 \u0634\u0646\u0627\u0633\u0646\u0627\u0645\u0647 \u0627\u06cc\u0631\u0627\u0646\u06cc \u0647\u0627", "dateCreated": "2017-10-30T20:08:59.000Z", "dateModified": "2017-10-30T20:08:59.000Z", "author": "ehsanJamalian", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\d{1,10}", "permalinkFragment": "735dX7", "isFavorite": false, "isStarred": false}, {"title": "Matching Character Class Transitions (customization of \\b)", "description": "\\b can be replicated as (?<=\\w)(?=\\W)|(?<=\\W)(?=\\w)\n\nUnderstanding how to create these class transitions can be beneficial for several reasons. In this instance, counting the results of this regex can be used to measure randomness within strings containing multiple character classes.", "dateCreated": "2018-02-05T18:03:07.000Z", "dateModified": "2018-02-05T18:03:07.000Z", "author": "@notGeorgePBurdell", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<CCT>(?:(?<=[A-Z])(?=[^A-Z]))|(?:(?<=[a-z])(?=[^a-z]))|(?:(?<=\\d)(?=\\D))|(?:(?<=[^A-Za-z\\d])(?=[A-Za-z\\d])))", "permalinkFragment": "JGTc70", "isFavorite": false, "isStarred": false}, {"title": "NSU ID Card Checker", "description": "", "dateCreated": "2018-03-03T22:02:13.000Z", "dateModified": "2018-03-03T22:02:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\\d{2}[1-3]{1}(?!0{4}|9{4})\\d{4}[0-6]{1}(?=42)\\d{2}$", "permalinkFragment": "cuHrzD", "isFavorite": false, "isStarred": false}, {"title": "BEM", "description": "CSS Coding Guideline **BEM** (Block Element Modifier)", "dateCreated": "2020-07-15T16:35:32.000Z", "dateModified": "2020-07-15T16:35:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\n(?#Block)\n(?<block>(?:[a-z0-9]+)(?:-[a-z0-9]+)*)\n\n(?:__\n(?#Element)\n(?<element>(?:[a-z0-9]+)(?:-[a-z0-9]+)*)\n)?\n\n(?:--\n(?#Modifier)\n(?<modifier>(?:[a-z0-9]+)(?:-[a-z0-9]+)*)\n)?\n$", "permalinkFragment": "9wkS9p", "isFavorite": false, "isStarred": false}, {"title": "\u624b\u673a\u6b63\u5219", "description": "", "dateCreated": "2020-07-16T09:32:41.000Z", "dateModified": "2020-07-16T09:32:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8}$", "permalinkFragment": "qd5afn", "isFavorite": false, "isStarred": false}, {"title": "Resolvers", "description": "APD SFs too general", "dateCreated": "2020-08-04T20:16:52.000Z", "dateModified": "2020-08-04T20:16:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(\\/video\\/{2}.+)\\/", "permalinkFragment": "1jJ5BN", "isFavorite": false, "isStarred": false}, {"title": "DD/MM pattern", "description": "Checks for DD/MM pattern must start and end with the digits no letters or other symbols allowed.\nMade by your good guy Levent M.\n(it accepts also 28+/02 but yhea one problem at a time right?)", "dateCreated": "2020-08-16T14:31:24.000Z", "dateModified": "2020-08-16T14:31:24.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([0-2][0-9]|(3)[0-1])(\\/)(((0)[0-9])|((1)[0-2]))$", "permalinkFragment": "iYcHpP", "isFavorite": false, "isStarred": false}, {"title": "Replace singleline comments with `//` or `/*...*/`, and also multi-line comments in json files. ", "description": "This has been validated against a tsconfig.json file that i'm using and nothing else. It should work fine though.\n\nYou can use this to replace comments with vscode find and replace, but using the regex in the search field, and '$2' without quotes in the replace field.", "dateCreated": "2020-11-06T23:48:20.000Z", "dateModified": "2020-11-06T23:48:20.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\/\\/.*| ?\\/\\*[^]*?\\*\\/)(,?)$", "permalinkFragment": "n5XTe1", "isFavorite": false, "isStarred": false}, {"title": "IPv4 with an undefined amount of 0 before every number", "description": "This regex matches every IPv4 address with or without 0s before every number.\n\nFor example:\n192.168.1.1\n00000000000192.168.00000000000001.01", "dateCreated": "2020-11-12T16:26:42.000Z", "dateModified": "2020-11-12T16:26:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:0*(?:25[0-5]|2[0-4]\\d|1?\\d{1,2})\\.){3}0*(?:25[0-5]|2[0-4]\\d|1?\\d{1,2})$", "permalinkFragment": "mXIFZ2", "isFavorite": false, "isStarred": false}, {"title": "Date - Extract & Validate - Fully tested - Format YYYY-MM-DD (dynamic parts separator / can use a different separator)", "description": "\nA fully tested regex that extracts and validates date parts using named capturing groups.\n\n\\\n**Validations:**\n- Year must be preceded by nothing or a non-digit character\n- Year must have 4 digits\n- Month must be between 01 and 12\n- Month must have 2 digits\n- Day must be between 01 and the maximum number of days for the month (e.g. february can't have more than 29 days)\n- Day must have 2 digits\n- Day must be followed by nothing or a non-digit character\n- Separator must be any single character that is not a space or an alphanumeric character\n- Separator must be the same between each date part\n\n\\\n**Capturing groups:**\n```plain\n| # |   Name  | Description                         |\n|:-:|:-------:|-------------------------------------|\n| 1 |  `year` | 4 digits of the year                |\n| 2 |  `sep`  | Date parts separator                |\n| 3 | `month` | 2 digits of the month               |\n| 4 |  `day`  | 2 digits of the date (day of month) |\n```\n\n\\\n**Example usage:**\n```js\nlet match = regex.exec('2020-11-22')\n\nconsole.log('year: %s, month: %s, day: %s',\n            match.groups.year,\n            match.groups.month,\n            match.groups.day)\n\n// year: 2020, month: 11, day: 22\n```\n\n\\\n**Compatibility:** _(updated 2020-11-20)_\n- Chrome >= 64\n- Edge >= 79\n- Firefox >= 78\n- IE incompatible (lookbehind assertions & named capture groups not supported)\n- Opera >= 51\n- Safari incompatible (lookbehind assertions not supported)\n- NodeJS >= 10.0.0\n\nSee [regex compatibility table](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Browser_compatibility).\n\n\\\n_**Note:** does not validate leap years (not really possible in regex)_", "dateCreated": "2020-11-20T19:31:04.000Z", "dateModified": "2020-11-20T19:31:04.000Z", "author": "Elie Grenon (DrunkenPoney) <elie.grenon.1@gmail.com>", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<=\\D|^)(?<year>\\d{4})(?<sep>[^\\w\\s])(?<month>1[0-2]|0[1-9])\\k<sep>(?<day>0[1-9]|[12][0-9]|(?<=11\\k<sep>|[^1][4-9]\\k<sep>)30|(?<=1[02]\\k<sep>|[^1][13578]\\k<sep>)3[01])(?=\\D|$)", "permalinkFragment": "YgSOEC", "isFavorite": false, "isStarred": false}, {"title": "lottery data picker", "description": "for azlottoapi", "dateCreated": "2020-12-28T20:55:27.000Z", "dateModified": "2020-12-28T20:55:27.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\\"winningNumbers\\\":(?P<winningNumbers>\\\"[\\d|\\W]+\\\"),\\\"drawOrder\\\":(?P<drawOrder>\\\"[\\d|\\W]+\\\"),\\\"winningBall\\\":(?P<winningBall>[\\d]+)", "permalinkFragment": "taM6qX", "isFavorite": false, "isStarred": false}, {"title": "Simple Best URL Regex Match", "description": "# Best URL Regex  to match URL, This is simple and can match 64K of url regex under 20ms\n\n## Regex Matches All Below and more:\n\n- https://example.domain\n- http://example.domain\n- //example.domain\n- //example.com\n- https://example.com:34\n- //example.com:23\n- example.com", "dateCreated": "2021-01-11T07:42:20.000Z", "dateModified": "2021-01-11T07:42:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?P<protocol>[a-z\\-]+)?:?(?P<host>\\/\\/.*\\.[^\\/]+)$", "permalinkFragment": "4dPgxn", "isFavorite": false, "isStarred": false}, {"title": "Full Best URL Regex Match", "description": "# Best Full URL Regex  to match URL, This is simple and can match 64K of url regex under 77ms\n\n## Regex Matches All Below and more:\n\n- https://example.domain\n- http://example.domain\n- //example.domain\n- //example.com\n- https://example.com:34\n- //example.com:23\n- example.com", "dateCreated": "2021-01-11T07:46:16.000Z", "dateModified": "2021-01-11T07:46:16.000Z", "author": "divineniiquaye", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?<protocol>[a-z\\-]+)?:?(?<slash>\\/\\/)?(?<host>[a-zA-Z0-9\\.]+)?(?P<port>:\\d+)?$", "permalinkFragment": "ShCB77", "isFavorite": false, "isStarred": false}, {"title": "IpAddress", "description": "Ensure the ip address format is correct", "dateCreated": "2021-01-14T09:00:51.000Z", "dateModified": "2021-01-14T09:00:51.000Z", "author": "aaa", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:2[0-4][0-9]|25[0-5]|1?[0-9]?[0-9])[.](?:2[0-4][0-9]|25[0-5]|1?[0-9]?[0-9])[.](?:2[0-4][0-9]|25[0-5]|1?[0-9]?[0-9])[.](?:2[0-4][0-9]|25[0-5]|1?[0-9]?[0-9])$", "permalinkFragment": "F1iNsT", "isFavorite": false, "isStarred": false}, {"title": "\u041f\u043e\u0447\u0442\u0438 \u0438\u0434\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u0444\u0438\u043b\u044c\u0442\u0440 \u043c\u0430\u0442\u043e\u0432", "description": "\u041f\u043e\u0438\u0441\u043a \u043c\u0430\u0442\u043e\u0432 \u0432 \u0442\u0435\u043a\u0441\u0442\u0435", "dateCreated": "2021-01-15T07:27:12.000Z", "dateModified": "2021-01-15T07:27:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gsimu", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\b(?!\u043f?\u043e\u0441[\u043b|\u043a][\u0430|\u043e]\u0440?\u0431\u043b\u044f\u0435?\u0442?\u044c?\u043b?)\\w*\u0431\u043b\u044f\\w*|(\\w*\u0431\u043b\u044f\u0434\\w*)|(\\w*\u0445\u0443[\u0439|\u0438|\u0435|\u0451|\u044f|]\\w*)|\\b(\u0445\u0443\u043b\u0438)\\b|([\u0435|\u0451]{1,}\u043f\u0442[\u0430|\u0438|\u0435|\u043e]?\\b)|([\u0434\u043e]\\w*[\u0451|\u0435]\u0431)|(\u043f\u0438\u0437\u0434\\w*)|(\u043f\u0438\u0434[\u0430|\u043e|\u0435]\u0440\\w*)|(\u043f\u0438\u0434[\u0435|\u0430|\u043e]\u0440)|(\u043f\u0438\u0434\u0440?[\\w]{1,}\\b)|(\u0433\u0430\u043d\u0434\u043e\u043d\\w*)|\\b(?!\u043d\u0451)(\\w*[\u0435|\u0451]\u0431[\u0430|\u043e|\u0438|\u043d]\\w*)|(\u0435\u0431[\u0435|\u0451|\u0430|\u0443|\u043d]\\w*)|(\\w*\u0435\u0431[\u0430]\\w*)|(\\w*[\u0443|\u0435|\u0437\u0430]{1,2}[\u0435|\u0451]\u0431)|\\b(?!\\w)\\s(\u0451\u0431)\\s", "permalinkFragment": "g3UB7l", "isFavorite": false, "isStarred": false}, {"title": "Persian Mobile Number", "description": "# Persian Mobile Number Matching\n\nIran's international phone code is `+98` and sometimes people use `0098`. All mobile numbers starts with 9 after the code.\n\nSo this pattern matches exactly a sequence of characters which starts with one of `+989`, `0098` or `09` prefixes and total count of characters after these prefixes is exact 9.", "dateCreated": "2021-02-15T10:23:13.000Z", "dateModified": "2021-02-15T10:23:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(00989|\\+989|09)(\\d{9})$", "permalinkFragment": "EvNk10", "isFavorite": false, "isStarred": false}, {"title": "Dutch zipcodes", "description": "", "dateCreated": "2021-02-24T15:54:05.000Z", "dateModified": "2021-02-24T16:08:52.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "i", "version": 3, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:NL-)?(?:[1-9]\\d{3} ?(?:[A-EGHJ-NPRTVWXZ][A-EGHJ-NPRSTVWXZ]|S[BCEGHJ-NPRTVWXZ]))$", "permalinkFragment": "j7gkeT", "isFavorite": false, "isStarred": false}, {"title": "Dutch streetnames + housenumber + extension", "description": "Validates a streetname + housenr + extension \n\nSomestreet 12 b", "dateCreated": "2021-02-25T08:07:59.000Z", "dateModified": "2022-10-20T10:52:06.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "iu", "version": 2, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?<streetname>\\d*[\\p{L}\\d \\'\\/\\-\\.]+)[,\\s]+(?<housenumber>\\d+)\\s*(?<ext>[\\p{L} \\d\\-\\/\\'\"\\(\\)]*)$", "permalinkFragment": "AgbLFX", "isFavorite": false, "isStarred": false}, {"title": "web log entry", "description": "", "dateCreated": "2021-03-11T23:06:36.000Z", "dateModified": "2021-03-11T23:06:36.000Z", "author": "PepeRG", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?P<host>\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3})(\\s-\\s)(?P<user_name>[\\w-]*)(\\s\\[)(?P<time>\\w*\\/\\w*\\/\\d{1,4}:\\d{1,2}:\\d{1,2}:\\d{1,2}\\s-\\d{1,4})(\\]\\s\\\")(?P<request>.*)(\")", "permalinkFragment": "6Ee6Ba", "isFavorite": false, "isStarred": false}, {"title": "Matching decimals in european format (dot as grouping separator, comma as decimal separator)", "description": "A regex for validating decimal numbers in the European number format (in many parts of Europe at least, including Germany). \nA comma is used as a separator for the decimal number, a dot as a separator for thousand places.", "dateCreated": "2021-03-12T23:31:22.000Z", "dateModified": "2021-03-14T17:43:24.000Z", "author": "Florian Drees", "flavor": "java", "delimiter": "\"", "flags": "gm", "version": 3, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\\d{1,3}(?:\\.\\d{3})*(?:,\\d+)?$|^\\d+(?:,)?\\d+$", "permalinkFragment": "YP1Vdn", "isFavorite": false, "isStarred": false}, {"title": "Comparison of decimals with operators such as <, >, !=, ==, <>", "description": "Regex expression for comparing decimal numbers with the usual comparison operators such as < (less than), <= (less than or equal to), > (greater than), >= (greater than or equal to), != (not equal to), == (equal to), ...\n\nThe regex also allows filtering of data from e.g. a database, whereby the first value is not needed, e.g. [FIELD] < 100", "dateCreated": "2021-03-13T14:23:54.000Z", "dateModified": "2021-03-13T14:23:54.000Z", "author": "Florian Drees", "flavor": "java", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\\d*\\s*[!<>=](?>\\=)?\\s*\\d+$|^\\d*\\s*<>\\d+", "permalinkFragment": "oDtgLo", "isFavorite": false, "isStarred": false}, {"title": "Url", "description": "Port https://regex101.com/library/cX0pJ8 to PCRE2 (PHP >= 7.3)", "dateCreated": "2021-03-17T12:02:12.000Z", "dateModified": "2021-03-17T12:02:12.000Z", "author": "semivori", "flavor": "pcre2", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)(:[0-9]{0,5})?(#[\\w]*)?((?:\\/[\\+~%\\/.\\w\\-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!\\/\\\\w]*))?)", "permalinkFragment": "VjaQji", "isFavorite": false, "isStarred": false}, {"title": "Link markdown with title text", "description": "Simple link mardown detection with a title text", "dateCreated": "2021-03-21T15:20:19.000Z", "dateModified": "2021-03-21T15:20:19.000Z", "author": "Olpouin", "flavor": "javascript", "delimiter": "/", "flags": "gs", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[(.*?)\\]\\((\\S*?) ?('(.*?)')?\\)", "permalinkFragment": "fTJqF7", "isFavorite": false, "isStarred": false}, {"title": "Poker Hand type", "description": "Detect the poker hand from a sorted hand like this:\n<Figure><Number> with the figures and numbers sorted in descending order", "dateCreated": "2021-03-26T05:54:49.000Z", "dateModified": "2021-03-26T05:54:49.000Z", "author": "ZeNairolf", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?<ROYAL_FLUSH>(A)(.) K\\3 Q\\3 J\\3 T\\3)|(?<STRAIGHT_FLUSH>(K)(.) Q\\6 J\\6 T\\6 9\\6|(Q)(.) J\\8 T\\8 9\\8 8\\8|(J)(.) T\\10 9\\10 8\\10 7\\10|(T)(.) 9\\12 8\\12 7\\12 6\\12|(9)(.) 8\\14 7\\14 6\\14 5\\14|(8)(.) 7\\16 6\\16 5\\16 4\\16|(7)(.) 6\\18 5\\18 4\\18 3\\18|(6)(.) 5\\20 4\\20 3\\20 2\\20|(A)(.) 5\\22 4\\22 3\\22 2\\22)|(?<FOUR_OF_A_KIND>.*(.). \\24. \\24. \\24..*)|(?<FULL_HOUSE>(.). \\26. (.). \\27. \\27.|(.). \\28. \\28. (.). \\29.)|(?<FLUSH>(.)(.) .\\32 .\\32 .\\32 .\\32)|(?<STRAIGHT>(A). K. Q. J. T.|(K). Q. J. T. 9.|(Q). J. T. 9. 8.|(J). T. 9. 8. 7.|(T). 9. 8. 7. 6.|(9). 8. 7. 6. 5.|(8). 7. 6. 5. 4.|(7). 6. 5. 4. 3.|(6). 5. 4. 3. 2.|A. (5). 4. 3. 2.)|(?<THREE_OF_A_KIND>.*(.). \\45. \\45..*)|(?<TWO_PAIR>.*(.). \\47. .*(.). \\48..*)|(?<PAIR>.*(.). \\50..*)|(?<HIGH_CARD>(.).*)$", "permalinkFragment": "mRu0vi", "isFavorite": false, "isStarred": false}, {"title": "Links in string", "description": "Match links (emails included) in string\nReplace it with HTML links", "dateCreated": "2021-05-10T09:55:18.000Z", "dateModified": "2021-06-14T19:53:53.000Z", "author": "David Folch Agulles", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 5, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((https?:\\/\\/)?[^\\s.]+\\.[\\w][^\\s]+)", "permalinkFragment": "nEqE94", "isFavorite": false, "isStarred": false}, {"title": "Replace dotnet assembly versions", "description": "Replaces both VB & C# `AssemblyInfo` files.", "dateCreated": "2021-06-30T10:48:36.000Z", "dateModified": "2021-06-30T13:04:43.000Z", "author": "ankostis", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?i)([<[]Assembly: Assembly(File|Informational)?Version)\\(\\\"[^\\\"]*\\\"\\)", "permalinkFragment": "cZX3iP", "isFavorite": false, "isStarred": false}, {"title": "object", "description": "Json Object\n", "dateCreated": "2021-07-02T15:32:07.000Z", "dateModified": "2021-07-02T15:32:07.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?(DEFINE)(?P<space>[\\s\\n]*))(?(DEFINE)(?P<string>(\"[^\"]*\")))(?(DEFINE)(?P<integer>\\d+))(?(DEFINE)(?P<PValue>((?P>string)|(?P>integer))))(?(DEFINE)(?P<PSV>(?P>space):(?P>space)))(?(DEFINE)(?P<PSP>(?P>space),(?P>space)))(?(DEFINE)(?P<PName>(?P>string))(?>(?P>PSV)))(?(DEFINE)(?P<property>(?P>PName)(?>(?P>PSV))(?P>PValue)(?>(?P>PSP)?)))\"progressive\"(?P>PSV)\\[(?P>space)({(?P>property)*}(?P>PSP)?)*]}", "permalinkFragment": "2jWucF", "isFavorite": false, "isStarred": false}, {"title": "Guid (with or without dashes)", "description": "Matches a guid string that can optionally include dashes.", "dateCreated": "2021-07-02T15:57:15.000Z", "dateModified": "2021-07-02T15:57:15.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?<first>[a-fA-F\\d]{8})-?(?<second>[a-fA-F\\d]{4})-?(?<third>[a-fA-F\\d]{4})-?(?<fourth>[a-fA-F\\d]{4})-?(?<fifth>[a-fA-F\\d]{12})$", "permalinkFragment": "iqx3XJ", "isFavorite": false, "isStarred": false}, {"title": "US phone number", "description": "US phone number, try to catch as many as possible", "dateCreated": "2021-07-03T04:46:30.000Z", "dateModified": "2021-07-03T04:46:30.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\+?(\\b1)?[\\ .\\/-]?((?(2)|(\\b))|(\\())\\d{3}(?(?<=\\(\\d{3})\\)|)[\\ .\\/-]?)?(?(1)|\\b)\\d{3}[\\ .\\/-]?\\d{4}[\\ ]?([xX][\\ ]?\\d{1,5})?\\b", "permalinkFragment": "XomD2x", "isFavorite": false, "isStarred": false}, {"title": ".htaccess wordpress redirect uploads to production domain", "description": ".htaccess wordpress redirect uploads to production domain", "dateCreated": "2021-07-03T06:41:05.000Z", "dateModified": "2021-07-03T06:41:05.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^wp-content\\/uploads\\/(?!(2021\\/06||2021\\/07)\\/).+$", "permalinkFragment": "QxkJ0l", "isFavorite": false, "isStarred": false}, {"title": "spring logback parser", "description": "Spring boot logback \u65e5\u5fd7\u6b63\u5219\u5339\u914d\u3002\n\n\u6837\u4f8b\u65e5\u5fd7\n```\n2019-12-27 13:52:38.201  INFO 1 --- [Thread-8] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'\n2019-12-27 13:52:39.535  INFO 1 --- [Thread-8] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed\n2019-12-27 13:52:39.538  INFO 1 --- [Thread-8] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...\n2019-12-27 13:52:42.539  INFO 1 --- [Thread-8] com.netflix.discovery.DiscoveryClient    : Unregistering ...\n2019-12-27 13:52:42.540  WARN 1 --- [DiscoveryClient-0] c.netflix.discovery.TimedSupervisorTask  : task supervisor shutting down, can't accept the task\n2019-12-27 13:52:42.597  INFO 1 --- [Thread-8] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient\n2019-12-27 13:52:43.329  WARN 1 --- [XNIO-1 task-15] c.n.eureka.resources.InstanceResource    : Not Found (Renew): RPLUS-SERVICE-COMMUNITY - 69bce99f652f:rplus-service-community:20090\n```", "dateCreated": "2021-07-06T08:09:57.000Z", "dateModified": "2021-07-06T08:09:57.000Z", "author": "LiuDecai", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\d+-\\d+-\\d+\\s\\S+)\\s+(\\w+)\\s(\\d+)\\s---\\s(\\S+.\\S+)\\s(\\S+\\s+:)\\s(\\S+.*)", "permalinkFragment": "PoEtM9", "isFavorite": false, "isStarred": false}, {"title": "mega.nz files and folders", "description": "Regex for matching https://mega.nz file and folder URLs.\n\nhttps://github.com/tonikelope/megabasterd/issues/215", "dateCreated": "2021-07-06T17:55:07.000Z", "dateModified": "2021-07-06T17:55:07.000Z", "author": "", "flavor": "pcre2", "delimiter": "@", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "https://mega\\.nz/((folder|file)/([^#]+)#(.+)|#(F?)!([^!]+)!(.+))", "permalinkFragment": "ZY33JK", "isFavorite": false, "isStarred": false}, {"title": "Regex for complex number ", "description": "it can detect complex number of both cartesian and Euler form.the real number in the real and imaginary part can be signed or unsigned.also it may or may not have floating Point.no problem.\n\nBut,in Euler from the imaginary part should be written between brackets.here are some example:-\n+5.6+7i,-.004+2.5i,6.-i,i,e^-(5i),.02e^(-2.3i),7e^(i)", "dateCreated": "2021-07-08T11:37:44.000Z", "dateModified": "2021-07-08T11:37:44.000Z", "author": "Adnan nabib", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[+-]?(((\\d+\\.\\d*|\\d*\\.\\d+|\\d+)[+-])?((\\d+\\.\\d*|\\d*\\.\\d+|\\d+)i|i(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)|i)|(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)?e\\^(\\([+-]?|[+-]?\\()((\\d+\\.\\d*|\\d*\\.\\d+|\\d+)i|i(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)|i)\\))", "permalinkFragment": "6sKpkD", "isFavorite": false, "isStarred": false}, {"title": "Mobile Number Regex", "description": "The following regex validates international mobile numbers", "dateCreated": "2021-07-14T10:58:44.000Z", "dateModified": "2021-07-14T10:58:44.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^((?:[1-9][0-9 ().-]{5,28}[0-9])|(?:(00|0)( ){0,1}[1-9][0-9 ().-]{3,26}[0-9])|(?:(\\+)( ){0,1}[1-9][0-9 ().-]{4,27}[0-9]))$", "permalinkFragment": "WNZL9z", "isFavorite": false, "isStarred": false}, {"title": "Html tag parser", "description": "This regex will help you to parse html tag.\n\nExample\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Title</title>\n</head>\n<body>\n    <picture>\n        <source srcset=\"mobile.png\" ></source>\n        <source srcset=\"tablet.png\" ></source>\n        <source srcset=\"desktop.png\" ></source>\n        <img srcset=\"default.png\">\n    </picture>\n</body>\n</html>\n```\n\nOutput\n```html\n<picture>\n    <source srcset=\"mobile.png\" ></source>\n    <source srcset=\"tablet.png\" ></source>\n    <source srcset=\"desktop.png\" ></source>\n    <img srcset=\"default.png\">\n</picture>\n```", "dateCreated": "2021-08-27T09:22:33.000Z", "dateModified": "2021-08-27T09:22:33.000Z", "author": "denchiklut", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?=(<picture>))(\\w|\\W)*(?<=<\\/picture>)", "permalinkFragment": "e7twfZ", "isFavorite": false, "isStarred": false}, {"title": "JavaScript semicolon adder", "description": "This is a regex to use on JavaScript code that is missing semicolons", "dateCreated": "2021-09-16T19:48:36.000Z", "dateModified": "2021-09-16T19:48:36.000Z", "author": "samunemeth", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<![;\\{\\}]|\\*\\/|\\s*\\/{2}.*?)$", "permalinkFragment": "KM2ADx", "isFavorite": false, "isStarred": false}, {"title": "Check Phone numbers", "description": "[Other patterns](https://gist.github.com/jrobinsonc/2171654fa2b747a056f30b91fae3b4e1)", "dateCreated": "2021-09-18T14:56:03.000Z", "dateModified": "2021-09-18T14:56:03.000Z", "author": "https://joserobinson.com", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 3, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(\\+?\\d{0,2})?[\\D]?\\(?(\\d{3})\\)?[\\D]?(\\d{3})[\\D]?(\\d{4})$", "permalinkFragment": "AyWVis", "isFavorite": false, "isStarred": false}, {"title": "Match Javanese Script Syllable", "description": "Match any syllable based on javanese script unicode", "dateCreated": "2021-09-18T13:08:03.000Z", "dateModified": "2021-09-18T13:16:02.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "g", "version": 6, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[\ua9b2\ua9a4\ua995\ua9ab\ua98f\ua9a2\ua9a0\ua9b1\ua9ae\ua9ad\ua9a5\ua99d\ua997\ua9aa\ua99a\ua9a9\ua992\ua9a7\ua99b\ua994\ua990\ua98c\ua9a1\ua988\ua986\ua98e\ua9a6\ua984\ua9af\ua9a3\ua993\ua998\ua991\ua99e\ua99c\ua9b0\ua9ac\ua996\ua98b\ua9a8\ua99f\ua98d\ua985\ua987\ua989\ua99d\ua99b\ua98a]\ua9c0[\ua9b2\ua9a4\ua995\ua9ab\ua98f\ua9a2\ua9a0\ua9b1\ua9ae\ua9ad\ua9a5\ua99d\ua997\ua9aa\ua99a\ua9a9\ua992\ua9a7\ua99b\ua994\ua990\ua98c\ua9a1\ua988\ua986\ua98e\ua9a6\ua984\ua9af\ua9a3\ua993\ua998\ua991\ua99e\ua99c\ua9b0\ua9ac\ua996\ua98b\ua9a8\ua99f\ua98d\ua985\ua987\ua989\ua99d\ua99b\ua98a].*?(?=[\ua9b2\ua9a4\ua995\ua9ab\ua98f\ua9a2\ua9a0\ua9b1\ua9ae\ua9ad\ua9a5\ua99d\ua997\ua9aa\ua99a\ua9a9\ua992\ua9a7\ua99b\ua994\ua990\ua98c\ua9a1\ua988\ua986\ua98e\ua9a6\ua984\ua9af\ua9a3\ua993\ua998\ua991\ua99e\ua99c\ua9b0\ua9ac\ua996\ua98b\ua9a8\ua99f\ua98d\ua985\ua987\ua989\ua99d\ua99b\ua98a]|[A-Za-z0-9~`!@#$%^&*()\\-_+={}\\[\\]\\\\|:;\"'<,>.?\\/\\s]|$)|[\ua9b2\ua9a4\ua995\ua9ab\ua98f\ua9a2\ua9a0\ua9b1\ua9ae\ua9ad\ua9a5\ua99d\ua997\ua9aa\ua99a\ua9a9\ua992\ua9a7\ua99b\ua994\ua990\ua98c\ua9a1\ua988\ua986\ua98e\ua9a6\ua984\ua9af\ua9a3\ua993\ua998\ua991\ua99e\ua99c\ua9b0\ua9ac\ua996\ua98b\ua9a8\ua99f\ua98d\ua985\ua987\ua989\ua99d\ua99b\ua98a].*?(?=[\ua9b2\ua9a4\ua995\ua9ab\ua98f\ua9a2\ua9a0\ua9b1\ua9ae\ua9ad\ua9a5\ua99d\ua997\ua9aa\ua99a\ua9a9\ua992\ua9a7\ua99b\ua994\ua990\ua98c\ua9a1\ua988\ua986\ua98e\ua9a6\ua984\ua9af\ua9a3\ua993\ua998\ua991\ua99e\ua99c\ua9b0\ua9ac\ua996\ua98b\ua9a8\ua99f\ua98d\ua985\ua987\ua989\ua99d\ua99b\ua98a]|[A-Za-z0-9~`!@#$%^&*()\\-_+={}\\[\\]\\\\|:;\"'<,>.?\\/\\s]|$)", "permalinkFragment": "aEdrt0", "isFavorite": false, "isStarred": false}, {"title": "RFC1918 - Private IPv4 addresses", "description": "Validate a given IP v4 address against all three defined Private IPv4 Subnets as statet in RFC1918\n\n- 10.0.0.0/8\n- 172.16.0.0/20\n- 192.168.0.0/16\n\n[Wikipedia Link](https://en.wikipedia.org/wiki/Private_network)\n[RFC Link](https://doi.org/10.17487%2FRFC1918)", "dateCreated": "2021-09-22T11:58:02.000Z", "dateModified": "2021-09-22T11:58:02.000Z", "author": "0100101101001", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(10(\\.(1?\\d\\d?|2([0-4]\\d?|5[0-5])))(?2)|172\\.(1[6-9]|2\\d|3[0-2])(?2)|192\\.168(?2))(?2)$", "permalinkFragment": "E3GJ3h", "isFavorite": false, "isStarred": false}, {"title": "Get commands from Neebula Discovery Language NDL", "description": "Matches the commands  from Neebula Discovery Language NDL, which is used in ServiceNow Discovery Patterns.", "dateCreated": "2021-09-24T19:39:43.000Z", "dateModified": "2021-09-24T19:40:40.000Z", "author": "James Griffith", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(cmd|command)\\s+?=\\s?\\\\?(.*\\\"|concat\\s?\\{(?:(?:\\{(?:(?:\\{(?:[^{}])*\\})|(?:[^{}]))*\\})|(?:[^{}]))*\\})", "permalinkFragment": "huLaLQ", "isFavorite": false, "isStarred": false}, {"title": "Grabify URL Detector", "description": "Detects any Grabify IP tracker links", "dateCreated": "2021-09-26T17:54:20.000Z", "dateModified": "2021-09-26T17:54:20.000Z", "author": "ShadowNox", "flavor": "pcre2", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(https?):\\/\\/(grabify|truelove|lovebird|dateing|shrekis|headshot|gaming-at-my|progaming|yourmy|imageshare|screenshot|gamingfun|catsnthings?|curiouscat|joinmy|fortnitechat|fortnight|freegiftcards|stopify|leancoding)\\.(guru|club|life|monster|best|me|com|fun|site|space|co|link)\\/([a-z 0-9]{6})", "permalinkFragment": "WAJ3gb", "isFavorite": false, "isStarred": false}, {"title": "UUID 4", "description": "Detects any UUID 4 strings", "dateCreated": "2021-09-26T18:11:50.000Z", "dateModified": "2021-09-26T18:11:50.000Z", "author": "ShadowNox", "flavor": "pcre2", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\b([A-F 0-9]{8})-([A-F 0-9]{4})-([A-F 0-9]{4})-([A-F 0-9]{4})-([A-F 0-9]{12})\\b", "permalinkFragment": "eudsOc", "isFavorite": false, "isStarred": false}, {"title": "Svelte: CSS class attribute (Svelte or HTML friendly), class:directive, TailwindCSS classes, and @apply.", "description": "# SvelteComponent Class Directive Matching  \n\nAlso supports TailwindCSS-style `@apply` directive for the class value.\n\n## `class:directive={boolean}`\n\nSvelte allows us to provide a \"class directive\", or a class name in the form of `class:NAME={boolean}`. If we place a boolean (or function that returns a boolean) as its value, it will add the class \"NAME\" to the component when it returns true, or omit it when false.\n\nThis is extremely useful for navigation components, and I use it all the time to highlight active links in my UX/UI development process.\n\n```svelte\n<NavBar>\n    <Link href=\"#abc\" class:active={page === 'abc'}>ABC</Link>\n    <Link href=\"#xyz\" class:active={page === 'xyz'}>XYZ</Link> \n</NavBar>\n```\n\nFlexible matching for the class attribute on both **Svelte Components** and **HTML Elements**.", "dateCreated": "2021-12-03T05:52:55.000Z", "dateModified": "2021-12-03T05:52:55.000Z", "author": "Nicholas Berlette (@nberlette)", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?:(\\bclass)(?:[:]([_a-zA-Z0-9-]+))?\\s*[=]?(?:[{}]{0,}['\"\\s]*\\b(.+)?\\b[\"'\\s]*[{}]*)?)|(?:\\B([@]apply)\\s+([_a-zA-Z0-9-\\s\\:\\/]*)[;]?)", "permalinkFragment": "95J3Xa", "isFavorite": false, "isStarred": false}, {"title": "Markdown Heading", "description": "Parses the text following a '#' and a space all the way up to the next return character. Additional #'s can be added for parsing of other type of headings! ", "dateCreated": "2021-12-14T21:41:52.000Z", "dateModified": "2021-12-14T21:41:52.000Z", "author": "Hansen", "flavor": "java", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?<=(^#)\\s).*", "permalinkFragment": "fuPT8X", "isFavorite": false, "isStarred": false}, {"title": "Simple URL", "description": "Validate an URL input.", "dateCreated": "2022-01-11T09:51:32.000Z", "dateModified": "2022-01-11T09:51:32.000Z", "author": "@nuragic", "flavor": "javascript", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(https?:\\/\\/)?[0-9a-z-_]*(\\.[0-9a-z-_]+)*(\\.[a-z]+)+(\\/[0-9a-z-_]*)*?\\/?$", "permalinkFragment": "VU8J9B", "isFavorite": false, "isStarred": false}, {"title": "Currency with dollar sign, two decimals, negative allowed, starting with period ok", "description": "Currency with dollar sign, two decimals, negative allowed, starting with period ok", "dateCreated": "2022-01-21T14:47:18.000Z", "dateModified": "2022-01-21T14:47:18.000Z", "author": "Natalia Zolotareva", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:[$](\\s{0,1})|)[+-]?(\\d{1,3},?(\\d{3},?)*\\d{3}(\\.\\d{0,2})?|\\d{1,3}(\\.\\d{0,2})?|\\.\\d{1,2}?)$", "permalinkFragment": "FqB0yR", "isFavorite": false, "isStarred": false}, {"title": "Extract parts of a URL on Python", "description": "Extract parts of a URL on Python", "dateCreated": "2022-02-02T23:27:05.000Z", "dateModified": "2022-02-02T23:27:05.000Z", "author": "dixanms", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^((?P<scheme>[^:/?#]+):(?=//))?(//)?(((?P<login>[^:]+)(?::(?P<password>[^@]+)?)?@)?(?P<host>[^@/?#:]*)(?::(?P<port>\\d+)?)?)?(?P<path>[^?#]*)(\\?(?P<query>[^#]*))?(#(?P<fragment>.*))?", "permalinkFragment": "0yvSPm", "isFavorite": false, "isStarred": false}, {"title": "regex101.com id grabber", "description": "Grabs the ID for the regex101.com permalink to code.", "dateCreated": "2022-02-03T12:22:09.000Z", "dateModified": "2022-02-03T12:30:58.000Z", "author": "Sasha Garan", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(ht{2}ps?:\\/{2})?(w{3}.)?regex101\\.com\\/r\\/\\w+$", "permalinkFragment": "CeOXr2", "isFavorite": false, "isStarred": false}, {"title": "Lua Enhanced: +=", "description": "Adds += to Lua.", "dateCreated": "2022-02-20T11:15:59.000Z", "dateModified": "2022-02-20T11:15:59.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\w+?) +\\+= *(.+)", "permalinkFragment": "phMGPr", "isFavorite": false, "isStarred": false}, {"title": "Delete hour range ", "description": "Select duplicate a.m. - p.m range", "dateCreated": "2022-03-05T01:44:51.000Z", "dateModified": "2022-03-05T01:44:51.000Z", "author": "profeivan", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "([ap]\\.m\\.)\\h(?=\u2013\\h\\d+(:\\d\\d)?\\h\\1)", "permalinkFragment": "KpXE5K", "isFavorite": false, "isStarred": false}, {"title": "Asciidoc PlantUML Block", "description": "Regex to select PlantUML Block in Asciidoc documents", "dateCreated": "2022-03-15T13:11:37.000Z", "dateModified": "2022-03-15T13:11:37.000Z", "author": "", "flavor": "java", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\[(plantuml.+)\\]\\s+\\.{4}\\s([\\s\\S]+?(?=^\\.{4}))\\.{4}", "permalinkFragment": "rmPqtp", "isFavorite": false, "isStarred": false}, {"title": "Pattern for usual email address", "description": "Intentionally leaves out weird stuff such as IPV4 or IPV6 for the domain part and quoted usernames with invalid chars in the addressee part. Handles internationalized domains with soft validation (only structural matching) and blocks domain parts starting or ending with dashes or containing double dashes (except in `xn--` internationalization prefix).", "dateCreated": "2022-03-22T11:51:20.000Z", "dateModified": "2022-03-22T11:51:20.000Z", "author": "Victor Schr\u00f6der", "flavor": "pcre2", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?!\\.)(?:\\.?[\\w\\+]++)++@(?!\\.)(?:\\.?(?:xn--)?(?!-|.*--)[a-zA-Z0-9\\-]++(?<!-)){2,}$", "permalinkFragment": "P2xsdY", "isFavorite": false, "isStarred": false}, {"title": "Vehicle Identification Number (VIN)", "description": "Every vehicle has a unique Vehicle Identification Number (**VIN**). \n\nThis 17 character alpha-numeric sequence and must NOT contain the letters I, O or Q (to avoid confusion with the similar looking digits). \nSo, for example, `SALVA2AE4EH877322` is valid, but `SALVO2AE4EH877322` is not.\n\nBy using the `\\b` word boundary token, we can match in quotes `\"SALVA2AE4EH877482\"`, brackets `(SALVA2AE4EH877998)` or other boundaries that people may use `<SALVA2AE4EH877002>`", "dateCreated": "2018-08-15T14:33:21.000Z", "dateModified": "2018-08-15T14:33:21.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\b[(A-H|J-N|P|R-Z|0-9)]{17}\\b", "permalinkFragment": "49qCxI", "isFavorite": false, "isStarred": false}, {"title": "Better version of UK postcode", "description": "This UK postcode regex will match all variants of postcode formats including inner London postcodes (eg SW1A), with optional space (both AL11XP and AL1 1XP are valid)\n\nIt will reject any postcode that does not specify a valid postcode area.\n\nEach part of the postcode is also captured into a capture group as follows:\ngroup 1: POSTCODE AREA\ngroup 2: POSTCODE DISTRICT\ngroup 3: POSTCODE SECTOR\ngroup 4: POSTCODE UNIT", "dateCreated": "2018-09-21T07:39:11.000Z", "dateModified": "2018-09-21T07:39:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(A[BL]|B[ABDFHLNRSTX]?|C[ABFHMORTVW]|D[ADEGHLNTY]|E[CHNX]?|F[KY]|G[LUY]?|H[ADGPRSUX]|I[GMPV]|JE|K[ATWY]|L[ADELNSU]?|M[EKL]?|N[EGNPRW]?|O[LX]|P[AEHLOR]|R[GHM]|S[AEGKLMNOPRSTWY]?|T[ADFNQRSW]|UB|W[ACDFNRSV]?|YO|ZE)(\\d[\\dA-Z]?) ?(\\d)([A-Z]{2})$", "permalinkFragment": "mOsPHp", "isFavorite": false, "isStarred": false}, {"title": "Match \"A B C\" where A+B=C (final version)", "description": "", "dateCreated": "2018-11-02T20:58:44.000Z", "dateModified": "2018-11-02T20:58:44.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^\n(?=[-+]?(?:0\\B)*+(\\d*?)((?:(?=\\d+(?:\\.\\d+)?\\ [-+]?(?:0\\B)*+(\\d*?)(\\d(?(4)\\4))(?:\\.\\d+)?\\ [-+]?(?:0\\B)*+(\\d*?)(\\d(?(6)\\6))(?:\\.\\d+)?$)\\d)++)\\b)\n(?:\n (?=-\\S*\\ -\\S*\\ -|(?!.*-))\n [-+]?(?:0\\B)*+\n (?=\n  (?(?!\\1\\.?(?!(?!(?&a))))\n   (?=\\S+\\ \\S+\\ [-+]?0*\\1\\3\\6(?:\\.\\d+)?$)\n  |\n   (?(?!.*+\\3)\\S+\\ [-+]?(?:0\\B)*)\n   (?=\\d*?(\\2|\\4)\\b(.*?\\ [-+]?(?:0\\B)*)\\S+$)\n   (?(?=9*\\7\\b)\n    (?:9(?=\\d*?\\8[1](\\g{-1}?+0)))*?\n    \\7\\8[1]\\g{-1}?+\\6\\b\n   |\n    (?:(\\d)(?=\\d*\\8(\\g{-1}?+\\g{-2})))*+\n    (?=\\d(\\d*\\8\\g{-2}?+))\n    (?=0\\g{-1}1|1\\g{-1}2|2\\g{-1}3|3\\g{-1}4|4\\g{-1}5|5\\g{-1}6|6\\g{-1}7|7\\g{-1}8|8\\g{-1}9)\n    \\d\n    (?:9(?=\\d*\\8\\g{-2}?+\\d(\\g{-1}?+0)))*?\n    \\7\\8\\g{-3}?+\\d\\g{-1}?+\\6\\b\n   )\n  )\n )\n \\1\n (?:\n  (?=\\.?(\\d)\\S*\\ [-+]?(?:0\\B)*+\\3((\\g{-2}?+\\.?)\\d)\\S*\\ [-+]?(?:0\\B)*+\\5((\\g{-2}?+\\.?)\\d))\n  \\.?\n  (?(?=(?!\n    \\14\\.?\n    (?<a>\n     (?:\n      (?=\\d\\.?\\d(?<b>\\S*?\\ [-+]?(?:0\\B)*\\3\\15?+)((\\g{-2}?+\\.?)\\d))\n      (?=\\d(\\S*?\\g{-4}\\g{-2}))\n      (?=0\\g{-1}9|1\\g{-1}8|2\\g{-1}7|3\\g{-1}6|4\\g{-1}5|5\\g{-1}4|6\\g{-1}3|7\\g{-1}2|8\\g{-1}1|9\\g{-1}0)\n      \\d\\.?(?=\\S*?(\\g{-5}\\g{-4}))\n     )*+\n     (?=\\d(\\g{-2}\\.?|(?&b)\\.?))\n     (?=[5-9]\\g{-1}[5-9]|1\\g{-1}9|2\\g{-1}[89]|3\\g{-1}[7-9]|4\\g{-1}[6-9]|6\\g{-1}4|7\\g{-1}[34]|8\\g{-1}[2-4]|9\\g{-1}[1-4])\n    ){0}\n    (?&a)\n   ))\n   (?=\\d(\\S*\\ [-+]?(?:0\\B)*\\3\\16)\\d(\\S*\\ [-+]?(?:0\\B)*\\5\\18))\n   (?=\n     1\\g{-2}(?:1\\g{-1}2|2\\g{-1}3|3\\g{-1}4|4\\g{-1}5|5\\g{-1}6|6\\g{-1}7|7\\g{-1}8|8\\g{-1}9|9\\g{-1}0)\n    |2\\g{-2}(?:1\\g{-1}3|2\\g{-1}4|3\\g{-1}5|4\\g{-1}6|5\\g{-1}7|6\\g{-1}8|7\\g{-1}9|8\\g{-1}0|9\\g{-1}1)\n    |3\\g{-2}(?:1\\g{-1}4|2\\g{-1}5|3\\g{-1}6|4\\g{-1}7|5\\g{-1}8|6\\g{-1}9|7\\g{-1}0|8\\g{-1}1|9\\g{-1}2)\n    |4\\g{-2}(?:1\\g{-1}5|2\\g{-1}6|3\\g{-1}7|4\\g{-1}8|5\\g{-1}9|6\\g{-1}0|7\\g{-1}1|8\\g{-1}2|9\\g{-1}3)\n    |5\\g{-2}(?:1\\g{-1}6|2\\g{-1}7|3\\g{-1}8|4\\g{-1}9|5\\g{-1}0|6\\g{-1}1|7\\g{-1}2|8\\g{-1}3|9\\g{-1}4)\n    |6\\g{-2}(?:1\\g{-1}7|2\\g{-1}8|3\\g{-1}9|4\\g{-1}0|5\\g{-1}1|6\\g{-1}2|7\\g{-1}3|8\\g{-1}4|9\\g{-1}5)\n    |7\\g{-2}(?:1\\g{-1}8|2\\g{-1}9|3\\g{-1}0|4\\g{-1}1|5\\g{-1}2|6\\g{-1}3|7\\g{-1}4|8\\g{-1}5|9\\g{-1}6)\n    |8\\g{-2}(?:1\\g{-1}9|2\\g{-1}0|3\\g{-1}1|4\\g{-1}2|5\\g{-1}3|6\\g{-1}4|7\\g{-1}5|8\\g{-1}6|9\\g{-1}7)\n    |9\\g{-2}(?:1\\g{-1}0|2\\g{-1}1|3\\g{-1}2|4\\g{-1}3|5\\g{-1}4|6\\g{-1}5|7\\g{-1}6|8\\g{-1}7|9\\g{-1}8)\n    |0\\g{-2}(\\d)\\g{-2}\\g{-1}\n    |(\\d)\\g{-4}0\\g{-3}\\g{-1}\n   )\n  |\n   (?=\\d((?-5))\\d((?-5)))\n   (?= \n     1\\g{-2}(?:0\\g{-1}2|1\\g{-1}3|2\\g{-1}4|3\\g{-1}5|4\\g{-1}6|5\\g{-1}7|6\\g{-1}8|7\\g{-1}9|8\\g{-1}0|9\\g{-1}1)\n    |2\\g{-2}(?:0\\g{-1}3|1\\g{-1}4|2\\g{-1}5|3\\g{-1}6|4\\g{-1}7|5\\g{-1}8|6\\g{-1}9|7\\g{-1}0|8\\g{-1}1|9\\g{-1}2)\n    |3\\g{-2}(?:0\\g{-1}4|1\\g{-1}5|2\\g{-1}6|3\\g{-1}7|4\\g{-1}8|5\\g{-1}9|6\\g{-1}0|7\\g{-1}1|8\\g{-1}2|9\\g{-1}3)\n    |4\\g{-2}(?:0\\g{-1}5|1\\g{-1}6|2\\g{-1}7|3\\g{-1}8|4\\g{-1}9|5\\g{-1}0|6\\g{-1}1|7\\g{-1}2|8\\g{-1}3|9\\g{-1}4)\n    |5\\g{-2}(?:0\\g{-1}6|1\\g{-1}7|2\\g{-1}8|3\\g{-1}9|4\\g{-1}0|5\\g{-1}1|6\\g{-1}2|7\\g{-1}3|8\\g{-1}4|9\\g{-1}5)\n    |6\\g{-2}(?:0\\g{-1}7|1\\g{-1}8|2\\g{-1}9|3\\g{-1}0|4\\g{-1}1|5\\g{-1}2|6\\g{-1}3|7\\g{-1}4|8\\g{-1}5|9\\g{-1}6) \n    |7\\g{-2}(?:0\\g{-1}8|1\\g{-1}9|2\\g{-1}0|3\\g{-1}1|4\\g{-1}2|5\\g{-1}3|6\\g{-1}4|7\\g{-1}5|8\\g{-1}6|9\\g{-1}7)\n    |8\\g{-2}(?:0\\g{-1}9|1\\g{-1}0|2\\g{-1}1|3\\g{-1}2|4\\g{-1}3|5\\g{-1}4|6\\g{-1}5|7\\g{-1}6|8\\g{-1}7|9\\g{-1}8) \n    |9\\g{-2}(?:0\\g{-1}0|1\\g{-1}1|2\\g{-1}2|3\\g{-1}3|4\\g{-1}4|5\\g{-1}5|6\\g{-1}6|7\\g{-1}7|8\\g{-1}8|9\\g{-1}9) \n    |0\\g{-2}(?:0\\g{-1}1|1\\g{-1}2|2\\g{-1}3|3\\g{-1}4|4\\g{-1}5|5\\g{-1}6|6\\g{-1}7|7\\g{-1}8|8\\g{-1}9|9\\g{-1}0)\n   )\n  )\n  \\d\n )++\n (?:\n  (?:\\.0+)?0*\\ [-+]?0*\\3\\15(?:\\.0+)?0*\\ [-+]?0*\\5\\17(?:\\.0+)?0*$\n |\n  \\ [-+]?0*\\3\\15(\\.?\\d*?)0*\\ [-+]?0*\\5\\17\\g{-1}(?:\\.0+)?0*$\n |\n  (\\.?\\d*?)0*\\ [-+]?0*\\3\\15\\ [-+]?0*\\5\\17\\g{-1}(?:\\.0+)?0*$\n |\n  \\.?\n  (?:\n   (?=\\d\\d((?&b))((\\g{-2}?+\\.?)\\d))\n   (?=\\d(\\S*?\\g{-4}\\g{-2}))\n   (?=0\\g{-1}9|1\\g{-1}8|2\\g{-1}7|3\\g{-1}6|4\\g{-1}5|5\\g{-1}4|6\\g{-1}3|7\\g{-1}2|8\\g{-1}1|9\\g{-1}0)\n   \\d\n   (?=\\S*?(\\g{-5}(\\g{-5})))\n  )*+\n  (?=\\d(\\g{-3}|(?&b)\\.?))\n  (?=1\\g{-1}9|2\\g{-1}8|3\\g{-1}7|4\\g{-1}6|5\\g{-1}5|6\\g{-1}4|7\\g{-1}3|8\\g{-1}2|9\\g{-1}1)\n  \\d0*\\ [-+]?0*\\3\\15\\g{-2}?+\\.?\\d0*\\ [-+]?0*\\5\\17\\.?0*$\n )\n|\n (?=-(?!.*-)|[^-]\\S*\\ -\\S*\\ -)\n [-+]?(?:0\\B)*+\n (?=\n  (?(?!\\1\\.?(?!(?!(?&c))))\n   (?=\\S+\\ [-+]?0*\\1\\5\\4\\b)\n   \n  |\n   (?|\n    (?!.++\\5)\n    \\S+\\ [-+]?(?:0\\B)*+(?=\\S*(\\ [-+]?(?:0\\B)*+)())\n    (?(?=\\S*\\41[9]*\\6\\b)\n     1(?:0(?=\\S*\\41(\\g{-1}?+9)))*?\n     \\4\\b\\S*\\41\\g{-1}?+\\6\\b\n    |\n     (?:(\\d)(?=\\S*\\41(\\g{-1}?+\\g{-2})))*+\n     (?=\\d(\\S*\\41\\g{-2}?+))(?=1\\g{-1}0|2\\g{-1}1|3\\g{-1}2|4\\g{-1}3|5\\g{-1}4|6\\g{-1}5|7\\g{-1}6|8\\g{-1}7|9\\g{-1}8)\n     \\d\n     (?:0(?=\\S*\\41\\g{-2}?+\\d(\\g{-1}?+9)))*?\n     \\4\\b\\S*\\41\\g{-3}?+\\d\\g{-1}?+\\6\\b\n    )\n   |\n    (?=.*+\\5)\n    (?=\\d*?(\\2)\\b(\\S*\\ [-+]?(?:0\\B)*+))\n    \n    (?(?=9*\\41\\b)\n     (?:9(?=\\d*?\\42[1](\\g{-1}?+0)))*?\n     \\41\\42[1]\\g{-1}?+\\4\\b\n    |\n     (?:(\\d)(?=\\d*\\42(\\g{-1}?+\\g{-2})))*+\n     (?=\\d(\\d*\\42\\g{-2}?+))\n     (?=0\\g{-1}1|1\\g{-1}2|2\\g{-1}3|3\\g{-1}4|4\\g{-1}5|5\\g{-1}6|6\\g{-1}7|7\\g{-1}8|8\\g{-1}9)\n     \\d\n     (?:9(?=\\S*\\42\\g{-2}?+\\d(\\g{-1}?+0)))*?\n     \\41\\42\\g{-3}?+\\d\\g{-1}?+\\4\\b\n    )\n   )\n  )\n )\n \\1\n (?:\n  (?=\\.?(\\d)\\S*\\ [-+]?(?:0\\B)*+\\3((\\g{-2}?+\\.?)\\d)\\S*\\ [-+]?(?:0\\B)*+\\5((\\g{-2}?+\\.?)\\d))\n  \\.?\n  (?(?=(?!\n    \\48\\.?\n    (?<c>\n     (?:\n      (?=\\d\\.?\\d(?<d>\\S*?\\ \\S+\\ [-+]?(?:0\\B)*\\5\\51?+)((\\g{-2}?+\\.?)\\d))\n      (?=\\d(\\S*?\\g{-4}\\g{-2}))\n      (?=0\\g{-1}9|1\\g{-1}8|2\\g{-1}7|3\\g{-1}6|4\\g{-1}5|5\\g{-1}4|6\\g{-1}3|7\\g{-1}2|8\\g{-1}1|9\\g{-1}0)\n      \\d\\.?(?=\\S*?(\\g{-5}\\g{-4}))\n     )*+\n     (?=\\d(\\g{-2}\\.?|(?&d)\\.?))\n     (?=[5-9]\\g{-1}[5-9]|1\\g{-1}9|2\\g{-1}[89]|3\\g{-1}[7-9]|4\\g{-1}[6-9]|6\\g{-1}4|7\\g{-1}[34]|8\\g{-1}[2-4]|9\\g{-1}[1-4])\n    ){0}\n    (?&c)\n   ))\n   (?=\\d(\\S*\\ [-+]?(?:0\\B)*\\3\\50)\\d(\\S*\\ [-+]?(?:0\\B)*\\5\\52))\n   (?=\n    1\\g{-2}(?:2\\g{-1}1|3\\g{-1}2|4\\g{-1}3|5\\g{-1}4|6\\g{-1}5|7\\g{-1}6|8\\g{-1}7|9\\g{-1}8|0\\g{-1}9)\n    |2\\g{-2}(?:3\\g{-1}1|4\\g{-1}2|5\\g{-1}3|6\\g{-1}4|7\\g{-1}5|8\\g{-1}6|9\\g{-1}7|0\\g{-1}8|1\\g{-1}9)\n    |3\\g{-2}(?:4\\g{-1}1|5\\g{-1}2|6\\g{-1}3|7\\g{-1}4|8\\g{-1}5|9\\g{-1}6|0\\g{-1}7|1\\g{-1}8|2\\g{-1}9)\n    |4\\g{-2}(?:5\\g{-1}1|6\\g{-1}2|7\\g{-1}3|8\\g{-1}4|9\\g{-1}5|0\\g{-1}6|1\\g{-1}7|2\\g{-1}8|3\\g{-1}9)\n    |5\\g{-2}(?:6\\g{-1}1|7\\g{-1}2|8\\g{-1}3|9\\g{-1}4|0\\g{-1}5|1\\g{-1}6|2\\g{-1}7|3\\g{-1}8|4\\g{-1}9)\n    |6\\g{-2}(?:7\\g{-1}1|8\\g{-1}2|9\\g{-1}3|0\\g{-1}4|1\\g{-1}5|2\\g{-1}6|3\\g{-1}7|4\\g{-1}8|5\\g{-1}9)\n    |7\\g{-2}(?:8\\g{-1}1|9\\g{-1}2|0\\g{-1}3|1\\g{-1}4|2\\g{-1}5|3\\g{-1}6|4\\g{-1}7|5\\g{-1}8|6\\g{-1}9)\n    |8\\g{-2}(?:9\\g{-1}1|0\\g{-1}2|1\\g{-1}3|2\\g{-1}4|3\\g{-1}5|4\\g{-1}6|5\\g{-1}7|6\\g{-1}8|7\\g{-1}9)\n    |9\\g{-2}(?:0\\g{-1}1|1\\g{-1}2|2\\g{-1}3|3\\g{-1}4|4\\g{-1}5|5\\g{-1}6|6\\g{-1}7|7\\g{-1}8|8\\g{-1}9)\n    |0\\g{-2}(\\d)\\g{-2}\\g{-1}\n    |(\\d)\\g{-4}\\g{-1}\\g{-3}0\n   )\n   \n  |\n   (?=\\d((?-5))\\d((?-5)))\n   (?= \n    1\\g{-2}(?:2\\g{-1}0|3\\g{-1}1|4\\g{-1}2|5\\g{-1}3|6\\g{-1}4|7\\g{-1}5|8\\g{-1}6|9\\g{-1}7|0\\g{-1}8|1\\g{-1}9)\n    |2\\g{-2}(?:3\\g{-1}0|4\\g{-1}1|5\\g{-1}2|6\\g{-1}3|7\\g{-1}4|8\\g{-1}5|9\\g{-1}6|0\\g{-1}7|1\\g{-1}8|2\\g{-1}9)\n    |3\\g{-2}(?:4\\g{-1}0|5\\g{-1}1|6\\g{-1}2|7\\g{-1}3|8\\g{-1}4|9\\g{-1}5|0\\g{-1}6|1\\g{-1}7|2\\g{-1}8|3\\g{-1}9)\n    |4\\g{-2}(?:5\\g{-1}0|6\\g{-1}1|7\\g{-1}2|8\\g{-1}3|9\\g{-1}4|0\\g{-1}5|1\\g{-1}6|2\\g{-1}7|3\\g{-1}8|4\\g{-1}9)\n    |5\\g{-2}(?:6\\g{-1}0|7\\g{-1}1|8\\g{-1}2|9\\g{-1}3|0\\g{-1}4|1\\g{-1}5|2\\g{-1}6|3\\g{-1}7|4\\g{-1}8|5\\g{-1}9)\n    |6\\g{-2}(?:7\\g{-1}0|8\\g{-1}1|9\\g{-1}2|0\\g{-1}3|1\\g{-1}4|2\\g{-1}5|3\\g{-1}6|4\\g{-1}7|5\\g{-1}8|6\\g{-1}9) \n    |7\\g{-2}(?:8\\g{-1}0|9\\g{-1}1|0\\g{-1}2|1\\g{-1}3|2\\g{-1}4|3\\g{-1}5|4\\g{-1}6|5\\g{-1}7|6\\g{-1}8|7\\g{-1}9)\n    |8\\g{-2}(?:9\\g{-1}0|0\\g{-1}1|1\\g{-1}2|2\\g{-1}3|3\\g{-1}4|4\\g{-1}5|5\\g{-1}6|6\\g{-1}7|7\\g{-1}8|8\\g{-1}9) \n    |9\\g{-2}(?:0\\g{-1}0|1\\g{-1}1|2\\g{-1}2|3\\g{-1}3|4\\g{-1}4|5\\g{-1}5|6\\g{-1}6|7\\g{-1}7|8\\g{-1}8|9\\g{-1}9) \n    |0\\g{-2}(?:1\\g{-1}0|2\\g{-1}1|3\\g{-1}2|4\\g{-1}3|5\\g{-1}4|6\\g{-1}5|7\\g{-1}6|8\\g{-1}7|9\\g{-1}8|0\\g{-1}9)\n   )   \n  )\n \\d\n )++\n (?:\n  (?:\\.0+)?0*\\ [-+]?0*\\3\\49(?:\\.0+)?0*\\ [-+]?0*\\5\\51(?:\\.0+)?0*$\n |\n  \\ [-+]?0*\\3\\49(\\.?\\d*?)0*\\ [-+]?0*\\5\\51\\g{-1}(?:\\.0+)?0*$\n |\n  (\\.?\\d*?)0*\\ [-+]?0*\\3\\49\\g{-1}(?:\\.0+)?0*\\ [-+]?0*\\5\\51$\n  \n |\n  \\.?\n  (?:\n   (?=\\d\\d((?&d))((\\g{-2}?+\\.?)\\d))\n   (?=\\d(\\S*?\\g{-4}\\g{-2}))\n   (?=0\\g{-1}9|1\\g{-1}8|2\\g{-1}7|3\\g{-1}6|4\\g{-1}5|5\\g{-1}4|6\\g{-1}3|7\\g{-1}2|8\\g{-1}1|9\\g{-1}0)\n   \\d\n   (?=\\S*?(\\g{-5}(\\g{-5})))\n  )*+\n  (?=\\d(\\g{-3}|(?&d)\\.?))\n  (?=1\\g{-1}9|2\\g{-1}8|3\\g{-1}7|4\\g{-1}6|5\\g{-1}5|6\\g{-1}4|7\\g{-1}3|8\\g{-1}2|9\\g{-1}1)\n  \\d0*\\ [-+]?0*\\3\\49\\.?0*\\ [-+]?0*\\5\\51\\g{-2}?+\\.?\\d0*$\n )\n|\n (?=[^-]\\S*\\ -\\S*\\ [^-]\\S*|-\\S*\\ [^-]\\S*\\ -)\n [-+]?(?:0\\B)*+\n (?=\n  (?(?!\\S+\\ [-+]?(?:0\\B)*+\\3\\.?(?!(?!(?&e))))\n   (?=\\3\\5\\2\\b)\n  |\n   (?=\\d*(\\S*\\ (?(?=.*+\\3)\\S+\\ )[-+]?(?:0\\B)*+)\\d*?(\\4|\\6)\\b)\n   (?(?=10*\\2\\b)\n    1(?:0(?=\\d*\\75(\\g{-1}?+9)))*?\n    \\2\\b\\75\\g{-1}?+\\76\\b\n   |\n    (?:(\\d)(?=\\d*\\75(\\g{-1}?+\\g{-2})))*+\n    (?=\\d(\\d*\\75\\g{-2}?+))\n    (?=1\\g{-1}0|2\\g{-1}1|3\\g{-1}2|4\\g{-1}3|5\\g{-1}4|6\\g{-1}5|7\\g{-1}6|8\\g{-1}7|9\\g{-1}8)\n    \\d\n    (?:0(?=\\d*\\75\\g{-2}?+\\d(\\g{-1}?+9)))*?\n    \\2\\b\\75\\g{-3}?+\\d\\g{-1}?+\\76\\b\n   )\n  )\n )\n \\1\n (?:\n  (?=\\.?(\\d)\\S*\\ [-+]?(?:0\\B)*+\\3((\\g{-2}?+\\.?)\\d)\\S*\\ [-+]?(?:0\\B)*+\\5((\\g{-2}?+\\.?)\\d))\n  \\.?\n  (?(?=(?!\n    \\S*\\ [-+]?(?:0\\B)*+\\3\\83\\.?\n    (?<e>\n     (?:\n      (?=\\d\\.?\\d(?<f>\\S*?\\ [-+]?(?:0\\B)*\\5\\85?+)((\\g{-2}?+\\.?)\\d))\n      (?=\\d(\\S*?\\g{-4}\\g{-2}))\n      (?=0\\g{-1}9|1\\g{-1}8|2\\g{-1}7|3\\g{-1}6|4\\g{-1}5|5\\g{-1}4|6\\g{-1}3|7\\g{-1}2|8\\g{-1}1|9\\g{-1}0)\n      \\d\\.?\n      (?=\\S*?(\\g{-5}\\g{-4}))\n     )*+\n     (?=\\d(\\g{-2}\\.?|(?&f)\\.?))\n     (?=[5-9]\\g{-1}[5-9]|1\\g{-1}9|2\\g{-1}[89]|3\\g{-1}[7-9]|4\\g{-1}[6-9]|6\\g{-1}4|7\\g{-1}[34]|8\\g{-1}[2-4]|9\\g{-1}[1-4])\n    ){0}\n    (?&e)\n   ))\n   (?=\\d(\\S*\\ [-+]?(?:0\\B)*\\3\\84)\\d(\\S*\\ [-+]?(?:0\\B)*\\5\\86))\n   (?=\n     (?:2\\g{-2}1|3\\g{-2}2|4\\g{-2}3|5\\g{-2}4|6\\g{-2}5|7\\g{-2}6|8\\g{-2}7|9\\g{-2}8|0\\g{-2}9)\\g{-1}1\n    |(?:3\\g{-2}1|4\\g{-2}2|5\\g{-2}3|6\\g{-2}4|7\\g{-2}5|8\\g{-2}6|9\\g{-2}7|0\\g{-2}8|1\\g{-2}9)\\g{-1}2\n    |(?:4\\g{-2}1|5\\g{-2}2|6\\g{-2}3|7\\g{-2}4|8\\g{-2}5|9\\g{-2}6|0\\g{-2}7|1\\g{-2}8|2\\g{-2}9)\\g{-1}3\n    |(?:5\\g{-2}1|6\\g{-2}2|7\\g{-2}3|8\\g{-2}4|9\\g{-2}5|0\\g{-2}6|1\\g{-2}7|2\\g{-2}8|3\\g{-2}9)\\g{-1}4\n    |(?:6\\g{-2}1|7\\g{-2}2|8\\g{-2}3|9\\g{-2}4|0\\g{-2}5|1\\g{-2}6|2\\g{-2}7|3\\g{-2}8|4\\g{-2}9)\\g{-1}5\n    |(?:7\\g{-2}1|8\\g{-2}2|9\\g{-2}3|0\\g{-2}4|1\\g{-2}5|2\\g{-2}6|3\\g{-2}7|4\\g{-2}8|5\\g{-2}9)\\g{-1}6\n    |(?:8\\g{-2}1|9\\g{-2}2|0\\g{-2}3|1\\g{-2}4|2\\g{-2}5|3\\g{-2}6|4\\g{-2}7|5\\g{-2}8|6\\g{-2}9)\\g{-1}7\n    |(?:9\\g{-2}1|0\\g{-2}2|1\\g{-2}3|2\\g{-2}4|3\\g{-2}5|4\\g{-2}6|5\\g{-2}7|6\\g{-2}8|7\\g{-2}9)\\g{-1}8\n    |(?:0\\g{-2}1|1\\g{-2}2|2\\g{-2}3|3\\g{-2}4|4\\g{-2}5|5\\g{-2}6|6\\g{-2}7|7\\g{-2}8|8\\g{-2}9)\\g{-1}9\n    |(\\d)\\g{-3}0\\g{-2}\\g{-1}\n    |(\\d)\\g{-4}\\g{-1}\\g{-3}0\n   )\n  |\n   (?=\\d((?-5))\\d((?-5)))\n   (?= \n     (?:2\\g{-2}0|3\\g{-2}1|4\\g{-2}2|5\\g{-2}3|6\\g{-2}4|7\\g{-2}5|8\\g{-2}6|9\\g{-2}7|0\\g{-2}8|1\\g{-2}9)\\g{-1}1\n    |(?:3\\g{-2}0|4\\g{-2}1|5\\g{-2}2|6\\g{-2}3|7\\g{-2}4|8\\g{-2}5|9\\g{-2}6|0\\g{-2}7|1\\g{-2}8|2\\g{-2}9)\\g{-1}2\n    |(?:4\\g{-2}0|5\\g{-2}1|6\\g{-2}2|7\\g{-2}3|8\\g{-2}4|9\\g{-2}5|0\\g{-2}6|1\\g{-2}7|2\\g{-2}8|3\\g{-2}9)\\g{-1}3\n    |(?:5\\g{-2}0|6\\g{-2}1|7\\g{-2}2|8\\g{-2}3|9\\g{-2}4|0\\g{-2}5|1\\g{-2}6|2\\g{-2}7|3\\g{-2}8|4\\g{-2}9)\\g{-1}4\n    |(?:6\\g{-2}0|7\\g{-2}1|8\\g{-2}2|9\\g{-2}3|0\\g{-2}4|1\\g{-2}5|2\\g{-2}6|3\\g{-2}7|4\\g{-2}8|5\\g{-2}9)\\g{-1}5\n    |(?:7\\g{-2}0|8\\g{-2}1|9\\g{-2}2|0\\g{-2}3|1\\g{-2}4|2\\g{-2}5|3\\g{-2}6|4\\g{-2}7|5\\g{-2}8|6\\g{-2}9)\\g{-1}6 \n    |(?:8\\g{-2}0|9\\g{-2}1|0\\g{-2}2|1\\g{-2}3|2\\g{-2}4|3\\g{-2}5|4\\g{-2}6|5\\g{-2}7|6\\g{-2}8|7\\g{-2}9)\\g{-1}7\n    |(?:9\\g{-2}0|0\\g{-2}1|1\\g{-2}2|2\\g{-2}3|3\\g{-2}4|4\\g{-2}5|5\\g{-2}6|6\\g{-2}7|7\\g{-2}8|8\\g{-2}9)\\g{-1}8\n    |(?:0\\g{-2}0|1\\g{-2}1|2\\g{-2}2|3\\g{-2}3|4\\g{-2}4|5\\g{-2}5|6\\g{-2}6|7\\g{-2}7|8\\g{-2}8|9\\g{-2}9)\\g{-1}9\n    |(?:1\\g{-2}0|2\\g{-2}1|3\\g{-2}2|4\\g{-2}3|5\\g{-2}4|6\\g{-2}5|7\\g{-2}6|8\\g{-2}7|9\\g{-2}8|0\\g{-2}9)\\g{-1}0\n   )\n  )\n  \\d\n )++\n (?:\n  (?:\\.0+)?0*\\ [-+]?0*\\3\\83(?:\\.0+)?0*\\ [-+]?0*\\5\\85(?:\\.0+)?0*$\n |\n  (\\.?\\d*?)0*\\ [-+]?0*\\3\\83\\g{-1}(?:\\.0+)?0*\\ [-+]?0*\\5\\85$\n |\n  (\\.?\\d*?)0*\\ [-+]?0*\\3\\83\\ [-+]?0*\\5\\85\\g{-1}(?:\\.0+)?0*$\n |\n  \\.?0*\\ [-+]?(?:0\\B)*+\\3\\83\\.?\n  (?:\n   (?=\\d\\d((?&f))((\\g{-2}?+\\.?)\\d))\n   (?=\\d(\\S*?\\g{-4}\\g{-2}))\n   (?=0\\g{-1}9|1\\g{-1}8|2\\g{-1}7|3\\g{-1}6|4\\g{-1}5|5\\g{-1}4|6\\g{-1}3|7\\g{-1}2|8\\g{-1}1|9\\g{-1}0)\n   \\d\n   (?=\\S*?(\\g{-5}(\\g{-5})))\n  )*+\n  (?=\\d(\\g{-3}|(?&f)\\.?))\n  (?=1\\g{-1}9|2\\g{-1}8|3\\g{-1}7|4\\g{-1}6|5\\g{-1}5|6\\g{-1}4|7\\g{-1}3|8\\g{-1}2|9\\g{-1}1)\n  \\d0*\\ [-+]?0*\\5\\85\\g{-2}?+\\.?\\d0*$\n ) \n)", "permalinkFragment": "QsFZ5M", "isFavorite": false, "isStarred": false}, {"title": "C\u00f3digo Postal", "description": "Verifica C\u00f3digo Postal \n**[Portugal]**", "dateCreated": "2019-10-04T13:38:06.000Z", "dateModified": "2019-10-04T13:38:06.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?P<CP>\\d{4}[\\-\\ ]?\\d{3})$", "permalinkFragment": "B94J6S", "isFavorite": false, "isStarred": false}, {"title": "Max 30 Characters excluding brackets", "description": "This is a simple regex for 30 characters limit excluding brackets", "dateCreated": "2022-04-27T06:27:38.000Z", "dateModified": "2022-04-27T06:46:33.000Z", "author": "jusuchin85", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 3, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[\\(|\\{\\)\\}\\[\\]\\s]*(?:\\w[\\(|\\{\\)\\}\\[\\]\\s]*){1,30}$", "permalinkFragment": "RD0aFw", "isFavorite": false, "isStarred": false}, {"title": "Extract Rapidgator Links from a HTML web page (Works for rg.to and rapidgator.net)", "description": "* Click \"open regex in editor\" to open regex.\n* Open a webpage containing Rapidgator Links - Either rg.to or rapidgator.net\n* Right-click anywhere on the page and select \"view page source\"\n* Copy the HTML markup containing the Rapidgator links to regex101.com\n* Paste the HTML markup and set mode to match\n* Locate the match information section and click on the Export icon\n* Select \"Plain Text\" from the popup modal side menu\n* Copy your Rapidgator Links without stress.\n> If it's helpful to you, don't forget to upvote so that others can benefit as well.", "dateCreated": "2022-05-26T17:44:06.000Z", "dateModified": "2022-05-26T17:44:06.000Z", "author": "SmartCoder", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 10, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "https:\\/\\/r(?:g|apidgator)\\.(?:to|net)\\/file.*?(?:(?=\">)|(?:html|htm|rar|zip|txt)(?=\" ))", "permalinkFragment": "rk6YDH", "isFavorite": false, "isStarred": false}, {"title": "Detect RGB/RGBA colors in CSS", "description": "JS function to convert RGB(A) to HEX color for single values:\n~~~js\n/**\n * @param {string} color the RGB(A) color\n * @return {string} the HEX color\n */\nfunction rgba2hex(color)\n{\n  const rgb = color.replace(/,\\s+/g, ',').match(/^rgba?\\(([.\\d]+)[, ]+([.\\d]+)[, ]+([.\\d]+)[, ]?([.\\d]+)?\\)$/i);\n  let hex = (parseInt(rgb[1], 10) | 1 << 8).toString(16).slice(1)\n    + (parseInt(rgb[2], 10) | 1  << 8).toString(16).slice(1)\n    + (parseInt(rgb[3], 10) | 1  << 8).toString(16).slice(1);\n  if (rgb[4]) {\n    if (rgb[4].startsWith('.')) {\n      rgb[4] = '0' + rgb[4];\n    }\n    hex += ((parseInt(rgb[4], 10) * 255) | 1 << 8).toString(16).slice(1);\n  }\n  return '#' + hex;\n}\n~~~\n**PHP function using regexp to convert RGB/RGBA to HEX colors in CSS**:\n```php\nfunction rgb2Hex(string $css)\n{\n    return preg_replace_callback(\n        '/rgba?\\((?<r>[.\\d]+)[, ]+(?<g>[.\\d]+)[, ]+(?<b>[.\\d]+)(?:\\s?[,\\/]\\s?(?<a>[.\\d]+%?))?\\)/i',\n        static function (array $matches) {\n            $matches['r'] = ceil($matches['r']);\n            $matches['g'] = ceil($matches['g']);\n            $matches['b'] = ceil($matches['b']);\n            if (isset($matches['a'])) {\n                if (str_ends_with($matches['a'], '%')) {\n                     // 2.55 is 1%\n                     $matches['a'] = 2.55 * (float) substr($matches['a'], -1);\n                } else {\n                    if ($matches['a'][0] === '.') {\n                        $matches['a'] = '0' . $matches['a'];\n                    }\n                    $matches['a'] = 255 * (float) $matches['a'];\n                }\n                $matches['a'] = ceil($matches['a']);\n                $hex = dechex(($matches['r'] << 24) | ($matches['g'] << 16) | ($matches['b'] << 8) | $matches['a']);\n                return '#' . str_pad($hex, 8, '0', STR_PAD_LEFT);\n            }\n            $hex = dechex(($matches['r'] << 16) | ($matches['g'] << 8) | $matches['b']);\n            return '#' . str_pad($hex, 6, '0', STR_PAD_LEFT);\n        },\n        $css\n    );\n}\n```\n**Test**:\n```php\n$css = <<<'CSS'\ncolor: rgb(34, 12, 64, 0.6);\ncolor: rgba(34, 12, 64, 0.6);\ncolor: rgba(34, 12, 64, .6);\ncolor: rgb(34 12 64 / 0.6);\ncolor: rgba(34 12 64 / 0.3);\ncolor: rgb(34.0 12 64 / 60%);\ncolor: rgba(34.6 12 64 / 30%);\ncolor: rgba(0, 255, 255);\ncolor: rgba(0, 255, 255);\ncolor: rgba(0, 255, 255, .5);\ncolor: rgba(0, 255, 255, 0.5);\ncolor: rgba(0 255 255 / 0.5);\nCSS;\necho rgb2Hex($css);\n```\n**Result**:\n```php\ncolor: #220c4010;\ncolor: #220c4010;\ncolor: #220c4010;\ncolor: #220c4010;\ncolor: #220c4008;\ncolor: #220c4000;\ncolor: #230c4000;\ncolor: #00ffff;\ncolor: #00ffff;\ncolor: #00ffff0d;\ncolor: #00ffff0d;\ncolor: #00ffff0d;\n```", "dateCreated": "2022-05-31T10:30:55.000Z", "dateModified": "2022-05-31T10:30:55.000Z", "author": "WinterSilence", "flavor": "pcre2", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "rgba?\\((?<r>[.\\d]+)[, ]+(?<g>[.\\d]+)[, ]+(?<b>[.\\d]+)(?:\\s?[,\\/]\\s?(?<a>[.\\d]+%?))?\\)", "permalinkFragment": "dVOwn0", "isFavorite": false, "isStarred": false}, {"title": "US Social Security Number", "description": "Finds a number that is 9 digits long. Can have spaces or hyphens in between the numbers and will still be found", "dateCreated": "2022-06-08T15:43:39.000Z", "dateModified": "2022-06-08T15:43:39.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?:\\d[ -]*?){9}", "permalinkFragment": "CZRmYx", "isFavorite": false, "isStarred": false}, {"title": "VKontakte wall post link regex | \u0412\u041a\u043e\u043d\u0430\u043a\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0437\u0430\u043f\u0438\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435", "description": "\u043f\u0438\u043f\u0435\u0446 \u043a\u0430\u043f\u0435\u0446 \u0431\u043e\u0436\u0435 \u043c\u0430\u043c\u0430 \u044f \u0443\u0441\u0442\u0430\u043b \u0441\u043f\u0430\u0441\u0438 \u0433\u043e\u0441\u043f\u0430\u0434\u0438 \u043c\u043e\u044e \u0433\u0440\u0443\u0448\u043d\u0443\u044e \u0434\u0435\u0448\u0443", "dateCreated": "2022-06-15T19:20:56.000Z", "dateModified": "2022-07-13T15:27:27.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 3, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^https?:\\/\\/(m\\.)?vk\\.com\\/((club|public)(\\d+)|[_.a-zA-Z0-9]{5,32})?(\\?w=)?wall(-\\d+)_(\\d+)\\??.*?&?.*?$", "permalinkFragment": "hcnnu1", "isFavorite": false, "isStarred": false}, {"title": "Find external resources in styles", "description": "Finds all external resources declared as `url()` in styles. Handles different quote types if any, even escaped ones:\n- `url(...)`\n- `url('...')`\n- `url(\"...\")`\n- `url(\\'...\\')`\n- `url(\\\"...\\\")`", "dateCreated": "2022-06-23T14:03:52.000Z", "dateModified": "2022-06-23T14:03:52.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(url\\(\\\\?['\"]?)(.*?)(\\\\?['\"]?\\))", "permalinkFragment": "PSVVJ0", "isFavorite": false, "isStarred": false}, {"title": "Dice-Throwing notation", "description": "* You can express the required dice-throwing as usual: `1d10`, `2d6`, `3d8`...\n* The first part (dice number) is mandatory. So, notations like \"D10\" are not computed, and they must be written as `1d10`\n* The dice number may be expressed as `[number]o[number]`. For example: `1o3d10`. That will mark to implement a Gauss system, throwing 3 dice but only giving the value of the middle one.\n* If that's the case, it is possible to add a symbol `+` or `-` at the end of the dice number value, to mark if  whether you want the lowest or the highest value instead.\n* The second part of the dice (the number of sides) may be any integer\n* You can add a `!` or a `\u00a1` (or both) at the end of the notated dice to represent exploding and imploding dices\n* In addition, you can express a modifier in the form of a subtraction (`-3`, for example) or an addition (`+2`, for example)\n* You can finally add a threshold (`:20`, for example). ", "dateCreated": "2022-07-10T10:57:23.000Z", "dateModified": "2022-07-10T11:14:50.000Z", "author": "Hermes", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?<numberExpression>(?<numberDice>[0-9]+)(?<gaussExpression>[oO]?(?<gaussDices>[0-9])+(?<gaussModifier>[\\+\\-])?)?)?[dD](?<faces>[0-9]+)(?<exploding>[\u00a1!]{0,2})(?<modifierExpression>[\\+\\-](?<modifierValue>[0-9]+))?(?<thresholdExp>:(?<thresholdValue>[0-9]+))?", "permalinkFragment": "7JiBNE", "isFavorite": false, "isStarred": false}, {"title": "IPv6 CIDR Validator", "description": "This is a regex to validate the format of an IPv6-based CIDR range, where the IPv6 portion can be standard, mixed, and/or compressed notation.\n\nSupported by: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby\n\nAdapted from IPv6 regex published in [Regular Expressions Cookbook](https://learning.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/)", "dateCreated": "2022-07-29T15:08:06.000Z", "dateModified": "2022-07-29T15:08:06.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?:(?:(?:[A-F0-9]{1,4}:){6}|(?=(?:[A-F0-9]{0,4}:){0,6}(?:[0-9]{1,3}\\.){3}[0-9]{1,3}(?![:.\\w]))(([0-9A-F]{1,4}:){0,5}|:)((:[0-9A-F]{1,4}){1,5}:|:)|::(?:[A-F0-9]{1,4}:){5})(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-F0-9]{1,4}:){7}[A-F0-9]{1,4}|(?=(?:[A-F0-9]{0,4}:){0,7}[A-F0-9]{0,4}(?![:.\\w]))(([0-9A-F]{1,4}:){1,7}|:)((:[0-9A-F]{1,4}){1,7}|:)|(?:[A-F0-9]{1,4}:){7}:|:(:[A-F0-9]{1,4}){7})(?![:.\\w])\\/(?:12[0-8]|1[01][0-9]|[1-9]?[0-9])", "permalinkFragment": "o6qEkY", "isFavorite": false, "isStarred": false}, {"title": "HTML Minifier", "description": "https://stackoverflow.com/questions/5312349/minifying-final-html-output-using-regular-expressions-with-codeigniter\n\nThanks to @Alan Moore ", "dateCreated": "2022-08-10T05:37:28.000Z", "dateModified": "2022-08-10T05:37:28.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?ix)(?>[^\\S ]\\s*|\\s{2,})(?=(?:(?:[^<]++|<(?!\\/?(?:textarea|pre)\\b))*+)(?:<(?>textarea|pre)\\b|\\z))", "permalinkFragment": "kkh7oz", "isFavorite": false, "isStarred": false}, {"title": "Zoom links, only with passwords", "description": "Group 1 will have meeting id, group 2 will have password", "dateCreated": "2022-08-17T19:04:28.000Z", "dateModified": "2022-08-17T19:04:28.000Z", "author": "", "flavor": "dotnet", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "https:\\/\\/[\\w-]*\\.?zoom.us\\/j\\/([\\d\\w?=-]+)\\?pwd=([\\d\\w?=-]+)", "permalinkFragment": "R1EEL2", "isFavorite": false, "isStarred": false}, {"title": "Parse conventional commits message", "description": "https://conventionalcommits.org\n\nParses commits like **type(scope)!: subject**", "dateCreated": "2022-08-29T23:59:22.000Z", "dateModified": "2022-08-29T23:59:22.000Z", "author": "Alex Kinnee", "flavor": "pcre2", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^([\\w\\s]+)(?:\\((.+)\\))?(!?): (.+)$", "permalinkFragment": "l6Urwc", "isFavorite": false, "isStarred": false}, {"title": "Email with gmail+ implementation", "description": "Regex of email with ability to add gmail's +example system\n\nexample: root email = user@gmail.com\n                  gmail+       = user+extra@gmail.com", "dateCreated": "2022-09-02T18:33:34.000Z", "dateModified": "2022-09-02T18:33:34.000Z", "author": "brad", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^[a-zA-Z0-9_.]+[+]?[a-zA-Z0-9]+[@]{1}[a-z0-9]+[\\.][a-z]+$", "permalinkFragment": "BFl52W", "isFavorite": false, "isStarred": false}, {"title": "Good enough IPv6", "description": "A good enough approximation to IPv6 based on the examples at https://www.ibm.com/docs/en/ts3500-tape-library?topic=functionality-ipv4-ipv6-address-formats", "dateCreated": "2022-10-26T19:09:08.000Z", "dateModified": "2022-10-26T19:09:08.000Z", "author": "mig8447", "flavor": "pcre", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:(?:[a-f0-9]*)?:){1,7}[a-f0-9]*$", "permalinkFragment": "qQyn2z", "isFavorite": false, "isStarred": false}, {"title": "Replace sub-strings in string", "description": "Replace sub-strings in string", "dateCreated": "2023-01-01T01:47:41.000Z", "dateModified": "2023-01-01T01:47:41.000Z", "author": "", "flavor": "dotnet", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)_(\\d\\d)(\\d\\d)(\\d\\d)(\\S+)", "permalinkFragment": "FKkPWs", "isFavorite": false, "isStarred": false}, {"title": "Ultimate markdown parser", "description": "In order to neasting parsing work you need to run this regex multiple times on same target.", "dateCreated": "2023-01-02T01:50:43.000Z", "dateModified": "2023-01-02T01:50:43.000Z", "author": "Mateusz Budzisz", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(^\\|(?<tableSeparator>[\\s\\-|]+)\\|\\n)|(^\\|\\s*(?<tableTopFirst>[^|]+)(?=.*\\n\\|\\s*-))|((?<!^)\\|(?<tableTopMiddle>[^|\\n]+)(?=\\|.*\\|\\n\\| -))|(\\|(?<tableTopLast>[^|]+)\\|\\n(?=\\|\\s*-))|(^\\|\\s*(?<tableBottomFirst>[^|]+)(?=.*\\n^[^|]))|((?<!^)\\|(?<tableBottomMiddle>[^|\\n]+)(?=\\|.*\\|\\n[^|]))|(\\|\\s*(?<tableBottomLast>[^|]+)\\|\\n(?!\\|))|(^\\|\\s*(?<tableMiddleFirst>[^|]+)(?=\\|))|(\\|\\s*(?<tableMiddleLast>[^|]+)\\|\\n)|(\\|\\s*(?<tableMiddleMiddle>[^|]+))|!?(\\[(?<text>[^(]+)]\\((?<url>[^\")]+))(\"(?<title>[^\"]+)\"|.*)\\)|((?<!-.+\\n)- (?<unorderedListFirstItem>.+)\\n)|((?<=-.+\\n)- (?<unorderedListMiddleItem>.+)\\n(?=-))|(- (?<unorderedListLastItem>.+)\\n(?!-))|((?<!\\d+\\..+\\n)\\d+\\. (?<orderedListFirstItem>.+)\\n)|((?<=\\d+\\..+\\n)\\d+\\. (?<orderedListMiddleItem>.+)\\n(?=\\d+\\.))|(\\d+\\. (?<orderedListLastItem>.+)\\n(?!\\d+\\.))|(\\*\\*\\*(?<boldAndItalic>[^*]*)\\*\\*\\*)|(\\*\\*(?<bold>[^*]*)\\*\\*)|(\\*(?<italic>[^*]*)\\*)|(~~(?<strikethrough>[^~]*)~~)|(`{3}\\n(?<multilineCode>[^`]+)`{3}\\n)|(`(?<inlineCode>[^`\\n]*)`)|(^#{6} (?<h6>.+))|(^#{5} (?<h5>.+))|(^#{4} (?<h4>.+))|(^#{3} (?<h3>.+))|(^#{2} (?<h2>.+))|(^# (?<h1>.+))|(?<horizontalLine>^-{3}\\n)|(?<=^\\n)> (?<singleLineQuote>.+)\\n(?!^>)|((?<!> .+\\n)> (?<quoteFirst>.+))|(> (?<quoteLast>.+)(?!.*\\n> .+))|(> (?<quoteMiddle>.+))|(?<lineBreak>\\n{2})", "permalinkFragment": "AljM9u", "isFavorite": false, "isStarred": false}, {"title": "RFC3339 - JavaScript", "description": "Regex to validate a string that is RFC3339 compliant in JavaScript.\nRFC3339: https://www.rfc-editor.org/rfc/rfc3339.\nExpands upon: https://regex101.com/r/qH0sU7 by adding named capture groups for coding best practices.", "dateCreated": "2023-01-28T18:16:35.000Z", "dateModified": "2023-01-28T18:31:44.000Z", "author": "Elliot Huffman", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 3, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?<CompleteMatch>(?:(?<DateMonthYear>\\d{4}-\\d{2}-\\d{2})T(?<Time>\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))(?<TimeZone>Z|[\\+-]\\d{2}:\\d{2})?)$", "permalinkFragment": "OILTKN", "isFavorite": false, "isStarred": false}, {"title": "Palindromes", "description": "Matches palindromes:\n* arbitrary length\n* ignores non-significant characters (spaces, ponctuation)\n* ignores accents, provided the text is NFD-normalized\n* recursive palindromes (e.g. \"a \u00e9t\u00e9 \u00e0\"): either match the longest one (\"a \u00e9t\u00e9 \u00e0\") or the nested ones individually (\"a\", \"\u00e9t\u00e9\", \"\u00e0\") (see comment)", "dateCreated": "2023-02-01T17:47:17.000Z", "dateModified": "2023-02-02T08:27:33.000Z", "author": "NicolaF_", "flavor": "pcre2", "delimiter": "/", "flags": "gix", "version": 8, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?(DEFINE)\n  (?<palindrome>\n    # Recursive alternative first to match recursive palindromes.\n    # Invert alternatives order to match nested palindromes individually\n    # and (drastically) reduce backtracking.\n    (?<l1>\\p{L})\\p{M}* [\\s\\p{P}]* (?&palindrome) [\\s\\p{P}]* \\k<l1>\\p{M}*\n    | (?<l2>\\p{L})\\p{M}* [\\s\\p{P}]* \\k<l2>\\p{M}*\n    | \\p{L}\\p{M}*\n  )\n)\n\n(?<=[\\s\\p{P}]|^) (?&palindrome) (?(?=\\s*\\p{P}) (?:\\s*\\p{P})+ | (?=\\s|$))", "permalinkFragment": "JCQanr", "isFavorite": false, "isStarred": false}, {"title": "Remove extra/useless python elements for GPT input.", "description": "This RegEx removes unused elements such as inline comments and blank lines in python code. This will save you tokens and time when using GPT-3+ or ChatGPT to help code and debug.", "dateCreated": "2023-02-01T19:16:33.000Z", "dateModified": "2023-02-02T00:41:06.000Z", "author": "LukeL", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 3, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "((^|\\s)#(.*)$)|(^\\n)|(\\n(\\s|)+#(.*)$)|([\\n\\s]+#.*)|([\\n\\s]{2,}$)", "permalinkFragment": "XXtjt6", "isFavorite": false, "isStarred": false}, {"title": "Phone number for all countries", "description": "Phone number for all countries.\nValid symbols: ( ), -, whitespace", "dateCreated": "2023-02-07T07:33:05.000Z", "dateModified": "2023-02-07T07:33:05.000Z", "author": "Alexander Smirnov", "flavor": "dotnet", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?<code>\\+?\\d{1,3})[-\\s]{0,}(?<number>\\(?\\d{3}\\)?[-\\s]{0,}\\d{3}[-\\s]{0,}\\d{2}[-\\s]{0,}\\d{2})$", "permalinkFragment": "kwlBRS", "isFavorite": false, "isStarred": false}, {"title": "Get ip address  (only ipv4) Validator", "description": "Get ip address  (only ipv4) Validator", "dateCreated": "2023-02-20T18:43:47.000Z", "dateModified": "2023-02-21T12:05:27.000Z", "author": "Mr.Tang", "flavor": "dotnet", "delimiter": "\"", "flags": "gmi", "version": 4, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", "permalinkFragment": "uJsav4", "isFavorite": false, "isStarred": false}, {"title": "Aus Mobile number", "description": "validates against multiple common formats", "dateCreated": "2023-03-20T06:22:28.000Z", "dateModified": "2023-03-20T06:22:28.000Z", "author": "", "flavor": "dotnet", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^((\\+?(61\\W?4))|(04))\\W?(([0-9]{2}\\W[0-9]{3}\\W[0-9]{3})|([0-9]{8})|([0-9]{4}\\W[0-9]{4})|([0-9]{2}\\W[0-9]{6}))$", "permalinkFragment": "E3snBm", "isFavorite": false, "isStarred": false}, {"title": "ISD Codes for Phones", "description": "# ISD Codes for Phones\n\nMatches the basic format for ISD Codes.", "dateCreated": "2023-05-10T11:59:01.000Z", "dateModified": "2023-05-10T11:59:01.000Z", "author": "Arvind Singh Rawat", "flavor": "javascript", "delimiter": "/", "flags": "gs", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(\\+\\d{1,4}( \\d{1,4}){0,2})", "permalinkFragment": "MLwsKC", "isFavorite": false, "isStarred": false}, {"title": "regex data e time", "description": "pega a data e time", "dateCreated": "2023-07-01T00:36:07.000Z", "dateModified": "2023-07-01T00:36:07.000Z", "author": "jaffar", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}.\\d{3}-\\d{2}:\\d{2})$", "permalinkFragment": "AFni08", "isFavorite": false, "isStarred": false}, {"title": "URL Regex", "description": "Matches protocol, domain, port, path, query and anchor as named capturing groups.", "dateCreated": "2023-07-06T08:43:50.000Z", "dateModified": "2023-07-06T08:45:54.000Z", "author": "Jonathan", "flavor": "dotnet", "delimiter": "\"", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?>(?'protocol'[a-zA-Z]+)://)?(?'domain'[a-zA-Z0-9.\\-_]*)?(?>:(?'port'\\d{1,5}))?/(?'path'[a-zA-Z0-9_\\-%]+)(?:(?>\\?(?'query'[a-zA-Z0-9_\\-=&%]+))()|(?>#(?'anchor'[a-zA-Z0-9_\\-%]+))()){0,2}$", "permalinkFragment": "dGby6i", "isFavorite": false, "isStarred": false}, {"title": "Phone numbers national and local (BE exemple)", "description": "Phone numbers in Belgium.\n\n- The pattern does match with delimiters such as [\\s./-]\n- No global length is checked\n- Accepts number starting by 0 for local dialing\n- Accepts number starting by +<national code> (+32 in these tests)", "dateCreated": "2023-07-13T11:03:45.000Z", "dateModified": "2023-07-13T11:03:45.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(0((?:[\\s\\-./]?\\d{2,3})+)|([+][1-9]\\d{0,3})((?:[\\s\\-./]?\\d{2,3})+))$", "permalinkFragment": "ImBBab", "isFavorite": false, "isStarred": false}, {"title": "Python regular expression to detect any type of group link and private channel in Telegram", "description": "You can use this regular expression to identify any type of Telegram link. It doesn't matter whether it is t.me or telegram.me.\n\nLinks including \"joinchat\" are also accepted.", "dateCreated": "2023-07-23T15:57:53.000Z", "dateModified": "2023-07-24T15:49:36.000Z", "author": "Telegram : T.me/TinyPY", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 2, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?i)(https\\:\\/\\/){1}((t\\.me|telegram\\.me)\\/){1}(joinchat\\/)?(([\\+\\_\\-a-zA-Z0-9])+)$", "permalinkFragment": "DrCcYJ", "isFavorite": false, "isStarred": false}, {"title": "IDN Domains and Subdomains", "description": "**IDN Domains & Normal Domains**\nThis regex is able to identify any type of domain or subdomain whether it is IDN or normal, \nthis includes domains in emojis, non-Latin characters, etc.", "dateCreated": "2023-07-26T14:47:24.000Z", "dateModified": "2023-07-26T14:47:24.000Z", "author": "NCK", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(?:[^:\\/?#]+:)?(?:(?:\\/\\/)?(?:[^\\s\\/?#]+\\.)+[^\\s\\/?#]+(?:\\/[^\\s\"#]*)?)$", "permalinkFragment": "PwpCoI", "isFavorite": false, "isStarred": false}, {"title": "Complete ISO 8601 Validator", "description": "Not only validates valid date/time, but also the number of days in a month (including leap year), and both Z and UTC offset.", "dateCreated": "2023-08-05T17:51:36.000Z", "dateModified": "2023-08-06T02:59:16.000Z", "author": "Sillvva", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 4, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))T([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d\\.\\d{3}([+-]([01]\\d|2[0-3]):[0-5]\\d|Z)$", "permalinkFragment": "6gJsuQ", "isFavorite": false, "isStarred": false}, {"title": "Mikrotik firewall logs", "description": "Matching for mikrotik ROS 7\nUsed in promtail and grafana", "dateCreated": "2023-08-11T19:09:04.000Z", "dateModified": "2023-08-11T21:09:39.000Z", "author": "", "flavor": "golang", "delimiter": "`", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^((?P<mode>[^:]+):\\s)?in:(?P<InputInterface>[^,]+)\\s+out:(?P<OutputInterface>[^,]+),\\sconnection-state:(?P<ConnectionState>[^\\s]+)\\s+(?:src-mac\\s+(?P<SourceMacAddress>[^,]+),\\s+)?proto\\s+(?P<Protocol>\\w+)(?:\\s+\\((?P<Flags>[^)]+)\\))?,\\s+\\[?(?P<SourceAddress>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|[a-f\\d:]+)\\]?(?::(?P<SourcePort>\\d+))?->\\[?(?P<DestinationAddress>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|[a-f\\d:]+)\\]?(?::(?P<DestinationPort>\\d+))?,\\s(NAT\\s?\\[?(?P<NatSourceAddress>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|[a-f\\d:]+)\\]?(?::(?P<NatSourcePort>\\d+))?->\\(\\[?(?P<NatExternalAddress>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|[a-f\\d:]+)\\]?(?::(?P<NatExternalPort>\\d+))?->\\[?(?P<NatInternalAddress>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|[a-f\\d:]+)\\]?(?::(?P<NatInternalPort>\\d+))?\\),\\s)?len\\s+(?P<Length>\\d+)", "permalinkFragment": "e6MI8D", "isFavorite": false, "isStarred": false}, {"title": "Decimal up to 15.2 digits in French and English culture", "description": "Validates that a given string is a number of up to 15 integer digits and up to 2 decimal digits.\nGroup separators could be either comma or space class but can't be mixed.\nDecimal separator could be either comma (if comma was not a group delimiter) or dot.\n\nThis variation uses small captures for mode detection (instead of back references)\n\nv5 fixes a little bug when , is used as group separator and , was still accepted as decimal separator\nv6 is ECMAScript compatible", "dateCreated": "2023-08-16T18:38:40.000Z", "dateModified": "2023-08-30T15:14:41.000Z", "author": "BkQc", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 6, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^-?\\d{1,3}(?:(?:,\\d{3}){0,4}(?:\\.\\d{1,2})|(?:(?:\\s\\d{3}){0,4}|(?:\\d{0,12}))(?:[.,]\\d{1,2})?)$", "permalinkFragment": "aTpVEF", "isFavorite": false, "isStarred": false}, {"title": "regex101: RFC1918 Private IPv4 Addresses, but limited to matching /24 subnet host IDs", "description": "POSIX ERE compatible, suitable for usage in Bash `[[` testing\n\n## Attributions\n\nDerived from [regex101: RFC1918 - Private IPv4 addresses](https://regex101.com/library/E3GJ3h) by 0100101101001.\n", "dateCreated": "2023-08-23T07:20:50.000Z", "dateModified": "2023-08-23T07:20:50.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "^(10(\\.(1?[[:digit:]][[:digit:]]?|2([0-4][[:digit:]]|5[0-5]))){2}|172\\.(1[6-9]|2\\d|3[0-2])(\\.(1?[[:digit:]][[:digit:]]?|2([0-4][[:digit:]]|5[0-5])))|192\\.168(\\.(1?[[:digit:]][[:digit:]]?|2([0-4][[:digit:]]|5[0-5]))))$", "permalinkFragment": "z6KTsN", "isFavorite": false, "isStarred": false}, {"title": "Invalid Windows Filename Chars", "description": "https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file\n\nInteger value zero, sometimes referred to as the ASCII NUL character.\n\nCharacters whose integer representations are in the range from 1 through 31, except for alternate data streams where these characters are allowed. For more information about file streams, see File Streams.\n\nThe following reserved characters:\n\n- `<` (less than)\n- `>` (greater than)\n- `:` (colon)\n- `\"` (double quote)\n- `/` (forward slash)\n- `\\` (backslash)\n- `|` (vertical bar or pipe)\n- `?` (question mark)\n- `*` (asterisk)", "dateCreated": "2023-09-04T05:47:59.000Z", "dateModified": "2023-09-04T05:54:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "[\\x00-\\x1F\\x7F<>:\"\\/\\\\|?*]", "permalinkFragment": "UPVSng", "isFavorite": false, "isStarred": false}, {"title": "Match each Unicode Characters, Symbols, and Emojis consecutively", "description": "RegExp matches each (combined) Unicode symbol, character, or emoji consecutively.\n\nNote: there are some edge cases where it does not combine some symbols that should be seen as one symbol (after [`Default Grapheme Cluster Boundary` of `UAX #29`](https://unicode.org/reports/tr29/#Default_Grapheme_Cluster_Table \"https://unicode.org/reports/tr29/#Default_Grapheme_Cluster_Table\")).\nFor Unicode code point info see [codepoints.net](https://codepoints.net/ \"https://codepoints.net/\")\n\nAlso, see [this stackoverflow](https://stackoverflow.com/questions/54369513/how-to-count-the-correct-length-of-a-string-with-emojis-in-javascript \"https://stackoverflow.com/questions/54369513/how-to-count-the-correct-length-of-a-string-with-emojis-in-javascript\"), which inspired me to make this RegExp (and I also needed it for a project), for Unicode symbol splitting with JavaScript strings.", "dateCreated": "2023-09-26T02:02:58.000Z", "dateModified": "2023-09-26T02:02:58.000Z", "author": "MAZ01001", "flavor": "javascript", "delimiter": "/", "flags": "guy", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "(?:\\p{Extended_Pictographic}[\\p{Emoji_Modifier}\\p{M}]*(?:\\p{Join_Control}\\p{Extended_Pictographic}[\\p{Emoji_Modifier}\\p{M}]*)*|\\s|.)\\p{M}*", "permalinkFragment": "1sHYup", "isFavorite": false, "isStarred": false}, {"title": "Placeholder resolving", "description": ".Net regular expression for resolving placeholders in the format of ${rewriter(multilevel:key)?fallback} (+ variations)", "dateCreated": "2023-10-07T19:39:39.000Z", "dateModified": "2023-10-07T19:39:39.000Z", "author": "", "flavor": "dotnet", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 0, "score": 0.3423719528896193, "userVote": null, "regex": "\\${(\\s*((?<rewriter>[^(\\s]+)\\s*\\(\\s*(?<key>[^()?\\s}]+)\\s*\\)\\s*)|(\\s*(?<key>[^()?\\s}]+)\\s*))(\\?(?<fallback>[^}]*))*}", "permalinkFragment": "BVx2mb", "isFavorite": false, "isStarred": false}, {"title": "Regular expression to remove all puncutation", "description": "Removes all of the puncutation present inlcuding \\n,\\t,\\r", "dateCreated": "2014-06-20T07:18:59.000Z", "dateModified": "2014-06-20T07:18:59.000Z", "author": "Abhinav Gupta", "flavor": "python", "delimiter": "\"", "flags": "gi", "version": 1, "upvotes": 14, "downvotes": 13, "score": 0.3398532457868709, "userVote": null, "regex": "(\\\\n)|(\\\\r)|(\\\\t)|(\\u00A9)|([!\"#$%&()*+,-./:;<=>?@\\[\\\\\\]^_`{|}~])", "permalinkFragment": "zG9cA6", "isFavorite": false, "isStarred": false}, {"title": "Date validator for mm/dd/yy", "description": "", "dateCreated": "2014-09-23T08:08:54.000Z", "dateModified": "2014-09-23T08:08:54.000Z", "author": "Dheeraj Khushalani - dotnetguy.net", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 10, "downvotes": 8, "score": 0.3371606938034301, "userVote": null, "regex": "^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$", "permalinkFragment": "oP8mE8", "isFavorite": false, "isStarred": false}, {"title": "Positive Numbers greater than 0 with leading zeroes.", "description": "Accepts all positive numbers above 0.\nAccepts numbers with leading zeroes e.g.: 0123, 00123.", "dateCreated": "2014-10-17T05:57:29.000Z", "dateModified": "2014-10-17T05:57:29.000Z", "author": "Sandeep Ranka", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 9, "downvotes": 7, "score": 0.3317819560677652, "userVote": null, "regex": "^0*?[1-9]\\d*$", "permalinkFragment": "dT6dE9", "isFavorite": false, "isStarred": false}, {"title": "UK phone number", "description": "UK phone number", "dateCreated": "2016-02-17T13:05:20.000Z", "dateModified": "2016-02-17T13:05:20.000Z", "author": "Andrea SonnY", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 9, "downvotes": 7, "score": 0.3317819560677652, "userVote": null, "regex": "^(?:(?:0(?:0|11)[\\s-]?|\\+)44[\\s-]?(?:0[\\s-]?)?|0)(?:\\d{2}[\\s-]?\\d{4}[\\s-]?\\d{4}|\\d{3}[\\s-]?\\d{3}[\\s-]?\\d{3,4}|\\d{4}[\\s-]?(?:\\d{5}|\\d{3}[\\s-]?\\d{3})|\\d{5}[\\s-]?\\d{4,5}|8(?:00[\\s-]?11[\\s-]?11|45[\\s-]?46[\\s-]?4\\d))$", "permalinkFragment": "pE1gV0", "isFavorite": false, "isStarred": false}, {"title": "42 post regex", "description": "Hosts regex for 42 school (france)", "dateCreated": "2014-05-05T22:37:05.000Z", "dateModified": "2014-05-05T22:37:05.000Z", "author": "Kerosene2000", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 8, "downvotes": 6, "score": 0.32590266870738294, "userVote": null, "regex": "(e[0-9]r[0-9]{1,2}p[0-9]{1,2})", "permalinkFragment": "sQ6wS8", "isFavorite": false, "isStarred": false}, {"title": "price float pattern", "description": "Checks that value is float format and has two digits at max", "dateCreated": "2014-12-14T09:10:13.000Z", "dateModified": "2014-12-14T09:10:13.000Z", "author": "@jprajani", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 8, "downvotes": 6, "score": 0.32590266870738294, "userVote": null, "regex": "^\\d+(?:[.]\\d{1,2}|$)$", "permalinkFragment": "eY3bB5", "isFavorite": false, "isStarred": false}, {"title": "sample", "description": "", "dateCreated": "2013-11-27T09:23:27.000Z", "dateModified": "2013-11-27T09:23:27.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 7, "downvotes": 5, "score": 0.31950733575699347, "userVote": null, "regex": "^(?:\\s*\\d{8}\\s*(?:,|$))+$", "permalinkFragment": "gB7rX1", "isFavorite": false, "isStarred": false}, {"title": "trim string", "description": "trim leading and trailing whitespace from a string", "dateCreated": "2014-06-03T14:13:26.000Z", "dateModified": "2014-06-03T14:13:26.000Z", "author": "Dave Atchley", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 7, "downvotes": 5, "score": 0.31950733575699347, "userVote": null, "regex": "^\\s+|\\s+$", "permalinkFragment": "qR5pE8", "isFavorite": false, "isStarred": false}, {"title": "named group sample", "description": "", "dateCreated": "2014-07-21T23:39:53.000Z", "dateModified": "2014-07-21T23:39:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 5, "score": 0.31950733575699347, "userVote": null, "regex": "distance from (?<from>.*) to (?<to>.*)", "permalinkFragment": "sH6pK8", "isFavorite": false, "isStarred": false}, {"title": "postgesql", "description": "", "dateCreated": "2015-08-11T09:45:44.000Z", "dateModified": "2015-08-11T09:45:44.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 7, "downvotes": 5, "score": 0.31950733575699347, "userVote": null, "regex": "'\\''S', '''s'", "permalinkFragment": "xD5aW8", "isFavorite": false, "isStarred": false}, {"title": "string contains", "description": "", "dateCreated": "2016-02-09T11:14:48.000Z", "dateModified": "2016-02-09T11:14:48.000Z", "author": "mgaus", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 7, "downvotes": 5, "score": 0.31950733575699347, "userVote": null, "regex": "<([\\w-_]+)>(.+\\s.+)<\\/\\1>", "permalinkFragment": "rO1bP6", "isFavorite": false, "isStarred": false}, {"title": "IPv4&IPv6 URL validation regular expression", "description": "", "dateCreated": "2014-04-24T04:15:15.000Z", "dateModified": "2014-04-24T04:15:15.000Z", "author": "Henry Li", "flavor": "pcre", "delimiter": "/", "flags": "Regular expression", "version": 1, "upvotes": 10, "downvotes": 9, "score": 0.3170748250407618, "userVote": null, "regex": "(?=(s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))(%.+)?\\s*)|(([\\w-]+\\.)+[\\w-]+(\\/[\\w- .\\/?%&amp;=]*)?))", "permalinkFragment": "jF0gI3", "isFavorite": false, "isStarred": false}, {"title": "US and Canada Regex", "description": "A zipcode regex for validation of both US and Canada", "dateCreated": "2014-02-10T20:36:32.000Z", "dateModified": "2014-02-10T20:36:32.000Z", "author": "Kyle M.", "flavor": "javascript", "delimiter": "/", "flags": "zipcode", "version": 1, "upvotes": 6, "downvotes": 4, "score": 0.3126695474501864, "userVote": null, "regex": "(^[0-9]{5}(-[0-9]{4})?$)|(^[ABCEGHJKLMNPRSTVXY]{1}[0-9]{1}[A-Z]{1} *[0-9]{1}[A-Z]{1}[0-9]{1}$)", "permalinkFragment": "uI3iG5", "isFavorite": false, "isStarred": false}, {"title": "Unicode url sanitising", "description": "", "dateCreated": "2014-04-29T13:01:38.000Z", "dateModified": "2014-04-29T13:01:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "u", "version": 1, "upvotes": 6, "downvotes": 4, "score": 0.3126695474501864, "userVote": null, "regex": "[^\\pL\\pN$-_.+!*\\'\\(\\)\\,\\{\\}\\|\\\\\\\\\\^\\~\\[\\]`\\<\\>\\#\\%\\\"\\;\\/\\?\\:\\@\\&amp;\\=\\.]", "permalinkFragment": "mI1yY3", "isFavorite": false, "isStarred": false}, {"title": "Url with <a> (param) validation", "description": "https://www.google.com\nhttp://www.google.net/hello\nhttps://www.google.<var>\nhttp://www.google.<hello>/hello\n\nabove url matching with given regex\n\n", "dateCreated": "2014-05-06T04:14:32.000Z", "dateModified": "2014-05-06T04:14:32.000Z", "author": "Duleep Dissanayaka", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 6, "downvotes": 4, "score": 0.3126695474501864, "userVote": null, "regex": "\n^((http|https):\\/\\/)?(www[0-9]\\.)?(([A-Za-z0-9_-])+\\.{1})+([A-Za-z]{2,4}|\\<[^<>]+\\>)(\\/([A-Za-z0-9_-])+)*(\\/)?$", "permalinkFragment": "yS4gO3", "isFavorite": false, "isStarred": false}, {"title": "Password Enforcement Pattern -- trailing pattern", "description": "This RegEx was posted on a Ruby site as one for enforcing password pattern. I added {8,32} to limit the length of the password, even though I realize no one has passwords longer than that. \nRules: at least 1 digit, 1 special character (as defined), 1 upper case and 1 lower case character, between 8 and 32 characters total.\n\nThe question I have pertains to the trailing .*$ pattern. On the Rubular site, this is required. On regex101.com it does not see to add value to the regex.\n\nDo I need the .*$ on the expression?", "dateCreated": "2015-02-22T20:57:23.000Z", "dateModified": "2015-02-22T20:57:23.000Z", "author": "Dave Phillips", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 4, "score": 0.3126695474501864, "userVote": null, "regex": "(?=^.{8,32}$)(?=.*\\d)(?=.*[!@#$%^&*]+)(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$", "permalinkFragment": "zM3eL6", "isFavorite": false, "isStarred": false}, {"title": "Select all chars before last backslash", "description": "For selecting paths without filename", "dateCreated": "2015-03-11T20:51:25.000Z", "dateModified": "2015-03-11T20:51:25.000Z", "author": "Me!", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 4, "score": 0.3126695474501864, "userVote": null, "regex": "(^.*\\\\\\s*)", "permalinkFragment": "dZ7jX4", "isFavorite": false, "isStarred": false}, {"title": "FQDN Fully Qualified Domain Name", "description": "* Allow only two or more labels.\n* Fix deprecated FQDN regexp not passing on test \"dicas-l.com.br\"", "dateCreated": "2015-06-30T16:04:20.000Z", "dateModified": "2015-06-30T16:04:20.000Z", "author": "Rafael Justo and Mauro Trajber", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 9, "downvotes": 8, "score": 0.30962897327740585, "userVote": null, "regex": "^((([a-z0-9][a-z0-9\\-]*[a-z0-9])|[a-z0-9]+)\\.)*([a-z]+|xn\\-\\-[a-z0-9]+)\\.?$", "permalinkFragment": "oU0mF8", "isFavorite": false, "isStarred": false}, {"title": "number with or without thousands separator(.) and decimal part(,)", "description": "number with or without thousands separator(.) and decimal part(,)\nES: 100000; 1.646; 13323,33; 3.444.434,44", "dateCreated": "2014-09-24T15:30:43.000Z", "dateModified": "2014-09-24T15:30:43.000Z", "author": "Basten", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 11, "downvotes": 11, "score": 0.30721804636484285, "userVote": null, "regex": "^-?(\\d+|\\d{1,3}(\\.\\d{3})+)(\\,(\\s)?\\d*)?$", "permalinkFragment": "zD4lW2", "isFavorite": false, "isStarred": false}, {"title": "HTTP url parser", "description": "Parses a URL to the different parts", "dateCreated": "2014-06-23T09:21:12.000Z", "dateModified": "2014-06-23T09:21:12.000Z", "author": "AmitK", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "((http[s]?\\:)\\/\\/)?([^\\?\\:\\/#]+)(\\:([0-9]+))?(\\/[^\\?\\#]*)?(\\?([^#]*))?(#.*)?", "permalinkFragment": "uS3lH3", "isFavorite": false, "isStarred": false}, {"title": "SFTP or FTP url", "description": "Parse an SFTP or FTP url and brak it into named capture groups.", "dateCreated": "2014-08-20T21:43:44.000Z", "dateModified": "2014-08-20T21:43:44.000Z", "author": "Cullen Johnson", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "(?<protocol>s?ftp):\\/\\/(?:(?<user>[^@\\s]+)@)?(?<host>[^\\?\\s\\:]+)(?:\\:(?<port>[0-9]+))?(?:\\?(?<password>.+))?", "permalinkFragment": "fU0vC7", "isFavorite": false, "isStarred": false}, {"title": "find numeric groups in strings", "description": "", "dateCreated": "2014-09-24T05:58:53.000Z", "dateModified": "2014-09-24T05:58:53.000Z", "author": "Vovan", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "(\\d+)", "permalinkFragment": "uD1dE2", "isFavorite": false, "isStarred": false}, {"title": "Currency Amount", "description": "Format: x0.00\n\nValid:\n13.37\n4.20\n1.00\n\nInvalid:\n13,37\n4,20\n1,00\n1\n7.5", "dateCreated": "2014-11-25T10:42:46.000Z", "dateModified": "2014-11-25T10:42:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "^\\d+\\.\\d{2}$", "permalinkFragment": "jE0eC6", "isFavorite": false, "isStarred": false}, {"title": "Any number between 0 and 10 with 0 or 1 decimal places", "description": "Matches any number between 0 and 10 (inclusive) with 0 or 1 decimal places. Note that .5 will NOT be matched but 0.5 will. Also 10.X will not be matched, but 10 will.", "dateCreated": "2014-12-05T03:52:53.000Z", "dateModified": "2014-12-05T03:52:53.000Z", "author": "Matt Coubrough", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "(?<![\\d\\.-])\\d(\\.\\d)?(?!(\\.\\d)|\\d)|(?<![\\d\\.-])10(?!(\\.\\d)|\\d])", "permalinkFragment": "sG1mA3", "isFavorite": false, "isStarred": false}, {"title": "Currency amount without currency symbol", "description": "Matches numbers that are likely to by financial amount. Does not consider the type of currency.", "dateCreated": "2015-01-21T16:07:42.000Z", "dateModified": "2015-01-21T16:07:42.000Z", "author": "elgehelge", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "(-?\\d{1,3}(,?\\d{3})*(\\.\\d{2}?))(\\D|$)", "permalinkFragment": "eS1dC4", "isFavorite": false, "isStarred": false}, {"title": "strip parentheses enclosed text with no keywords", "description": "strip parentheses enclosed text with no keywords - handles nested parentheses - if using brackets/braces normalize string to parentheses then use the regex", "dateCreated": "2015-02-14T00:03:05.000Z", "dateModified": "2015-02-14T00:03:05.000Z", "author": "marie bacuno", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "[(](?!([^)]*\\b(ARR|ARRANGEMENT|ARRANGEMENTS|ARRANGED|CHOPPED|DUB|EDIT|FT|FEAT|FEATURING|INSTRUMENTAL|MASH UP|MASHUP|MASH-UP|MIX|REMIX|REPRISE|SCREWED|TITLE|VERSION)\\b[^(]*)).*?[)]", "permalinkFragment": "rP5uX6", "isFavorite": false, "isStarred": false}, {"title": "openweathermap rain and snow", "description": "Extract from {\"city\":{\"id\":1217734,\"name\":\"Boysun\",\"findname\":\"BOYSUN\",\"country\":\"UZ\",\"coord\":{\"lon\":67.198608,\"lat\":38.206108},\"zoom\":8,\"langs\":[{\"link\":\"http:\\/\\/en.wikipedia.org\\/wiki\\/Boysun\"},{\"ru\":\"\u0411\u043e\u0439\u0441\u0443\u043d\"}]},\"time\":1394871628,\"main\":{\"temp\":274.74,\"temp_min\":274.74,\"temp_max\":274.74,\"pressure\":823.92,\"sea_level\":1035.91,\"grnd_level\":823.92,\"humidity\":98},\"wind\":{\"speed\":0.6,\"deg\":97.004},\"clouds\":{\"all\":92},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"overcast clouds\",\"icon\":\"04d\"}],\"rain\":{\"3h\":0.1},\"snow\":{\"3h\":0.85}}", "dateCreated": "2015-04-07T23:40:12.000Z", "dateModified": "2015-04-07T23:40:12.000Z", "author": "amplatfus", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "(?<=\"3h\":|\"3h\":)((d+)|\\d+\\.\\d+)(?=)", "permalinkFragment": "nU9qX7", "isFavorite": false, "isStarred": false}, {"title": "Dotted Decimal IPv4 Adress (for programming languages)", "description": "Searches for dotted decimal IPv4 Adresses and saves the numbers in match groups.", "dateCreated": "2015-05-09T17:06:30.000Z", "dateModified": "2015-05-09T17:06:30.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "\\b(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9]))\\b", "permalinkFragment": "sQ9kF5", "isFavorite": false, "isStarred": false}, {"title": "foreach", "description": "", "dateCreated": "2015-05-12T16:32:30.000Z", "dateModified": "2015-05-12T16:32:30.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "Uis", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "{[ \\t]*foreach[ \\t]*\\$(_*[A-Za-z]+[A-Za-z0-9_]*)[ \\t]*as[ \\t]*\\$(_*[A-Za-z]+[A-Za-z0-9_]*)(?:[ \\t]=>[ \\t]*\\$(_*[A-Za-z]+[A-Za-z0-9_]*))?[ \\t]*}(.*){[ \\t]*\\/foreach[ \\t]*}", "permalinkFragment": "dA6bZ1", "isFavorite": false, "isStarred": false}, {"title": "Out of office", "description": "This is why", "dateCreated": "2015-05-22T14:44:30.000Z", "dateModified": "2015-05-22T14:44:30.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "out.*office", "permalinkFragment": "vZ7bT6", "isFavorite": false, "isStarred": false}, {"title": "IPV4 address validation using recursion", "description": "Validate IPv4 addresses using PCRE's recursion patterns. A shorter but less efficient alternative to https://regex101.com/r/wZ6oY5/1", "dateCreated": "2015-06-09T14:53:22.000Z", "dateModified": "2015-06-09T14:53:22.000Z", "author": "Captain Haddock", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "^(2[0-4]\\d|25[0-5]|1?\\d?\\d)(?:\\.(?1)){3}$", "permalinkFragment": "cZ0fH3", "isFavorite": false, "isStarred": false}, {"title": "Match <?xml...?>", "description": "How to match the first line of a xml document", "dateCreated": "2015-06-17T09:25:41.000Z", "dateModified": "2015-06-17T09:25:41.000Z", "author": "", "flavor": "pcre", "delimiter": "%", "flags": "", "version": 1, "upvotes": 5, "downvotes": 3, "score": 0.3057378545838018, "userVote": null, "regex": "<\\?xml(.+?)\\?>", "permalinkFragment": "cU1tU7", "isFavorite": false, "isStarred": false}, {"title": "phone test", "description": "", "dateCreated": "2014-05-03T10:41:57.000Z", "dateModified": "2014-05-03T10:41:57.000Z", "author": "cool guy", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 8, "downvotes": 7, "score": 0.30116630114761106, "userVote": null, "regex": "(?<=TELEPHONE:)[0-9]+", "permalinkFragment": "wJ2qC5", "isFavorite": false, "isStarred": false}, {"title": "Date-Validation with mm/dd/yyyy or mmddyyyy or mm-dd-yyyy or m/d/yyyy ", "description": "Date Validation with leap year handling, & it takes care of date validation in the format like :mm/dd/yyyy or mmddyyyy or mm-dd-yyyy or m/d/yyyy or m-d-yyyy.\n\n12/01/1986\n02/29/2016\n02/29/2015\n13/31/1986\n12/31/1980\n1/32/2015\n1/31/2015\n\n\n01012016\n01/01/2016\n1/1/2016\n1/1/16\n01/01/16\n01-01-2016\n1-1-2016\n1-1-16\n01-01-16\n", "dateCreated": "2015-08-12T19:32:04.000Z", "dateModified": "2015-08-12T19:32:04.000Z", "author": "Ashish", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 8, "downvotes": 7, "score": 0.30116630114761106, "userVote": null, "regex": "^(?:(?:(?:0?[13578]|1[02])(\\/|-|\\.)31)\\1|(?:(?:0?[1,3-9]|1[0-2])(\\/?|-|\\.)(?:29|30)\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:(?:0?2)(\\/?|-|\\.)(?:29)\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:(?:0?[1-9])|(?:1[0-2]))(\\/?|-|\\.)(?:0?[1-9]|1\\d|2[0-8])\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$", "permalinkFragment": "pZ4gG4", "isFavorite": false, "isStarred": false}, {"title": "js function test", "description": "", "dateCreated": "2013-04-09T03:26:29.000Z", "dateModified": "2013-04-09T03:26:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "/[,\\s\"']/g", "permalinkFragment": "dL5uQ5", "isFavorite": false, "isStarred": false}, {"title": "Hello world example", "description": "", "dateCreated": "2013-09-10T09:00:32.000Z", "dateModified": "2013-09-10T09:00:32.000Z", "author": "Fedir RYKHTIK", "flavor": "pcre", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "[0-9a-z !]*", "permalinkFragment": "mS8fN8", "isFavorite": false, "isStarred": false}, {"title": "takie", "description": "", "dateCreated": "2013-09-21T13:49:37.000Z", "dateModified": "2013-09-21T13:49:37.000Z", "author": "sdfsdfdsf", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "format\\((.*), (.*), \"(.*)\", (.*)+\\)", "permalinkFragment": "vC3eF4", "isFavorite": false, "isStarred": false}, {"title": "Error in Refex", "description": "", "dateCreated": "2013-10-02T05:20:26.000Z", "dateModified": "2013-10-02T05:20:26.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "\\d+[.,]?(\\d+\\s*k?|x{2,3})(?=\\s*(original|actual|highway)?\\s*miles)|(?<=mile(s|agex?):?\\s*(is|~)?\\s*)\\d+[.,]?(\\d+(\\s*k)?|x{2,3})|(\\d+(\\s*K)|x{2,3})", "permalinkFragment": "nE4eO4", "isFavorite": false, "isStarred": false}, {"title": "Get dynamic parameters from an URL", "description": "Gets the parameters (how many you want) from a url and organize into groups", "dateCreated": "2014-01-02T18:54:28.000Z", "dateModified": "2014-01-02T18:54:28.000Z", "author": "Caio Oliveira", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?:http\\:\\/\\/(?:www\\.)?){1}[^\\/]*\\/([^\\/]*)(?#parameter2)(?:\\/([^\\/]*))?(?#parameter3)(?:\\/([^\\/]*))?(?#parameter4)(?:\\/([^\\/]*))?", "permalinkFragment": "mH7iW6", "isFavorite": false, "isStarred": false}, {"title": "SRT (SubRip) Parser", "description": "Matches id, timecode and text for multiple subtitles. Make sure the source ends with a blank line to capture the last subtitle.", "dateCreated": "2014-01-11T19:33:43.000Z", "dateModified": "2014-01-11T19:33:43.000Z", "author": "Fergo", "flavor": "pcre", "delimiter": "/", "flags": "gs", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "([0-9]+)\\n([0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}) --> ([0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3})\\n(.*?)\\n\\n", "permalinkFragment": "pE0cO4", "isFavorite": false, "isStarred": false}, {"title": "US Postal Code", "description": "refactor", "dateCreated": "2014-01-16T20:27:54.000Z", "dateModified": "2014-01-16T20:27:54.000Z", "author": "jay johnson", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(^\\d{4}\\d$|^\\d{4}\\d-\\d{4}$)", "permalinkFragment": "fA6qW4", "isFavorite": false, "isStarred": false}, {"title": "Episode numbering below 100", "description": "Simplest form to match all the episode numbering versions I could remember that don't use incremental numberign without seasons.", "dateCreated": "2014-03-20T08:53:06.000Z", "dateModified": "2014-03-20T08:53:06.000Z", "author": "SEKCobra", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(\\d+)(\\d\\d)|(\\d+).(\\d+)", "permalinkFragment": "rY5zC9", "isFavorite": false, "isStarred": false}, {"title": "@import url(comments.css)", "description": "", "dateCreated": "2014-04-04T08:42:02.000Z", "dateModified": "2014-04-04T08:42:02.000Z", "author": "Mitus M.", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "@import\\s*(url)?\\s*\\(?([^;]+?)\\)?;", "permalinkFragment": "zB9hP9", "isFavorite": false, "isStarred": false}, {"title": "Palabras en may\u00c3\u00bascula que no est\u00c3\u00a1n despu\u00c3\u00a9s de un punto", "description": "", "dateCreated": "2014-04-18T16:57:56.000Z", "dateModified": "2014-04-18T16:57:56.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?=((?<!\\.\\s|^)(?:[A-Z][a-z]+)))", "permalinkFragment": "rZ2xB2", "isFavorite": false, "isStarred": false}, {"title": "more DISORTED EMAIL ADDRESSES", "description": "", "dateCreated": "2014-05-01T03:53:39.000Z", "dateModified": "2014-05-01T03:53:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^(?'Username'[-\\w\\d\\.]+?)(?:\\s+at\\s+|\\s+\\[at\\]\\s+|\\s*@\\s*|\\s*(?:[\\[\\]@]){3}\\s*)(?'Domain'[-\\w\\d\\.]*?)\\s*(?:dot|\\.|(?:[\\[\\]dot\\.]){3,5})\\s*(?'TLD'\\w+)$", "permalinkFragment": "gC8oF5", "isFavorite": false, "isStarred": false}, {"title": "Repetitions", "description": "More than three words repeated in 3.", "dateCreated": "2014-05-19T03:34:47.000Z", "dateModified": "2014-05-19T03:34:47.000Z", "author": "paconaranjo", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(([a-z\u00c3\u00a1-\u00c3\u00ba]+)[\\.,]?\\s[A-Z\u00c3\u0081-\u00c3\u0161a-z\u00c3\u00a1-\u00c3\u00ba]){3,}\\1", "permalinkFragment": "oL9xU2", "isFavorite": false, "isStarred": false}, {"title": "Parasite subtitles", "description": "", "dateCreated": "2014-05-19T18:38:18.000Z", "dateModified": "2014-05-19T18:38:18.000Z", "author": "Andrey Spiridonov", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^(?i)([ !?\u00c2\u00bf\u00c2\u00a1.,;:\u00e2\u20ac\u201d\u00e2\u20ac\u201c'\\x22\\n\\r-]|\\x3C/?[ibuc]\\x3E|\\x3Cc:#[0-9a-fA-F]{6}\\x3E|a+h+|o+h+|meh|e+h+|hm+|(g|a+r)r+|(a+|o+|e+)w+|b?p?g?ah+|phe+w+|o+uch|yack|n*h*u+n*h+|r*(u+|a+)r*n*g*h+|r+aa+|(e|h?i*|hi*-)ya+h*|heh*|a*ha+h*|oo+(f|h)|he+y|hyuh|whe+w|s+(s|h)h+|b?zz+t?|mm+|wh?(oo+|a+|o+a+)h?w?|wo+h?w?|bla+h*|whoo+sh|tsk|oi|mwah+|pff+t*|ps+(h|t)?|um+|ahem|wh?o+-ho+|(wh?)?oo+ps?(ie|y)?|e+u+gh+|y+ee+|bo+m)+$", "permalinkFragment": "fW6bC8", "isFavorite": false, "isStarred": false}, {"title": "Match subset", "description": "", "dateCreated": "2014-07-29T19:16:16.000Z", "dateModified": "2014-07-29T19:16:16.000Z", "author": "Jason", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "[<>\\&\\~\\|\\@]", "permalinkFragment": "kA7yF6", "isFavorite": false, "isStarred": false}, {"title": "Creditcard expiry date checker", "description": "Checks if a expiry date is: mm/yy. You still have to check if it is a valid expiry date timewise.", "dateCreated": "2014-08-01T15:49:59.000Z", "dateModified": "2014-08-01T15:49:59.000Z", "author": "Pevawi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^(0?[1-9]{1}|1[0-2]{1})\\/([0-9]{2})$", "permalinkFragment": "oL5zJ5", "isFavorite": false, "isStarred": false}, {"title": "Javascript: howto get rid of resulting \"\"", "description": "Hey folks,\nI try to do smth like this: \nvar s = 'this is a \"\" && \"string constant\" and this \"is another\" one',\n    result = s.match(new RegExp('\"{1}(.*?)\"{1}', 'g'));\n\nconsole.log(result);\n\nwhat it gives me back is [\"\"\"\", \"\"string constant\"\", \"\"is another\"\"].\nHow can I get smth just like [\"\", \"string constant\", \"is another\"]?\n\nMany thanks for any advice", "dateCreated": "2014-08-06T15:46:03.000Z", "dateModified": "2014-08-06T15:46:03.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "\"{1}(.*?)\"{1}", "permalinkFragment": "vX1eZ3", "isFavorite": false, "isStarred": false}, {"title": "Match number in html", "description": "Prevent matching in markup attributes", "dateCreated": "2014-08-21T09:06:23.000Z", "dateModified": "2014-08-21T09:06:23.000Z", "author": "Mathieu Civel", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(\\d+(?:[,.]\\d+)?)(?=[^>]+?<)", "permalinkFragment": "tO5zN6", "isFavorite": false, "isStarred": false}, {"title": "log4j log parsing", "description": "This pulls out all the fields in a log4j field. Suitable for use in a Logstash Grok pattern or similar", "dateCreated": "2014-08-31T13:04:55.000Z", "dateModified": "2014-08-31T13:04:55.000Z", "author": "Robin Kearney", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?<time>\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3}) (?<level>\\S*) (?<processor>\\S*) (?<serviceLayer>\\S*):(?<lineNumber>\\d*) - (?<mess>.*)", "permalinkFragment": "dW2kA9", "isFavorite": false, "isStarred": false}, {"title": "python regex", "description": "", "dateCreated": "2014-09-05T20:18:53.000Z", "dateModified": "2014-09-05T20:18:53.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^\\s*color: (\\\"|\\'|).*(\\\"|\\'|)", "permalinkFragment": "hT2rL8", "isFavorite": false, "isStarred": false}, {"title": "Match 4chan thread URL", "description": "Matches a 4chan thread URL, see the examples", "dateCreated": "2014-09-24T00:58:28.000Z", "dateModified": "2014-09-24T00:58:28.000Z", "author": "Zeke Sonxx <github.com/zekesonxx>", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "http(?:s)?\\://boards\\.4chan\\.org/([a-z]*)/thread/([0-9]*)(?:\\#[0-9a-z]*)?", "permalinkFragment": "mW1nN5", "isFavorite": false, "isStarred": false}, {"title": "fail2ban real expression for w00tw00t", "description": "A real fai2ban expression for w00tw00t with <HOST> alias substitution", "dateCreated": "2014-10-07T21:08:16.000Z", "dateModified": "2014-10-07T21:08:16.000Z", "author": "MarcD", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": " (?:::f{4,6}:)?(?P<host>\\S+) -.* \"GET \\/w00tw00t.*", "permalinkFragment": "hB0oU9", "isFavorite": false, "isStarred": false}, {"title": "e164 format", "description": "e164 format", "dateCreated": "2014-10-21T16:20:23.000Z", "dateModified": "2014-10-21T16:20:23.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^\\+(?:[0-9] ?){6,14}[0-9]$", "permalinkFragment": "dE4mC9", "isFavorite": false, "isStarred": false}, {"title": "replace only inner text without tag element", "description": "", "dateCreated": "2014-11-15T22:59:49.000Z", "dateModified": "2014-11-15T22:59:49.000Z", "author": "A.K. Asik", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(pa)(?!([^<]+)?>)", "permalinkFragment": "aP3tA3", "isFavorite": false, "isStarred": false}, {"title": "Capture 5 words either side of a match string", "description": "", "dateCreated": "2014-11-28T04:37:03.000Z", "dateModified": "2014-11-28T04:37:03.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "((\\w+ ){5})group to(( \\w+){5})", "permalinkFragment": "pA1jQ2", "isFavorite": false, "isStarred": false}, {"title": "vk.com wall", "description": "Parse 123_123\nhttp://vk.com/id82702078?w=wall82702078_3386\nhttp://vk.com/wall82702078_3386\nhttp://vk.com/club34073863?w=wall-34073863_28647\nhttp://vk.com/wall-34073863_28647", "dateCreated": "2014-11-30T23:28:58.000Z", "dateModified": "2014-11-30T23:28:58.000Z", "author": "by xzotix", "flavor": "pcre", "delimiter": "/", "flags": "xi", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^\n(?:http:\\/\\/)?\n(?:www\\.)?\n(vk\\.com|vkontakte\\.ru)\n\\/\n(.*?)?\nwall\n([-0-9]+_[0-9]+)\n$", "permalinkFragment": "eU0dR0", "isFavorite": false, "isStarred": false}, {"title": "PO Box Address Validation", "description": "", "dateCreated": "2014-12-09T21:16:52.000Z", "dateModified": "2014-12-09T21:16:52.000Z", "author": "mrferos", "flavor": "pcre", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?(?=^P)P((?:(?:ost)?))(?:\\.)?(?:\\s+)?O(?:ffice)?(?:\\.)?(?:\\s+)?B(?:ox)?(?:\\.)?(?:\\s+)?(?:\\#)?(?:[a-z0-9]+(?>\\d{1,})(?:\\w+)?)$|^Box(?:\\.)?(?:\\s+)?(?:\\#)?(?:[a-z0-9]+(?>\\d{1,})(?:\\w+)?)$)", "permalinkFragment": "yF9gZ5", "isFavorite": false, "isStarred": false}, {"title": "#Set-Cookie:\\\\s+(?<cookie>[^=]+=[^;]+)#m regex explanation", "description": "", "dateCreated": "2015-01-02T02:49:23.000Z", "dateModified": "2015-01-02T02:49:23.000Z", "author": "Igor", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "Set-Cookie:\\\\s+(?<cookie>[^=]+=[^;]+)", "permalinkFragment": "kE4uG5", "isFavorite": false, "isStarred": false}, {"title": "Extract Metadata", "description": "", "dateCreated": "2015-01-02T22:14:14.000Z", "dateModified": "2015-01-02T22:14:14.000Z", "author": "kai_desu", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(\\w+):\\s+(.*)\\r?\\n", "permalinkFragment": "wH2vS5", "isFavorite": false, "isStarred": false}, {"title": "html font to bbcode", "description": "", "dateCreated": "2015-01-26T00:03:13.000Z", "dateModified": "2015-01-26T00:03:13.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "\\<font color=\"(.*?)\"\\>(.*?)\\<\\/font\\>(?!\\<\\/font\\>)", "permalinkFragment": "yC4nA9", "isFavorite": false, "isStarred": false}, {"title": "Matches first word", "description": "", "dateCreated": "2015-02-08T04:55:00.000Z", "dateModified": "2015-02-08T04:55:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "\\b(?:\\W|[0-9])*(\\w+)\\b", "permalinkFragment": "kP2aH7", "isFavorite": false, "isStarred": false}, {"title": "Get video parameters from many video services at once", "description": "supported youtube, vimeo, face liveleak, break, ebaums, facebook\nsupport url and iframes", "dateCreated": "2015-02-20T11:12:29.000Z", "dateModified": "2015-02-20T11:12:29.000Z", "author": "Misthero", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?:http(?:s)?:\\/\\/)?(?:player.|www\\.)?(facebook\\.com|vimeo\\.com|ebaumsworld\\.com|youtu(?:be\\.com|\\.be|be\\.googleapis\\.com)|liveleak\\.com|break\\.com)\\/(?:video\\.php(?:\\?v=)|media\\/embed\\/|video\\/watch\\/|video\\/|embed\\/|watch\\?v=|v\\/)?(?:(?:view|ll_embed)\\?)?(?:(f|i)=)?(?:video\\/|(?:.*-))?([A-Za-z0-9._%-]*)(?:\\&\\S+)?", "permalinkFragment": "kI5vW9", "isFavorite": false, "isStarred": false}, {"title": "catch options", "description": "catch options", "dateCreated": "2015-03-16T09:18:21.000Z", "dateModified": "2015-03-16T09:18:21.000Z", "author": "Marek R", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^#+s*([^:]+)\\s*:\\s*(.*)$", "permalinkFragment": "xG6nS8", "isFavorite": false, "isStarred": false}, {"title": "Brazillian Phone Number Format (Formato de Num. de Telefone no Brasil)", "description": "", "dateCreated": "2015-03-30T19:25:26.000Z", "dateModified": "2015-03-30T19:25:26.000Z", "author": "Castrolol", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^(\\(?[0-9]{2}\\)?)? ?([0-9]{4,5})-?([0-9]{4})$", "permalinkFragment": "kQ9aJ6", "isFavorite": false, "isStarred": false}, {"title": "Simple Telephone number(America/Canada)", "description": "Accepts spaces or not\n1234567890\n123 456 7890", "dateCreated": "2015-04-15T20:13:34.000Z", "dateModified": "2015-04-15T20:13:34.000Z", "author": "Christopher Dufort", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^[0-9]{3}[\\ ]{0,1}[0-9]{3}[\\ ]{0,1}[0-9]{4}$", "permalinkFragment": "gP9hT5", "isFavorite": false, "isStarred": false}, {"title": "BZWBK24 SMS Code", "description": "", "dateCreated": "2015-04-15T21:32:04.000Z", "dateModified": "2015-04-15T21:32:04.000Z", "author": "maniekq", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "[\\s\\S]*smsKod: (\\d{8})[\\s\\S]*", "permalinkFragment": "iQ9xH9", "isFavorite": false, "isStarred": false}, {"title": "Match 5 forward slashes", "description": "Match 5 forward slashes", "dateCreated": "2015-04-16T23:13:25.000Z", "dateModified": "2015-04-16T23:13:25.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "/.*/.*/.*/.*/", "permalinkFragment": "aX8rO7", "isFavorite": false, "isStarred": false}, {"title": "foreach", "description": "", "dateCreated": "2015-05-12T16:29:15.000Z", "dateModified": "2015-05-12T16:29:15.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "Uis", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "{foreach \\$(.*) as (?:\\$([^ ]*)|\\$(.*) => \\$(.*))}(.*){\\/foreach}", "permalinkFragment": "tV7iI7", "isFavorite": false, "isStarred": false}, {"title": "Match Characters outside list", "description": "", "dateCreated": "2015-06-05T12:37:04.000Z", "dateModified": "2015-06-05T12:37:04.000Z", "author": "vikas", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "[^\\\\d.A-Za-z @$#.]", "permalinkFragment": "uI7xG1", "isFavorite": false, "isStarred": false}, {"title": "csv parsing", "description": "csv parsing with content quota string", "dateCreated": "2015-06-07T18:23:51.000Z", "dateModified": "2015-06-07T18:23:51.000Z", "author": "Andrey", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?:^|,)(\\\"(?:[^\\\"]+|\\\"\\\")*\\\"|[^,]*)", "permalinkFragment": "hJ7oQ3", "isFavorite": false, "isStarred": false}, {"title": "JSON validator", "description": "Takes a JSON string and captures interesting information in the named capturing groups: (o: last object, a: last array, s: last string, n: last number, c: last comma before optional whitespace, d: same as c, but with a colon instead of a comma, v: last value)", "dateCreated": "2015-06-18T13:45:44.000Z", "dateModified": "2015-06-18T13:45:44.000Z", "author": "luis140219 on GitHub and Sourceforge", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?<o>{((?<s>\\\"([^\\0-\\x1F\\\"\\\\]|\\\\[\\\"\\\\\\/bfnrt]|\\\\u[0-9a-fA-F]{4})*\\\"):(?<v>\\g<s>|(?<n>-?(0|[1-9]\\d*)(.\\d+)?([eE][+-]?\\d+)?)|\\g<o>|\\g<a>|true|false|null))?\\s*((?<c>,\\s*)\\g<s>(?<d>:\\s*)\\g<v>)*})|(?<a>\\[\\g<v>?(\\g<c>\\g<v>)*\\])", "permalinkFragment": "mV0iS3", "isFavorite": false, "isStarred": false}, {"title": "java variable declaration", "description": "", "dateCreated": "2015-06-19T16:56:20.000Z", "dateModified": "2015-06-19T16:56:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^\\s*(?:(final)\\s+)?(int|double|String|boolean|char)\\s+(?:(?:(\\w+)\\s*(?:\\=\\s*(\\w+))?\\,?\\s*)+)\\;\\s*$", "permalinkFragment": "bT8yZ6", "isFavorite": false, "isStarred": false}, {"title": "standard 16 columns hexdump", "description": "", "dateCreated": "2015-06-19T21:19:59.000Z", "dateModified": "2015-06-19T21:19:59.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "[ ]*(.*)\\n[ ]*- ([0-9]{1,5}) bytes:\\n(?:[ ]*([0-9A-F]{8})   (?:([0-9A-F]{2}) ){8} (?:([0-9A-F]{2}) ){8}  .{16}\\n)*[ ]*([0-9A-F]{8})   (?:([0-9A-F]{2}|  ) ){8} (?:([0-9A-F]{2}|  ) ){8}  .{0,16}\\n", "permalinkFragment": "nP5jK6", "isFavorite": false, "isStarred": false}, {"title": "Vimeo Video ID", "description": "", "dateCreated": "2015-07-07T19:00:00.000Z", "dateModified": "2015-07-07T19:00:00.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "vimeo.*?([0-9]+$)", "permalinkFragment": "gX9hO6", "isFavorite": false, "isStarred": false}, {"title": "Email validator JavaScript", "description": "Validates all possible emails with western and cyrilic chars.", "dateCreated": "2015-07-08T07:23:11.000Z", "dateModified": "2015-07-08T07:23:11.000Z", "author": "hudsonvsm", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^[A-Za-z0-9\\u0430-\\u044F\\u0410-\\u042F\\._-]+@([A-Za-z0-9\\u0430-\\u044F\\u0410-\\u042F]{1,2}|[A-Za-z0-9\\u0430-\\u044F\\u0410-\\u042F]((?!(\\.\\.))[A-Za-z0-9\\u0430-\\u044F\\u0410-\\u042F.-])+[A-Za-z0-9\\u0430-\\u044F\\u0410-\\u042F])\\.[A-Za-z\\u0430-\\u044F\\u0410-\\u042F]{2,}$", "permalinkFragment": "tL1gB0", "isFavorite": false, "isStarred": false}, {"title": "date formatting mm/dd/yyyy format", "description": "", "dateCreated": "2015-07-09T20:18:54.000Z", "dateModified": "2015-07-09T20:18:54.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(0?[1-9]|1[012])\\/(0?[1-9]|[12][0-9]|3[01])\\/((19|20)\\d\\d)", "permalinkFragment": "eS5bU5", "isFavorite": false, "isStarred": false}, {"title": "extract twitter username from url", "description": "Adopted one of answers from:\nhttp://stackoverflow.com/questions/5948051/regex-extract-twitterusername-from-url", "dateCreated": "2015-07-19T23:28:02.000Z", "dateModified": "2015-07-19T23:28:02.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^https?:\\/\\/(?:www\\.)?twitter\\.com\\/(?:#!\\/)?@?([^/?#]*)(?:[?#].*)?$", "permalinkFragment": "tG5mB3", "isFavorite": false, "isStarred": false}, {"title": "Get email info", "description": "Get Gmail tag, user and domain of an email address", "dateCreated": "2015-07-21T19:57:24.000Z", "dateModified": "2015-07-21T19:57:24.000Z", "author": "Mat\u00edas Pizarro Gonz\u00e1lez", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^(?<User>[_a-z0-9-]+(\\.[_a-z0-9-]+(?<GmailTag>\\+[_a-z0-9-]+){1,1})*)@(?<Host>[a-z0-9-]+(\\.[a-z0-9-]+)*\\.[a-z]{2,4})$", "permalinkFragment": "sQ0hJ3", "isFavorite": false, "isStarred": false}, {"title": "TimeFormatParser", "description": "This allows to the programer to match the time format groups, in a way that allow to discard some parts of the format. \nE.g.\nI have a format HhMmSs and i want to ignore the 'Ss' part from the format when I have no Seconds", "dateCreated": "2015-07-21T20:43:59.000Z", "dateModified": "2015-07-21T20:43:59.000Z", "author": "Fausto A. Guerrero", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^(.*?)(H{1,2})((.*?)(M{1,2})((.*?)(S{1,2})(.*?)|.*)|.*)$", "permalinkFragment": "zF5jW0", "isFavorite": false, "isStarred": false}, {"title": "CSS URL parser tilde only", "description": "Find any url('~filename.jpg').  URL must contain tilde", "dateCreated": "2015-08-03T20:44:08.000Z", "dateModified": "2015-08-03T20:44:08.000Z", "author": "@adjavaherian", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "url\\((\\'|\\\")~[\\w.\\/\\-]*(png|gif|jpg|jpeg|svg)[\\w.\\/]*(\\'|\\\")\\);*\\s*", "permalinkFragment": "xO1rD6", "isFavorite": false, "isStarred": false}, {"title": "Full URI Mapping", "description": "Everything, including \nproto, user:pass, host, query params and anchors", "dateCreated": "2015-08-11T22:13:49.000Z", "dateModified": "2015-08-11T22:13:49.000Z", "author": "baadf00d", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?:([^\\:]*)\\:\\/\\/)?(?:([^\\:\\@]*)(?:\\:([^\\@]*))?\\@)?(?:([^\\/\\:]*)\\.(?=[^\\.\\/\\:]*\\.[^\\.\\/\\:]*))?([^\\.\\/\\:]*)(?:\\.([^\\/\\.\\:]*))?(?:\\:([0-9]*))?(\\/[^\\?#]*(?=.*?\\/)\\/)?([^\\?#]*)?(?:\\?([^#]*))?(?:#(.*))?", "permalinkFragment": "kT5cX6", "isFavorite": false, "isStarred": false}, {"title": "Unicode username", "description": "Unicode user name check with som allowed non-alhanum characters", "dateCreated": "2015-08-13T14:49:38.000Z", "dateModified": "2015-08-13T14:49:38.000Z", "author": "Martin Bucko", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^([^\\x00-\\x7F]|[\\w_\\ \\.\\+\\-]){2,16}$", "permalinkFragment": "zU8hS5", "isFavorite": false, "isStarred": false}, {"title": "Portuguese phone numbers", "description": "Matches Portuguese phone numbers.", "dateCreated": "2015-08-18T20:36:18.000Z", "dateModified": "2015-08-18T20:36:18.000Z", "author": "github.com/luis140219", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^1(1[2578]|2([09]80|3(45|)|5(3?0|5)|7[67])|414|6(200|(80|91)\\d|99[015679])|8(28|91))|(2([1-8]\\d|9[136])|30\\d|7(0[789]|60)|80[08]|9([136]\\d|[124-7]))(\\d{6})$", "permalinkFragment": "bM9bW4", "isFavorite": false, "isStarred": false}, {"title": "remove texto entre <>", "description": "", "dateCreated": "2015-08-25T20:16:43.000Z", "dateModified": "2015-08-25T20:16:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "<[^<>]+>", "permalinkFragment": "zA8kN7", "isFavorite": false, "isStarred": false}, {"title": "IPv4 Validator", "description": "", "dateCreated": "2015-09-10T08:17:03.000Z", "dateModified": "2015-09-10T08:17:03.000Z", "author": "dannyo", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "permalinkFragment": "oS2jC1", "isFavorite": false, "isStarred": false}, {"title": "Apache2 Access Log parsing", "description": "This breaks down an Apache2 access log into 9 parts. I use this for analyzing content in my webserver logs.", "dateCreated": "2015-09-14T18:22:04.000Z", "dateModified": "2015-09-14T18:22:04.000Z", "author": "Kevin Loverde", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^(\\S*).*\\[(.*)\\]\\s\"(\\S*)\\s(\\S*)\\s([^\"]*)\"\\s(\\S*)\\s(\\S*)\\s\"([^\"]*)\"\\s\"([^\"]*)\"$", "permalinkFragment": "rG6cF7", "isFavorite": false, "isStarred": false}, {"title": "Email Domain Regex", "description": "A pattern to match the email domain suffix", "dateCreated": "2015-10-12T16:53:59.000Z", "dateModified": "2015-10-12T16:53:59.000Z", "author": "doug", "flavor": "pcre", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?=^[^@\\/\\?]*$)(\\w+\\.)+([A-Za-z]+){2}$", "permalinkFragment": "tM3bO3", "isFavorite": false, "isStarred": false}, {"title": "find numbers with 2 commas", "description": "", "dateCreated": "2015-10-22T17:30:33.000Z", "dateModified": "2015-10-22T17:30:33.000Z", "author": "", "flavor": "pcre", "delimiter": "%", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(\\d{1,3}[\\,]?\\d{1,3)", "permalinkFragment": "dQ5kO2", "isFavorite": false, "isStarred": false}, {"title": "IP with Subnet", "description": "IP address with Subnet", "dateCreated": "2015-10-29T13:28:47.000Z", "dateModified": "2015-10-29T13:28:47.000Z", "author": "Matt Masse", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^(([12]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])(\\.|\\/)){4}([1-2]?[0-9]|3[0-2])$", "permalinkFragment": "gN7wJ2", "isFavorite": false, "isStarred": false}, {"title": "Date between 1950 and 2050", "description": "Date in format MM-dd-yyyy", "dateCreated": "2015-10-29T14:30:09.000Z", "dateModified": "2015-10-29T14:30:09.000Z", "author": "Daniel Quijada", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^(0[1-9]|1[0-2])-([1-9]|[12][0-9]|3[01])-(19[5-9][0-9]|20[0-4][0-9]|2050)$", "permalinkFragment": "mE7nQ4", "isFavorite": false, "isStarred": false}, {"title": "SED", "description": "", "dateCreated": "2015-11-12T15:42:16.000Z", "dateModified": "2015-11-12T15:42:16.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "s;^[^?R*]", "permalinkFragment": "tD9wC6", "isFavorite": false, "isStarred": false}, {"title": "notepad++", "description": "", "dateCreated": "2015-11-20T13:33:54.000Z", "dateModified": "2015-11-20T13:33:54.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "\\s*<parent>\\n\\s*<groupId>com\\.ps\\.consul\\.releng<\\/groupId>\\n\\s*<artifactId>com\\.ps\\.consul\\.releng<\\/artifactId>\\n\\s*<version>1\\.0\\.0-SNAPSHOT<\\/version>\\n\\s*<relativePath>\\.\\.\\/com\\.ps\\.consul\\.releng<\\/relativePath>\\n\\s*<\\/parent>", "permalinkFragment": "mK2tQ7", "isFavorite": false, "isStarred": false}, {"title": "replace any character with more than two occurrence", "description": "", "dateCreated": "2015-11-23T01:46:17.000Z", "dateModified": "2015-11-23T01:46:17.000Z", "author": "papky", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "( ?.)\\1{2,}", "permalinkFragment": "uP4bI0", "isFavorite": false, "isStarred": false}, {"title": "Search src from <img> tag", "description": "", "dateCreated": "2015-12-07T11:58:41.000Z", "dateModified": "2015-12-07T11:58:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(<img.*?src=\")([^\"]*?\\/)([^\\/]*\\.[^\"]+)", "permalinkFragment": "iK9iN0", "isFavorite": false, "isStarred": false}, {"title": "HTML comments", "description": "Groups HTML comments that are between <!-- and -->.", "dateCreated": "2016-01-05T15:25:14.000Z", "dateModified": "2016-01-05T15:25:14.000Z", "author": "Greaka", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "<!--\\s*([\\s\\S]*?)\\s*-->", "permalinkFragment": "fU3kS7", "isFavorite": false, "isStarred": false}, {"title": "word before :", "description": "", "dateCreated": "2016-01-05T15:52:07.000Z", "dateModified": "2016-01-05T15:52:07.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "\\w+(?= :)", "permalinkFragment": "hJ7cK3", "isFavorite": false, "isStarred": false}, {"title": "Case-sensitive keyword matching.", "description": "Case-sensitive matching of a keyword, where the keyword is not a substring of other words.", "dateCreated": "2016-01-13T10:17:54.000Z", "dateModified": "2016-01-13T10:17:54.000Z", "author": "Norskov", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "([^A-Za-z]|\\b)+DR([^A-Za-z]|\\b)+", "permalinkFragment": "pL8mQ0", "isFavorite": false, "isStarred": false}, {"title": "BRAZILIAN VEHICLE PLATE", "description": "", "dateCreated": "2016-01-13T15:53:13.000Z", "dateModified": "2016-01-13T15:53:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^([a-zA-Z]{3}-\\d{4})$", "permalinkFragment": "eV4wD8", "isFavorite": false, "isStarred": false}, {"title": "fffs", "description": "dfsfd", "dateCreated": "2016-01-19T11:19:37.000Z", "dateModified": "2016-01-19T11:19:37.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "\\B(?=(\\d{3})+(?!\\d))", "permalinkFragment": "eX4nV3", "isFavorite": false, "isStarred": false}, {"title": "US datetime", "description": "Validates a US mm-dd-yy(yy) with an optional hh:mm:ss time.", "dateCreated": "2016-01-25T00:11:53.000Z", "dateModified": "2016-01-25T00:11:53.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^([1-9]|(?=0)0[1-9]|(?=1)1[0-2])[-/.]([1-9]|(?=[0-2])[0-2][0-9]|(?=3)3[0-1])[-/.](\\d{4}|\\d{2})( ([1-9]|(?=[0-1])[0-1][0-9]|(?=2)2[0-4]):(?=[0-5])[0-5][0-9](:(?=[0-5])[0-5][0-9])?(a|p|A|P|am|pm|AM|PM)?)?$", "permalinkFragment": "rB1sK5", "isFavorite": false, "isStarred": false}, {"title": "desanonimyse", "description": "", "dateCreated": "2016-03-08T17:33:32.000Z", "dateModified": "2016-03-08T17:33:32.000Z", "author": "JB Escudi\u00e9", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "\\b(Madame|Mademoiselle|Mlle|Me|Monsieur|Mme|M|n\u00e9|n\u00e9e)\\b(\\s+[A-Z](\\w|[\u00e9\u00e8\u00ef\u00f9\u00ea\u00e2\u00f4])+)+", "permalinkFragment": "uM3vC5", "isFavorite": false, "isStarred": false}, {"title": "Mime type parser", "description": "A \"simple\" regex to parse mime types.\nHandles all commonly occurring parts of a mime type string such as:\n- Type\n- Subtype\n- Subtype's with an extra extension (e.g. svg+xml) (Optional input)\n- Multiple parameters (Optional input)\n\nTested with:\n- application/text\n- image/svg+xml\n- image/svg;q=0.9,*/*;q=0.8\n- image/svg+xml;q=0.9,*/*;q=0.8\n- application/vnd.uplanet.listcmd-wbxml;charset=utf-8", "dateCreated": "2023-02-14T14:11:24.000Z", "dateModified": "2023-02-14T16:03:40.000Z", "author": "Vespion", "flavor": "dotnet", "delimiter": "\"", "flags": "g", "version": 5, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?<type>\\w*)\\/(?<subtype>[\\w\\.-]*)(?:\\+(?<subtype>[\\w\\.-]*))?(?:;(?:(?<key>.+)=(?<value>.*);)*(?<key>.+)=(?<value>.*))?", "permalinkFragment": "I8ZpUk", "isFavorite": false, "isStarred": false}, {"title": "Discord Username (old & new)", "description": "Accomodate for Discord's username changeover and match against either the old username or the new username. But only one or the other.\n\n**Match:**\nCesarHvl#9000\ncesarhvl\ncesar.hvl\ncesar_hvl\n\n**No Match:**\nCesar#Hvl#9000\nCesarHvl#90001\nCesarHvl\nc\ncesarhvllllllllllllllllllllllllll\ncesar..hvl\ncesarhvlCesarHvl#9000\n(^^*(&)", "dateCreated": "2023-06-23T20:16:43.000Z", "dateModified": "2023-06-23T20:16:43.000Z", "author": "cesarhvl", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^[^#]{2,32}#\\d{4}$|^(?!.*\\.\\.|[A-Z])[a-z\\d_.]{2,32}$", "permalinkFragment": "zFhmty", "isFavorite": false, "isStarred": false}, {"title": "URI Parser", "description": "A simple parser to exact all the components of a URI/URL as named groups", "dateCreated": "2023-06-24T15:25:51.000Z", "dateModified": "2023-06-27T00:08:20.000Z", "author": "Vespion", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 2, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?<scheme>.*):\\/\\/(?<authority>[^\\/]*)(?:\\/(?<path>[^\\?]*))?(?:\\?(?<query>[^#]*))?(?:#(?<fragment>.*))?", "permalinkFragment": "8RvYAL", "isFavorite": false, "isStarred": false}, {"title": "Regex tutorial", "description": "Case insensitive match the whole word betwween \\bword\\b", "dateCreated": "2020-07-01T10:00:36.000Z", "dateModified": "2023-07-20T07:05:43.000Z", "author": "", "flavor": "java", "delimiter": "\"", "flags": "gm", "version": 3, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "([\\w\\s]){2}([^;;])", "permalinkFragment": "rsVgaP", "isFavorite": false, "isStarred": false}, {"title": "Regex for real number ", "description": "this regex can detect any real number whether it is signed or unsigned.plus it can detect real number both with and without floating point aka '.'.the numbers should be decimal number ", "dateCreated": "2021-07-08T10:19:19.000Z", "dateModified": "2021-07-08T10:19:19.000Z", "author": "Adnan nabib", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "[+-]?(\\d*\\.\\d+|\\d+\\.\\d*|\\d+)", "permalinkFragment": "ULfQkb", "isFavorite": false, "isStarred": false}, {"title": "match those lines whose first n chars contains 1+ non numeric", "description": "1100582367|SDFDSFDSFDSFDSFDF\nGBC213WREW|RWEFSDFSDF\n1100582377|DSFDSFDSFDSF\n2NDG.S.D\nBIKADSFDSFDSFNO.421\n1100582387|SDFSDFSDFDSF", "dateCreated": "2016-04-05T20:01:43.000Z", "dateModified": "2016-04-05T20:01:43.000Z", "author": "sid", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^\\d{11}", "permalinkFragment": "sF4iQ5", "isFavorite": false, "isStarred": false}, {"title": "Alphanumeric only", "description": "Allows only Uppercase, lowercase letters and numbers ", "dateCreated": "2016-04-08T13:26:47.000Z", "dateModified": "2016-04-08T13:26:47.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "^[a-zA-Z0-9]+$", "permalinkFragment": "pG2xV4", "isFavorite": false, "isStarred": false}, {"title": "Azure ARM Template Parameter Override breakdown", "description": "This script helps you take the ARM template parameter override line from VSTS and break each variable combo down to its own line.", "dateCreated": "2016-04-22T04:34:30.000Z", "dateModified": "2016-04-22T04:34:30.000Z", "author": "Paul Daly", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?'pair'(?'d'-)(?'lcv'\\w+)(?'s'\\s)(?'dol'\\$)(?'o'\\()(?'ucv'\\w+)(?'c'\\)))(?'es'\\s?)", "permalinkFragment": "iC2mH4", "isFavorite": false, "isStarred": false}, {"title": "Azure ARM Parameter Override Reconstuct", "description": "This helps you take a list of ARM parameters where each pair is on its own line and combine them back to a single line so you can place them in VSTS's ARM template parameter override field.", "dateCreated": "2016-04-22T04:37:18.000Z", "dateModified": "2016-04-22T04:37:18.000Z", "author": "Paul Daly", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?'pair'(?'d'-)(?'lcv'\\w+)(?'s'\\s)(?'dol'\\$)(?'o'\\()(?'ucv'\\w+)(?'c'\\)))(?'es'\\n?)", "permalinkFragment": "nD5hZ3", "isFavorite": false, "isStarred": false}, {"title": "parse username with @ mention", "description": "", "dateCreated": "2016-05-13T19:04:18.000Z", "dateModified": "2016-05-13T19:04:18.000Z", "author": "Laracasts", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "(?<=^|\\s)(@[\\w.]+)(?<!\\.)", "permalinkFragment": "cH4oP1", "isFavorite": false, "isStarred": false}, {"title": "Brazilian number phone", "description": "", "dateCreated": "2016-06-03T06:00:41.000Z", "dateModified": "2016-06-03T06:00:41.000Z", "author": "Marcos Andr\u00e9", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 1, "score": 0.30063605244263664, "userVote": null, "regex": "([+55]{3})([(]?[0]?[1-9]{2}[)]?)[9]?([1-9]{4})-?([0-9]{4})", "permalinkFragment": "iR7fY5", "isFavorite": false, "isStarred": false}, {"title": "Parse gMail: Get name and email addresses", "description": "get names and email address seperated out from comma seperated string received from gMail api", "dateCreated": "2016-03-31T19:32:50.000Z", "dateModified": "2016-03-31T19:32:50.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "([^w]+)\\s\\<([\\w@.]+)", "permalinkFragment": "bW7jC6", "isFavorite": false, "isStarred": false}, {"title": "Select first letter of words", "description": "Selects first letter of space separted word with exceptions.\nThis allows bypassing `'s` and such.\n\nForcing separating charter can be set at `[\\s&\\/]`\n\n$1: separating part\n$2: first letter of a word", "dateCreated": "2016-04-22T01:03:11.000Z", "dateModified": "2016-04-22T01:03:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "(\\s+[^a-z0-9]+|[^a-z0-9']+\\s+|[\\s&\\/]|^)+(\\w)", "permalinkFragment": "eU4aJ1", "isFavorite": false, "isStarred": false}, {"title": "Basic Phone Number Verification", "description": "Verifies a phone number", "dateCreated": "2013-08-15T21:40:36.000Z", "dateModified": "2013-08-15T21:40:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "^[(]\\d{3}[)][-]\\d{3}[-]\\d{4}$", "permalinkFragment": "uJ8kA2", "isFavorite": false, "isStarred": false}, {"title": "Get Currency SYMBOL/CODE", "description": "", "dateCreated": "2013-09-09T12:46:06.000Z", "dateModified": "2013-09-09T12:46:06.000Z", "author": "Ka.", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "(?|^\\s*(\\p{S}).*$|^.*(\\p{S})\\s*$|^.*?(\\p{L}{1,6})\\s*$)", "permalinkFragment": "oC0yA2", "isFavorite": false, "isStarred": false}, {"title": "JavaScript trim string", "description": "Trim leading/trailing space on a string: do not use /gm flags.\n\nTrim each line of a multiline string: use the /gm flag.\n", "dateCreated": "2014-06-14T06:03:18.000Z", "dateModified": "2014-06-14T06:03:18.000Z", "author": "https://github.com/naomik", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "^\\s*(.*?)\\s*$", "permalinkFragment": "hW0bJ5", "isFavorite": false, "isStarred": false}, {"title": "haml attribute parsing", "description": "", "dateCreated": "2014-07-26T00:51:22.000Z", "dateModified": "2014-07-26T00:51:22.000Z", "author": "OnlineCop", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "^\\{((?:(?:(?!\\}).)+)(?:(?:\\}\\}|\\}')?(?:(?:(?!\\}).)*))+)\\}(?!\\})", "permalinkFragment": "hX8sB9", "isFavorite": false, "isStarred": false}, {"title": "filename split 2", "description": "", "dateCreated": "2014-08-07T10:53:25.000Z", "dateModified": "2014-08-07T10:53:25.000Z", "author": "Milo\u00c5\u00a1 Ratkovi\u00c4\u2021", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "(([^ .]+ +)*\\S*\\.\\S+)", "permalinkFragment": "eU2uW6", "isFavorite": false, "isStarred": false}, {"title": "full asshole", "description": "", "dateCreated": "2014-08-30T11:19:04.000Z", "dateModified": "2014-08-30T11:19:04.000Z", "author": "alex", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$", "permalinkFragment": "iU2oW2", "isFavorite": false, "isStarred": false}, {"title": "Regex Capture String", "description": "Capture out Parts using regular expressions", "dateCreated": "2014-09-18T20:06:58.000Z", "dateModified": "2014-09-18T20:06:58.000Z", "author": "Brandon", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "(.*)(1999 - Pizza & Cheese)(.*)(\\..*)", "permalinkFragment": "vK9vW7", "isFavorite": false, "isStarred": false}, {"title": "phone regex", "description": "Match phone number with extensions or not", "dateCreated": "2014-10-31T17:31:30.000Z", "dateModified": "2014-10-31T17:31:30.000Z", "author": "M\u00c3\u00a9lissa Dumont", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "(?=.*?\\d{3}( |-|.)?\\d{4})((?:\\+?(?:1)(?:\\1|\\s*?))?(?:(?:\\d{3}\\s*?)|(?:\\((?:\\d{3})\\)\\s*?))\\1?(?:\\d{3})\\1?(?:\\d{4})(?:\\s*?(?:#|(?:ext\\.?))(?:\\d{1,5}))?)\\b", "permalinkFragment": "hU2dI0", "isFavorite": false, "isStarred": false}, {"title": "Email validation", "description": "Very crude, but effective email validation. ", "dateCreated": "2014-11-11T21:35:35.000Z", "dateModified": "2014-11-11T21:35:35.000Z", "author": "Ryan Oaks", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "^[0-9a-zA-Z-_\\$#]+@[0-9a-zA-Z-_\\$#]+\\.[a-zA-Z]{2,5}", "permalinkFragment": "uZ1uB4", "isFavorite": false, "isStarred": false}, {"title": "IPv4", "description": "", "dateCreated": "2014-11-21T20:53:43.000Z", "dateModified": "2014-11-21T20:53:43.000Z", "author": "Jorge C.", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "^(([0-1]?\\d{1,2})|(2[0-5]{2}))(\\.(([0-1]?\\d{1,2})|(2[0-5]{2}))){3}$", "permalinkFragment": "cO8rP7", "isFavorite": false, "isStarred": false}, {"title": "facebook post embed code", "description": "This pattern matches to the facebook post embed codes. It matches on each parts of the whole embed code individualy, and matches on the complete embed code either, but it requires minimum a fb-post div.", "dateCreated": "2014-12-02T10:50:28.000Z", "dateModified": "2014-12-02T10:50:28.000Z", "author": "kristian tanacs", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "((<div[\\s]+?id=\\\"fb-root\\\"[\\s\\S]+?<\\/div>)*[\\s]*(<script[\\s\\S]+?\\/script>)*[\\s]*(<div[\\s]+?class=\\\"fb-post\\\"[\\s\\S]+?(<div[\\s]+?class=\\\"fb-xfbml-parse-ignore\\\"[\\s\\S]+?<\\/div>)*<\\/div>)+)", "permalinkFragment": "mW4lV4", "isFavorite": false, "isStarred": false}, {"title": "Find any digits in string", "description": "", "dateCreated": "2015-04-11T11:31:40.000Z", "dateModified": "2015-04-11T11:31:40.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "([\\d]+)", "permalinkFragment": "rH7nZ3", "isFavorite": false, "isStarred": false}, {"title": "URL", "description": "Matches the URL from the text to 95 percentage", "dateCreated": "2015-07-21T07:03:36.000Z", "dateModified": "2015-07-21T07:03:36.000Z", "author": "Harinath", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "(https?:\\/\\/)?(w{3}\\.)?(\\w+\\.\\w{2,3}\\.\\w{2}?)?(\\w+-)?(:?%?\\w{2,}\\/?\\.\\w{2,3})?(\\/\\w+)?(\\/[\\d\\w].+\\s$)?(:\\d+)?", "permalinkFragment": "aV9cT7", "isFavorite": false, "isStarred": false}, {"title": "Spanish telephone number", "description": "Tel\u00e9fonos del territorio de Espa\u00f1a. Se admiten tel\u00e9fono de 9 cifras que empiecen por 9, 7 \u00f3 6. Opcionalmente puede tener el prefijo de pa\u00eds siendo v\u00e1lidas las siguientes opciones:\n(+34)\n(0034)\n+34\n0034\n\nSe aceptan separadores entre n\u00fameros. Los separadores aceptados son el punto, el espacio, gui\u00f3n y gui\u00f3n bajo. ", "dateCreated": "2015-07-21T11:02:23.000Z", "dateModified": "2015-07-21T11:02:23.000Z", "author": "toyeca", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "^\\s*((\\(\\s*\\+?\\s*\\d{1,4}\\s*\\))|(\\+?\\s*\\d{1,4}\\s*))?([\\s-_\\.]?[976])([\\s-_\\.]?\\d){8}\\s*$", "permalinkFragment": "mE7eE6", "isFavorite": false, "isStarred": false}, {"title": "Replace REM by blank ", "description": "", "dateCreated": "2015-07-25T10:42:55.000Z", "dateModified": "2015-07-25T10:42:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "\\nREM\\s*", "permalinkFragment": "aF0bW6", "isFavorite": false, "isStarred": false}, {"title": "Grab all hyperlinks", "description": "", "dateCreated": "2015-08-04T18:30:31.000Z", "dateModified": "2015-08-04T18:30:31.000Z", "author": "Josh Bourke", "flavor": "pcre", "delimiter": "~", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "(<a\\s+[^>]+>)", "permalinkFragment": "mY7aR1", "isFavorite": false, "isStarred": false}, {"title": "SSN", "description": "", "dateCreated": "2015-08-07T17:31:40.000Z", "dateModified": "2015-08-07T17:31:40.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "^\\d{3}-\\d{2}-\\d{4}$", "permalinkFragment": "eC5kT8", "isFavorite": false, "isStarred": false}, {"title": "Twitter user profile url pattern", "description": "Pattern that check your string to match Twitter user profile URL.", "dateCreated": "2015-09-10T17:00:41.000Z", "dateModified": "2015-09-10T17:00:41.000Z", "author": "JSC Quatrodev", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "^(http\\:\\/\\/|https\\:\\/\\/)?(?:www\\.)?twitter\\.com\\/(?:#!\\/)?@?([^\\?#]*)(?:[?#].*)?$", "permalinkFragment": "iL2nL3", "isFavorite": false, "isStarred": false}, {"title": "YouTube Iframe parser", "description": "", "dateCreated": "2015-10-20T02:14:07.000Z", "dateModified": "2015-10-20T02:14:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "<iframe [^>]*?src=\\\"https?:\\/\\/(?:www\\.)?youtu(?:be)?\\.(?:com|be)\\/(?:embed|watch)\\/([^\\?]*?)\\?[^>]*?>\\s*<\\/iframe>", "permalinkFragment": "aO6eP4", "isFavorite": false, "isStarred": false}, {"title": "password 1upper 1lower 1number 1specialcharater", "description": "fjk@1Qaa$", "dateCreated": "2016-01-23T03:48:28.000Z", "dateModified": "2016-01-23T03:48:28.000Z", "author": "Anuswadh", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "^(?=.{7,15}$)(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#\\.,\\/\\$%\\^&\\*\\(\\)\\\\\\-\\_=\\[\\]{}:;\"'<>\\?]).*$", "permalinkFragment": "dK4oW3", "isFavorite": false, "isStarred": false}, {"title": "END on new line", "description": "", "dateCreated": "2016-01-29T09:32:14.000Z", "dateModified": "2016-01-29T09:32:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "[^\\s]\\s*END", "permalinkFragment": "hH0rK9", "isFavorite": false, "isStarred": false}, {"title": "Removes script tags", "description": "", "dateCreated": "2016-02-20T19:48:09.000Z", "dateModified": "2016-02-20T19:48:09.000Z", "author": "ghs", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "<[ ]*(\\/)?(.*)?script([ ]+.*|[^\\w]*)>", "permalinkFragment": "eG8nI8", "isFavorite": false, "isStarred": false}, {"title": "Remove script tags from code", "description": "Regular expression to remove only the <script> tags from the code. The regular expression only removes the tags, not the JS code inside the tag.", "dateCreated": "2016-03-17T08:37:27.000Z", "dateModified": "2016-03-17T08:37:27.000Z", "author": "IvenMS", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 4, "downvotes": 2, "score": 0.2999883214853717, "userVote": null, "regex": "(<script.*>|<\\/script>)", "permalinkFragment": "rO4iJ9", "isFavorite": false, "isStarred": false}, {"title": "PHP ReflectionParameter:__toString() parser", "description": "See http://www.php.net/manual/en/reflectionparameter.tostring.php", "dateCreated": "2013-02-19T09:23:18.000Z", "dateModified": "2013-02-19T09:23:18.000Z", "author": "Erin Millard", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "^Parameter #\\d+ \\[ <(?:optional|required)> ([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*(?:\\\\[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)*)(?: or NULL)? \\$[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*(?: = NULL)? \\]$", "permalinkFragment": "iJ9aH3", "isFavorite": false, "isStarred": false}, {"title": "Replace second (or further) html statement in a whole code", "description": "This regex replace the second tag content which has the prefix \":\". If you want to replace the third, just increase the statement {1} to {2}, and so go on.", "dateCreated": "2013-12-29T08:56:23.000Z", "dateModified": "2013-12-29T08:56:23.000Z", "author": "Caio Oliveira", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "((?:\\<[^<>]+\\>\\s?)?)([:]\\w+(?!\\w*[;]))((?:\\s?\\<\\/[^<>]+\\>)?)((?:(?:.(?!\\1\\2\\3))*.){2})\\1\\2\\3", "permalinkFragment": "aK4eA0", "isFavorite": false, "isStarred": false}, {"title": "Select inside <a> tag", "description": "", "dateCreated": "2014-04-15T04:29:01.000Z", "dateModified": "2014-04-15T04:29:01.000Z", "author": "Vinay", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "<a(?:.*\\>)(.*)<\\/a>", "permalinkFragment": "tA2sV8", "isFavorite": false, "isStarred": false}, {"title": "Parse a HTML URL", "description": "Break a URL into parts:\n  protocol\n  url\n  path\n  get parameters\n  hash", "dateCreated": "2014-05-22T23:07:56.000Z", "dateModified": "2014-05-22T23:07:56.000Z", "author": "Dale O'Brien", "flavor": "python", "delimiter": "\"", "flags": "i", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "^(http[s]?:\\/\\/)?([^:\\/\\s]+)(:([^\\/]*))?(\\/\\w+\\.)*([^#?\\s]+)(\\?([^#]*))?(#(.*))?$", "permalinkFragment": "lQ1nI3", "isFavorite": false, "isStarred": false}, {"title": "Matching Multiline Strings in Large Text File", "description": "Need Help, Matching Multiline Strings in Large Text File", "dateCreated": "2014-08-16T17:49:42.000Z", "dateModified": "2014-08-16T17:49:42.000Z", "author": "jholderman", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "<td width=\\d* rowspan=\\d* align=right><font size=\\d* face=\"helvetica\">(?<ThirdNum>\\d)<.font><.td>", "permalinkFragment": "gL5wP6", "isFavorite": false, "isStarred": false}, {"title": "4-digit numeric w/o leading zero and no repeat digits", "description": "", "dateCreated": "2015-03-18T21:39:37.000Z", "dateModified": "2015-03-18T21:39:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "^([1-9])(?!\\1)([0-9])(?!\\1|\\2)([0-9])(?!\\1|\\2|\\3)([0-9])$", "permalinkFragment": "cC6fW3", "isFavorite": false, "isStarred": false}, {"title": "french phone number (intl format)", "description": "little matcher for french phone number in international format (example: +33231348228)", "dateCreated": "2015-05-05T08:52:31.000Z", "dateModified": "2015-05-05T08:52:31.000Z", "author": "Nolwennig", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "[+]{1}[3]{2}[1-7]{1}[0-9]{8}", "permalinkFragment": "uK5sI3", "isFavorite": false, "isStarred": false}, {"title": "IP v4 format validation", "description": "Valid\n0.0.0.0\n1.1.1.1\n101.101.101.101\n255.255.255.255\n156.0.1.10\n\n", "dateCreated": "2015-05-12T09:48:12.000Z", "dateModified": "2015-05-12T09:48:12.000Z", "author": "NexRezzo", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "^([01][0-9][0-9]\\.|2[0-4][0-9]\\.|[0-9][0-9]\\.|25[0-5]\\.|[0-9]\\.)([01][0-9][0-9]\\.|2[0-4][0-9]\\.|[0-9][0-9]\\.|25[0-5]\\.|[0-9]\\.)([01][0-9][0-9]\\.|2[0-4][0-9]\\.|[0-9][0-9]\\.|25[0-5]\\.|[0-9]\\.)([01][0-9][0-9]|2[0-4][0-9]|25[0-5]|[0-9][0-9]|[0-9])$", "permalinkFragment": "oJ8cM9", "isFavorite": false, "isStarred": false}, {"title": "Indian Phone Numbers!", "description": "This is not supported in Javascript! Works well for php, python. Examples: +91-8800119719, 08800119719, 8800119719, +918800119719 etc.", "dateCreated": "2015-06-02T15:16:39.000Z", "dateModified": "2015-06-02T15:16:39.000Z", "author": "Prateek Jain", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "^(\\+)(?(1))\\d{1,3}?[- ]?\\d{10}$|^([^0])(?(1))\\d{9}?$|^([0])(?(1))\\d{10}?$", "permalinkFragment": "lH2mN7", "isFavorite": false, "isStarred": false}, {"title": "dd/mm/yyyy validation regexp", "description": "", "dateCreated": "2015-09-17T10:54:11.000Z", "dateModified": "2015-09-17T10:54:11.000Z", "author": "uknnown", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$", "permalinkFragment": "iS6iM6", "isFavorite": false, "isStarred": false}, {"title": "US Phone Number", "description": "The way I like it formatted", "dateCreated": "2016-01-12T18:25:08.000Z", "dateModified": "2016-01-12T18:25:08.000Z", "author": "@mattbontrager", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "\\(\\d{3}\\)\\s\\d{3}\\-\\d{4}", "permalinkFragment": "zZ3tQ7", "isFavorite": false, "isStarred": false}, {"title": "Full Name", "description": "cheking full name e.g. \nMathias d'Arras\nMartin Luther King, Jr.\nHector Sausage-Hausen", "dateCreated": "2016-04-15T04:03:12.000Z", "dateModified": "2016-04-15T04:03:12.000Z", "author": "Aymen", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 7, "downvotes": 6, "score": 0.2914343239343881, "userVote": null, "regex": "^[a-z ,.'-]+$", "permalinkFragment": "nR3bK0", "isFavorite": false, "isStarred": false}, {"title": "Number with two max possible decimals", "description": "For float type inputs.", "dateCreated": "2015-03-09T13:40:55.000Z", "dateModified": "2015-03-09T13:40:55.000Z", "author": "Juanma - https://github.com/juanmaa1414", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 9, "downvotes": 9, "score": 0.2903070395513974, "userVote": null, "regex": "^(\\d{1,})(\\.\\d{1,2})?$", "permalinkFragment": "rE4oH8", "isFavorite": false, "isStarred": false}, {"title": "get image with classname", "description": "", "dateCreated": "2013-11-05T09:22:40.000Z", "dateModified": "2013-11-05T09:22:40.000Z", "author": "@cloverink", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 6, "downvotes": 5, "score": 0.28008775562933413, "userVote": null, "regex": "(<img[^<]+class=[\\\"'][^<]*\\s*thumbnail\\s*[^<]*[\\\"'][^<]+>)", "permalinkFragment": "kR6rC1", "isFavorite": false, "isStarred": false}, {"title": "Number, comma and dot", "description": "", "dateCreated": "2013-11-26T11:26:00.000Z", "dateModified": "2023-07-25T10:39:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 3, "upvotes": 6, "downvotes": 5, "score": 0.28008775562933413, "userVote": null, "regex": "^[\\d|\\.|\\,]+", "permalinkFragment": "oD9iO5", "isFavorite": false, "isStarred": false}, {"title": "SSN", "description": "", "dateCreated": "2014-01-16T20:04:56.000Z", "dateModified": "2014-01-16T20:04:56.000Z", "author": "jay johnson", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 6, "downvotes": 5, "score": 0.28008775562933413, "userVote": null, "regex": "^\\d{3}-\\d{2}-\\d{4}$", "permalinkFragment": "nI8qM3", "isFavorite": false, "isStarred": false}, {"title": "Phone numbers matcher", "description": "", "dateCreated": "2014-02-16T14:11:23.000Z", "dateModified": "2014-02-16T14:11:23.000Z", "author": "Oleksandr Sochka", "flavor": "pcre", "delimiter": "/", "flags": "mgx", "version": 1, "upvotes": 6, "downvotes": 5, "score": 0.28008775562933413, "userVote": null, "regex": "^ # begin\n\\s*# some empty spaces\n(?:\n  \\+? # + symbol\n  \\d{1,2} # country code\n  \\s*\n  (?(?=\\)) # if followed by parens\n    |  # then dash not allowed\n    -? # else optional dash\n  )\n)? #prefix like +380\n\\s*\n(?:  \n  (?P<leftparen>\\()? # optional left paren\n  \\s*\n  0\\d\\d  \n  \\s*\n  (?(leftparen)\\)|)    # right paren if and only if left paren\n)?  # operator code, starting with 0, optinally in parentheses\n(?(?<=\\)) # if preceded by parens\n  \\s*|  # then dash not allowed\n  \\s*-?\\s* # else optional dash\n)\n(?:\n  \\d |  \n  (?<=\n       \\d\n  )\n  (?(sep)\n     (?P=sep)|\n     (?P<sep>[\\-\\/\\ ])\n  )  \n  (?=\n       \\d\n  )\n){5,13}\n\\s*# some empty spaces\n$ # end\n#\\d\\d\\d  (?P<separator>-?)  \\d\\d  (?P=separator)  \\d\\d  $", "permalinkFragment": "eV3fD3", "isFavorite": false, "isStarred": false}, {"title": "Regex Formula for matching 2 letter Prefix URL's", "description": "I am trying to write a Regex formula that will match to all URL's with specifically 2 letter prefixes. \n\nI have a list of close to 1000 websites, and I need a formula that will collect data from any sites that start with \"..\".sporttu.com. For example, I want it to match to sites like ca.sporttu and mx.sporttu but not sites like commonwealthgames.sporttu or x.sporttu.com.\n\nSo far I've got \"^[a-z]{2}.sporttu.com\". It matches to some 2 letter sites, but not even close to all of them and matches to no sites with +2 letters in the prefix. Any help would be much appreciated.", "dateCreated": "2014-08-05T20:21:45.000Z", "dateModified": "2014-08-05T20:21:45.000Z", "author": "MikeRo", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 5, "score": 0.28008775562933413, "userVote": null, "regex": "^[a-z]{2}.sporttu.com", "permalinkFragment": "lW0fM8", "isFavorite": false, "isStarred": false}, {"title": "Find Word on A Text", "description": "This expression find a word in a text without limitation of \"\\b\" statement", "dateCreated": "2014-10-24T08:45:45.000Z", "dateModified": "2014-10-24T08:45:45.000Z", "author": "theShadow", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 5, "score": 0.28008775562933413, "userVote": null, "regex": "(?<=^|[^a-zA-Z0-9])\\Q$text\\E(?=$|[^a-zA-Z0-9])", "permalinkFragment": "wT0iD3", "isFavorite": false, "isStarred": false}, {"title": "REGEX", "description": "", "dateCreated": "2015-04-04T13:58:02.000Z", "dateModified": "2015-04-04T13:58:02.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 6, "downvotes": 5, "score": 0.28008775562933413, "userVote": null, "regex": "r", "permalinkFragment": "bQ0xP6", "isFavorite": false, "isStarred": false}, {"title": "split URL in protokoll, domain, file(with path), parameter and anker", "description": "split URL in protokoll, domain, file(with path), parameter and anker", "dateCreated": "2016-01-26T09:20:17.000Z", "dateModified": "2016-01-26T09:20:17.000Z", "author": "Candyman1332", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 5, "score": 0.28008775562933413, "userVote": null, "regex": "(?<protokoll>[a-z]*):\\/\\/?(?<domain>[a-z.-]*)?(?<file>[^?#]*)?[?](?<parameter>[^#]*)?[#](?<anker>.*)?", "permalinkFragment": "aE7vH3", "isFavorite": false, "isStarred": false}, {"title": "Match all html tags", "description": "", "dateCreated": "2014-09-16T12:40:58.000Z", "dateModified": "2014-09-16T12:40:58.000Z", "author": "Kostas Trichas", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 8, "downvotes": 8, "score": 0.2799923761135083, "userVote": null, "regex": "\\<(\\w+)(?:\\s*\\>|\\s*\\/\\>)?", "permalinkFragment": "fO1jC4", "isFavorite": false, "isStarred": false}, {"title": "Remove empty HTML tags", "description": "Removes empty HTML tags. Was needed for old input clean-up and to keep a HTML parses from crashing. Looking for improvement on bottom test.", "dateCreated": "2014-02-26T13:21:43.000Z", "dateModified": "2014-02-26T13:21:43.000Z", "author": "R. Sartorius", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 10, "downvotes": 12, "score": 0.26920014412875426, "userVote": null, "regex": "<.[^>]*>(\\s+|()|(&nbsp;)*|\\s+(&nbsp;)*|(&nbsp;)*\\s+|\\s+(&nbsp;)*\\s+)<\\/.[^>]*>", "permalinkFragment": "rD0sI8", "isFavorite": false, "isStarred": false}, {"title": "DateTime: DD-MM-YYYY HH:mm:ss", "description": "Validate and Capture (in 1000-2999 range) Leap-Year Correct", "dateCreated": "2013-05-13T23:26:11.000Z", "dateModified": "2013-05-13T23:26:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 7, "score": 0.2679886791947528, "userVote": null, "regex": "^(0[1-9]|1\\d|2[1-8]|29(?=-\\d\\d-(?!1[01345789]00|2[1235679]00)\\d\\d(?:[02468][048]|[13579][26]))|30(?!-02)|31(?=-0[13578]|-1[02]))-(0[1-9]|1[0-2])-([12]\\d{3}) ([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$", "permalinkFragment": "sL4pC3", "isFavorite": false, "isStarred": false}, {"title": "negated special characters", "description": "", "dateCreated": "2013-10-29T10:54:29.000Z", "dateModified": "2013-10-29T10:54:29.000Z", "author": "Rimjhim", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 7, "downvotes": 7, "score": 0.2679886791947528, "userVote": null, "regex": "^[^!@#%&*(){}[]?<>~]$", "permalinkFragment": "eJ2hY4", "isFavorite": false, "isStarred": false}, {"title": "get params from json", "description": "", "dateCreated": "2015-10-03T00:21:53.000Z", "dateModified": "2015-10-03T00:21:53.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 7, "downvotes": 7, "score": 0.2679886791947528, "userVote": null, "regex": "coords.*\\{[^}]+:.(\\d+),[^}]+:.(\\d*)\\n.*}", "permalinkFragment": "gO9hO0", "isFavorite": false, "isStarred": false}, {"title": "Twitter Hashtags", "description": "", "dateCreated": "2013-07-20T19:30:19.000Z", "dateModified": "2013-07-20T19:30:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "(^|\\s)#(\\w+)", "permalinkFragment": "yV1aF8", "isFavorite": false, "isStarred": false}, {"title": "Matching an Email", "description": "", "dateCreated": "2014-01-05T09:09:37.000Z", "dateModified": "2014-01-05T09:09:37.000Z", "author": "appsunited", "flavor": "javascript", "delimiter": "/", "flags": "email", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$", "permalinkFragment": "lA4lZ9", "isFavorite": false, "isStarred": false}, {"title": "IPv4 extraction", "description": "", "dateCreated": "2014-04-04T13:05:46.000Z", "dateModified": "2014-04-04T13:05:46.000Z", "author": "Jacob", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", "permalinkFragment": "cU6sW5", "isFavorite": false, "isStarred": false}, {"title": "quoted string in VB.net format", "description": "Get all strings in vb.net format (even nested quotes\"", "dateCreated": "2014-05-20T11:06:17.000Z", "dateModified": "2014-05-20T11:06:17.000Z", "author": "Alan Moore (http://stackoverflow.com/questions/2148587/finding-quoted-strings-with-escaped-quotes-in-c-sharp-using-a-regular-expression) modified by j", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "\\\"[^\"\"\\r\\n\\\\]*(?:\"\".[^\"\"\\r\\n\\\\]*)*\\\"", "permalinkFragment": "bL5yK3", "isFavorite": false, "isStarred": false}, {"title": "MAtch all lines starting with # to remove em", "description": "", "dateCreated": "2014-06-17T08:45:38.000Z", "dateModified": "2014-06-17T08:45:38.000Z", "author": "Jactaest", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "^[\\#]$", "permalinkFragment": "fN8kP7", "isFavorite": false, "isStarred": false}, {"title": "HTML color search", "description": "Searches for hex colors in HTML code.", "dateCreated": "2014-07-22T12:35:29.000Z", "dateModified": "2014-07-22T12:35:29.000Z", "author": "Barlean", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "#[0-9a-fA-F]{6,6};", "permalinkFragment": "sL4aH8", "isFavorite": false, "isStarred": false}, {"title": "regular expression to avoid white spaces", "description": "", "dateCreated": "2014-08-01T09:13:28.000Z", "dateModified": "2014-08-01T09:13:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "([^|]*)", "permalinkFragment": "eO9bE6", "isFavorite": false, "isStarred": false}, {"title": "json", "description": "", "dateCreated": "2014-08-14T17:28:29.000Z", "dateModified": "2014-08-14T17:28:29.000Z", "author": "suat & umut", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "\\{?(?<key>.*?):(?<val>[\"].*[\"]?|.*?)[,\\W]\\}?", "permalinkFragment": "uM3oN8", "isFavorite": false, "isStarred": false}, {"title": "Parse JSON key value", "description": "", "dateCreated": "2014-09-16T12:31:22.000Z", "dateModified": "2014-09-16T12:31:22.000Z", "author": "Kostas Trichas", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "(?:\\\"|\\')(?<key>[\\w\\d]+)(?:\\\"|\\')(?:\\:\\s*)(?:\\\"|\\')?(?<value>[\\w\\s-]*)(?:\\\"|\\')?", "permalinkFragment": "zR2hP5", "isFavorite": false, "isStarred": false}, {"title": "hostname", "description": "RFC 1123 compatible RegEx for a hostname (not a domain name), inspired by chapter 7.15 from Regular Expressions Cookbook.", "dateCreated": "2015-03-16T15:15:58.000Z", "dateModified": "2015-03-16T15:15:58.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mgi", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "(?=\\A[-a-z0-9]{1,63}\\Z)\\A[a-z0-9]+(-[a-z0-9]+)*\\Z", "permalinkFragment": "hS2dQ8", "isFavorite": false, "isStarred": false}, {"title": "HTML Anchor <a> Tag Grabber(overcome newlines)", "description": "", "dateCreated": "2015-04-01T02:25:21.000Z", "dateModified": "2015-04-01T02:25:21.000Z", "author": "Namikaze Ray a.k.a Pendecosen", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "(<a(?:(?!\\/a>).|\\n)*(?=\\/a>)...)", "permalinkFragment": "wQ0qS5", "isFavorite": false, "isStarred": false}, {"title": "Any telephone number with at least 6 digits", "description": "Telephone number can come with extra characters to denote country, region, etc", "dateCreated": "2015-05-28T21:45:43.000Z", "dateModified": "2015-05-28T21:45:43.000Z", "author": "https://co.linkedin.com/in/andresfelipecardona", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "([\\d|\\(][\\h|\\(\\d{3}\\)|\\.|\\-|\\d]{4,}\\d)", "permalinkFragment": "qC6mG1", "isFavorite": false, "isStarred": false}, {"title": "URL domain test", "description": "tests to find if (\"google.com\") is the domain part of the URL", "dateCreated": "2015-06-10T13:30:50.000Z", "dateModified": "2015-06-10T13:30:50.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "^((https?)\\:\\/\\/)(([a-z0-9])+\\.)*(google\\.com)", "permalinkFragment": "gD3kB3", "isFavorite": false, "isStarred": false}, {"title": "Mac-address filtering", "description": "Trying to capture a mac-address structure", "dateCreated": "2015-06-16T11:01:13.000Z", "dateModified": "2015-06-16T11:01:13.000Z", "author": "R. van den Hoek", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "(^0{2}-2{2}(-([0-9a-fA-F]){2}){4}$)", "permalinkFragment": "nF8mV2", "isFavorite": false, "isStarred": false}, {"title": "First 3 words in sentence", "description": "", "dateCreated": "2015-06-22T14:09:20.000Z", "dateModified": "2015-06-22T14:09:20.000Z", "author": "hjgabrielsen", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "^([^,]+)", "permalinkFragment": "vD5qX7", "isFavorite": false, "isStarred": false}, {"title": "email regex", "description": "", "dateCreated": "2015-11-05T06:37:33.000Z", "dateModified": "2015-11-05T06:37:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 4, "score": 0.2666473452914897, "userVote": null, "regex": "(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\n", "permalinkFragment": "zM9zO6", "isFavorite": false, "isStarred": false}, {"title": "Matches when the string does not contain an exact word", "description": "", "dateCreated": "2014-06-10T11:59:40.000Z", "dateModified": "2014-06-10T11:59:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ms", "version": 1, "upvotes": 6, "downvotes": 6, "score": 0.25377816995250163, "userVote": null, "regex": "^(?!.*(word).*$)([^\\n]*)", "permalinkFragment": "yN7tT8", "isFavorite": false, "isStarred": false}, {"title": "french phone number (locale format)", "description": "little matcher for french phone number in locale format (example: 0231348228)", "dateCreated": "2015-05-05T08:50:49.000Z", "dateModified": "2015-05-05T08:50:49.000Z", "author": "Nolwennig", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 6, "score": 0.25377816995250163, "userVote": null, "regex": "[0]{1}[1-7]{1}[0-9]{8}", "permalinkFragment": "nX8qF4", "isFavorite": false, "isStarred": false}, {"title": "Fully Qualified Domain Name FQDN", "description": "Fully qualified domain name validation", "dateCreated": "2015-06-24T20:11:22.000Z", "dateModified": "2015-06-24T20:11:22.000Z", "author": "ximbs", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 6, "score": 0.25377816995250163, "userVote": null, "regex": "(?=^.{1,253}$)(^((?!-)[a-zA-Z0-9-]{1,63}(?<!-)\\.)+[a-zA-Z]{2,63}$)", "permalinkFragment": "dL5jS6", "isFavorite": false, "isStarred": false}, {"title": "Table Purgatory", "description": "A regex to find all nowrap text occurrences and name all the groups involved in preparation for a replacement pass", "dateCreated": "2013-03-28T03:07:49.000Z", "dateModified": "2013-03-28T03:07:49.000Z", "author": "Joe Hacobian", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "(?<garbage>(nowrap=\"\")|(nowrap))(?<styleHead>\\sstyle=\")(?<styleBody>\\w+((\\w+)|(-\\w+)):\\s\\w+;)(?<styleTail>\")", "permalinkFragment": "oQ6dH2", "isFavorite": false, "isStarred": false}, {"title": "Get inside single/double quotes", "description": "Get everything inside single/double quotes and ignoring escaped ones", "dateCreated": "2013-09-07T18:18:08.000Z", "dateModified": "2013-09-07T18:18:08.000Z", "author": "Jerry", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "([\"'])((?:\\\\\\1|(?!\\1).)+)\\1", "permalinkFragment": "aG0qT4", "isFavorite": false, "isStarred": false}, {"title": "email", "description": "", "dateCreated": "2013-10-08T19:39:22.000Z", "dateModified": "2013-10-08T19:39:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "[\\w]+@[\\w]{2,}+\\.[\\w]{2,}", "permalinkFragment": "nR9fC7", "isFavorite": false, "isStarred": false}, {"title": "regular expression to replace except text from html tags", "description": "expression to look for words in innerText & not in html tags as id or class or style name", "dateCreated": "2013-12-27T09:25:41.000Z", "dateModified": "2013-12-27T09:25:41.000Z", "author": "umarfarukh", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "(simple)(?![^<>]*>)", "permalinkFragment": "lQ6iW5", "isFavorite": false, "isStarred": false}, {"title": "Comments in XML document", "description": "Match comments in a XML document.", "dateCreated": "2014-01-14T19:50:17.000Z", "dateModified": "2014-01-14T19:50:17.000Z", "author": "Jared Rummler", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "<!--((.[\\r\\n])|(.))*?-->", "permalinkFragment": "iE7eL0", "isFavorite": false, "isStarred": false}, {"title": "a^n b^n", "description": "", "dateCreated": "2014-02-16T20:01:29.000Z", "dateModified": "2014-02-16T20:01:29.000Z", "author": "Oleksandr Sochka", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "^(a(?1)b|)$", "permalinkFragment": "kW3cT4", "isFavorite": false, "isStarred": false}, {"title": "gh", "description": "", "dateCreated": "2014-04-04T16:46:10.000Z", "dateModified": "2014-04-04T16:46:10.000Z", "author": "ghb", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "[1|2|3]", "permalinkFragment": "bZ8dD0", "isFavorite": false, "isStarred": false}, {"title": "Match emails, as per RFC 5322", "description": "Match any email, according to the grammer in RFC 5322, found at http://tools.ietf.org/html/rfc5322", "dateCreated": "2014-06-12T03:20:33.000Z", "dateModified": "2014-06-12T03:20:33.000Z", "author": "Nikita Popov", "flavor": "pcre", "delimiter": "/", "flags": "gx", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "    (?(DEFINE)\n        (?<addr_spec> (?&local_part) @ (?&domain) )\n        (?<local_part> (?&dot_atom) | (?&quoted_string) | (?&obs_local_part) )\n        (?<domain> (?&dot_atom) | (?&domain_literal) | (?&obs_domain) )\n        (?<domain_literal> (?&CFWS)? \\[ (?: (?&FWS)? (?&dtext) )* (?&FWS)? \\] (?&CFWS)? )\n        (?<dtext> [\\x21-\\x5a] | [\\x5e-\\x7e] | (?&obs_dtext) )\n        (?<quoted_pair> \\\\ (?: (?&VCHAR) | (?&WSP) ) | (?&obs_qp) )\n        (?<dot_atom> (?&CFWS)? (?&dot_atom_text) (?&CFWS)? )\n        (?<dot_atom_text> (?&atext) (?: \\. (?&atext) )* )\n        (?<atext> [a-zA-Z0-9!#$%&'*+\\/=?^_`{|}~-]+ )\n        (?<atom> (?&CFWS)? (?&atext) (?&CFWS)? )\n        (?<word> (?&atom) | (?&quoted_string) )\n        (?<quoted_string> (?&CFWS)? \" (?: (?&FWS)? (?&qcontent) )* (?&FWS)? \" (?&CFWS)? )\n        (?<qcontent> (?&qtext) | (?&quoted_pair) )\n        (?<qtext> \\x21 | [\\x23-\\x5b] | [\\x5d-\\x7e] | (?&obs_qtext) )\n\n        # comments and whitespace\n        (?<FWS> (?: (?&WSP)* \\r\\n )? (?&WSP)+ | (?&obs_FWS) )\n        (?<CFWS> (?: (?&FWS)? (?&comment) )+ (?&FWS)? | (?&FWS) )\n        (?<comment> \\( (?: (?&FWS)? (?&ccontent) )* (?&FWS)? \\) )\n        (?<ccontent> (?&ctext) | (?&quoted_pair) | (?&comment) )\n        (?<ctext> [\\x21-\\x27] | [\\x2a-\\x5b] | [\\x5d-\\x7e] | (?&obs_ctext) )\n\n        # obsolete tokens\n        (?<obs_domain> (?&atom) (?: \\. (?&atom) )* )\n        (?<obs_local_part> (?&word) (?: \\. (?&word) )* )\n        (?<obs_dtext> (?&obs_NO_WS_CTL) | (?&quoted_pair) )\n        (?<obs_qp> \\\\ (?: \\x00 | (?&obs_NO_WS_CTL) | \\n | \\r ) )\n        (?<obs_FWS> (?&WSP)+ (?: \\r\\n (?&WSP)+ )* )\n        (?<obs_ctext> (?&obs_NO_WS_CTL) )\n        (?<obs_qtext> (?&obs_NO_WS_CTL) )\n        (?<obs_NO_WS_CTL> [\\x01-\\x08] | \\x0b | \\x0c | [\\x0e-\\x1f] | \\x7f )\n\n        # character class definitions\n        (?<VCHAR> [\\x21-\\x7E] )\n        (?<WSP> [ \\t] )\n    )\n    ^(?&addr_spec)$", "permalinkFragment": "mR9nV0", "isFavorite": false, "isStarred": false}, {"title": "Grab {\\w+?} together", "description": "", "dateCreated": "2014-09-23T11:43:47.000Z", "dateModified": "2014-09-23T11:43:47.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "[{](.+?)[}]|(\\w+)", "permalinkFragment": "lF6bU2", "isFavorite": false, "isStarred": false}, {"title": "intl numbers", "description": "Good for valid numbers for international currencies - checks for accepted variations for thousands and decimal separators\n\nhttp://docs.oracle.com/cd/E19455-01/806-0169/overview-9/index.html", "dateCreated": "2014-11-07T19:04:48.000Z", "dateModified": "2014-11-07T19:04:48.000Z", "author": "Arlen Tees", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "^\\d{1,3}((\\.|\\,|\\s)\\d{3})*((\\.|\\,|\\s)\\d{1,3})?$", "permalinkFragment": "pB1qD3", "isFavorite": false, "isStarred": false}, {"title": "Celphone numbers Control regex for  Ivory Coast", "description": "This script is about testing the validity of celphones from Ivory Coast (+225).\nThe number must start with one of the prefix listed bellow and have 8 caracters long.\n\nMoov 01, 02, 03, 40, 41 ou 42\nMTN 04, 05, 06, 44, 45, 46, 54, 55 , 56,75\nOrange 07, 08, 09, 47, 48, 49, 57, 58, 59, 77\nGreen Network (GreenN)/Oricel 60 ou 61\nKoz 65, 66 ou 67\n\nP.S. It's have been made in 2014. Think updating it if new prefix are added!\n\nHave fun while using it! ", "dateCreated": "2014-12-08T13:51:13.000Z", "dateModified": "2014-12-08T13:51:13.000Z", "author": "Alain Zio ", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "((0[1-9])|(4[0-2])|(4[4-9])|(5[4-9])|(6[0-1])|6[5-7]|(77)|(75))[0-9]{6}", "permalinkFragment": "nC9fR2", "isFavorite": false, "isStarred": false}, {"title": "matching value of html src attribute", "description": "matching value of html src attribute", "dateCreated": "2015-03-05T11:29:16.000Z", "dateModified": "2015-03-05T11:29:16.000Z", "author": "junkuos", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "src=\"(?=([^\\\"]*))", "permalinkFragment": "sG5hE9", "isFavorite": false, "isStarred": false}, {"title": "get top level domain excluding ports", "description": "I need to get the top level domain from the request header but it can be in a vary ways.. how can I match but exclude parts I dont want to get ie. ports", "dateCreated": "2015-03-12T11:48:42.000Z", "dateModified": "2015-03-12T11:48:42.000Z", "author": "nei", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "([\\w][\\w\\d-]+\\.[\\w\\d]{2,3})$", "permalinkFragment": "xR7tG1", "isFavorite": false, "isStarred": false}, {"title": "spaces in parenthesis", "description": "Eliminate spaces in the inner part of parenthesis.", "dateCreated": "2015-03-26T08:43:54.000Z", "dateModified": "2015-03-26T08:43:54.000Z", "author": "Luis Colorado", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "(\\()[ \\t\\n]*|[ \\t\\n]*(\\))", "permalinkFragment": "wS2eI3", "isFavorite": false, "isStarred": false}, {"title": "Email address validator", "description": "Validates most email addresses. Using the range [A-Za-z0-9] at the beginning instead of \\w means an address cannot begin with an underscore. This range is also used to exclude underscores from the domain (part after @).", "dateCreated": "2015-04-18T16:16:42.000Z", "dateModified": "2015-04-18T16:16:42.000Z", "author": "Owen Howard", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "(([A-Za-z0-9]+\\w*[\\.\\-]?){1,}+\\w*@([A-Za-z0-9]+\\.){1,2}[A-z]{2,3})", "permalinkFragment": "xB8fW9", "isFavorite": false, "isStarred": false}, {"title": "States", "description": "States (US)\n2 char format, matches: Ga or GA", "dateCreated": "2015-05-06T17:38:14.000Z", "dateModified": "2015-05-06T17:38:14.000Z", "author": "miqui", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "(^[A-Za-z]{2}$)", "permalinkFragment": "fW0vB5", "isFavorite": false, "isStarred": false}, {"title": "leap year  validate", "description": "", "dateCreated": "2015-06-23T20:29:29.000Z", "dateModified": "2015-06-23T20:29:29.000Z", "author": "Ahosan Karim Asik", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "^(0?[1-9]|1\\d|2[0-8]|29(?=[-]\\d?\\d[-](?!1[01345789]00|2[1235679]00)\\d\\d(?:[02468][048]|[13579][26]))|30(?![-]0?2)|31(?=[-]0?[13578][-]|[-]1[02]))[-](0?[1-9]|1[0-2])[-]([12]\\d{3})$", "permalinkFragment": "qD0lY6", "isFavorite": false, "isStarred": false}, {"title": "CPF", "description": "Validador de CPF", "dateCreated": "2015-06-25T19:04:16.000Z", "dateModified": "2015-06-25T19:04:16.000Z", "author": "Gustavo Am\u00e9rico", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "^(\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})$", "permalinkFragment": "lP1zH7", "isFavorite": false, "isStarred": false}, {"title": "Extract domain and path from video embeds", "description": "", "dateCreated": "2015-06-26T01:10:21.000Z", "dateModified": "2015-06-26T01:10:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "src=[\"|']?((?:https?:\\/\\/)?(?:www\\.)?([^\\/]+)([^\\?|^\"|^'|^\\s]*))", "permalinkFragment": "cI1qD1", "isFavorite": false, "isStarred": false}, {"title": "Function with n parameters in C-like syntax.", "description": "", "dateCreated": "2015-07-15T09:38:05.000Z", "dateModified": "2015-07-15T09:38:05.000Z", "author": "elkamarado@gmail.com", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": ".*\\(([[:blank:]]*[[:alnum:]]*[[:blank:]]*\\**[[:blank:]]*[[:alnum:]]*[[:blank:]]*,){5}[[:blank:]]*[[:alnum:]]*[[:blank:]]*\\**[[:blank:]]*[[:alnum:]]*[[:blank:]]*\\)", "permalinkFragment": "zR2tT2", "isFavorite": false, "isStarred": false}, {"title": "Wikipedia anchor", "description": "Match Wikipedia anchor dot-instead-of-percent encoding\nstring.replace(/((?:\\.[a-f0-9]{2}){2})/ig, function(match) { return decodeURIComponent(match.replace(/\\./g, '%')) });", "dateCreated": "2015-08-03T11:38:22.000Z", "dateModified": "2015-08-03T11:38:22.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "((?:\\.[a-f0-9]{2}){2})", "permalinkFragment": "aF1lW0", "isFavorite": false, "isStarred": false}, {"title": "Google Plus user profile url pattern", "description": "Pattern that check your string to match Google Plus user profile URL.", "dateCreated": "2015-09-10T17:01:45.000Z", "dateModified": "2015-09-10T17:01:45.000Z", "author": "JSC Quatrodev", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "^(http\\:\\/\\/|https\\:\\/\\/)?(?:www\\.)?(?:google\\.com|plus\\.google\\.com)\\/(u\\/\\d+\\/|u\\/)?((wm\\/[^\\/]+)|(b\\/\\d{21})\\/)?(\\d{21}|\\+[\\w_\\p{L}-]+)(\\/[a-z]+)?\\/?", "permalinkFragment": "tA9nP5", "isFavorite": false, "isStarred": false}, {"title": "one decimal validation", "description": "this regular expression allow numbers with one number from 1 to 5 and only one decimal value\nOnlys accept numeric values from 1.0 to 5", "dateCreated": "2015-09-10T20:39:31.000Z", "dateModified": "2015-09-10T20:39:31.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 4, "downvotes": 3, "score": 0.2504542301481056, "userVote": null, "regex": "(^[1-4]{1}(\\.\\d{0,1})?$)|(^5{1}$)", "permalinkFragment": "pP3tV8", "isFavorite": false, "isStarred": false}, {"title": "UK Postcode Validation", "description": "Matches all valid, current UK Postcodes, including Girobank and non-geographic postcodes, irrespective of whether they contain a space. It does not include overseas territories. Adapted from the BS7666 postcode rules at http://www.cabinetoffice.gov.uk/govtalk/schemasstandards/e-gif/datastandards/address/postcode.aspx", "dateCreated": "2015-04-10T22:38:11.000Z", "dateModified": "2015-04-10T22:38:11.000Z", "author": "Ti Marner", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 7, "downvotes": 8, "score": 0.2480922527371396, "userVote": null, "regex": "\\b(GIR ?0AA|(?:[A-PR-UWYZ](?:\\d{0,2}|[A-HK-Y]\\d|[A-HK-Y]\\d\\d|\\d[A-HJKSTUW]|[A-HK-Y]\\d[ABEHMNPRV-Y])) ?\\d[ABD-HJLNP-UW-Z]{2})\\b", "permalinkFragment": "zL6sI3", "isFavorite": false, "isStarred": false}, {"title": "Valid Email", "description": "Use this Regex for server-side validation also with some slight modifications like so for .NET --\n\n@\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.[a-zA-Z0-9]{2,6}([-.][a-zA-Z0-9]{2,6})*;", "dateCreated": "2015-10-19T17:05:30.000Z", "dateModified": "2015-10-19T17:05:30.000Z", "author": "Fred Scales", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 8, "downvotes": 10, "score": 0.245592310609604, "userVote": null, "regex": "^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.[A-Z0-9]{2,6}([-.][A-Z0-9]{2,6})*$", "permalinkFragment": "pY3wI5", "isFavorite": false, "isStarred": false}, {"title": "Improved regex101 ID grabber (fixed)", "description": "", "dateCreated": "2014-02-17T22:09:42.000Z", "dateModified": "2014-02-17T22:09:42.000Z", "author": "Oleksandr Sochka", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 5, "downvotes": 5, "score": 0.2365895936154873, "userVote": null, "regex": "^https?://regex101\\.com/r/([^\\W_]{6})$", "permalinkFragment": "iT6hP9", "isFavorite": false, "isStarred": false}, {"title": "Unicode alpha-numeric regex", "description": "Tests for all unicode language characters and number. Excludes any sentence joining characters etc.", "dateCreated": "2014-10-16T12:40:22.000Z", "dateModified": "2014-10-16T12:40:22.000Z", "author": "Jamie", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 5, "downvotes": 5, "score": 0.2365895936154873, "userVote": null, "regex": "[\\p{L}\\p{Nd} ]+", "permalinkFragment": "fV3uL7", "isFavorite": false, "isStarred": false}, {"title": "Get any word  before specific string", "description": "", "dateCreated": "2015-09-05T06:41:15.000Z", "dateModified": "2015-09-05T06:41:15.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gim", "version": 1, "upvotes": 5, "downvotes": 5, "score": 0.2365895936154873, "userVote": null, "regex": "^\\w+(?=\\s+OBJECT-TYPE)", "permalinkFragment": "uO6cI4", "isFavorite": false, "isStarred": false}, {"title": "CSS url()", "description": "Matches a valid CSS3 url() property", "dateCreated": "2015-10-29T22:04:23.000Z", "dateModified": "2015-10-29T22:04:23.000Z", "author": "sciyoshi", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 5, "downvotes": 5, "score": 0.2365895936154873, "userVote": null, "regex": "url\\([ \\t\\r\\n\\f]*(\\\"([^\\n\\r\\f\\\\\"]|\\\\(\\n|\\r\\n|\\r|\\f)|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\t\\r\\n\\f])?|\\\\[^\\r\\n\\f0-9a-f])*\\\"|\\'([^\\n\\r\\f\\\\']|\\\\(\\n|\\r\\n|\\r|\\f)|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\t\\r\\n\\f])?|\\\\[^\\r\\n\\f0-9a-f])*\\'|([!#$%&*-~]|[\\240-\\377]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\t\\r\\n\\f])?|\\\\[^\\r\\n\\f0-9a-f])*)[ \\t\\r\\n\\f]*\\)", "permalinkFragment": "mF2wH5", "isFavorite": false, "isStarred": false}, {"title": "Finds <font> tag", "description": "Useful for cleaning old html code from <font> tags", "dateCreated": "2013-09-09T06:44:00.000Z", "dateModified": "2013-09-09T06:44:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 7, "score": 0.23205754255746983, "userVote": null, "regex": "<(FONT|font)[^>]*>|</(FONT|font)>", "permalinkFragment": "vM5oX1", "isFavorite": false, "isStarred": false}, {"title": "Parse DateTimes", "description": "Will parse a DateTime and group the results. Probably pretty limited but it works for me.", "dateCreated": "2013-07-26T15:31:09.000Z", "dateModified": "2013-07-26T15:31:09.000Z", "author": "martin", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(.*?) ([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):?([0-5][0-9])?( AM| PM)?( [+-]\\d{4})?", "permalinkFragment": "jX3iB7", "isFavorite": false, "isStarred": false}, {"title": "Strip ANSI escape characters", "description": "", "dateCreated": "2014-02-26T14:28:35.000Z", "dateModified": "2014-02-26T14:28:35.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "\\^\\[(?:\\[[^@-~]+[\\@-\\~]|[0-9@-_])", "permalinkFragment": "wF6fY7", "isFavorite": false, "isStarred": false}, {"title": "HTML Anchor to Markdown Inline Link", "description": "Extracts the href and title values from an anchor tag to be placed into an inline Markdown link.", "dateCreated": "2014-04-04T20:15:48.000Z", "dateModified": "2014-04-04T20:15:48.000Z", "author": "Mike Johnson", "flavor": "pcre", "delimiter": "/", "flags": "gsi", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "<a[^>]*?href=(?|\"([^\"]*?)\"|'([^']*?)').*?>(.*?)<\\/a>", "permalinkFragment": "hZ7eH6", "isFavorite": false, "isStarred": false}, {"title": "12345", "description": "", "dateCreated": "2014-04-18T03:49:51.000Z", "dateModified": "2014-04-18T03:49:51.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "[0-9][0-9] - [0-9][0-9]", "permalinkFragment": "wB1tH2", "isFavorite": false, "isStarred": false}, {"title": "LeafletJS filename matcher", "description": "Regex used to identify location, i.e. URL of the <script> tag that loaded Leaflet (or Mapbox).", "dateCreated": "2014-05-22T16:04:28.000Z", "dateModified": "2014-05-22T16:04:28.000Z", "author": "cebence", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "[\\/^](leaflet|mapbox)[\\-\\._]?([\\w\\-\\._]*)\\.js\\??", "permalinkFragment": "bS7hF5", "isFavorite": false, "isStarred": false}, {"title": "Sentence matching", "description": "Match sentences ignore e.g. Fig. z.b. etc", "dateCreated": "2014-05-29T15:25:34.000Z", "dateModified": "2014-05-29T15:25:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "((?:(?(?=Fig\\.|\\d+\\.\\d).+?(?=\\s)|[^.!?])+(?=\\.))+)", "permalinkFragment": "gI5mP2", "isFavorite": false, "isStarred": false}, {"title": "Matching Results List", "description": "Hello,\n\nIf you can match the results listed in the right-hand side would be great.\n\nThank you.\n\n(via Google Translate)", "dateCreated": "2014-06-09T08:50:10.000Z", "dateModified": "2014-06-09T08:50:10.000Z", "author": "\u00c3\u2013m\u00c3\u00bcr Yan\u00c4\u00b1ko\u00c4\u0178lu", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "\\@?T\\(.*?\\)", "permalinkFragment": "aI3hG6", "isFavorite": false, "isStarred": false}, {"title": "Triple Quoted String", "description": "More powerful than python style, this supports things like `\"\"\"\" \"\"\"\"`, which matches totally. Also supports `\"\"\"a\"\"\"\"\"\"b\"\"\"`, where there are two matches: `\"\"\"a\"\"\"`,`\"\"\"b\"\"\"`.", "dateCreated": "2014-06-12T03:06:40.000Z", "dateModified": "2014-06-12T03:06:40.000Z", "author": "Flaviu", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "\"\"\"(?:(?!\"\"\").)*(?:\"{1,2}(?!\"\"\"))?\"\"\"", "permalinkFragment": "qH6nP6", "isFavorite": false, "isStarred": false}, {"title": " from Google-Maps", "description": "results all street-adresses from http://maps.googleapis.com/maps/api/geocode/xml?sensor=false&address=", "dateCreated": "2014-06-23T18:41:57.000Z", "dateModified": "2014-06-23T18:41:57.000Z", "author": "PierreSash", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "<(result)\\b[^>]*><type>(street_address)<\\/type>(.*?)<\\/\\1>", "permalinkFragment": "oY6iO6", "isFavorite": false, "isStarred": false}, {"title": "extract JavaScript function name (corrected for specials)", "description": "", "dateCreated": "2014-07-09T21:30:34.000Z", "dateModified": "2014-07-09T21:30:34.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^\\s*function\\s+([a-zA-Z$_][a-zA-Z\\d$_]*)\\s*\\(", "permalinkFragment": "vQ9eS8", "isFavorite": false, "isStarred": false}, {"title": " include case", "description": "How to include the matched cases in the result?", "dateCreated": "2014-07-14T14:37:19.000Z", "dateModified": "2014-07-14T14:37:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(?<=<FilesMatch \"test\">)((.|\\n)*?)(?=<\\/FilesMatch>)", "permalinkFragment": "nA5wB5", "isFavorite": false, "isStarred": false}, {"title": "question regarding \"split\" like regex group", "description": "dear all,\ni am a regex beginner, so please be gentle :)\n\nwe have lines of log contents delimited by a pipe char. is it possible to fetch the content between the 5th and the 6th delimiter, ignoring the values in between?\n\nexample log line:\n2014-05-21_06:50:59|10.128.3.20|-|-|-|GET|/home.html|-|6\n\nI'd like to do something like result = line.split('|')[6]. unfortunatelly I can't write code but only a regex selector.\n\nhelp is highly appreciated.", "dateCreated": "2014-07-16T17:46:11.000Z", "dateModified": "2014-07-16T17:46:11.000Z", "author": "regexBeginner", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "[\\d-_:|\\.]+[\\d.]+\\|([\\w]+)", "permalinkFragment": "pU1aT9", "isFavorite": false, "isStarred": false}, {"title": "quotes and escapes", "description": "", "dateCreated": "2014-08-04T08:37:40.000Z", "dateModified": "2014-08-04T08:37:40.000Z", "author": "zgorawski", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(\"+)(.*[\\\\\"]?.*?)+?\\1", "permalinkFragment": "jW8iV8", "isFavorite": false, "isStarred": false}, {"title": "nginx rewrite", "description": "", "dateCreated": "2014-08-26T12:03:32.000Z", "dateModified": "2014-08-26T12:03:32.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^/(((?!/).)+)-(\\d+)\\.html$", "permalinkFragment": "vP4cA4", "isFavorite": false, "isStarred": false}, {"title": "Get all HTML tag names", "description": "", "dateCreated": "2014-09-16T12:37:45.000Z", "dateModified": "2014-09-16T12:37:45.000Z", "author": "Kostas Trichas", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "\\<(\\w+)(?:\\s*|\\>)?", "permalinkFragment": "oN6jS1", "isFavorite": false, "isStarred": false}, {"title": "Url regex testing", "description": "", "dateCreated": "2014-10-23T18:00:59.000Z", "dateModified": "2014-10-23T18:00:59.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^(https?|ftp)://[^\\s/$.?#].[^\\s]*$", "permalinkFragment": "eC9vQ2", "isFavorite": false, "isStarred": false}, {"title": "date validation", "description": "Validation for date 2013.12.24 14:50", "dateCreated": "2014-11-04T14:51:36.000Z", "dateModified": "2014-11-04T14:51:36.000Z", "author": "axelprog", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^([12]\\d)?(\\d\\d)[\\.\\/\\-](0?[1-9]|1[012])[\\.\\/\\-](0?[1-9]|[12]\\d|3[01])\\s([01]?[0-9]|2[0-3]):[0-5][0-9]$", "permalinkFragment": "jT7cO3", "isFavorite": false, "isStarred": false}, {"title": "sad smiley", "description": "looks for a sad smiley with a backslash", "dateCreated": "2014-11-13T20:34:57.000Z", "dateModified": "2014-11-13T20:34:57.000Z", "author": "@barraponto", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": ":\\\\", "permalinkFragment": "mY8dY9", "isFavorite": false, "isStarred": false}, {"title": "Simple Email Validation", "description": "Does not match everything, but good for a cross-platform validation filter.", "dateCreated": "2014-11-17T08:58:15.000Z", "dateModified": "2014-11-17T08:58:15.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])", "permalinkFragment": "vT1vH0", "isFavorite": false, "isStarred": false}, {"title": "sort -t \",\" -k4,4 -k1n,1 file_name", "description": "", "dateCreated": "2014-11-26T09:55:23.000Z", "dateModified": "2014-11-26T09:55:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "sort -t \",\" -k4,4 -k1n,1 $file_name", "permalinkFragment": "lW1gS5", "isFavorite": false, "isStarred": false}, {"title": "Simple phone or email", "description": "True if user input mobile phone or email", "dateCreated": "2014-12-16T12:30:03.000Z", "dateModified": "2014-12-16T12:30:03.000Z", "author": "jiller", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(^\\+[0-9]{9,15}$)|(^.+@.+\\..+$)", "permalinkFragment": "jQ2aH4", "isFavorite": false, "isStarred": false}, {"title": "Spanish NIE / NIF Validator", "description": "", "dateCreated": "2015-01-06T16:07:29.000Z", "dateModified": "2015-01-06T16:07:29.000Z", "author": "Gauravity", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(X(-|\\.)?0?\\d{7}(-|\\.)?[A-Z]|[A-Z](-|\\.)?\\d{7}(-|\\.)?[0-9A-Z]|\\d{8}(-|\\.)?[A-Z])$", "permalinkFragment": "eV1fA0", "isFavorite": false, "isStarred": false}, {"title": "check phone number(Taiwan)", "description": "If pattern match, then this number probably is a phone number in Taiwan.", "dateCreated": "2015-02-03T05:54:29.000Z", "dateModified": "2015-02-03T05:54:29.000Z", "author": "Assalin", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "\\(??(?P<area>0\\d{1,2}?)\\)??(\\s*?|\\-??)(?P<phone>\\d{3,4}(\\s*?|\\-??)\\d{3,4})", "permalinkFragment": "vL1pD2", "isFavorite": false, "isStarred": false}, {"title": "match arguments similar to shell, supports quoted string", "description": "first group matches quoted strings second group plain text,\narguments are separated with a space.\nexample:\n\"this is a \\\"string\\\"\" thisisnot \"another \\\"string\\\" with a backslash \\\"\\\\\"\"\njust replace \\\" with \" after matching.", "dateCreated": "2015-02-13T03:07:15.000Z", "dateModified": "2015-02-13T03:07:15.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(?:(?:(?:\")+((?:(?:[^\\\\\"]+)(?:(?:(?:\\\\)*(?!\"))?(?:\\\\\")?)*)+)(?:\"))+|([^ ]+)+)+(?: )?", "permalinkFragment": "wC5aR5", "isFavorite": false, "isStarred": false}, {"title": "Uppercase words", "description": "", "dateCreated": "2015-03-08T01:15:12.000Z", "dateModified": "2015-03-08T01:15:12.000Z", "author": "MaaxZoom", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "\\b([A-Z]+)\\b", "permalinkFragment": "jZ6wT2", "isFavorite": false, "isStarred": false}, {"title": "periodic-digit-numbers", "description": "", "dateCreated": "2015-03-16T21:04:07.000Z", "dateModified": "2015-03-16T21:04:07.000Z", "author": "Wolf", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "([0-9]+?)\\1+", "permalinkFragment": "eD6fH3", "isFavorite": false, "isStarred": false}, {"title": "AD Default Password Policy", "description": "", "dateCreated": "2015-03-18T00:48:28.000Z", "dateModified": "2015-03-18T00:48:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*", "permalinkFragment": "pC0rX7", "isFavorite": false, "isStarred": false}, {"title": "Only return what's between the brackets i.e. (a)", "description": "", "dateCreated": "2015-03-23T02:10:58.000Z", "dateModified": "2015-03-23T02:10:58.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^\\s*<li>[(][a-z][)]", "permalinkFragment": "wU9wX4", "isFavorite": false, "isStarred": false}, {"title": "Labels with version numbers", "description": "Quick studty of labels with version numbers", "dateCreated": "2015-03-24T15:18:43.000Z", "dateModified": "2015-03-24T15:18:43.000Z", "author": "LC", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "foobar_(\\d+\\.?\\d*\\.?\\d*)\\s+", "permalinkFragment": "yS5pP6", "isFavorite": false, "isStarred": false}, {"title": "E-Mail", "description": "", "dateCreated": "2015-03-27T11:22:31.000Z", "dateModified": "2015-03-27T11:22:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "([a-zA-Z0-9._-]+@+[a-zA-Z][a-zA-Z0-9._-]+.+[a-z])", "permalinkFragment": "mH8nY6", "isFavorite": false, "isStarred": false}, {"title": "Number 0-100, 2 decimals", "description": "A number between 0 and 100 (including them) with up to two decimals. The decimal separator can be . or , . Usefull for percentage.", "dateCreated": "2015-03-27T17:22:26.000Z", "dateModified": "2015-03-27T17:22:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^((100((\\.|,)[0-9]{1,2})?)|([0-9]{1,2}((\\.|,)[0-9]{0,2})?))$", "permalinkFragment": "hU8gF9", "isFavorite": false, "isStarred": false}, {"title": "CEDICT Chinese dictionary line parts", "description": "Matches the four parts (simplified, traditional, pinyin, definition) of a CEDICT dictionary line", "dateCreated": "2015-03-29T12:25:10.000Z", "dateModified": "2015-03-29T12:25:10.000Z", "author": "Hugh Grigg", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(.+)\\s(.+)\\s\\[([a-zA-Z12345\\s]+)\\]\\s\\/(.+)\\/\\n", "permalinkFragment": "zJ6pP2", "isFavorite": false, "isStarred": false}, {"title": "Regex", "description": "", "dateCreated": "2015-04-01T22:25:56.000Z", "dateModified": "2015-04-01T22:25:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(-- iOS 8\\.2 --)\\G|.(?:iPhone 4s.\\((.*?)\\))", "permalinkFragment": "tA9aA1", "isFavorite": false, "isStarred": false}, {"title": "^(?:0814|0815|0816|0855|0856\\d|0857\\d|0858\\d|0859\\d|0[^08]\\d)\\d{6,9}$", "description": "", "dateCreated": "2015-04-22T15:00:27.000Z", "dateModified": "2015-04-22T15:00:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^(?:0814|0815|0816|0855|0856\\d|0857\\d|0858\\d|0859\\d|0[^08]\\d)\\d{6,9}$", "permalinkFragment": "vI2vC6", "isFavorite": false, "isStarred": false}, {"title": "Find exeptions in log4j", "description": "regex to consider exceptions in log4j", "dateCreated": "2015-04-23T13:19:58.000Z", "dateModified": "2015-04-23T13:19:58.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gsm", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^\\d{4}-\\d{2}-\\d{2}\\s+\\S+\\s\\S+\\sERROR.*?\\n\\d{4}-\\d{2}-\\d{2}", "permalinkFragment": "dH0kN9", "isFavorite": false, "isStarred": false}, {"title": "Validador de Data (MMddYYYY e YYYYMMdd)", "description": "Verifica se o texto digitado corresponde a um formato de data valida por expl. 12/31/2015 ou 2015/12/31", "dateCreated": "2015-04-23T20:52:57.000Z", "dateModified": "2015-04-23T20:52:57.000Z", "author": "Gustavo Am\u00e9rico (Gag)", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^([1-9]|0[1-9]|1[012])([-\\/.])([1-9]|0[1-9]|[12][0-9]|3[01])\\2(\\d{4})$|^(\\d{4})([-\\/.])([1-9]|0[1-9]|[12][0-9]|3[01])\\6([1-9]|0[1-9]|[12][0-9]|3[01])$", "permalinkFragment": "kH8xD9", "isFavorite": false, "isStarred": false}, {"title": "Less number variables to dictionary", "description": "extract keys and values from .less variables", "dateCreated": "2015-04-28T09:20:03.000Z", "dateModified": "2015-04-28T09:20:03.000Z", "author": "actarian", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(?:\\@)(?<key>[\\w\\s-]*)(?:\\:\\s*)(?<value>[0-9]+)+(?<unit>[\\w\\s-]*)(?:\\;)", "permalinkFragment": "eA3vL0", "isFavorite": false, "isStarred": false}, {"title": "Check if number is a float ", "description": "", "dateCreated": "2015-05-03T00:59:42.000Z", "dateModified": "2015-05-03T00:59:42.000Z", "author": "@hiaru", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^\\-?[0-9]*\\.0*[1-9]+[0-9]*$", "permalinkFragment": "pZ8gH2", "isFavorite": false, "isStarred": false}, {"title": "ReGEX EXPression", "description": "ReGEX EXPression  generating Values but repeating want values should not repeat.", "dateCreated": "2015-05-06T08:10:08.000Z", "dateModified": "2015-05-06T08:10:08.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "C([A-Z].+)T", "permalinkFragment": "lE2gO7", "isFavorite": false, "isStarred": false}, {"title": "postfix", "description": "get ip identifier, queue name, email domain and status from postfix log", "dateCreated": "2015-05-07T11:21:25.000Z", "dateModified": "2015-05-07T11:21:25.000Z", "author": "kglod", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(?P<sender>sender\\d+) postfix.[^-]*-(?P<ip>[^/,]*)/[^:]*: (?P<queue>[^ ]+): (from|to)=<(?P<login>[^@]*)@(?P<domain>[^\\.]*)[^>]*>.*(?:status=)(?P<status>\\w+)", "permalinkFragment": "nV9rM7", "isFavorite": false, "isStarred": false}, {"title": "Find a select or select top in a query", "description": "Some times we need replace de first select in a query to another. In my case i want replace to \"Select top 1\". With that a can replace any select to select top 1.", "dateCreated": "2015-05-21T19:59:45.000Z", "dateModified": "2015-05-21T19:59:45.000Z", "author": "Diego Troiti\u00f1o", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(select top [0-9]+ percent|select top [0-9]+|select )", "permalinkFragment": "zN1jU3", "isFavorite": false, "isStarred": false}, {"title": "russian phone number hard validation (multiformat)", "description": "Supported formats (mobile):\n+7(xxx)xxx xxxx\n+7(xxx)xxxxxxx\n+7(xxx)xxx-xx-xx\n+7(xxx)xxx xx xx\n+7 xxx xxx xx xx\n+7 xxx xxx-xx-xx\n+7xxx xxxxxxx\n+7 xxx xxx xxxx\n+7 xxx xxx-xxxx\n+7xxxxxxxxxx\n7(xxx)xxxxxxx\n7(xxx)xxx-xx-xx\n7(xxx)xxx xx xx\n(xxx)xxxxxxx\n(xxx)xxx-xx-xx\n(xxx)xxx xx xx\n7 xxx xxx xx xx\n7 xxx xxx-xx-xx\n7xxx xxxxxxx\n7 xxx xxx xxxx\n7 xxx xxx-xxxx\n7xxxxxxxxxx\nxxxxxxxxxx\n\nHome phones: ex.: +7(813)78 444-xx\n+7(xxx)xx xxx-xx\n+7(xxx)xx xxx xx\n+7(xxx)xx xxxxx\n+7xxxxx xxx-xx\n+7xxxxx xxx xx\n+7xxxxx xxxxx\n+7xxx xx xxx xx\n+7xxx xx xxx-xx\n+7xxxxxxxxxx\n7(xxx)xx xxx-xx\n7(xxx)xx xxx xx\n7(xxx)xx xxxxx\n7xxxxx xxx-xx\n7xxxxx xxx xx\n7xxxxx xxxxx\n7xxx xx xxx xx\n7xxx xx xxx-xx\n7xxxxxxxxxx\nxxx-xx\nxxxxx", "dateCreated": "2015-05-26T13:35:05.000Z", "dateModified": "2015-05-26T13:35:05.000Z", "author": "Redfern.89", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^\\+[\\d]{1}+\\([\\d]{3}\\)+[\\d]{3}+\\-+[\\d]{4}$|^\\+[\\d]{1}+\\([\\d]{3}\\)+[\\d]{3}+\\s+[\\d]{4}$|^\\+[0-9]{1}+\\([0-9]{3}\\)+[0-9]{7}$|^\\+[0-9]{1}+\\([0-9]{3}\\)+[0-9]{3}+\\-+[0-9]{2}+\\-+[0-9]{2}$|^\\+[0-9]{1}+\\([0-9]{3}\\)+[0-9]{3}+\\s+[0-9]{2}+\\s+[0-9]{2}$|^\\+[0-9]{1}+\\s+[0-9]{3}+\\s+[0-9]{3}+\\s+[0-9]{2}+\\s+[0-9]{2}$|^\\+[0-9]{1}+\\s+[0-9]{3}+\\s+[0-9]{3}+\\-+[0-9]{2}+\\-+[0-9]{2}$|^\\++[0-9]{4}+\\s+[0-9]{7}$|^\\+[0-9]{1}+\\s+[0-9]{3}+\\s+[0-9]{3}+\\s+[0-9]{4}$|^\\+[0-9]{1}+\\s+[0-9]{3}+\\s+[0-9]{3}+\\-+[0-9]{4}$|^\\++[0-9]{11}$|^[0-9]{1}+\\([0-9]{3}\\)+[0-9]{7}$|^[0-9]{1}+\\([0-9]{3}\\)+[0-9]{3}+\\-+[0-9]{2}+\\-+[0-9]{2}$|^[0-9]{1}+\\([0-9]{3}\\)+[0-9]{3}+\\s[0-9]{2}+\\s+[0-9]{2}$|^\\([0-9]{3}\\)+[0-9]{7}$|^\\([0-9]{3}\\)+[0-9]{3}+\\-+[0-9]{2}+\\-+[0-9]{2}$|^\\([0-9]{3}\\)+[0-9]{3}+\\s+[0-9]{2}+\\s+[0-9]{2}$|^[0-9]{1}+\\s+[0-9]{3}+\\s+[0-9]{3}+\\s+[0-9]{2}+\\s+[0-9]{2}$|^[0-9]{1}+\\s+[0-9]{3}+\\s+[0-9]{3}+\\-+[0-9]{2}+\\-+[0-9]{2}$|^[0-9]{4}+\\s+[0-9]{7}$|^[0-9]{1}+\\s+[0-9]{3}+\\s+[0-9]{3}+\\s+[0-9]{4}$|^[0-9]{1}+\\s+[0-9]{3}+\\s+[0-9]{3}+\\-+[0-9]{4}$|^[\\d]{11}$|^[\\d]{10}$|^\\+[\\d]{1}+\\([\\d]{3}\\)+[\\d]{2}+\\s+[\\d]{3}+\\-+[\\d]{2}$|^\\+[\\d]{1}+\\([\\d]{3}\\)+[\\d]{2}+\\s+[\\d]{3}+\\s+[\\d]{2}$|^\\+[\\d]{1}+\\([\\d]{3}\\)+[\\d]{2}+\\s+[\\d]{5}$|^\\+[\\d]{6}+\\s+[\\d]{3}+\\-+[\\d]{2}$|^\\+[\\d]{6}+\\s+[\\d]{3}+\\s+[\\d]{2}$|^\\+[\\d]{6}+\\s+[\\d]{5}$|^\\+[\\d]{4}+\\s+[\\d]{2}+\\s+[\\d]{3}+\\s+[\\d]{2}$|^\\+[\\d]{4}+\\s+[\\d]{2}+\\s+[\\d]{3}+\\-+[\\d]{2}$|^\\+[\\d]{11}$|^[\\d]+\\([\\d]{3}\\)+[\\d]{2}+\\s+[\\d]{3}+\\-+[\\d]{2}$|^[\\d]+\\([\\d]{3}\\)+[\\d]{2}+\\s+[\\d]{3}+\\s+[\\d]{2}$|^[\\d]+\\([\\d]{3}\\)+[\\d]{2}+\\s+[\\d]{5}$|^[\\d]{6}+\\s+[\\d]{3}+\\-+[\\d]{2}$|^[\\d]{6}+\\s+[\\d]{3}+\\s+[\\d]{2}$|^[\\d]{6}+\\s+[\\d]{5}$|^[\\d]{4}+\\s+[\\d]{2}+\\s+[\\d]{3}+\\s+[\\d]{2}$|^[\\d]{4}+\\s+[\\d]{2}+\\s+[\\d]{3}+\\-+[\\d]{2}$|^[\\d]{3}+\\-+[\\d]{2}$|^[\\d]{5}$", "permalinkFragment": "bV1aN8", "isFavorite": false, "isStarred": false}, {"title": "Valid date ddMMyyyy + .zip extension", "description": "", "dateCreated": "2015-06-09T00:44:32.000Z", "dateModified": "2015-06-09T00:44:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(([0-2][0-9]|3[0-1])([0][0-9]|[1][0-2])(19|20[0-9][0-9]))[.]zip", "permalinkFragment": "eR6nO3", "isFavorite": false, "isStarred": false}, {"title": "Timecode", "description": "Regex to match standard timecode format. (Updated with fewer groups).", "dateCreated": "2015-06-10T07:41:35.000Z", "dateModified": "2015-06-10T07:41:35.000Z", "author": "Travis", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "([0-9]{2}:){3}[0-9]{2}", "permalinkFragment": "gW9jU4", "isFavorite": false, "isStarred": false}, {"title": "CVE descriptors", "description": "", "dateCreated": "2015-06-11T16:34:55.000Z", "dateModified": "2015-06-11T16:34:55.000Z", "author": "Noir", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^CVE-(1999|2\\d{3})-(0\\d{2}[1-9]|[1-9]\\d{3,})$", "permalinkFragment": "mH2kU4", "isFavorite": false, "isStarred": false}, {"title": "Match numbers with consecutive digits", "description": "Match numbers with consecutive digits and of length 3.", "dateCreated": "2015-06-12T16:12:10.000Z", "dateModified": "2015-06-12T16:12:10.000Z", "author": "OnlineCop", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "((?=\\b\\d{3}\\b)0?1?2?3?4?5?6?7?8?9?(?<=\\d{3}))", "permalinkFragment": "sS6dB7", "isFavorite": false, "isStarred": false}, {"title": "Find exact domain name match", "description": "Find exact domain name match in pipe delimeted string", "dateCreated": "2015-06-15T11:49:16.000Z", "dateModified": "2015-06-15T11:49:16.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(?<=\\||\\A|\\n)(dev\\.test\\.com)(?=\\||Z|\\n)", "permalinkFragment": "sU6hL6", "isFavorite": false, "isStarred": false}, {"title": "Extract times from a string", "description": "I use this to extract and later calculate the difference between two times.", "dateCreated": "2015-07-14T03:19:14.000Z", "dateModified": "2015-07-14T03:19:14.000Z", "author": "Ernie C.", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "([0-9]{1,2}:?(?:[0-9]{2})?)-([0-9]{1,2}:?(?:[0-9]{2})?)\\s(AM|PM)", "permalinkFragment": "bP0zL5", "isFavorite": false, "isStarred": false}, {"title": "Simple Valid File Names", "description": "Simple file names. Special chars allowed (-_.) {3, 40}", "dateCreated": "2015-07-16T02:00:47.000Z", "dateModified": "2015-07-16T02:00:47.000Z", "author": "CADII", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^[\\w\\-. ]{1,40}$", "permalinkFragment": "eU0kV7", "isFavorite": false, "isStarred": false}, {"title": "get number and unit in string", "description": "match int or float number, and following word (unit for example)", "dateCreated": "2015-07-21T09:35:55.000Z", "dateModified": "2015-07-21T09:35:55.000Z", "author": "Etienne Goumet", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "([ 0-9]*[0-9]+(?:\\.|,)?[0-9]*)[ ]*(.*)", "permalinkFragment": "wU0wX6", "isFavorite": false, "isStarred": false}, {"title": "GET EMAIL INFO (3)", "description": "Get Gmail tag, user and domain of an email address. -- Fixed the bug that the label doesn't match if there are an dot on user.", "dateCreated": "2015-07-21T20:19:53.000Z", "dateModified": "2015-07-21T20:19:53.000Z", "author": "Mat\u00edas Pizarro Gonz\u00e1lez", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^(?<User>[_a-z0-9-]+(\\.[_a-z0-9-]+)*(?<GmailTag>\\+[\\._a-z0-9-]+){0,1})@(?<Host>[a-z0-9-]+(\\.[a-z0-9-]+)*\\.[a-z]{2,4})$", "permalinkFragment": "iA9wU6", "isFavorite": false, "isStarred": false}, {"title": "country name", "description": "", "dateCreated": "2015-07-22T07:24:16.000Z", "dateModified": "2015-07-22T07:24:16.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "([\\w]+)([, ])+(Democratic.+|Republic.+)", "permalinkFragment": "qX7bF7", "isFavorite": false, "isStarred": false}, {"title": "Does not match", "description": "", "dateCreated": "2015-08-07T18:27:24.000Z", "dateModified": "2015-08-07T18:27:24.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "\\$\\S+(*SKIP)(*F)|(.)", "permalinkFragment": "pK4vV8", "isFavorite": false, "isStarred": false}, {"title": "Get src in img", "description": "Get src in img ", "dateCreated": "2015-08-19T13:33:28.000Z", "dateModified": "2015-08-19T13:33:28.000Z", "author": "Andy", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "<(\\s+)?img(?:.*src=[\"'](.*?)[\"'].*)\\/>?", "permalinkFragment": "hO5iP2", "isFavorite": false, "isStarred": false}, {"title": "hex string", "description": "match 00aabbcc... or 00:aa:bb:cc...", "dateCreated": "2015-09-07T14:38:21.000Z", "dateModified": "2015-09-07T14:38:21.000Z", "author": "minji", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(^([0-9a-fA-F]{2})+$)|((?:[0-9a-fA-F]{2}([:]))+(?:[0-9a-fA-F]{2})*([0-9a-fA-F]{2})+$)", "permalinkFragment": "rM2lK5", "isFavorite": false, "isStarred": false}, {"title": "Extract names of XML attributes that have values", "description": "Extracts attribute names from an XML file and presents them as a simple list. Affects only the attributes that have values. Ignores the \"parent\" attributes (that have no values but have nested attributes).", "dateCreated": "2015-09-08T09:27:41.000Z", "dateModified": "2015-09-08T09:27:41.000Z", "author": "O.Khilkevych / D.Mrachkovsyi", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "<(\\w*?)>.*<.*>", "permalinkFragment": "wX8qU0", "isFavorite": false, "isStarred": false}, {"title": "YouTube ID Capture", "description": "Works on \"*youtube.com\" urls, as well as \"youtu.be\" urls", "dateCreated": "2015-09-15T18:07:28.000Z", "dateModified": "2015-09-15T18:07:28.000Z", "author": "Lucanos", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^(?:https?:)?\\/\\/(?:(?:www\\.)?youtube\\.com|youtu\\.be)\\/(?:(?:watch\\?v=|user|v\\/|embed\\/))?([a-zA-Z0-9]+)", "permalinkFragment": "uR7pT5", "isFavorite": false, "isStarred": false}, {"title": "MM-DD-YYYY - Javascript Date with some validation", "description": "This is a regular expression for date in javascript.\nIt validates the month between 01-12 (double digits only).\nIt validates the day between 01-31 (double digits only).\nAnd enforces 4 digit year (no validation for range).", "dateCreated": "2015-09-22T17:59:26.000Z", "dateModified": "2015-09-22T17:59:26.000Z", "author": "Andrew Leonenko", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^(0[1-9]|1[0-2])-([1-9]|[12][0-9]|3[01])-(\\d{4})$", "permalinkFragment": "dB2zN5", "isFavorite": false, "isStarred": false}, {"title": "regex words", "description": "get all words related to regex", "dateCreated": "2015-09-24T19:09:18.000Z", "dateModified": "2015-09-24T19:09:18.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "reg(ular expression(s|)|ex(p|es|))", "permalinkFragment": "cT2nG5", "isFavorite": false, "isStarred": false}, {"title": "Web page URL", "description": "Validates an URL of a web page", "dateCreated": "2015-09-30T09:00:18.000Z", "dateModified": "2015-09-30T09:00:18.000Z", "author": "Heinrich Reimer", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^(https?:\\/\\/)([\\da-z\\.-]+)\\.([a-z\\.]{2,6})(\\/([\\da-z\\.-]+))*\\/?(([\\w\\.-]+)\\.([\\da-z]{2,6}))?((\\#[\\w\\.-]+)|(\\?([\\da-z]+(=[\\da-z]+)?)(&([\\da-z]+(=[\\da-z]+)?))*))?", "permalinkFragment": "uD5zV5", "isFavorite": false, "isStarred": false}, {"title": "filter range", "description": "", "dateCreated": "2015-10-07T16:09:16.000Z", "dateModified": "2015-10-07T16:09:16.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^(?!$)(?:<from>\"([\\d\\-.]*)\")?(?:<to>\"([\\d\\-.]*)\")?$", "permalinkFragment": "bI8bX6", "isFavorite": false, "isStarred": false}, {"title": "apache log parser", "description": "", "dateCreated": "2015-10-29T14:22:31.000Z", "dateModified": "2015-10-29T14:22:31.000Z", "author": "Claudio Borges", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(?P<remote>[\\.0-9]+) (?P<identity>[\\w\\d\\-]+) (?P<user>[\\w\\d\\-]+) \\[(?P<date>.*?)\\] \"(?P<method>\\w+) (?P<url>.*?) (?P<protocol>[\\w\\/\\.\\d]+)\" (?P<status>\\d+) (?P<bytes>[\\d-]+) \"(?P<referer>.*?)\" \"(?P<agent>.*?)\"", "permalinkFragment": "sK2aK6", "isFavorite": false, "isStarred": false}, {"title": "Empty string test", "description": "Regular for testing empty strings for validation purpose", "dateCreated": "2015-11-05T12:58:33.000Z", "dateModified": "2015-11-05T12:58:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^(?!\\s*$).+", "permalinkFragment": "uL7dA1", "isFavorite": false, "isStarred": false}, {"title": "Camel case string splitter", "description": "Splits CamelCase single string into separate strings. Can be used for transforming CamelCase to snake_case.\n\nAlso works with numbers and capital letter shortcuts (e.g SomeWTFVariable1).", "dateCreated": "2015-11-05T14:19:52.000Z", "dateModified": "2015-11-05T14:19:52.000Z", "author": "Nicolas", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "([A-Z][a-z]+|[A-Z]+(?![a-z])|[0-9]+)", "permalinkFragment": "sD9wM7", "isFavorite": false, "isStarred": false}, {"title": "json comment - first attempt", "description": "", "dateCreated": "2015-11-05T20:27:06.000Z", "dateModified": "2015-11-05T20:27:06.000Z", "author": "Mark", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^(?:[^\"#]*\".*\"[^\"#]*|[^\"#]*)(#.*)?$", "permalinkFragment": "pZ8pT0", "isFavorite": false, "isStarred": false}, {"title": "java", "description": "", "dateCreated": "2015-11-13T12:18:11.000Z", "dateModified": "2015-11-13T12:18:11.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "[a-z]", "permalinkFragment": "xI5oE7", "isFavorite": false, "isStarred": false}, {"title": "Address Match", "description": "", "dateCreated": "2015-11-16T15:43:22.000Z", "dateModified": "2015-11-16T15:43:22.000Z", "author": "Awk", "flavor": "python", "delimiter": "\"", "flags": "gi", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(?P<Address>(?:\\d+\\s+.+\\s+(?:st|street|ave|avenue|dr|drive|way|lane)\\.?))", "permalinkFragment": "zU6pC7", "isFavorite": false, "isStarred": false}, {"title": "Check Date + time (DD/MM/YYYY HH:MM)", "description": "", "dateCreated": "2015-11-26T16:39:17.000Z", "dateModified": "2015-11-26T16:39:17.000Z", "author": "Mikael Georges", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(([012][0-9])|(3[01]))\\/([0]{0,1}[1-9]|1[012])\\/\\d{4} ([01][0-9]|[2][0-3]):([01345][0-9])", "permalinkFragment": "tQ3mL6", "isFavorite": false, "isStarred": false}, {"title": "Alpha + Underscore", "description": "", "dateCreated": "2015-11-26T21:54:04.000Z", "dateModified": "2015-11-26T21:54:04.000Z", "author": "Sergio de la Garza", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^[a-zA-Z0-9\\_]+$", "permalinkFragment": "uE8xY3", "isFavorite": false, "isStarred": false}, {"title": "Xml/html regex", "description": "Common regex for use with xml/html files", "dateCreated": "2015-12-01T09:54:07.000Z", "dateModified": "2015-12-01T09:54:07.000Z", "author": "wonzbak", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(<\\/?\\w+[^>]*>)", "permalinkFragment": "cP6sW1", "isFavorite": false, "isStarred": false}, {"title": "FFXIV Lodestone Character profile", "description": "Parses full url up to character page. Ignores http:// and anything after character ID", "dateCreated": "2015-12-03T15:42:57.000Z", "dateModified": "2015-12-03T15:42:57.000Z", "author": "JaveLiner", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "([a-z0-9]+\\.)*(finalfantasyxiv\\.com)*(\\/)*(lodestone)*(\\/)*(character)*(\\/)*([0-9]+)", "permalinkFragment": "aW7kB6", "isFavorite": false, "isStarred": false}, {"title": "match non-alphanumeric in string", "description": "", "dateCreated": "2015-12-11T18:48:17.000Z", "dateModified": "2015-12-11T18:48:17.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "[^A-Za-z0-9]+", "permalinkFragment": "hJ4pD7", "isFavorite": false, "isStarred": false}, {"title": "word matcher", "description": "", "dateCreated": "2016-02-03T08:03:36.000Z", "dateModified": "2016-02-03T08:03:36.000Z", "author": "Cengizism", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*", "permalinkFragment": "jT0tX6", "isFavorite": false, "isStarred": false}, {"title": "Strip Specific HTML Tags", "description": "Strip specific HTML tags from a string\u2014opposite of PHP's strip_tags(). Replace letter 'p' with your tag name. Using PHP preg_replace(), example:\npreg_replace('/(<' . $tag . '[^>]*>)(.*?)(<\\/' . $tag . '>)|(<' . $tag . '[^>]*>)/i', '$2', $string);", "dateCreated": "2016-02-18T19:01:30.000Z", "dateModified": "2016-02-18T19:01:30.000Z", "author": "Zachary Beschler", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(<p[^>]*>)(.*?)(<\\/p>)|(<p[^>]*>)", "permalinkFragment": "pA1qU7", "isFavorite": false, "isStarred": false}, {"title": "US Telephone Number", "description": "", "dateCreated": "2016-03-18T15:00:05.000Z", "dateModified": "2016-03-18T15:00:05.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^([\\+]?[1]?[\\s]?(\\d{3}|\\(\\d{3}\\)))[\\-|\\s]?\\d{3}[\\-|\\s]?\\d{4}$", "permalinkFragment": "rP9zD4", "isFavorite": false, "isStarred": false}, {"title": "Country Code", "description": "", "dateCreated": "2016-03-31T21:27:01.000Z", "dateModified": "2016-03-31T21:27:01.000Z", "author": "SB", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "CA_[A-Z][0-9][A-Z]\\h?[0-9][A-Z][0-9]|US_[0-9]{5}|GB_(?:(?:[A-Z][0-9]|[A-Z][0-9]{2}|[A-Z]{2}[0-9]|[A-Z]{2}[0-9]{2}|[A-Z][0-9][A-Z]|[A-Z]{2}[0-9][A-Z])\\h?[0-9][A-Z]{2}|GIR\\h?0AA)", "permalinkFragment": "lD1qH5", "isFavorite": false, "isStarred": false}, {"title": "Javascript GUID regex", "description": "Validate GUID using a regex expression", "dateCreated": "2016-04-04T23:04:43.000Z", "dateModified": "2016-04-04T23:04:43.000Z", "author": "stom", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^[{]?[0-9a-fA-F]{8}[-]?([0-9a-fA-F]{4}[-]?){3}[0-9a-fA-F]{12}[}]?$", "permalinkFragment": "oT0yR6", "isFavorite": false, "isStarred": false}, {"title": "Phone Number", "description": "Allows a phone number in the following format: (123) 123-1234\nThe space is optional", "dateCreated": "2016-04-26T13:56:51.000Z", "dateModified": "2016-04-26T13:56:51.000Z", "author": "Tom G.", "flavor": "javascript", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "^\\(\\d{3}\\)\\s?\\d{3}\\-\\d{4}$", "permalinkFragment": "tN9zG6", "isFavorite": false, "isStarred": false}, {"title": "Phone Number", "description": "Between 8 and 10 Digits, no spaces", "dateCreated": "2016-06-23T03:09:24.000Z", "dateModified": "2016-06-23T03:09:24.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "[0-9]{8,10}", "permalinkFragment": "vF3fO2", "isFavorite": false, "isStarred": false}, {"title": "Regex to match any JSON value with fewer steps possible", "description": "If you find...\n- any JSON value that should be matched but isn't,\n- any JSON value that should NOT be matched but is\n- or simply a way to match the values with fewer steps...\nplease, let me know.\n", "dateCreated": "2019-02-24T16:58:45.000Z", "dateModified": "2019-02-24T16:58:45.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 3, "downvotes": 2, "score": 0.23071993220883708, "userVote": null, "regex": "(?smx)\n(?(DEFINE)\n  (?<jsonObject>\n    \\{(?&jsonField)(?>,(?&jsonField))*+\\}|\n    \\{[[:space:]]*+\\}\n  )\n  (?<jsonArray>\n    \\[(?&jsonValue)(?>,(?&jsonValue))*+\\]|\n    \\[[[:space:]]*+\\]\n  )\n  (?<string>\n    \"\n    [^\"\\\\]*+\n    (?>\n      (?>\n        \\\\[\"\\\\\\/rntfb]|\n        \\\\u[[:xdigit:]]{4}\n      )++\n      [^\"\\\\]*+\n    )*+\n    \"\n  )\n  (?<number>\n    \\-?+\n    (?>\n      [1-9][[:digit:]]*+|\n      0\n    )\n    (?>\\.[[:digit:]]++)?+\n    (?>[eE][\\+\\-]?+[[:digit:]]++)?+\n  )\n  (?<jsonValue>\n    [[:space:]]*+\n    (?>\n      (?&string)|\n      (?&number)|\n      (?&jsonObject)|\n      (?&jsonArray)|\n      false|\n      true|\n      null\n    )\n    [[:space:]]*+\n  )\n  (?<jsonField>\n    [[:space:]]*+(?&string)[[:space:]]*+\\:\n    (?&jsonValue)\n  )\n)\n^(?&jsonValue),\\n", "permalinkFragment": "vyUdBa", "isFavorite": false, "isStarred": false}, {"title": "Detects hiragana, katakana, kanji and japanese alphabet", "description": "Detects hiragana, katakana, kanji and japanese alphabet", "dateCreated": "2021-03-23T09:10:40.000Z", "dateModified": "2021-03-23T09:10:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\x{3041}-\\x{3096}\\x{30A0}-\\x{30FF}\\x{3400}-\\x{4DB5}\\x{4E00}-\\x{9FCB}\\x{F900}-\\x{FA6A}\\x{2E80}-\\x{2FD5}\\x{FF5F}-\\x{FF9F}\\x{3000}-\\x{303F}\\x{31F0}-\\x{31FF}\\x{3220}-\\x{3243}\\x{3280}-\\x{337F}]", "permalinkFragment": "xhHFs2", "isFavorite": false, "isStarred": true}, {"title": "Markdown Inline Link to HTML Anchor", "description": "Extracts title and link from Markdown inline link to be placed into an HTML anchor tag.", "dateCreated": "2014-04-04T20:18:35.000Z", "dateModified": "2014-04-04T20:18:35.000Z", "author": "Mike Johnson", "flavor": "pcre", "delimiter": "/", "flags": "gsi", "version": 1, "upvotes": 4, "downvotes": 4, "score": 0.2152125268244419, "userVote": null, "regex": "\\[([^\\[\\]]*?)\\]\\((\\S*?)\\)", "permalinkFragment": "eX8sX1", "isFavorite": false, "isStarred": false}, {"title": "Find email address in a string.", "description": "", "dateCreated": "2014-06-11T17:57:28.000Z", "dateModified": "2014-06-11T17:57:28.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "i", "version": 1, "upvotes": 4, "downvotes": 4, "score": 0.2152125268244419, "userVote": null, "regex": "[\\w\\-][\\w\\-\\.]+@[\\w\\-][\\w\\-\\.]+[a-zA-Z]{1,4}", "permalinkFragment": "pZ4iM8", "isFavorite": false, "isStarred": false}, {"title": "Password strength check", "description": "Checks password for following attributes:\n  * At least 2 uppercase letters\n  * At least 2 lowercase letters\n  * At least 2 numbers\n  * At least 2 non-alphanumeric characters\n\nLength is deliberately not checked as it's best to pre-check using standard coding.\n", "dateCreated": "2014-10-31T21:32:07.000Z", "dateModified": "2014-10-31T21:32:07.000Z", "author": "Visigral", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 4, "downvotes": 4, "score": 0.2152125268244419, "userVote": null, "regex": "\\A(?=.*[A-Z].*[A-Z])(?=.*[a-z].*[a-z])(?=.*[0-9].*[0-9])(?=.*[^a-zA-Z0-9].*[^a-zA-Z0-9])", "permalinkFragment": "bD4fV0", "isFavorite": false, "isStarred": false}, {"title": "full split URL by domain, path, params", "description": "", "dateCreated": "2015-07-25T17:42:44.000Z", "dateModified": "2015-07-25T17:42:44.000Z", "author": "memboc", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 4, "downvotes": 4, "score": 0.2152125268244419, "userVote": null, "regex": "https?:\\/\\/(?:www\\.)?([-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b)*(\\/[\\/\\d\\w\\.-]*)*(?:[\\?])*(.+)*", "permalinkFragment": "jP5vK6", "isFavorite": false, "isStarred": false}, {"title": "posix", "description": "", "dateCreated": "2015-06-09T18:58:46.000Z", "dateModified": "2015-06-09T18:58:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 6, "downvotes": 8, "score": 0.21380509887059704, "userVote": null, "regex": "(^(?!1$).*)", "permalinkFragment": "dX8cN8", "isFavorite": false, "isStarred": false}, {"title": "Substitutin", "description": "", "dateCreated": "2013-10-29T17:56:00.000Z", "dateModified": "2013-10-29T17:56:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 6, "score": 0.2127095752800694, "userVote": null, "regex": "(.+)", "permalinkFragment": "pF0bE0", "isFavorite": false, "isStarred": false}, {"title": "woop", "description": "", "dateCreated": "2015-02-15T22:12:04.000Z", "dateModified": "2015-02-15T22:12:04.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 5, "downvotes": 6, "score": 0.2127095752800694, "userVote": null, "regex": "[0-9,]+", "permalinkFragment": "qC9nV1", "isFavorite": false, "isStarred": false}, {"title": ".", "description": "", "dateCreated": "2013-09-07T21:02:48.000Z", "dateModified": "2013-09-07T21:02:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": " ^ERROR\\s\\[(?<title>\\w+:\\d+.*)?", "permalinkFragment": "xG8cU7", "isFavorite": false, "isStarred": false}, {"title": "Match US Currency Amount", "description": "Group 1 has dollar amount with or without commas, Group 4 has optional cents.", "dateCreated": "2014-01-03T17:29:56.000Z", "dateModified": "2014-01-03T17:29:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\$?\\s*(\\d{1,3}(,\\d{3})+|\\d+)(\\.(\\d\\d))?", "permalinkFragment": "kC0vX4", "isFavorite": false, "isStarred": false}, {"title": "erferf", "description": "", "dateCreated": "2014-01-11T06:34:25.000Z", "dateModified": "2014-01-11T06:34:25.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?=.*?[A-Z])(?=.*?[a-z])(?!.*?[=?<>()'\"\\/\\&]).{8,20}$", "permalinkFragment": "vO2mY3", "isFavorite": false, "isStarred": false}, {"title": "match hyphen between quotes", "description": "", "dateCreated": "2014-01-13T22:22:32.000Z", "dateModified": "2014-01-13T22:22:32.000Z", "author": "cetanu", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(\\\"[^\"]*.*?)-(.*?\\\")", "permalinkFragment": "dF7aG0", "isFavorite": false, "isStarred": false}, {"title": "non negative integers", "description": "", "dateCreated": "2014-01-16T19:10:26.000Z", "dateModified": "2014-01-16T19:10:26.000Z", "author": "jay johnson", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([^.0-]|[^.0-][0-9]+|[0])$", "permalinkFragment": "dZ6qH8", "isFavorite": false, "isStarred": false}, {"title": "Find common version names in filenames", "description": "", "dateCreated": "2014-01-26T21:06:26.000Z", "dateModified": "2014-01-26T21:06:26.000Z", "author": "Jared", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(\\d+\\.?)", "permalinkFragment": "eX8gD3", "isFavorite": false, "isStarred": false}, {"title": "Replaces odd number of quotes with even number of quotes.", "description": "", "dateCreated": "2014-01-30T03:32:06.000Z", "dateModified": "2014-01-30T03:32:06.000Z", "author": "ingredient_15939", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "((?<!\")(?:\"\")*\"(?!\"))", "permalinkFragment": "eH7iK1", "isFavorite": false, "isStarred": false}, {"title": "Divisible by 3 numbers", "description": "", "dateCreated": "2014-02-16T19:58:49.000Z", "dateModified": "2014-02-16T19:58:49.000Z", "author": "Oleksandr Sochka", "flavor": "pcre", "delimiter": "/", "flags": "xgm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?:\n  [0369] |\n  (?:\n    [147]\n    (?:[147][0369]*[258]|[0369])*\n    [258]\n  ) |\n  (?:\n    [258]\n    (?:[258][0369]*[147]|[0369])*\n    [147]\n  )\n)+$", "permalinkFragment": "eI5xB8", "isFavorite": false, "isStarred": false}, {"title": "parse SQL statements and get values", "description": "but it does not work. How do I make it work? It will be used in C#", "dateCreated": "2014-02-22T04:18:40.000Z", "dateModified": "2014-02-22T04:18:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "im", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?<=\\b(create|alter|drop)\\s+(procedure|proc|table|trigger|view|function)\\b\\s\\[dbo\\].)\\[.*?\\]", "permalinkFragment": "pY1kE3", "isFavorite": false, "isStarred": false}, {"title": "javascript variable", "description": "", "dateCreated": "2014-03-25T23:22:52.000Z", "dateModified": "2014-03-25T23:22:52.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[a-zA-Z$_][a-zA-Z\\d_]*", "permalinkFragment": "mC9vJ0", "isFavorite": false, "isStarred": false}, {"title": "css all comments", "description": "", "dateCreated": "2014-03-30T13:12:09.000Z", "dateModified": "2014-03-30T13:12:09.000Z", "author": "Mitus M.", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(\\/\\*\\s*)(?'comment'.*?)(\\s*\\*\\/)", "permalinkFragment": "sK9mE0", "isFavorite": false, "isStarred": false}, {"title": "select stuff of </a> [beta]", "description": "", "dateCreated": "2014-04-03T00:43:13.000Z", "dateModified": "2014-04-03T00:43:13.000Z", "author": "Kerosene", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?=<[^<]*\\s+title=\"([^\"]*)\")|<\\s*a[^>]*>([^<]*)(?:[^\\/]*[^a]*[^>]*)(?<=[>])([^<]*)", "permalinkFragment": "kX7sQ5", "isFavorite": false, "isStarred": false}, {"title": "CEF Pipe and Space Delimited Data", "description": "", "dateCreated": "2014-04-07T22:20:43.000Z", "dateModified": "2014-04-07T22:20:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?:^(?:[^|]*\\|){7}\\s)?([^=]+)=((?:\\\\\\\\=|[^=])+)(?:\\s|$)", "permalinkFragment": "yI4kT9", "isFavorite": false, "isStarred": false}, {"title": "Facebook Video ID from link", "description": "Matches the video id in FB links", "dateCreated": "2014-04-24T07:10:55.000Z", "dateModified": "2014-04-24T07:10:55.000Z", "author": "Eirenaios", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "facebook\\.com\\/(?:photo.php\\?v=|video\\/embed\\?video_id=|v\\/?)(\\d+)", "permalinkFragment": "iN8lC5", "isFavorite": false, "isStarred": false}, {"title": "price selector", "description": "Matches any of the prices in the text below:\nIm asking $15,500 OBO\nIm asking 15,400$\nIm asking 15400$\nIm asking $15400\nIm asking 15 400$\nIm asking $15 400\nIm asking 15.400$\nIm asking $15.400\nIm asking $ 15,400\nIm asking 15,400 $\nIm asking 15.400 $\nIm asking $ 15.400", "dateCreated": "2014-05-13T11:23:44.000Z", "dateModified": "2014-05-13T11:23:44.000Z", "author": "chocksy", "flavor": "pcre", "delimiter": "/", "flags": "mig", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\$\\s?(\\d+[\\.\\s,\\dk]+)|(\\d+[\\.\\s,\\dk]+)\\$", "permalinkFragment": "kA2mN2", "isFavorite": false, "isStarred": false}, {"title": "Remove italics in less than three letters...", "description": "Subtitle Edit", "dateCreated": "2014-05-19T04:44:49.000Z", "dateModified": "2014-05-19T04:44:49.000Z", "author": "paconaranjo", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\x3ci\\x3e(.{1,3})\\x3c\\/i\\x3e", "permalinkFragment": "xI8yY4", "isFavorite": false, "isStarred": false}, {"title": "I need to escape \" in json, issue: if they are already escaped", "description": "I'm having issues escaping quotes inside json content.  I can get the \\\" to be put in if \" is seen, the issue is I don't want that to be done if \\\" is in the content (as that is already escaped)", "dateCreated": "2014-05-22T23:58:46.000Z", "dateModified": "2014-05-22T23:58:46.000Z", "author": "Patrick", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?:(?<!\\\\)|(?<=\\\\\\\\))(\\\")", "permalinkFragment": "lF8nK8", "isFavorite": false, "isStarred": false}, {"title": "Signed integer", "description": "", "dateCreated": "2014-05-28T15:04:11.000Z", "dateModified": "2014-05-28T15:04:11.000Z", "author": "markus hooge", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[-+]?\\d+$", "permalinkFragment": "qT9xM0", "isFavorite": false, "isStarred": false}, {"title": "Linkedin profile matching regex", "description": "This a regex for matching linkedin profile URLs", "dateCreated": "2014-05-28T16:41:49.000Z", "dateModified": "2014-05-28T16:41:49.000Z", "author": "@antespi", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)", "permalinkFragment": "rN4xK5", "isFavorite": false, "isStarred": false}, {"title": "\u00d0\u2014\u00d0\u00b0\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d0\u00b0 \u00d0\u00b4\u00d0\u00b2\u00d0\u00be\u00d0\u00b9\u00d0\u00bd\u00d1\u2039\u00d1\u2026 \u00d0\u00ba\u00d0\u00b0\u00d0\u00b2\u00d1\u2039\u00d1\u2021\u00d0\u00b5\u00d0\u00ba (\u00d0\u00b2\u00d0\u00bd\u00d1\u0192\u00d1\u201a\u00d1\u20ac\u00d0\u00b8 \u00d0\u00ba\u00d0\u00b0\u00d0\u00b2\u00d1\u2039\u00d1\u2021\u00d0\u00b5\u00d0\u00ba) \u00d0\u00b2 \u00d0\u00bd\u00d0\u00b0\u00d0\u00b7\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00b8\u00d1\u008f\u00d1\u2026 \u00d0\u00be\u00d1\u20ac\u00d0\u00b3\u00d0\u00b0\u00d0\u00bd\u00d0\u00b8\u00d0\u00b7\u00d0\u00b0\u00d1\u2020\u00d0\u00b8\u00d0\u00b9", "description": "\u00d0\u017e \u00d0\u00ba\u00d0\u00b0\u00d0\u00b2\u00d1\u2039\u00d1\u2021\u00d0\u00ba\u00d0\u00b0\u00d1\u2026 \u00d0\u00b2\u00d0\u00bd\u00d1\u0192\u00d1\u201a\u00d1\u20ac\u00d0\u00b8 \u00d0\u00ba\u00d0\u00b0\u00d0\u00b2\u00d1\u2039\u00d1\u2021\u00d0\u00b5\u00d0\u00ba\n\n\u00d0\u2022\u00d1\u0081\u00d0\u00bb\u00d0\u00b8 \u00d0\u00b2\u00d0\u00bd\u00d1\u0192\u00d1\u201a\u00d1\u20ac\u00d0\u00b8 \u00d1\u0081\u00d0\u00bb\u00d0\u00be\u00d0\u00b2, \u00d0\u00b7\u00d0\u00b0\u00d0\u00ba\u00d0\u00bb\u00d1\u017d\u00d1\u2021\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u2039\u00d1\u2026 \u00d0\u00b2 \u00d0\u00ba\u00d0\u00b0\u00d0\u00b2\u00d1\u2039\u00d1\u2021\u00d0\u00ba\u00d0\u00b8, \u00d0\u00b2\u00d1\u0081\u00d1\u201a\u00d1\u20ac\u00d0\u00b5\u00d1\u2021\u00d0\u00b0\u00d1\u017d\u00d1\u201a\u00d1\u0081\u00d1\u008f \u00d0\u00b4\u00d1\u20ac\u00d1\u0192\u00d0\u00b3\u00d0\u00b8\u00d0\u00b5 \u00d1\u0081\u00d0\u00bb\u00d0\u00be\u00d0\u00b2\u00d0\u00b0, \u00d0\u00b2 \u00d1\u0081\u00d0\u00b2\u00d0\u00be\u00d1\u017d \u00d0\u00be\u00d1\u2021\u00d0\u00b5\u00d1\u20ac\u00d0\u00b5\u00d0\u00b4\u00d1\u0152 \u00d0\u00b7\u00d0\u00b0\u00d0\u00ba\u00d0\u00bb\u00d1\u017d\u00d1\u2021\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u2039\u00d0\u00b5 \u00d0\u00b2 \u00d0\u00ba\u00d0\u00b0\u00d0\u00b2\u00d1\u2039\u00d1\u2021\u00d0\u00ba\u00d0\u00b8, \u00d1\u20ac\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d0\u00b4\u00d1\u0192\u00d0\u00b5\u00d1\u201a\u00d1\u0081\u00d1\u008f (\u00d0\u00bf\u00d1\u20ac\u00d0\u00b8 \u00d1\u0192\u00d1\u0081\u00d0\u00bb\u00d0\u00be\u00d0\u00b2\u00d0\u00b8\u00d0\u00b8, \u00d1\u2021\u00d1\u201a\u00d0\u00be \u00d0\u00b4\u00d0\u00bb\u00d1\u008f \u00d1\u008d\u00d1\u201a\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d0\u00b5\u00d1\u0081\u00d1\u201a\u00d1\u0152 \u00d1\u201a\u00d0\u00b5\u00d1\u2026\u00d0\u00bd\u00d0\u00b8\u00d1\u2021\u00d0\u00b5\u00d1\u0081\u00d0\u00ba\u00d0\u00b8\u00d0\u00b5 \u00d0\u00b2\u00d0\u00be\u00d0\u00b7\u00d0\u00bc\u00d0\u00be\u00d0\u00b6\u00d0\u00bd\u00d0\u00be\u00d1\u0081\u00d1\u201a\u00d0\u00b8) \u00d0\u00b8\u00d1\u0081\u00d0\u00bf\u00d0\u00be\u00d0\u00bb\u00d1\u0152\u00d0\u00b7\u00d0\u00be\u00d0\u00b2\u00d0\u00b0\u00d1\u201a\u00d1\u0152 \u00d0\u00ba\u00d0\u00b0\u00d0\u00b2\u00d1\u2039\u00d1\u2021\u00d0\u00ba\u00d0\u00b8 \u00d1\u20ac\u00d0\u00b0\u00d0\u00b7\u00d0\u00bd\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u20ac\u00d0\u00b8\u00d1\u0081\u00d1\u0192\u00d0\u00bd\u00d0\u00ba\u00d0\u00b0: \u00d0\u00b2\u00d0\u00bd\u00d0\u00b5\u00d1\u02c6\u00d0\u00bd\u00d0\u00b8\u00d0\u00b5 \u00e2\u20ac\u201c \u00c2\u00ab\u00d0\u00b5\u00d0\u00bb\u00d0\u00be\u00d1\u2021\u00d0\u00ba\u00d0\u00b8\u00c2\u00bb, \u00d0\u00b2\u00d0\u00bd\u00d1\u0192\u00d1\u201a\u00d1\u20ac\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d0\u00b8\u00d0\u00b5 \u00e2\u20ac\u201c \u00e2\u20ac\u017e\u00d0\u00bb\u00d0\u00b0\u00d0\u00bf\u00d0\u00ba\u00d0\u00b8\u00e2\u20ac\u009d (\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 \u00e2\u20ac\u201c \u00d0\u00b2 \u00d1\u201a\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u201a\u00d0\u00b0\u00d1\u2026, \u00d0\u00bd\u00d0\u00b0\u00d0\u00b1\u00d1\u20ac\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u2039\u00d1\u2026 \u00d0\u00bd\u00d0\u00b0 \u00d0\u00ba\u00d0\u00be\u00d0\u00bc\u00d0\u00bf\u00d1\u0152\u00d1\u017d\u00d1\u201a\u00d0\u00b5\u00d1\u20ac\u00d0\u00b5, \u00e2\u20ac\u201c \"\u00d0\u00ba\u00d0\u00be\u00d0\u00bc\u00d0\u00bf\u00d1\u0152\u00d1\u017d\u00d1\u201a\u00d0\u00b5\u00d1\u20ac\u00d0\u00bd\u00d1\u2039\u00d0\u00b5 \u00d0\u00ba\u00d0\u00b0\u00d0\u00b2\u00d1\u2039\u00d1\u2021\u00d0\u00ba\u00d0\u00b8\") . \u00d0\u2022\u00d1\u0081\u00d0\u00bb\u00d0\u00b8 \u00d0\u00b6\u00d0\u00b5 \u00d1\u201a\u00d0\u00b0\u00d0\u00ba\u00d0\u00be\u00d0\u00b9 \u00d0\u00b2\u00d0\u00be\u00d0\u00b7\u00d0\u00bc\u00d0\u00be\u00d0\u00b6\u00d0\u00bd\u00d0\u00be\u00d1\u0081\u00d1\u201a\u00d0\u00b8 \u00d0\u00bd\u00d0\u00b5\u00d1\u201a, \u00d1\u201a\u00d0\u00be \u00d0\u00b7\u00d0\u00b0\u00d0\u00ba\u00d1\u20ac\u00d1\u2039\u00d0\u00b2\u00d0\u00b0\u00d1\u017d\u00d1\u2030\u00d0\u00b8\u00d0\u00b5 \u00d0\u00ba\u00d0\u00b0\u00d0\u00b2\u00d1\u2039\u00d1\u2021\u00d0\u00ba\u00d0\u00b8 \u00d1\u0081\u00d1\u201a\u00d0\u00b0\u00d0\u00b2\u00d1\u008f\u00d1\u201a\u00d1\u0081\u00d1\u008f \u00d1\u201a\u00d0\u00be\u00d0\u00bb\u00d1\u0152\u00d0\u00ba\u00d0\u00be \u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd \u00d1\u20ac\u00d0\u00b0\u00d0\u00b7. \u00d0\u0161\u00d0\u00b0\u00d0\u00b2\u00d1\u2039\u00d1\u2021\u00d0\u00ba\u00d0\u00b8 \u00d0\u00be\u00d0\u00b4\u00d0\u00bd\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u20ac\u00d0\u00b8\u00d1\u0081\u00d1\u0192\u00d0\u00bd\u00d0\u00ba\u00d0\u00b0 \u00d1\u20ac\u00d1\u008f\u00d0\u00b4\u00d0\u00be\u00d0\u00bc \u00d0\u00bd\u00d0\u00b5 \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d1\u201a\u00d0\u00be\u00d1\u20ac\u00d1\u008f\u00d1\u017d\u00d1\u201a\u00d1\u0081\u00d1\u008f. \u00d0\u009d\u00d0\u00b0\u00d0\u00bf\u00d1\u20ac\u00d0\u00b8\u00d0\u00bc\u00d0\u00b5\u00d1\u20ac:\n\n\u00d0\u0178\u00d1\u20ac\u00d0\u00b5\u00d0\u00b4\u00d0\u00bf\u00d0\u00be\u00d1\u2021\u00d1\u201a\u00d0\u00b8\u00d1\u201a\u00d0\u00b5\u00d0\u00bb\u00d1\u0152\u00d0\u00bd\u00d0\u00be: \u00d1\u20ac\u00d0\u00b0\u00d0\u00b1\u00d0\u00be\u00d1\u201a\u00d0\u00b0 \u00d0\u2019. \u00d0\u02dc. \u00d0\u203a\u00d0\u00b5\u00d0\u00bd\u00d0\u00b8\u00d0\u00bd\u00d0\u00b0 \u00c2\u00ab\u00d0\u017e \u00d0\u00ba\u00d0\u00b0\u00d1\u20ac\u00d0\u00b8\u00d0\u00ba\u00d0\u00b0\u00d1\u201a\u00d1\u0192\u00d1\u20ac\u00d0\u00b5 \u00d0\u00bd\u00d0\u00b0 \u00d0\u00bc\u00d0\u00b0\u00d1\u20ac\u00d0\u00ba\u00d1\u0081\u00d0\u00b8\u00d0\u00b7\u00d0\u00bc \u00d0\u00b8 \u00d0\u00be\u00d0\u00b1 \"\u00d0\u00b8\u00d0\u00bc\u00d0\u00bf\u00d0\u00b5\u00d1\u20ac\u00d0\u00b8\u00d0\u00b0\u00d0\u00bb\u00d0\u00b8\u00d1\u0081\u00d1\u201a\u00d0\u00b8\u00d1\u2021\u00d0\u00b5\u00d1\u0081\u00d0\u00ba\u00d0\u00be\u00d0\u00bc \u00d1\u008d\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00be\u00d0\u00bc\u00d0\u00b8\u00d0\u00b7\u00d0\u00bc\u00d0\u00b5\"\u00c2\u00bb, \u00d0\u2014\u00d0\u0090\u00d0\u017e \u00c2\u00ab\u00d0\u02dc\u00d0\u00b7\u00d0\u00b4\u00d0\u00b0\u00d1\u201a\u00d0\u00b5\u00d0\u00bb\u00d1\u0152\u00d1\u0081\u00d0\u00ba\u00d0\u00b8\u00d0\u00b9 \u00d0\u00b4\u00d0\u00be\u00d0\u00bc \"\u00d0\u0161\u00d0\u00be\u00d0\u00bc\u00d1\u0081\u00d0\u00be\u00d0\u00bc\u00d0\u00be\u00d0\u00bb\u00d1\u0152\u00d1\u0081\u00d0\u00ba\u00d0\u00b0\u00d1\u008f \u00d0\u00bf\u00d1\u20ac\u00d0\u00b0\u00d0\u00b2\u00d0\u00b4\u00d0\u00b0\"\u00c2\u00bb, \u00d0\u017e\u00d0\u017e\u00d0\u017e \u00c2\u00ab\u00d0\u0161\u00d0\u00be\u00d0\u00bc\u00d0\u00bf\u00d0\u00b0\u00d0\u00bd\u00d0\u00b8\u00d1\u008f \"\u00d0\u0153\u00d0\u00b5\u00d1\u201a\u00d0\u00b0\u00d0\u00bb\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b2\u00d0\u00b5\u00d1\u0081\u00d1\u201a\"\u00c2\u00bb.\n\n\u00d0\u201d\u00d0\u00be\u00d0\u00bf\u00d1\u0192\u00d1\u0081\u00d1\u201a\u00d0\u00b8\u00d0\u00bc\u00d0\u00be (\u00d0\u00b5\u00d1\u0081\u00d0\u00bb\u00d0\u00b8 \u00d0\u00bd\u00d0\u00b5\u00d1\u201a \u00d1\u201a\u00d0\u00b5\u00d1\u2026\u00d0\u00bd\u00d0\u00b8\u00d1\u2021\u00d0\u00b5\u00d1\u0081\u00d0\u00ba\u00d0\u00be\u00d0\u00b9 \u00d0\u00b2\u00d0\u00be\u00d0\u00b7\u00d0\u00bc\u00d0\u00be\u00d0\u00b6\u00d0\u00bd\u00d0\u00be\u00d1\u0081\u00d1\u201a\u00d0\u00b8 \u00d0\u00b8\u00d1\u0081\u00d0\u00bf\u00d0\u00be\u00d0\u00bb\u00d1\u0152\u00d0\u00b7\u00d0\u00be\u00d0\u00b2\u00d0\u00b0\u00d1\u201a\u00d1\u0152 \u00d0\u00ba\u00d0\u00b0\u00d0\u00b2\u00d1\u2039\u00d1\u2021\u00d0\u00ba\u00d0\u00b8 \u00d1\u20ac\u00d0\u00b0\u00d0\u00b7\u00d0\u00bd\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u20ac\u00d0\u00b8\u00d1\u0081\u00d1\u0192\u00d0\u00bd\u00d0\u00ba\u00d0\u00b0): \u00d1\u20ac\u00d0\u00b0\u00d0\u00b1\u00d0\u00be\u00d1\u201a\u00d0\u00b0 \u00d0\u2019. \u00d0\u02dc. \u00d0\u203a\u00d0\u00b5\u00d0\u00bd\u00d0\u00b8\u00d0\u00bd\u00d0\u00b0 \u00c2\u00ab\u00d0\u017e \u00d0\u00ba\u00d0\u00b0\u00d1\u20ac\u00d0\u00b8\u00d0\u00ba\u00d0\u00b0\u00d1\u201a\u00d1\u0192\u00d1\u20ac\u00d0\u00b5 \u00d0\u00bd\u00d0\u00b0 \u00d0\u00bc\u00d0\u00b0\u00d1\u20ac\u00d0\u00ba\u00d1\u0081\u00d0\u00b8\u00d0\u00b7\u00d0\u00bc \u00d0\u00b8 \u00d0\u00be\u00d0\u00b1 \u00c2\u00ab\u00d0\u00b8\u00d0\u00bc\u00d0\u00bf\u00d0\u00b5\u00d1\u20ac\u00d0\u00b8\u00d0\u00b0\u00d0\u00bb\u00d0\u00b8\u00d1\u0081\u00d1\u201a\u00d0\u00b8\u00d1\u2021\u00d0\u00b5\u00d1\u0081\u00d0\u00ba\u00d0\u00be\u00d0\u00bc \u00d1\u008d\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00be\u00d0\u00bc\u00d0\u00b8\u00d0\u00b7\u00d0\u00bc\u00d0\u00b5\u00c2\u00bb, \u00d0\u2014\u00d0\u0090\u00d0\u017e \u00c2\u00ab\u00d0\u02dc\u00d0\u00b7\u00d0\u00b4\u00d0\u00b0\u00d1\u201a\u00d0\u00b5\u00d0\u00bb\u00d1\u0152\u00d1\u0081\u00d0\u00ba\u00d0\u00b8\u00d0\u00b9 \u00d0\u00b4\u00d0\u00be\u00d0\u00bc \u00c2\u00ab\u00d0\u0161\u00d0\u00be\u00d0\u00bc\u00d1\u0081\u00d0\u00be\u00d0\u00bc\u00d0\u00be\u00d0\u00bb\u00d1\u0152\u00d1\u0081\u00d0\u00ba\u00d0\u00b0\u00d1\u008f \u00d0\u00bf\u00d1\u20ac\u00d0\u00b0\u00d0\u00b2\u00d0\u00b4\u00d0\u00b0\u00c2\u00bb, \u00d0\u017e\u00d0\u017e\u00d0\u017e \u00c2\u00ab\u00d0\u0161\u00d0\u00be\u00d0\u00bc\u00d0\u00bf\u00d0\u00b0\u00d0\u00bd\u00d0\u00b8\u00d1\u008f \u00c2\u00ab\u00d0\u0153\u00d0\u00b5\u00d1\u201a\u00d0\u00b0\u00d0\u00bb\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b2\u00d0\u00b5\u00d1\u0081\u00d1\u201a\u00c2\u00bb.\n\n\u00d0\u009d\u00d0\u00b5\u00d0\u00bf\u00d1\u20ac\u00d0\u00b0\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d1\u0152\u00d0\u00bd\u00d0\u00be: \u00d1\u20ac\u00d0\u00b0\u00d0\u00b1\u00d0\u00be\u00d1\u201a\u00d0\u00b0 \u00d0\u2019. \u00d0\u02dc. \u00d0\u203a\u00d0\u00b5\u00d0\u00bd\u00d0\u00b8\u00d0\u00bd\u00d0\u00b0 \u00c2\u00ab\u00d0\u017e \u00d0\u00ba\u00d0\u00b0\u00d1\u20ac\u00d0\u00b8\u00d0\u00ba\u00d0\u00b0\u00d1\u201a\u00d1\u0192\u00d1\u20ac\u00d0\u00b5 \u00d0\u00bd\u00d0\u00b0 \u00d0\u00bc\u00d0\u00b0\u00d1\u20ac\u00d0\u00ba\u00d1\u0081\u00d0\u00b8\u00d0\u00b7\u00d0\u00bc \u00d0\u00b8 \u00d0\u00be\u00d0\u00b1 \u00c2\u00ab\u00d0\u00b8\u00d0\u00bc\u00d0\u00bf\u00d0\u00b5\u00d1\u20ac\u00d0\u00b8\u00d0\u00b0\u00d0\u00bb\u00d0\u00b8\u00d1\u0081\u00d1\u201a\u00d0\u00b8\u00d1\u2021\u00d0\u00b5\u00d1\u0081\u00d0\u00ba\u00d0\u00be\u00d0\u00bc \u00d1\u008d\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00be\u00d0\u00bc\u00d0\u00b8\u00d0\u00b7\u00d0\u00bc\u00d0\u00b5\u00c2\u00bb\u00c2\u00bb, \u00d0\u2014\u00d0\u0090\u00d0\u017e \u00c2\u00ab\u00d0\u02dc\u00d0\u00b7\u00d0\u00b4\u00d0\u00b0\u00d1\u201a\u00d0\u00b5\u00d0\u00bb\u00d1\u0152\u00d1\u0081\u00d0\u00ba\u00d0\u00b8\u00d0\u00b9 \u00d0\u00b4\u00d0\u00be\u00d0\u00bc \u00c2\u00ab\u00d0\u0161\u00d0\u00be\u00d0\u00bc\u00d1\u0081\u00d0\u00be\u00d0\u00bc\u00d0\u00be\u00d0\u00bb\u00d1\u0152\u00d1\u0081\u00d0\u00ba\u00d0\u00b0\u00d1\u008f \u00d0\u00bf\u00d1\u20ac\u00d0\u00b0\u00d0\u00b2\u00d0\u00b4\u00d0\u00b0\u00c2\u00bb\u00c2\u00bb, \u00d0\u017e\u00d0\u017e\u00d0\u017e \u00c2\u00ab\u00d0\u0161\u00d0\u00be\u00d0\u00bc\u00d0\u00bf\u00d0\u00b0\u00d0\u00bd\u00d0\u00b8\u00d1\u008f \u00c2\u00ab\u00d0\u0153\u00d0\u00b5\u00d1\u201a\u00d0\u00b0\u00d0\u00bb\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b2\u00d0\u00b5\u00d1\u0081\u00d1\u201a\u00c2\u00bb\u00c2\u00bb.\n\nhttp://www.gramota.ru/spravka/letters/?rub=kav", "dateCreated": "2014-06-19T16:59:07.000Z", "dateModified": "2014-06-19T16:59:07.000Z", "author": "l-luk", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\"([^\"]+(\"[^\"]+\")?)\"?$", "permalinkFragment": "dZ9dL4", "isFavorite": false, "isStarred": false}, {"title": "extract JavaScript function name", "description": "Extracts the name of the outer function. Useful to get the name of a function reference using fn.toString().", "dateCreated": "2014-07-09T21:24:05.000Z", "dateModified": "2014-07-09T21:24:05.000Z", "author": "Jack A.", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\s*function\\s+(\\w+)\\s*\\(", "permalinkFragment": "pJ9pF5", "isFavorite": false, "isStarred": false}, {"title": "Captures entire log line that meet the criteria", "description": "If you need to grab an entire log line based on criteria (error,warning,notice,info,debug), use this Regexp and change the parameters accordingly.", "dateCreated": "2014-07-24T14:49:54.000Z", "dateModified": "2014-07-24T14:49:54.000Z", "author": "Neill Lima ", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(.*\\[(error|warning|notice|info|debug)\\].*)$", "permalinkFragment": "fB2wF5", "isFavorite": false, "isStarred": false}, {"title": "this", "description": "stinks", "dateCreated": "2014-07-25T17:32:20.000Z", "dateModified": "2014-07-25T17:32:20.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "x", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(.*?)\\t(.*?)\\t(.*?)\\s(m|km|AU)$", "permalinkFragment": "kV0qB3", "isFavorite": false, "isStarred": false}, {"title": "Replace Commas Inside Quotes", "description": "Regex to remove commas within quotes. (Common situtaion in .csv files)\n\nEg: \ndata,\"some \"\"embedded\"\" stuff,commas,inside,quotes\",more\n \nReplace String would be something like this:\n\\1&\\2&\\3&\\4&\\5\\&\\6&\\7&\\8&\\9 \n\nwhich would replace the commas inside the quotes with '&'s\nCaveats:\n\n* embedded quotes (\"\") remain in the matches\n* limit of 9 terms within quotes \n\nWork in progress ...", "dateCreated": "2014-07-26T11:37:31.000Z", "dateModified": "2014-07-26T11:37:31.000Z", "author": "Judd", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[\"](\"\"[^\"]*\"\"|[^\",]*)[,]?(\"\"[^\"]*\"\"|[^\",]*)[,]?(\"\"[^\"]*\"\"|[^\",]*)[,]?(\"\"[^\"]*\"\"|[^\",]*)[,]?(\"\"[^\"]*\"\"|[^\",]*)[,]?(\"\"[^\"]*\"\"|[^\",]*)[,]?(\"\"[^\"]*\"\"|[^\",]*)[,]?(\"\"[^\"]*\"\"|[^\",]*)[,]?(\"\"[^\"]*\"\"|[^\",]*)[,]?[\"]", "permalinkFragment": "uG7pD5", "isFavorite": false, "isStarred": false}, {"title": "regular expression - with space", "description": "", "dateCreated": "2014-08-01T09:18:46.000Z", "dateModified": "2014-08-01T09:18:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([^\\s\\|]*)\\|([^\\|]*)\\|([^\\|]*)\\|([^\\|]*)\\|([^\\|]*)\\|([^\\|]*)\\|([^\\|]*)\\|([^\\|]*)\\|([^\\|]*)\\|([^\\|]*)\\|([^\\|]*)\\|([^\\|]*)\\|([^\\|]*)", "permalinkFragment": "sZ1dJ2", "isFavorite": false, "isStarred": false}, {"title": "Trim", "description": "Popular trim Regular Expression.\n\nMatches whitespace characters at the beginning and end of a string.\n\nCheck out the usage examples in the test string to see how you can implement it into your own code.", "dateCreated": "2014-08-12T13:45:21.000Z", "dateModified": "2014-08-12T13:45:21.000Z", "author": "Shawn G.", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[ \\s\\0\\x0B]+|[ \\s\\0\\x0B]+$", "permalinkFragment": "mY9hG8", "isFavorite": false, "isStarred": false}, {"title": "Match Ice Faces Empty RTF", "description": "Will match any empty or containing whitespace only Ice Faces Rich Text Input element.", "dateCreated": "2014-08-13T13:04:43.000Z", "dateModified": "2014-08-13T13:04:43.000Z", "author": "Sam Blumire", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(<p>&#160<\\/p>(\\s?)+)+", "permalinkFragment": "fE7zZ6", "isFavorite": false, "isStarred": false}, {"title": "Recursive Search", "description": "Proof of concept to omit restriction with '[^{}]'\n\nhttp://stackoverflow.com/questions/15584634/about-php-regexp-for-recursive-pattern?answertab=oldest#tab-top\n\nhttp://stackoverflow.com/questions/25408579/regex-to-match-blocks-inside-blocks", "dateCreated": "2014-08-21T15:30:28.000Z", "dateModified": "2014-08-21T15:30:28.000Z", "author": "themroc", "flavor": "pcre", "delimiter": "/", "flags": "xsmg", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\t\t(?=\n\t\t\t({%.if\n\t\t\t\t(?:\n\t\t\t\t   (?>\n\t\t\t\t      (?:\n\t\t\t\t         (?! {%.if | endif.%}) .\n\t\t\t\t      )+\n\t\t\t\t   )*\n\t\t\t\t   | (?1)\n\t\t\t\t)*\n\t\t\tendif.%})\n\t\t)\n\t\t(?1)", "permalinkFragment": "sR6cQ9", "isFavorite": false, "isStarred": false}, {"title": "C# Regex Class acts odd", "description": "Based on my understanding of Regex, the string \u00e2\u20ac\u015310\u00e2\u20ac\u009d matches the Regex \u00e2\u20ac\u0153^([0-9]*)(\\\\*)$\u00e2\u20ac\u009d. To validate it, I tried the regex and the text \u00e2\u20ac\u015310\u00e2\u20ac\u009d on the website and it worked. But when I tried the same with C# code, it failed.Only by adding a \"?\", making the regex \u00e2\u20ac\u0153^([0-9]*)(\\\\*)?$\u00e2\u20ac\u009d makes the string \"10\" validate against the regex. I am confused why it behaves differently in the C# Regex class.", "dateCreated": "2014-09-04T14:26:41.000Z", "dateModified": "2014-09-04T14:26:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([0-9]*)(\\\\*)$", "permalinkFragment": "jV7wQ4", "isFavorite": false, "isStarred": false}, {"title": "t", "description": "", "dateCreated": "2014-09-16T10:35:26.000Z", "dateModified": "2014-09-16T10:35:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\\"[^\\\"]*\\\"", "permalinkFragment": "pI3nP3", "isFavorite": false, "isStarred": false}, {"title": "Double dollar delimited centred LaTeX equation", "description": "Find all instances of a double dollar delimited centred LaTeX equation, for use with e.g. KaTeX", "dateCreated": "2014-09-18T15:21:40.000Z", "dateModified": "2014-09-18T15:21:40.000Z", "author": "drewsberry", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?<![\\$])\\$\\$([^$]+)\\$\\$(?!\\$)", "permalinkFragment": "xP1aK4", "isFavorite": false, "isStarred": false}, {"title": "unity3d.com csharp lint regex", "description": "", "dateCreated": "2014-10-08T18:18:56.000Z", "dateModified": "2014-10-08T18:18:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "igx", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\n(?P<filename>.+\\.cs)\n\\(\n(?P<line>\\d+)\n,\n(?P<col>\\d+)\n\\):\\040\n(?P<level>\\w+)\n\\040\n(?P<error>.+)", "permalinkFragment": "vC1lA1", "isFavorite": false, "isStarred": false}, {"title": "nginx log parser", "description": "separate nginx log into database table-style fields", "dateCreated": "2014-10-15T09:23:18.000Z", "dateModified": "2014-10-15T09:23:18.000Z", "author": "wgzhao", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([^ ]*) - ([^ ]*) \\[(.*)\\] \\\"([^ ]*) ([^ ]*) ([^ ]*)\\\" (-|[0-9]*) (-|[0-9]*) \\\"(.+?|-)\\\" ([^ ]*|-) ([^ ]*|-) ([^ ]*|-) \\\"(.+?|-)\\\" \\\"(.+?|-)\\\" \\\"(.+?|-)\\\"$", "permalinkFragment": "wZ8pA0", "isFavorite": false, "isStarred": false}, {"title": "RFC 5322 email validation", "description": "Unsatisfied with your email validation? Concerned about standards compliance? Worried about that one weird edge case? Want to stress-test your regex engine? This might be the regex for you!", "dateCreated": "2014-10-19T19:06:44.000Z", "dateModified": "2014-10-19T19:06:44.000Z", "author": "Blake Thomas", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(((((((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?([A-Za-z0-9!#-'*+\\/=?^_`{|}~-])+((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?)|(((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?\"((\\s? +)?(([!#-[\\]-~])|(\\\\([ -~]|\\s))))*(\\s? +)?\"))?)?(((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?<(((((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?(([A-Za-z0-9!#-'*+\\/=?^_`{|}~-])+(\\.([A-Za-z0-9!#-'*+\\/=?^_`{|}~-])+)*)((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?)|(((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?\"((\\s? +)?(([!#-[\\]-~])|(\\\\([ -~]|\\s))))*(\\s? +)?\"))@((((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?(([A-Za-z0-9!#-'*+\\/=?^_`{|}~-])+(\\.([A-Za-z0-9!#-'*+\\/=?^_`{|}~-])+)*)((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?)|(((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?\\[((\\s? +)?([!-Z^-~]))*(\\s? +)?\\]((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?)))>((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?))|(((((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?(([A-Za-z0-9!#-'*+\\/=?^_`{|}~-])+(\\.([A-Za-z0-9!#-'*+\\/=?^_`{|}~-])+)*)((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?)|(((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?\"((\\s? +)?(([!#-[\\]-~])|(\\\\([ -~]|\\s))))*(\\s? +)?\"))@((((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?(([A-Za-z0-9!#-'*+\\/=?^_`{|}~-])+(\\.([A-Za-z0-9!#-'*+\\/=?^_`{|}~-])+)*)((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?)|(((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?\\[((\\s? +)?([!-Z^-~]))*(\\s? +)?\\]((((\\s? +)?(\\(((\\s? +)?(([!-'*-[\\]-~]*)|(\\\\([ -~]|\\s))))*(\\s? +)?\\)))(\\s? +)?)|(\\s? +))?))))$", "permalinkFragment": "pG9yU5", "isFavorite": false, "isStarred": false}, {"title": "e164_basic", "description": "e164_basic", "dateCreated": "2014-10-21T16:19:00.000Z", "dateModified": "2014-10-21T16:19:00.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\+(?:[0-9] ?){6,14}[0-9]$", "permalinkFragment": "wB5lB2", "isFavorite": false, "isStarred": false}, {"title": " ", "description": " ", "dateCreated": "2014-10-23T22:33:58.000Z", "dateModified": "2014-10-23T22:33:58.000Z", "author": " ", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "bu|[rn]t|[coy]e|[mtg]a|j|iso|n[hl]|[ae]d|lev|sh|[lnd]i|[po]o|ls", "permalinkFragment": "vL1lY9", "isFavorite": false, "isStarred": false}, {"title": "f", "description": "", "dateCreated": "2014-10-25T12:01:15.000Z", "dateModified": "2014-10-25T12:01:15.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(^\\w+ &.*)", "permalinkFragment": "kI8tI3", "isFavorite": false, "isStarred": false}, {"title": "Get version", "description": "", "dateCreated": "2014-10-27T12:58:48.000Z", "dateModified": "2014-10-27T12:58:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\?version=((\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+))$", "permalinkFragment": "mR8eI1", "isFavorite": false, "isStarred": false}, {"title": "Remove invalid characters and autotrim", "description": "remove the multiline switch", "dateCreated": "2014-10-30T11:25:59.000Z", "dateModified": "2014-10-30T11:25:59.000Z", "author": "iamtheauthor", "flavor": "javascript", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(\\n|\\r|\\t|\\0|^\\s+|\\s+$|[\\b])", "permalinkFragment": "lG4lK2", "isFavorite": false, "isStarred": false}, {"title": "Brazilian phone numbers", "description": "", "dateCreated": "2014-11-03T23:21:15.000Z", "dateModified": "2014-11-03T23:21:15.000Z", "author": "rafaelverger", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?:(?<=^)|(?<=\\D))((00|\\+)?55(\\s|\\.|-)*)?((\\()?0?\\d{2}(?(5)\\)|)(\\s|\\.|-)*)?(9(\\s|\\.|-)*)?\\d{4}(\\s|\\.|-)*\\d{4}(?=\\D|$)", "permalinkFragment": "mK0gH3", "isFavorite": false, "isStarred": false}, {"title": "Date range match", "description": "This is not my creation, it is from a github repor", "dateCreated": "2014-11-06T10:46:04.000Z", "dateModified": "2014-11-06T10:46:04.000Z", "author": "Saji N", "flavor": "pcre", "delimiter": "/", "flags": "is", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?P<start>.*)\\s(-|to)\\s(?P<end>.*)$", "permalinkFragment": "sG4vT7", "isFavorite": false, "isStarred": false}, {"title": "Regular Expression for Date ", "description": "Regular expression for asp:RegularExpressionValidator with format MMddyy.\ni have resolved the issue for leap Year and month ending day as well.\n", "dateCreated": "2014-11-07T06:52:57.000Z", "dateModified": "2014-11-07T06:52:57.000Z", "author": "Priyanka Khadilkar", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?:^(?:(?:(?:(?:(?:0?[13578]|1[02])[- /.]31)|(?:(?:0?[13-9]|1[0-2])[- /.](?:29|30)))[- /.](?:1[6-9]|[2-9]\\d)\\d{2})|(?:0?2[- /.]29[- /.](?:(?:(?:1[6-9]|[2-9]\\d)(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))|(?:(?:0?[1-9])|(?:1[0-2]))[- /.](?:0?[1-9]|1\\d|2[0-8])[- /.](?:(?:1[6-9]|[2-9]\\d)\\d{2}))$)$", "permalinkFragment": "cH8kR1", "isFavorite": false, "isStarred": false}, {"title": "Date validation", "description": "A regular expression to validate a Date in format DD/MM/YYYY", "dateCreated": "2014-11-07T21:30:07.000Z", "dateModified": "2014-11-07T21:30:07.000Z", "author": "Felipe Monta\u00c3\u00b1a", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(0[1-9]|[12][0-9]|3[01])[/]([01][12])[/]([1-9][0-9]{3})$", "permalinkFragment": "vF0fL6", "isFavorite": false, "isStarred": false}, {"title": "match sequential characters", "description": "HI,\n\nI'm looking for RegX to match words with more than two sequential characters", "dateCreated": "2014-11-09T21:06:35.000Z", "dateModified": "2014-11-09T21:06:35.000Z", "author": "JC", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[+-]?((0\\.\\d+)|([1-9]+(\\d?\\.\\d+)?))$", "permalinkFragment": "tN5cJ1", "isFavorite": false, "isStarred": false}, {"title": "incorrect number regex", "description": "", "dateCreated": "2014-11-16T05:11:52.000Z", "dateModified": "2014-11-16T05:11:52.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[0-9]*", "permalinkFragment": "oM0wE3", "isFavorite": false, "isStarred": false}, {"title": "url regex", "description": "", "dateCreated": "2014-11-18T21:59:53.000Z", "dateModified": "2014-11-18T21:59:53.000Z", "author": "catwooman", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(http(s)?)://(www.)([a-zA-Z]){3,}.([a-zA-Z]){2,3}$", "permalinkFragment": "gE3yH7", "isFavorite": false, "isStarred": false}, {"title": "rfc5646 simple", "description": "", "dateCreated": "2014-11-23T21:59:26.000Z", "dateModified": "2014-11-23T21:59:26.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))(-(0-9A-WY-Za-wy-z+))(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$", "permalinkFragment": "aV6qW2", "isFavorite": false, "isStarred": false}, {"title": "Common log format datetime", "description": "Parses the common log format into component elements.  According to wikipedia, common log is strftime format %d/%b/%Y:%H:%M:%S %z", "dateCreated": "2014-11-30T21:17:52.000Z", "dateModified": "2014-11-30T21:17:52.000Z", "author": "Matt Ingenthron <ingenthr@cep.net>", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(\\d{2})\\/(\\S+)\\/(\\d{4}):(\\d{2}):(\\d{2}):(\\d{2})\\s[+\\-](\\d{4})", "permalinkFragment": "bB3aN8", "isFavorite": false, "isStarred": false}, {"title": "match url", "description": "unsplash.com", "dateCreated": "2014-12-03T08:53:22.000Z", "dateModified": "2014-12-03T08:53:22.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^https:\\/\\/[^/\\/.]?unsplash\\.com[\\/grid]+$", "permalinkFragment": "wT3rT9", "isFavorite": false, "isStarred": false}, {"title": "Group variable attributes in a linux path effectively with regex", "description": "Group variable attributes in a linux path effectively with regex. Here the workspace can be changed and the modulename can change. Case scenario found trying to identyfy the modulename and workspace directory in Jenkins build.", "dateCreated": "2014-12-03T14:09:02.000Z", "dateModified": "2014-12-03T14:09:02.000Z", "author": "Supratim Samanta", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": ".*(workspace?[0-9]?[0-9]).*\\/(.*)\\/src\\/.*", "permalinkFragment": "oL5rC4", "isFavorite": false, "isStarred": false}, {"title": "LGC regex", "description": "FIX", "dateCreated": "2014-12-05T22:56:29.000Z", "dateModified": "2014-12-05T22:56:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[^Cc]\\bFIX\\ *(\\(.+\\))?\\ *=", "permalinkFragment": "gL5uD5", "isFavorite": false, "isStarred": false}, {"title": "trans with var", "description": "", "dateCreated": "2014-12-15T12:57:51.000Z", "dateModified": "2014-12-15T12:57:51.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([^{]*)(\\{\\{ *\\w+ *\\}\\}[^{]*)*$", "permalinkFragment": "aB4zH8", "isFavorite": false, "isStarred": false}, {"title": "Extraire sku URL", "description": "", "dateCreated": "2014-12-19T17:10:28.000Z", "dateModified": "2014-12-19T17:10:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "-(\\w*).html", "permalinkFragment": "dH1mY5", "isFavorite": false, "isStarred": false}, {"title": "Phone Number Validation", "description": "Only Numbers Allowed, Optional (+) for international numbers\nMin: 10\nMax: 14\nOptional: +\n", "dateCreated": "2014-12-24T06:07:15.000Z", "dateModified": "2014-12-24T06:07:15.000Z", "author": "Menon Kalipurayath (MenonOn.Net)", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(\\+{0,1})([0-9]{10,14})$", "permalinkFragment": "hM3pF1", "isFavorite": false, "isStarred": false}, {"title": "domain from full url", "description": "", "dateCreated": "2015-01-05T09:53:18.000Z", "dateModified": "2015-01-05T09:53:18.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "://((?:[\\w-]+\\.)+(?:[\\w-]+))(?::\\d+)?(?:/|$)", "permalinkFragment": "tM7oP9", "isFavorite": false, "isStarred": false}, {"title": "quantity matcher", "description": "", "dateCreated": "2015-01-21T06:58:58.000Z", "dateModified": "2015-01-21T06:58:58.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^((((\\d{1,3},)+(\\d{3},)*\\d{3})|(\\d{1,3}))\\.\\d{2})$", "permalinkFragment": "vJ6tK1", "isFavorite": false, "isStarred": false}, {"title": "Currency amount without currency symbol", "description": "Matching numbers related to financial amounts. Does not consider the type of currency.\n\nWill not match:\n---------------\n34\n1.005\n33,00\n\nWill match:\n-----------\n00.40\n1.40$\n-6,663,330.00", "dateCreated": "2015-01-21T16:10:33.000Z", "dateModified": "2015-01-21T16:10:33.000Z", "author": "elgehelge", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(-?\\d{1,3}(,?\\d{3})*(\\.\\d{2}?))(\\D|$)", "permalinkFragment": "zT7tP3", "isFavorite": false, "isStarred": false}, {"title": "Extract elevation from GPX", "description": "Matches everything except content between <ele> and </ele>", "dateCreated": "2015-01-22T22:08:42.000Z", "dateModified": "2015-01-22T22:08:42.000Z", "author": "ViteXikora", "flavor": "pcre", "delimiter": "/", "flags": "gs", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(<\\/ele>|^).*?(<ele>|$)", "permalinkFragment": "sH7hC3", "isFavorite": false, "isStarred": false}, {"title": "Match mydomain*.mydomain.com", "description": "", "dateCreated": "2015-01-25T04:43:52.000Z", "dateModified": "2015-01-25T04:43:52.000Z", "author": "Trappist", "flavor": "pcre", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^mydomain(.*)\\.mydomain\\.com$", "permalinkFragment": "jW1tI9", "isFavorite": false, "isStarred": false}, {"title": "Stackexchange: Create date variable from time", "description": "", "dateCreated": "2015-01-27T14:39:53.000Z", "dateModified": "2015-01-27T14:39:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\d{2}:\\d{2}:\\d{2} \\d*", "permalinkFragment": "bO3wD5", "isFavorite": false, "isStarred": false}, {"title": "Email validation", "description": "because everything else is too strict", "dateCreated": "2015-01-27T15:35:47.000Z", "dateModified": "2015-01-27T15:35:47.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(.+)@(.+)\\.(.+)", "permalinkFragment": "aW3dJ1", "isFavorite": false, "isStarred": false}, {"title": "Get Itunes ID", "description": "Get itunes id from url", "dateCreated": "2015-01-28T10:42:57.000Z", "dateModified": "2015-01-28T10:42:57.000Z", "author": "sendypw", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "id(\\d+)", "permalinkFragment": "uW2pU6", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "test", "dateCreated": "2015-01-29T16:10:53.000Z", "dateModified": "2015-01-29T16:10:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": ":([a-zA-Z0-9]+)", "permalinkFragment": "iI1aI0", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "", "dateCreated": "2015-01-29T16:19:17.000Z", "dateModified": "2015-01-29T16:19:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": ":([a-zA-Z0-9]+)", "permalinkFragment": "mM1rX1", "isFavorite": false, "isStarred": false}, {"title": "Numer telefonu", "description": "", "dateCreated": "2015-02-03T13:50:12.000Z", "dateModified": "2015-02-03T13:50:12.000Z", "author": "p.borecki", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[0-8]{8,12}$", "permalinkFragment": "bO9dP4", "isFavorite": false, "isStarred": false}, {"title": "hashtag and user tag regex", "description": "This regular expression can be used to find tags and hashtags in a string. It assumes that a username can contain both underscores and points (.) and that hashtags can only contain letters", "dateCreated": "2015-02-06T14:34:16.000Z", "dateModified": "2015-02-06T14:34:16.000Z", "author": "Luca Simonetti", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(@[\\w\\.]*)|(#\\w[^#\\W]+)", "permalinkFragment": "nP6kH2", "isFavorite": false, "isStarred": false}, {"title": "SIP Address Validator", "description": "Validates SIP(Session Initiation Protocol) Addresses", "dateCreated": "2015-02-11T12:10:18.000Z", "dateModified": "2015-02-11T12:10:18.000Z", "author": "Tarun Telang", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^sip\\:\\d+\\@([a-zA-z0-9\\-]+\\.){1,2}(([a-zA-z0-9\\-])+)$", "permalinkFragment": "cN5zW5", "isFavorite": false, "isStarred": false}, {"title": "Simple Date regex", "description": "With format dd/MM/yyyy ", "dateCreated": "2015-02-17T12:40:40.000Z", "dateModified": "2015-02-17T12:40:40.000Z", "author": "Magador", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(0[1-9]|[12]\\d|3[01])\\/(0[1-9]|1[012])\\/(\\d{4})", "permalinkFragment": "oO1lA1", "isFavorite": false, "isStarred": false}, {"title": "PCI Device", "description": "", "dateCreated": "2015-03-09T17:26:44.000Z", "dateModified": "2015-03-09T17:26:44.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "D([0-2]?[0-9a-zA-Z]?)$", "permalinkFragment": "fT9nS7", "isFavorite": false, "isStarred": false}, {"title": "NSE0(.*)\\nNSE1\\s+(.*)\\nNSE2\\s(.*)\\nNSE3\\s+(.*)kbps.*\\nNSE4\\s+(.*)\\nNSE", "description": "", "dateCreated": "2015-03-15T04:43:18.000Z", "dateModified": "2015-03-15T04:43:18.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "NSA1(.*)", "permalinkFragment": "uV2bD0", "isFavorite": false, "isStarred": false}, {"title": "Validate URLs", "description": "Someone on IRC posted the following site: https://mathiasbynens.be/demo/url-regex which challgenged me to write a decent regex to match valid URLs in that list. This regex works in both pcre and javascript (you'll have to replace the pcre-specific syntax to make it work in JS).\n\nDon't actually use this though, validate your URLs in a sane manner instead.", "dateCreated": "2015-03-27T22:03:00.000Z", "dateModified": "2015-03-27T22:03:00.000Z", "author": "Firas Dib", "flavor": "pcre", "delimiter": "`", "flags": "gmx", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?(DEFINE)\n  (?<PROTOCOL>[^:/#?\\s]+://)\n  (?<LOGIN>[^:@/#?\\s]+(?::[^@/#?\\s]+)?@)\n  (?<TEXT_DOMAIN>[^./#?\\s-:]+(?:-[^./#?\\s-:]+)?\\.)\n  (?<IP_DOMAIN>\n    (?&NOT_RESERVED_IP)\n    (?:\n      (?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.\n    ){3}\n    (?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\n  )\n  (?<NOT_RESERVED_IP>\n    (?!(?:1?0|224)(?:\\.\\d{1,3}){3}|\n       (?:192\\.168|172\\.16)(?:\\.\\d{1,3}){2}\n    )\n  )\n  (?<TLD>[^/#?\\s.\\d:-]+)\n  (?<PORT>:\\d{1,4})\n  (?<PATH>/(?:[^/\\s&#?]*/?)+)\n  (?<QUERY>\n    \\?\n    (?:\n     [^\\s=]+(?:=[^&\\s]*)?\n     (?:&[^\\s=]+(?:=[^&\\s]*)?)*\n    )?\n  )\n  (?<HASH>\\#.*)\n)\n\n^\n  (?&PROTOCOL)\n  (?&LOGIN)?\n  (?:(?&TEXT_DOMAIN)+(?&TLD)|(?&IP_DOMAIN))\n  (?&PORT)?\n  (?&PATH)?\n  (?&QUERY)?\n  (?&HASH)?\n$", "permalinkFragment": "nG7kA7", "isFavorite": false, "isStarred": false}, {"title": "ISO-8601 date parse", "description": "Works with 2015-04-03T13:56:24.0+00:00 (official) format, and 2015-04-03T13:56:24+0000 (PHP) format, too", "dateCreated": "2015-04-03T11:57:42.000Z", "dateModified": "2015-04-03T11:57:42.000Z", "author": "Norbi", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(\\d{4}|\\+\\d{6})(?:-(\\d{2})(?:-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.{0,1})(\\d{0,})(Z|([\\-+])(\\d{2})(?::{0,1})(\\d{2}))?)?)?)?", "permalinkFragment": "zJ7rI1", "isFavorite": false, "isStarred": false}, {"title": "someone knows he answer?", "description": "are both strings matching, I wnat only the second one to match", "dateCreated": "2015-04-07T22:10:23.000Z", "dateModified": "2015-04-07T22:10:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[^{].*=([^=]*)=.*[^}]", "permalinkFragment": "fW3lF0", "isFavorite": false, "isStarred": false}, {"title": "Get extension of an file", "description": "Get extension of an file.", "dateCreated": "2015-04-08T20:38:30.000Z", "dateModified": "2015-04-08T20:38:30.000Z", "author": "Taffarel Xavier", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": ".*\\.(\\w{3,})$", "permalinkFragment": "eU4dQ9", "isFavorite": false, "isStarred": false}, {"title": "regex for phone numbers in Israel", "description": "regex for phone numbers in Israel", "dateCreated": "2015-04-10T02:45:50.000Z", "dateModified": "2015-04-10T02:45:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\b\\d{3}[-]?\\d{3}[-]?\\d{4}|\\d{2}[-]?\\d{3}[-]?\\d{4}|\\d{1}[-]?\\d{3}[-]?\\d{6}|\\d{1}[-]?\\d{3}[-]?\\d{2}[-]?\\d{2}[-]?\\d{2}|\\*{1}?\\d{2,5}\\b", "permalinkFragment": "oD5lQ5", "isFavorite": false, "isStarred": false}, {"title": "KZ phone regexp", "description": "Regexp for kz website \n\nmask \"+7(999) 999-99-99\"", "dateCreated": "2015-04-10T11:26:06.000Z", "dateModified": "2015-04-10T11:26:06.000Z", "author": "Iden", "flavor": "pcre", "delimiter": "/", "flags": "gs", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\+7\\(\\d{3}\\) \\d{3}-\\d{2}-\\d{2}", "permalinkFragment": "nQ3uE3", "isFavorite": false, "isStarred": false}, {"title": "match the first sentence, ignoring enumerations", "description": "", "dateCreated": "2015-04-14T13:21:11.000Z", "dateModified": "2015-04-14T13:21:11.000Z", "author": "Henrik Heimbuerger", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^.*?([^\\d])\\.", "permalinkFragment": "sO7eE2", "isFavorite": false, "isStarred": false}, {"title": "Object regex", "description": "", "dateCreated": "2015-04-15T09:33:53.000Z", "dateModified": "2015-04-15T09:33:53.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(#Macro(.|[\\r\\n])+?#EndMacro)", "permalinkFragment": "aK8fD6", "isFavorite": false, "isStarred": false}, {"title": "Sentence Matcher", "description": "Matches sentences, but skips over abreviations", "dateCreated": "2015-04-16T11:54:14.000Z", "dateModified": "2015-04-16T11:54:14.000Z", "author": "Jonathan Mee", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "((?:[A-Z]\\.|[^\\.!?])+)[\\.!?]", "permalinkFragment": "kB7sS1", "isFavorite": false, "isStarred": false}, {"title": "JS Regex Lazy quantifier", "description": "JS Regex Lazy quantifier", "dateCreated": "2015-04-16T13:14:47.000Z", "dateModified": "2015-04-16T13:14:47.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "Bon(.+?)r", "permalinkFragment": "fD7oS4", "isFavorite": false, "isStarred": false}, {"title": "LOL", "description": "", "dateCreated": "2015-04-16T16:23:58.000Z", "dateModified": "2015-04-16T16:23:58.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(\\w*)\\s-\\s(\\w*)\\s-\\s(.*)", "permalinkFragment": "oB6iG6", "isFavorite": false, "isStarred": false}, {"title": "\u83b7\u53d6discuz\u5f15\u7528\u56de\u590d\u7528\u6237\u540d", "description": "", "dateCreated": "2015-04-23T02:11:16.000Z", "dateModified": "2015-04-23T02:11:16.000Z", "author": "Paul Wang", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "([\\S\\s]+) \u53d1\u8868\u4e8e \\d+\\-\\d+-\\d+", "permalinkFragment": "bU6qZ8", "isFavorite": false, "isStarred": false}, {"title": "Email", "description": "Supports new top level domains, such as .plumbers .blackfriday", "dateCreated": "2015-04-24T03:13:27.000Z", "dateModified": "2015-04-24T03:13:27.000Z", "author": "Glutnix", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([a-z0-9_.\\-+]+)@([\\da-z.\\-]+)\\.([a-z\\.]{2,})$", "permalinkFragment": "aG2xL6", "isFavorite": false, "isStarred": false}, {"title": "very basic email regex", "description": "", "dateCreated": "2015-04-29T16:07:00.000Z", "dateModified": "2015-04-29T16:07:00.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[A-Za-z0-9._-]{2,}[@][A-Za-z0-9._-]{2,}[.][A-Za-z0-9._-]{2,}", "permalinkFragment": "iA6hB3", "isFavorite": false, "isStarred": false}, {"title": "Get path from URL", "description": "extract the path from a URL\nreturns one group (if matching) with the path info\ne.g.\nhttp://somedomain.com/some-page/\nhttp://www.domain.com:8080/some-page/\nhttps://www.google.com:8080/some-page/\nall return\n/some-page/\n\n", "dateCreated": "2015-05-05T11:47:07.000Z", "dateModified": "2015-05-05T11:47:07.000Z", "author": "luke_aus", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^https?:\\/\\/[A-Za-z0-9:.]*([\\/]{1}.*\\/?)$", "permalinkFragment": "gM2wO0", "isFavorite": false, "isStarred": false}, {"title": "MySQLcase", "description": "make sure mysql tables have the correct form", "dateCreated": "2015-05-14T19:50:57.000Z", "dateModified": "2015-05-14T19:50:57.000Z", "author": "d", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[a-z0-9]*.(frm|MYI|MYD)$", "permalinkFragment": "uK7kE6", "isFavorite": false, "isStarred": false}, {"title": "How to get various values within a pipe delimited string", "description": "We have a pipe delimited text file and each new record is separated by a CRLF. Each record has a fixed number of pipes, but not every column or field is valued, so there may be 2 or more pipes together. Is there a way to write a regex to parse out the third or fifth value? Many thanks in advance.", "dateCreated": "2015-05-21T15:08:19.000Z", "dateModified": "2015-05-21T15:08:19.000Z", "author": "Jon", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?<!\\\\)\\|", "permalinkFragment": "pA3aV7", "isFavorite": false, "isStarred": false}, {"title": "Chords", "description": "Expression to match a large amount of possible musical chords. From what I understand from musicians, the number of chords is basically infinite, but you will still find a certain scope being used freuently.", "dateCreated": "2015-05-21T15:58:25.000Z", "dateModified": "2015-05-21T15:58:25.000Z", "author": "A=B", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\b(?:G,C,D|A,B,C|E,C,D)|(?:[ABCDEFG](?:#|b)?)(?:\\/[ABCDEFG]b)?(?:(?:(?:maj|min|sus|add|aug|dim)(?:\\d{0,2}(?:#\\d{1,2}|sus\\d)?)?)|(?:m\\d{0,2}(?:(?:maj|add|#)\\d{0,2})?)|(?:-?\\d{0,2}(?:\\([^)]*\\)|#\\d{1,2})?))?", "permalinkFragment": "gC3iP4", "isFavorite": false, "isStarred": false}, {"title": "phanindra.vaga.ranama", "description": "sdf", "dateCreated": "2015-05-25T13:29:33.000Z", "dateModified": "2015-05-25T13:29:33.000Z", "author": "asdf", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\d+(?=\\.(?:[^\\d]|$))", "permalinkFragment": "nR3vI3", "isFavorite": false, "isStarred": false}, {"title": "Repeating Group", "description": "There are 2 segments within this data that start with REF* and end with a tilde (~). I can capture one of them but not both. I've read and cant seem to figure this one out. I DO need to preface with the NM1*03 piece.", "dateCreated": "2015-05-26T21:05:03.000Z", "dateModified": "2015-05-26T21:05:03.000Z", "author": "Chris.", "flavor": "pcre", "delimiter": "/", "flags": "gms", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?=NM1\\*03\\*1\\*).*?~((REF\\*(?<refDepCode>\\w{2,3})\\*(?<refDepVal>.*?)~)*)", "permalinkFragment": "kP5tD9", "isFavorite": false, "isStarred": false}, {"title": "Parsing the response of an oauth provider for token and session", "description": "", "dateCreated": "2015-05-27T11:16:42.000Z", "dateModified": "2015-05-27T11:16:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "oauth_token=(?P<oauth_token>.*?)&portlet_session=(?P<portlet_session>.*?) ", "permalinkFragment": "bQ9hM6", "isFavorite": false, "isStarred": false}, {"title": "dropping first digit (2) andy advice?", "description": "\\_\\d(.+)\nfor _2015041122", "dateCreated": "2015-05-28T16:43:09.000Z", "dateModified": "2015-05-28T16:43:09.000Z", "author": "jbt", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\_\\d(.+)", "permalinkFragment": "pN4nG9", "isFavorite": false, "isStarred": false}, {"title": "list of comma separated dates in the form dd/mm/yyy", "description": "matches a list of comma separated dates in the form dd/mm/yyy.\nBetween two dates must be only a comma. no other character are permitted:\nmatches: 12/03/2011,23/19/1967\nDoesn't match: 23/02/2010,  11/11/2011", "dateCreated": "2015-05-31T13:13:55.000Z", "dateModified": "2015-05-31T13:13:55.000Z", "author": "reario", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(\\s{0,})(\\d{2}\\/\\d{2}\\/\\d{4})(,\\d{2}\\/\\d{2}\\/\\d{4}){1,}(\\s){0,}$", "permalinkFragment": "uL5bX6", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "test", "dateCreated": "2015-06-01T17:25:20.000Z", "dateModified": "2015-06-01T17:25:20.000Z", "author": "test", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "<center><script type=\"text\\/javascript\">", "permalinkFragment": "tY7oW7", "isFavorite": false, "isStarred": false}, {"title": "url", "description": "", "dateCreated": "2015-06-04T13:54:58.000Z", "dateModified": "2015-06-04T13:54:58.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\bhttps?:\\/\\/[a-zA-Z0-9()^=+*@&%#|~?!;:,.-_/]*[-A-Za-z0-9+&@#/%=~_()|](?!(\\<\\/a\\>|\"|'))", "permalinkFragment": "zC7qN8", "isFavorite": false, "isStarred": false}, {"title": "Get value from string", "description": "Used to get a value from a class e.g.:\n[...] class=\"font-12\"[...]\nThis regEx will receive \"12\" given the content of the class", "dateCreated": "2015-06-04T18:35:39.000Z", "dateModified": "2015-06-04T18:35:39.000Z", "author": "Gabriel R. Sezefredo", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": ".*[a-z\\-0-9]+\\-([0-9]+).*", "permalinkFragment": "xF1gE5", "isFavorite": false, "isStarred": false}, {"title": "German ZIP Validation", "description": "Validates German ZIP codes", "dateCreated": "2015-06-09T15:45:46.000Z", "dateModified": "2015-06-09T15:45:46.000Z", "author": "wehmoen", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([0]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{3}$", "permalinkFragment": "jR3hA0", "isFavorite": false, "isStarred": false}, {"title": "Timecode", "description": "Regex to match standard timecode format.", "dateCreated": "2015-06-10T01:19:37.000Z", "dateModified": "2015-06-10T01:19:37.000Z", "author": "Travis", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(([0-9]){2}:){3}([0-9]){2}", "permalinkFragment": "vD4lY9", "isFavorite": false, "isStarred": false}, {"title": "Digit", "description": "", "dateCreated": "2015-06-11T18:23:33.000Z", "dateModified": "2015-06-11T18:23:33.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\d", "permalinkFragment": "qH2qJ8", "isFavorite": false, "isStarred": false}, {"title": "End of line - SJava", "description": "", "dateCreated": "2015-06-14T19:19:38.000Z", "dateModified": "2015-06-14T19:19:38.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": ";$", "permalinkFragment": "uL0rP1", "isFavorite": false, "isStarred": false}, {"title": "Test BigDecimal formatter", "description": "", "dateCreated": "2015-06-16T14:48:28.000Z", "dateModified": "2015-06-16T14:48:28.000Z", "author": "Wally", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[^0-9.]", "permalinkFragment": "rN2mS9", "isFavorite": false, "isStarred": false}, {"title": "CSV parsing", "description": "matches the exact fields of CSV files supports:\nqouted fields\nquoted fields containing commas, doubble quoutes, and newlines\nempty fields\nempty records\narbitrary white space in, and outside quoted fields ", "dateCreated": "2015-06-17T16:30:18.000Z", "dateModified": "2015-06-17T16:30:18.000Z", "author": "Austin", "flavor": "pcre", "delimiter": "/", "flags": "gms", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\"(?:[^\"]|\"\")*\"|[^,\\n]+|(?=,)(?<=,)|^|(?<=,)$", "permalinkFragment": "oU3yV6", "isFavorite": false, "isStarred": false}, {"title": "Apache Access Log pattern", "description": "Apache Web server log file format following the standard", "dateCreated": "2015-06-19T16:18:31.000Z", "dateModified": "2015-06-19T16:18:31.000Z", "author": "Basil Tungekar", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([^\\s]+) ([^\\s]+) ([^\\s]+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) /.*() ([^\\\\\"]+)\" (\\d{3}) (\\S+)", "permalinkFragment": "cI9pU8", "isFavorite": false, "isStarred": false}, {"title": "Error Regex", "description": "", "dateCreated": "2015-06-21T02:23:22.000Z", "dateModified": "2015-06-21T02:23:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "((?!while|if|for\\b)\\b\\w+)\\s*\\((.*)\\)", "permalinkFragment": "cG4cY5", "isFavorite": false, "isStarred": false}, {"title": "Address email", "description": "", "dateCreated": "2015-06-22T08:51:56.000Z", "dateModified": "2015-06-22T08:51:56.000Z", "author": "JS", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[a-zA-Z0-9]+(.?[a-zA-Z0-9_-])*@[a-zA-Z0-9_-]+(.[a-zA-Z0-9_-])+$", "permalinkFragment": "hB5sO6", "isFavorite": false, "isStarred": false}, {"title": "a-zA-Z + 0-9 + [!$%&?]", "description": "", "dateCreated": "2015-06-23T22:43:16.000Z", "dateModified": "2015-06-23T22:43:16.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "a-zA-Z + 0-9 + [!$%&?]", "permalinkFragment": "oQ0kB4", "isFavorite": false, "isStarred": false}, {"title": "Name Validation", "description": "Start with capital letter. Allowed special characters '(Apostrophe) -(hyphen) .(dot) (space) and can not end with -(Hyphen)", "dateCreated": "2015-06-24T14:41:59.000Z", "dateModified": "2015-06-24T14:41:59.000Z", "author": "Venu Nimmagadda", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[A-Z][a-zA-Z '.-]*[A-Za-z][^-]$", "permalinkFragment": "gK4eN5", "isFavorite": false, "isStarred": false}, {"title": "C-Syle If Statement to Excel", "description": "", "dateCreated": "2015-06-25T21:12:58.000Z", "dateModified": "2015-06-25T21:12:58.000Z", "author": "nomloc", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "if\\s+\\((.+)\\)\\s+{\\s+(.+)\\s+}\\s+else\\s+{\\s+(.+)\\s+}", "permalinkFragment": "dF7bN4", "isFavorite": false, "isStarred": false}, {"title": "dutch zipcode with named matching", "description": "", "dateCreated": "2015-07-02T09:05:22.000Z", "dateModified": "2015-07-02T09:05:22.000Z", "author": "Eelke van den Bos", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?#digits)(?<zipcode_digits>\\d{4})[\\s]?(?#chars)(?<zipcode_chars>\\w{2})", "permalinkFragment": "lS2xI9", "isFavorite": false, "isStarred": false}, {"title": "Italian Fiscal Code [Codice fiscale]", "description": "Codice fiscale italiano", "dateCreated": "2015-07-03T13:37:36.000Z", "dateModified": "2015-07-03T13:37:36.000Z", "author": "Italo", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[A-Za-z]{6}[0-9]{2}[A-Za-z]{1}[0-9]{2}[A-Za-z]{1}[0-9]{3}[A-Za-z]{1}$", "permalinkFragment": "bE9iG6", "isFavorite": false, "isStarred": false}, {"title": "ipv4 IP addressses, capturing private ranges", "description": "Capture 0.0.0.0-255.255.255.255 IP address octets. Capture private ranges, such as '169.254.*' and '10.*'", "dateCreated": "2015-07-06T15:57:52.000Z", "dateModified": "2015-07-06T15:57:52.000Z", "author": "OnlineCop", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "# Match ipv4 IP addresses\n# Specifically capture private IPs before matching the more global\n# 0.0.0.0 - 255.255.255.255 octet ranges.\n\n^(?P<private_10_ip>\n  10\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\n)$\n\n|\n\n^(?P<private_169_ip>\n  169\\.\n  254\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\n)$\n\n|\n\n^(?P<private_172_ip>\n  172\\.\n  (?:1[6-9]|2[0-9]|3[0-1])\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\n)$\n\n|\n\n^(?P<private_192_ip>\n  192\\.\n  168\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\n)$\n\n|\n\n^(?P<all_ip>\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\.\n  (?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\n)$", "permalinkFragment": "tP2dN1", "isFavorite": false, "isStarred": false}, {"title": "decimal number validation", "description": "accepts 1; 1.1; 112315.23135", "dateCreated": "2015-07-06T17:38:05.000Z", "dateModified": "2015-07-06T17:38:05.000Z", "author": "MS", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[0-9]+\\.?[0-9]*$", "permalinkFragment": "nK2oA2", "isFavorite": false, "isStarred": false}, {"title": "username", "description": "Letras, \u00d1, acentos, n\u00fameros, gui\u00f3n y barra baja", "dateCreated": "2015-07-10T11:58:03.000Z", "dateModified": "2015-07-10T11:58:03.000Z", "author": "diegosanz", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[a-z\u00f1\u00d1\\-\\_0-9\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da]{3,20}", "permalinkFragment": "iY5pY5", "isFavorite": false, "isStarred": false}, {"title": "Date format", "description": "date should be in format YYYYMMDDHHMMSS", "dateCreated": "2015-07-10T13:48:26.000Z", "dateModified": "2015-07-10T13:48:26.000Z", "author": "Prashant Kumar Dubey", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[0-9]{4}(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])((([0-1][0-9]|2[0-3])([0-5][0-9])([0-5][0-9]))|240000)", "permalinkFragment": "iJ3vK9", "isFavorite": false, "isStarred": false}, {"title": "file extension", "description": "get the file extension of a given filename", "dateCreated": "2015-07-13T04:15:27.000Z", "dateModified": "2015-07-13T04:15:27.000Z", "author": "Simon Taylor", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\.[^.]+$", "permalinkFragment": "rF6jQ9", "isFavorite": false, "isStarred": false}, {"title": "Email id", "description": "", "dateCreated": "2015-07-15T17:36:46.000Z", "dateModified": "2015-07-15T17:36:46.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[a-z0-9]{1,5}@[a-z0-9]{1,5}.[a-z]{1,3}$", "permalinkFragment": "wB3bE2", "isFavorite": false, "isStarred": false}, {"title": "Slug", "description": "Matches alphanumeric slugs without repeating dashes", "dateCreated": "2015-07-15T19:01:51.000Z", "dateModified": "2015-07-15T19:01:51.000Z", "author": "\u00d3scar Enr\u00edquez", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?!-)((?:[a-z0-9]+-?)+)(?<!-)$", "permalinkFragment": "tQ0bN5", "isFavorite": false, "isStarred": false}, {"title": "Console.log line deletion, multi line.", "description": "", "dateCreated": "2015-07-17T18:30:35.000Z", "dateModified": "2015-07-17T18:30:35.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[ \\t]*console\\.log\\((.|\\n)*?\\);\\n*", "permalinkFragment": "aB6xE3", "isFavorite": false, "isStarred": false}, {"title": "Get email info (2)", "description": "Get Gmail tag, user and domain of an email address.\n\n-- Fixed the bug that the label be obligatory", "dateCreated": "2015-07-21T20:03:51.000Z", "dateModified": "2015-07-21T20:03:51.000Z", "author": "Mat\u00edas Pizarro Gonz\u00e1lez", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?<User>[_a-z0-9-]+(\\.[_a-z0-9-]+(?<GmailTag>\\+[_-a-z0-9]+){0,1})*)@(?<Host>[a-z0-9-]+(\\.[a-z0-9-]+)*\\.[a-z]{2,4})$", "permalinkFragment": "bG2oJ0", "isFavorite": false, "isStarred": false}, {"title": "my apache2 access.log regex", "description": "google.com:80 212.111.203.171 - - [02/Mar/2015:10:27:04 +0000] \"GET /css/style.css HTTP/1.1\" 304 138 \"http://google.com\" \"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36\"", "dateCreated": "2015-07-22T10:48:46.000Z", "dateModified": "2015-07-22T10:48:46.000Z", "author": "marf", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?<src_host>\\w+\\.\\w+:\\d{2})\\s(?<src_ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\D{1,6}(?<date_time>[^ ]+)\\s(?<GMT_offset>[^ ]+)\\]\\s\"(?<action>(GET|POST|HEAD|TRACE|PUT|DELETE|CONNECT))\\s(?<hash_url>[^ ]+)\\s(?<protocol>[^\\\"]+)\\\"\\s(?<code>\\d{1,3})\\s(?<size>[^ ]+)\\s\\\"(?<referrer>[^ ]+)\\\"\\s\\\"(?<user_agent>[^ ]+.+)\\\"", "permalinkFragment": "xV1nS4", "isFavorite": false, "isStarred": false}, {"title": "Year regexp", "description": "regexp for year filtering", "dateCreated": "2015-07-24T13:06:37.000Z", "dateModified": "2015-07-24T13:06:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(19|20)\\d\\d", "permalinkFragment": "yD3aL1", "isFavorite": false, "isStarred": false}, {"title": "ipv4 and ipv6", "description": "", "dateCreated": "2015-07-28T09:44:59.000Z", "dateModified": "2015-07-28T09:44:59.000Z", "author": "shri", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,1}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,2}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,3}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:[0-9a-fA-F]{1,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,4}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,5}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,6}(?:(?:[0-9a-fA-F]{1,4})))?::))))$", "permalinkFragment": "kL5sY1", "isFavorite": false, "isStarred": false}, {"title": "masked phone input validator", "description": "masked phone input validator", "dateCreated": "2015-07-28T12:22:44.000Z", "dateModified": "2015-07-28T12:22:44.000Z", "author": "fermanakgun", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\([\\d_]{3}\\)[\\d_]{3}-[\\d_]{2}-[\\d_]{2}$", "permalinkFragment": "sZ0jH1", "isFavorite": false, "isStarred": false}, {"title": "Absolute Date format", "description": "", "dateCreated": "2015-07-29T18:22:52.000Z", "dateModified": "2015-07-29T18:22:52.000Z", "author": "Jesse Benton", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(20[0-9]{2}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2})((-|\\+)[0-9]{2}:[0-9]{2}|)\\[(\\w+\\/*\\w*)]", "permalinkFragment": "bV0cS2", "isFavorite": false, "isStarred": false}, {"title": "Match_Between_Nth_And_Nth+1_Occurence_Of_Character_Pattern", "description": "This regular expression is designed to work with character-delimited strings, and provides a means to specify the index of delimiter occurrence at which content is extracted.", "dateCreated": "2015-07-30T12:31:28.000Z", "dateModified": "2015-07-30T12:31:28.000Z", "author": "Connor Goddard", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?:(?:.*?\\|\\s?){3})(.+?)(?:(?=\\s?$)|(?=\\s?\\|))", "permalinkFragment": "pL1kP2", "isFavorite": false, "isStarred": false}, {"title": "regex to get N words from a line", "description": "usefull if you want to return (N) words instead of (N) chars", "dateCreated": "2015-08-04T22:23:07.000Z", "dateModified": "2015-08-04T22:23:07.000Z", "author": "Pavel Dominguez", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^((?:\\w+\\s?){1,12}).*", "permalinkFragment": "kC1sN0", "isFavorite": false, "isStarred": false}, {"title": "Match a string that is equal to a string before a '='", "description": "", "dateCreated": "2015-08-05T16:24:29.000Z", "dateModified": "2015-08-05T16:24:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?:^|\\s)(?'arg1'[a-z]+)=(?P=arg1)", "permalinkFragment": "tK4kT1", "isFavorite": false, "isStarred": false}, {"title": "Matches Content-Type field of HTTP response", "description": "", "dateCreated": "2015-08-14T17:53:04.000Z", "dateModified": "2015-08-14T17:53:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\s+Content-[Tt]ype:\\s*\\S+", "permalinkFragment": "tM3lX5", "isFavorite": false, "isStarred": false}, {"title": "ip/host:port parser (proxy lists)", "description": "simple ip:port or host:port parser capturing ip or host and port, usually used for proxy lists", "dateCreated": "2015-08-16T03:11:45.000Z", "dateModified": "2015-08-16T03:11:45.000Z", "author": "The Voider", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "([a-zA-Z0-9\\-_\\.]+):([0-9]{1,5})", "permalinkFragment": "bR7cJ4", "isFavorite": false, "isStarred": false}, {"title": "Floating Point", "description": "Tests a floating point number", "dateCreated": "2015-08-17T15:51:50.000Z", "dateModified": "2015-08-17T15:51:50.000Z", "author": "Josh L. Rasmussen", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^-?\\d*(\\.(?=\\d))?\\d*$", "permalinkFragment": "pP6fC3", "isFavorite": false, "isStarred": false}, {"title": "pure url and uri", "description": "", "dateCreated": "2015-08-18T16:25:51.000Z", "dateModified": "2015-08-18T16:25:51.000Z", "author": "Thiago Souza", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?:http:\\/\\/)?(?:www\\.)?(.*?)\\/(.+?)(?:\\/|\\?|\\#|$|\\n)", "permalinkFragment": "sN3aQ6", "isFavorite": false, "isStarred": false}, {"title": "Simple Telephone number regex", "description": "It accepts phone numbers of the form 0XX XXX XX XX (stylized here, it doesn't really accept spaces). Also, it can detect the international area code (e.g. +41 OR 0041 for Switzerland). It's not a good idea to rely on the groups (because they do not work for this reason. At ALL.", "dateCreated": "2015-08-18T18:08:22.000Z", "dateModified": "2015-08-18T18:08:22.000Z", "author": "Adowrath", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^((00|\\+)[0-9]{2,5}|0)[1-9][0-9]{8,9}$", "permalinkFragment": "xW7qL5", "isFavorite": false, "isStarred": false}, {"title": "Search tags \"a\" and get link and text from tags", "description": "Search group \"link=>text\" in tags \"a\"", "dateCreated": "2015-08-19T10:46:06.000Z", "dateModified": "2015-08-19T10:46:06.000Z", "author": "Andy", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "<(?:\\s?)[aA].*?href=[\\'\\\"](?<link>.*?)[\\'\\\"].*?>(?<text>.*)<(?:\\s?)\\/(?:\\s?)[aA](?:\\s?)>", "permalinkFragment": "iF8vY0", "isFavorite": false, "isStarred": false}, {"title": "Email Regex", "description": "", "dateCreated": "2015-08-20T18:36:28.000Z", "dateModified": "2015-08-20T18:36:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(( |        )*[a-zA-Z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?( |          )*)", "permalinkFragment": "vA3lU6", "isFavorite": false, "isStarred": false}, {"title": "OpenSSL certificates ASCII match all in chain", "description": "Match all certificate in a chain from a OpenSSL s_client output. Need for this come from a script that should be able to verify the root CA of a URL.", "dateCreated": "2015-08-23T20:13:26.000Z", "dateModified": "2015-08-23T20:13:26.000Z", "author": "Evgeni Simeonov", "flavor": "pcre", "delimiter": "/", "flags": "msg", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(^-----BEGIN CERTIFICATE-----.*?-----END CERTIFICATE-----)$", "permalinkFragment": "bD1rG1", "isFavorite": false, "isStarred": false}, {"title": "Valida RFC mexicano", "description": "valida el formato del registro federal de contribuyentes de M\u00e9xico.", "dateCreated": "2015-08-24T22:40:00.000Z", "dateModified": "2015-08-24T22:40:00.000Z", "author": "Rogelio", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([A-Z&\u00d1\u00f1]{3}|[A-Z][AEIOU][A-Z]{2})\\d{2}((01|03|05|07|08|10|12)(0[1-9]|[12]\\d|3[01])|02(0[1-9]|[12]\\d)|(04|06|09|11)(0[1-9]|[12]\\d|30))([A-Z0-9]{2}[0-9A])$", "permalinkFragment": "pS4uO3", "isFavorite": false, "isStarred": false}, {"title": "Search regex", "description": "/**\n * this regex should match most cases where the user forgets to put an operator somewhere and add an OR, it still\n * does not handle nested square brackets but those are invalid anyways\n * this page has an explanation https://regex101.com/r/fF7wO1/2\n *\n * the way this regex grabs conflicting matches is by oring different cases together in the order we want to grab them in\n * the first case is for a set of brackets immediately followed by an opening bracket (seperate them with an or)\n * the second case is for a set of brackets immediately followed by any non operator character (seperate with an or)\n * the third case is for a set of brackets followed by an operator (do nothing)\n * the final case is for two words outside of brackets seperated by a space (fill space with an or)\n *\n * @type {RegExp}\n */", "dateCreated": "2015-08-26T17:22:44.000Z", "dateModified": "2015-08-26T17:22:44.000Z", "author": "warnock", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(\\[(?:[^[\\]]*?)\\]\\s*?(?=\\[))|(\\[(?:[^[\\]]*?)\\](?!\\s*[\\|&]\\s*.))|(?:\\[[^[\\]]*?])|([^&\\|\\s]+)\\s+(?=[^&\\|\\s]+)", "permalinkFragment": "sB2cB6", "isFavorite": false, "isStarred": false}, {"title": "Email Validator", "description": "Email validator from \nhttp://haacked.com/archive/2007/08/21/i-knew-how-to-validate-an-email-address-until-i.aspx/", "dateCreated": "2015-08-31T13:46:02.000Z", "dateModified": "2015-08-31T13:46:02.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?!\\.)(\"\"([^\"\"\\r\\\\]|\\\\[\"\"\\r\\\\])*\"\"|([-a-z0-9!#$%&'*+/=?^_`{|}~]|(?<!\\.)\\.)*)(?<!\\.)@[a-z0-9][\\w\\.-]*[a-z0-9]\\.[a-z][a-z\\.]*[a-z]$", "permalinkFragment": "jA0yP1", "isFavorite": false, "isStarred": false}, {"title": "count occurence of comma", "description": "", "dateCreated": "2015-08-31T21:52:20.000Z", "dateModified": "2015-08-31T21:52:20.000Z", "author": "Kevin H", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "([^,]*,){6}([^,]*)", "permalinkFragment": "zX9oX0", "isFavorite": false, "isStarred": false}, {"title": "text beetween <<>>", "description": "", "dateCreated": "2015-09-04T13:32:02.000Z", "dateModified": "2015-09-04T13:32:02.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\<\\<(.*?)\\>\\>", "permalinkFragment": "jM2qK8", "isFavorite": false, "isStarred": false}, {"title": "exemplo-flex-2", "description": "", "dateCreated": "2015-09-05T00:58:24.000Z", "dateModified": "2015-09-05T00:58:24.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(\\n|\\t)*", "permalinkFragment": "lR2wW5", "isFavorite": false, "isStarred": false}, {"title": "starts with abc, has 123 and ends with xyz", "description": "#starts with abc, has 123 and ends with xyz\nabc123xyz", "dateCreated": "2015-09-08T10:54:07.000Z", "dateModified": "2015-09-08T10:54:07.000Z", "author": "Kifah", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?=^abc)(?=.*123)(?=.*xyz$)", "permalinkFragment": "vW9uK7", "isFavorite": false, "isStarred": false}, {"title": "Cart\u00e3o de cidad\u00e3o / BI", "description": "", "dateCreated": "2015-09-15T11:28:47.000Z", "dateModified": "2015-09-15T11:28:47.000Z", "author": "David Serrano", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[\\d]{8}[-]?\\d([A-Z]{2}\\d)?$", "permalinkFragment": "gZ2iG3", "isFavorite": false, "isStarred": false}, {"title": "10 digits", "description": "10 digits", "dateCreated": "2015-09-16T13:04:09.000Z", "dateModified": "2015-09-16T13:04:09.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\d{10}$", "permalinkFragment": "tM4zY1", "isFavorite": false, "isStarred": false}, {"title": "UID", "description": "", "dateCreated": "2015-09-16T13:32:51.000Z", "dateModified": "2015-09-16T13:32:51.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", "permalinkFragment": "uO2cN8", "isFavorite": false, "isStarred": false}, {"title": "Password validation", "description": "Check if the string has a minimum of 6 characters, at least 1 upper case char, at least 1 lower case char and at least 1 number with no spaces.", "dateCreated": "2015-09-18T13:34:45.000Z", "dateModified": "2015-09-18T13:34:45.000Z", "author": "Webchef.de", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[\\w!@#$%]{6,}$", "permalinkFragment": "lJ6tC9", "isFavorite": false, "isStarred": false}, {"title": "UK Postcode checker", "description": "Matches more thoroughly than others in the library. Based on http://stackoverflow.com/questions/164979/uk-postcode-regex-comprehensive. Matches: W1A 1AA, WC2H 7LT, SE50EG", "dateCreated": "2015-09-24T09:06:56.000Z", "dateModified": "2015-09-24T09:06:56.000Z", "author": "spookypeanut", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(GIR ?0AA|[A-PR-UWYZ]([0-9]{1,2}|([A-HK-Y][0-9]([0-9ABEHMNPRV-Y])?)|[0-9][A-HJKPS-UW]) ?[0-9][ABD-HJLNP-UW-Z]{2})$", "permalinkFragment": "uB4fF0", "isFavorite": false, "isStarred": false}, {"title": "Oracle Stored Procedure Name Validator", "description": "Validates valid Oracle Stored Procedure names", "dateCreated": "2015-09-24T18:15:14.000Z", "dateModified": "2015-09-24T18:15:14.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,29}(?:\\.[a-zA-Z][a-zA-Z0-9_]{0,29})?$", "permalinkFragment": "qR3vD0", "isFavorite": false, "isStarred": false}, {"title": "Smoke Detector Regex", "description": "Parses Smokey messages", "dateCreated": "2015-09-25T03:11:13.000Z", "dateModified": "2015-09-25T03:11:13.000Z", "author": "Eyeballcode", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\[ \\[SmokeDetector\\]\\(https://github\\.com/Charcoal-SE/SmokeDetector\\) \\] (.+): \\[(.+)\\]\\(//[\\w\\.]+.com/(questions|answers|q|a)/(\\d+)\\) by \\[(.+)\\]\\(//[\\w.]+/users/(\\d+)/[\\w+-]+\\) on `(.+)`", "permalinkFragment": "aY1lQ3", "isFavorite": false, "isStarred": false}, {"title": "Capture if pattern NOT found", "description": "Capture the input if the pattern is NOT found", "dateCreated": "2015-09-25T13:08:12.000Z", "dateModified": "2015-09-25T13:08:12.000Z", "author": "Byron Jones", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^((?:(?!PATTERN).)*)$", "permalinkFragment": "nX2yI0", "isFavorite": false, "isStarred": false}, {"title": "replace comma's between quoted text in csv", "description": "", "dateCreated": "2015-10-01T07:12:44.000Z", "dateModified": "2015-10-01T07:12:44.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(,)(?=[^\"]*\"(?:[^\"\\r\\n]*\"[^\"]*\")*[^\"\\r\\n]*$)", "permalinkFragment": "cD4aE7", "isFavorite": false, "isStarred": false}, {"title": "Change Table names", "description": "", "dateCreated": "2015-10-02T10:32:51.000Z", "dateModified": "2015-10-02T10:32:51.000Z", "author": "Andrea", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\b(t(?:\\w{4})\\d{3})\\b", "permalinkFragment": "uN7nO7", "isFavorite": false, "isStarred": false}, {"title": "Words with only one spacing", "description": "Names with only one spacing allowed in between words.", "dateCreated": "2015-10-02T14:50:18.000Z", "dateModified": "2015-10-02T14:50:18.000Z", "author": "Pavan Kataria", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\w{3,}([\\s][\\w]+)*$", "permalinkFragment": "tT1iS2", "isFavorite": false, "isStarred": false}, {"title": "123", "description": "", "dateCreated": "2015-10-04T04:29:37.000Z", "dateModified": "2015-10-04T04:29:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "sm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^GET\\ (\\/([^\\s?#]+)?([?][^?#]*)?(#.*)?)?", "permalinkFragment": "oD6qZ5", "isFavorite": false, "isStarred": false}, {"title": "^([a-zA-Z1-9]{1})([a-zA-Z0-9])+:$", "description": "hexa deciamal number with ending with ( :) a special character", "dateCreated": "2015-10-13T12:10:42.000Z", "dateModified": "2015-10-13T12:10:42.000Z", "author": "anusha", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([a-zA-Z1-9]{1})([a-zA-Z0-9])+:$", "permalinkFragment": "fF7tG4", "isFavorite": false, "isStarred": false}, {"title": "Validate multiple Email-addresses separated by semicolon", "description": "Validate multiple Email-addresses separated by semicolon. No check on allowed domains, just a plain and simple check on the correct structure", "dateCreated": "2015-10-14T13:49:39.000Z", "dateModified": "2015-10-14T13:49:39.000Z", "author": "maxthelup", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5}){1,25})+([;.](([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5}){1,25})+)*$", "permalinkFragment": "jQ0zN2", "isFavorite": false, "isStarred": false}, {"title": "IBAN (with spaces)", "description": "This matches EU IBAN codes considering spaces here and there", "dateCreated": "2015-10-15T08:30:51.000Z", "dateModified": "2023-07-21T12:05:44.000Z", "author": "ZioAldo", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 2, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[a-zA-Z]{2}[\\s*]{0,}[0-9]{2}[\\s*]{0,}[a-zA-Z]{1,}[\\s*]{0,}[0-9\\s]{22,}", "permalinkFragment": "qZ7rF4", "isFavorite": false, "isStarred": false}, {"title": "Date time AM/PM validation", "description": "", "dateCreated": "2015-10-15T11:29:18.000Z", "dateModified": "2015-10-15T11:29:18.000Z", "author": "vladimir", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(0?\\d|[1][0-2])\\/(0?[1-9]|[0-2]\\d|[3][0-1])\\/(\\d{2})(?:(?:\\s(0?[1-9]|1[012])\\:([0-5]\\d)(?:\\s(AM|PM))?)?)$", "permalinkFragment": "xU6eI0", "isFavorite": false, "isStarred": false}, {"title": "BNF for specific URL schemes (httpurl) from rfc1738", "description": "This regex represents the httpurl in BNF from rfc1738 (at topic 5).\nReference:https://www.ietf.org/rfc/rfc1738.txt", "dateCreated": "2015-10-15T11:32:09.000Z", "dateModified": "2015-10-15T11:32:09.000Z", "author": "Migueh", "flavor": "python", "delimiter": "\"", "flags": "m", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^((http:\\/\\/)?(((([\\w\\d]|[\\w\\d][\\w\\d\\-]*[\\w\\d])\\.)*((\\w|\\w[\\w\\d\\-]*[\\w\\d]))*(\\:\\d+)+?)(\\/[\\w\\;\\:\\@\\&\\=]*[\\/[\\w\\;\\:\\@\\&\\=]*]*(\\?[\\w\\;\\:\\@\\&\\=]*)?)))$", "permalinkFragment": "iL9rF8", "isFavorite": false, "isStarred": false}, {"title": "localhost ip's with port", "description": "Matches localhost ip range with optional port capture:\n127.X.X.X\nor\n127.X.X.X:PORT\n\nToDo: check valid ip address.", "dateCreated": "2015-10-20T13:38:22.000Z", "dateModified": "2015-10-20T13:38:22.000Z", "author": "Rodrigo M. A.", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(\\:\\d+)?$", "permalinkFragment": "sD8tT9", "isFavorite": false, "isStarred": false}, {"title": "Trim Whitespace before/after String", "description": "Remove whitespace before and after the string.\nUse g for trimming before and after\nUse m for trimming each line of a multiline string individually.\n\nCode:\n'  test  '.replace( /(^\\s+|\\s+$)/gm, '' );", "dateCreated": "2015-10-21T09:22:29.000Z", "dateModified": "2015-10-21T09:22:29.000Z", "author": "KevinV", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(^\\s+|\\s+$)", "permalinkFragment": "jG6fR3", "isFavorite": false, "isStarred": false}, {"title": "[\\d]*", "description": "kostix@mail.ru", "dateCreated": "2015-10-23T17:13:55.000Z", "dateModified": "2015-10-23T17:13:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[\\d]*", "permalinkFragment": "yT2iG2", "isFavorite": false, "isStarred": false}, {"title": "Look Forward", "description": "Between two strings.", "dateCreated": "2015-10-27T19:21:53.000Z", "dateModified": "2015-10-27T19:21:53.000Z", "author": "Online Cop", "flavor": "python", "delimiter": "\"", "flags": "gmx", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "# Keys are pretty much \"any text before the '=' symbol\"\n(?P<key>[^=]+)\n\n# Match the '=' symbol\n=\n\n(?P<value>\n  # Lazy match\n  .*?\n\n  # Look-ahead (don't move the \"regex cursor\", just \"peek forward\")\n  (?=\n    # Match a '_' that has no other '_' between it and the '=' character, or...\n    _[^_=\\n]+=\n  |\n    # ... or the end of the line\n    $\n  )\n)\n\n# Actually \"consume\" the '_' character if it exists (or just match the end-of-line)\n(?:_|$)", "permalinkFragment": "aU2lF0", "isFavorite": false, "isStarred": false}, {"title": "US Phone Number Format Check", "description": "All Valid:\n3334444\n222333444\n12223334444\n333-4444\n222-333-4444\n1-222-333-4444\n(222)3334444\n(222)333-4444\n1(222)3334444\n1(222)333-4444", "dateCreated": "2015-10-27T20:06:05.000Z", "dateModified": "2015-10-27T20:06:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "A", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(((1)?(\\d{3})?(\\d{7})$)|((1-)?(\\d{3}?-)(\\d{3})-(\\d{4}))|(((1)?\\((\\d{3})\\))?(\\d{3})-?(\\d{4})))$", "permalinkFragment": "fL0iZ6", "isFavorite": false, "isStarred": false}, {"title": "Read PHPDoc as (key => value) like Wordpress plugins", "description": "<?php\n\n$re = \"/\\\\@(?P<key>[a-zA-Z0-9]+)\\\\s{1,}(?P<value>.*)/im\";\n$str = \"/**\\n@author     Marian Gabriel\\n@route      /page/contact\\n@name       Contact Plugin\\n@version    0.1beta\\n@company    VMG\\n@type       Page\\n**/\\n\\n\";\npreg_match_all($re, $str, $matches);\n\nfunction getValue($attr, $matches)\n{\n    $values = array();\n\n    foreach ($matches['key'] as $key => $value) {\n        $values[$value] = $matches['value'][$key];\n    }\n\n    return isset($values[$attr]) ? $values[$attr] : '';\n}\n\necho getValue('name', $matches);", "dateCreated": "2015-10-29T23:06:22.000Z", "dateModified": "2015-10-29T23:06:22.000Z", "author": "Marian Gabriel", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\@(?P<key>[a-zA-Z0-9]+)\\s{1,}(?P<value>.*)", "permalinkFragment": "nN8eP4", "isFavorite": false, "isStarred": false}, {"title": "5", "description": "", "dateCreated": "2015-10-30T16:41:09.000Z", "dateModified": "2015-10-30T16:41:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "([0-2][0-9]|3[0-1])\\-(0[1-9]|1[0-2])\\-\\d{4}", "permalinkFragment": "cS2tH1", "isFavorite": false, "isStarred": false}, {"title": "7", "description": "", "dateCreated": "2015-10-30T16:42:15.000Z", "dateModified": "2015-10-30T16:42:15.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[^<TAB>]+[^<\\TAG>]", "permalinkFragment": "kH7mV8", "isFavorite": false, "isStarred": false}, {"title": "10", "description": "", "dateCreated": "2015-10-30T17:18:43.000Z", "dateModified": "2015-10-30T17:18:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "http:\\/\\/(www)?[a-zA-Z0-9]+\\.(com|ru|net)\\/(\\w+)*", "permalinkFragment": "jH3cD7", "isFavorite": false, "isStarred": false}, {"title": "Numeric input allow commas and decimal point", "description": "Match numeric input that may or may not include commas and/or decimal point.", "dateCreated": "2015-11-03T00:31:40.000Z", "dateModified": "2015-11-03T00:31:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[1-9][\\,\\d]*(.\\d+)?$", "permalinkFragment": "nH7wH8", "isFavorite": false, "isStarred": false}, {"title": "Simple global regex", "description": "Regex for finding tempratures in a text", "dateCreated": "2015-11-07T10:14:07.000Z", "dateModified": "2015-11-07T10:14:07.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\d{2}\\.\\d", "permalinkFragment": "cC3zK4", "isFavorite": false, "isStarred": false}, {"title": "reddit username", "description": "", "dateCreated": "2015-11-08T13:35:47.000Z", "dateModified": "2015-11-08T13:35:47.000Z", "author": "l3d00m", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[a-zA-Z0-9_.-]{3,20}$", "permalinkFragment": "dX2vX7", "isFavorite": false, "isStarred": false}, {"title": "number of spaces at beginning of lines", "description": "find the number of spaces at the beginning of lines in a file.", "dateCreated": "2015-11-09T14:29:35.000Z", "dateModified": "2015-11-09T14:29:35.000Z", "author": "andy", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^( +)(?=\\S)", "permalinkFragment": "rH9hD9", "isFavorite": false, "isStarred": false}, {"title": "Strong Password", "description": "1 digit\n1 lower case\n1 upper case\n1 special character (no-space)\n8-20 length", "dateCreated": "2015-11-19T21:50:49.000Z", "dateModified": "2015-11-19T21:50:49.000Z", "author": "Femi Fapohunda", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?=.*?[0-9])(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[^\\w\\s]).{8,20}$", "permalinkFragment": "mV6fC4", "isFavorite": false, "isStarred": false}, {"title": "Regex SCript replace", "description": "", "dateCreated": "2015-11-23T10:18:21.000Z", "dateModified": "2015-11-23T10:18:21.000Z", "author": "MGO", "flavor": "javascript", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "<(script)([^\\/>]*?)>((\\s|.)*?)<\\/script\\s?>", "permalinkFragment": "fP5pK1", "isFavorite": false, "isStarred": false}, {"title": "Date search", "description": "Search for three different types of dates in spanish format", "dateCreated": "2015-11-25T20:47:04.000Z", "dateModified": "2015-11-25T20:47:04.000Z", "author": "Agust\u00edn Bouillet", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\b(?P<date>(?P<day>3[0-1]|[0-2]?[\\d])(?P<separator>\\/|\\-|\\.)(?P<month>1[0-2]|[0-1]?[\\d])\\3(?P<year>[\\d]{4}|[\\d]{2}))", "permalinkFragment": "vJ4iW1", "isFavorite": false, "isStarred": false}, {"title": "Currency Detector Python", "description": "Currency Detector for Python", "dateCreated": "2015-11-27T11:22:40.000Z", "dateModified": "2015-11-27T11:22:40.000Z", "author": "Joao Graca", "flavor": "python", "delimiter": "\"", "flags": "u", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[$\u00a5\u00a3\u20ac]{0,1}(?:\\d{1,10}[,. ])*\\d{1,10}[$\u00a5\u00a3\u20ac]{0,1}", "permalinkFragment": "jE9wJ0", "isFavorite": false, "isStarred": false}, {"title": "dd-mm-yyyy", "description": "", "dateCreated": "2015-11-27T17:15:22.000Z", "dateModified": "2015-11-27T17:15:22.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(^0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-(30[19|20]\\d\\d$)", "permalinkFragment": "vZ2uR2", "isFavorite": false, "isStarred": false}, {"title": "RegEx - Exclude zero", "description": "RegEx - Exclude zero", "dateCreated": "2015-11-27T18:53:40.000Z", "dateModified": "2015-11-27T18:53:40.000Z", "author": "http://stackoverflow.com/questions/8910972/regex-exclude-zero", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?!0*(\\.0+)?$)(\\d+|\\d*\\.\\d+)$", "permalinkFragment": "dC3hA5", "isFavorite": false, "isStarred": false}, {"title": "Slovak phone number", "description": "", "dateCreated": "2015-12-03T21:48:28.000Z", "dateModified": "2015-12-03T21:48:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\+421[0-9]{9}$", "permalinkFragment": "cO0tR9", "isFavorite": false, "isStarred": false}, {"title": "Find Markdown links, but not image", "description": "", "dateCreated": "2015-12-06T02:08:44.000Z", "dateModified": "2015-12-06T02:08:44.000Z", "author": "Chuck", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[^!]\\[.+?\\]\\(.+?\\)", "permalinkFragment": "bQ9gW8", "isFavorite": false, "isStarred": false}, {"title": "anti-xss regex", "description": "this is a white list regex that invalidates input with <>\"= ", "dateCreated": "2015-12-11T03:58:18.000Z", "dateModified": "2023-07-24T23:03:39.000Z", "author": "Ivan Cai", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 2, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(\\s|\\w|\\d|\\.|\\,|\\;|\\:|\\?|\\!|\\@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\_|\\~|\\`|\\'|\\\\|\\-|\\/|\\+)*?$", "permalinkFragment": "mE9oU3", "isFavorite": false, "isStarred": false}, {"title": "Indian mobile numbers", "description": "All indian mobile phone numbers are till now are in the format of \n+91-(789)(9-digits) or\n+91(789)(9-digits) or\n0(789)(9-digits).\nthose numbers which are come into this category is valid with this RegEx. ", "dateCreated": "2015-12-11T05:48:21.000Z", "dateModified": "2015-12-11T05:48:21.000Z", "author": "N shoban babu", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(\\+91|\\+91\\-|0)?[789]\\d{9}$", "permalinkFragment": "dS1nS8", "isFavorite": false, "isStarred": false}, {"title": "whitespaces and positive numerics", "description": "//Accepts whitespaces and positive numeric values including integers and decimals(ortional) with 3 precisions only.\n\n//Ex: \"999\", \"99999.999\", \"     999.999\" -> ACCEPTABLE", "dateCreated": "2015-12-15T15:06:07.000Z", "dateModified": "2015-12-15T15:06:07.000Z", "author": "Pubudu (motustudio)", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\s*[0-9]+(\\.[0-9][0-9]{0,2}?)?$|^$|^\\s*$", "permalinkFragment": "xE0oM5", "isFavorite": false, "isStarred": false}, {"title": "Globality APP", "description": "", "dateCreated": "2015-12-17T07:22:36.000Z", "dateModified": "2015-12-17T07:22:36.000Z", "author": "globality team", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\/login(?:\\?.*)?$", "permalinkFragment": "kH2pX6", "isFavorite": false, "isStarred": false}, {"title": "Russian phone number validater", "description": "Russian phone number validater", "dateCreated": "2015-12-23T12:27:45.000Z", "dateModified": "2015-12-23T12:27:45.000Z", "author": "Russell of sitesoft", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(^8|7|\\+7)((\\d{10})|(\\s\\(\\d{3}\\)\\s\\d{3}\\s\\d{2}\\s\\d{2}))", "permalinkFragment": "eE5hI4", "isFavorite": false, "isStarred": false}, {"title": "https://www.facebook.com/video.php?v=1009222819122586", "description": "", "dateCreated": "2015-12-26T14:22:19.000Z", "dateModified": "2015-12-26T14:22:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\/videos\\/(?:t\\.\\d+\\/)?(\\d+)", "permalinkFragment": "bF2jP7", "isFavorite": false, "isStarred": false}, {"title": "match start of line subsubsection", "description": "", "dateCreated": "2015-12-27T04:28:18.000Z", "dateModified": "2015-12-27T04:28:18.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\d{1,2}\\.\\d{1,2}\\.\\d{1,2}\\.\\d{1,2}\\.", "permalinkFragment": "rH2pN8", "isFavorite": false, "isStarred": false}, {"title": "Match parenthesis", "description": "Matches anything wrapped in parenthesis. Can handle nested and consecutive sets of parenthesis.", "dateCreated": "2015-12-27T18:49:18.000Z", "dateModified": "2015-12-27T18:49:18.000Z", "author": "Nic Roland", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\([^\\)]*\\)*", "permalinkFragment": "yJ5aR6", "isFavorite": false, "isStarred": false}, {"title": "parse table", "description": "", "dateCreated": "2015-12-30T11:42:23.000Z", "dateModified": "2015-12-30T11:42:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "<tr>\\n<td style=\"background:#(.*)\"> .*\\n<td> (.*) <...>\\n<td> (.*)", "permalinkFragment": "gC0sJ1", "isFavorite": false, "isStarred": false}, {"title": "Match pointless spaces in space separated list", "description": "'test' - no match\n'test test' - no match\n' test' - match (space at the start)\n'test ' - match (space at the end)\n'test  test' - match (single space in the middle)", "dateCreated": "2015-12-31T20:22:01.000Z", "dateModified": "2015-12-31T20:22:01.000Z", "author": "J. Harry B.", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^ +|( )(?=\\1)| +$", "permalinkFragment": "oQ4rW1", "isFavorite": false, "isStarred": false}, {"title": "url regex", "description": "spoon library", "dateCreated": "2016-01-01T07:00:41.000Z", "dateModified": "2016-01-01T07:00:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ium", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(((http|https):\\/{2})+(([0-9a-z_-]+\\.)+(aero|asia|biz|cat|com|coop|edu|gov|info|int|jobs|mil|mobi|museum|name|net|org|pro|tel|travel|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cx|cy|cz|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mn|mn|mo|mp|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|nom|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ra|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sj|sk|sl|sm|sn|so|sr|st|su|sv|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|yu|za|zm|zw|arpa)(:[0-9]+)?((\\/([~0-9a-zA-Z\\#\\+\\%@\\.\\/_-]+))?(\\?[0-9a-zA-Z\\+\\%@\\/&\\[\\];=_-]+)?)?))\\b", "permalinkFragment": "tD5vV3", "isFavorite": false, "isStarred": false}, {"title": "french phone number", "description": "french phone number", "dateCreated": "2016-01-11T16:45:35.000Z", "dateModified": "2016-01-11T16:45:35.000Z", "author": "lolo64", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?:0|\\s?)[1-79](?:[\\.\\-\\s]?\\d\\d){4}$", "permalinkFragment": "yX5xF0", "isFavorite": false, "isStarred": false}, {"title": "simple json key -value", "description": "simple json key -value parser", "dateCreated": "2016-01-14T12:56:05.000Z", "dateModified": "2016-01-14T12:56:05.000Z", "author": "ReMMeR", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\"([^\"]+)\":[\"]*([^,^}^\"]+)", "permalinkFragment": "dQ3fY1", "isFavorite": false, "isStarred": false}, {"title": "\u2022\t", "description": "", "dateCreated": "2016-01-20T07:32:20.000Z", "dateModified": "2016-01-20T07:32:20.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([A-Z0-9a-z_&\\+\\*\\=\\(\\)\\.\\%\\/\\<\\>\\|\\-\\?\\=\\:\\,\\\u00b4\\'\\&\\#\\;\\s\u00e0\u00e8\u00ec\u00f2\u00f9]{6,3000})$", "permalinkFragment": "dP2xK9", "isFavorite": false, "isStarred": false}, {"title": "File extention", "description": "Extract file extention from URL", "dateCreated": "2016-01-20T14:56:26.000Z", "dateModified": "2016-01-20T14:56:26.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[^#?]+\\.([a-zA-Z0-9]+)(?:[?#].*)?$", "permalinkFragment": "lJ0mI6", "isFavorite": false, "isStarred": false}, {"title": "simple url regex (http,https)", "description": "To recognize url like (for the more complex one):\nhttps://word.office.live.com/wv/WordView.aspx?FBsrc=https%3A%2F%2Fwww.facebook.com%2Fattachments%2Ffile_preview.php%3Fid%3D713987203%26time%3D145332%26metadata&access_token=1606%3AAVKzw1&title=2016+Test+Document+Word+Online.doc", "dateCreated": "2016-01-21T10:46:52.000Z", "dateModified": "2016-01-21T10:46:52.000Z", "author": "Pika", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "https?:\\/\\/(www.)?[a-zA-Z]+(\\.[a-zA-Z]+)+(\\/(\\w|[-_%.#?=&+])+)+", "permalinkFragment": "xJ5zC5", "isFavorite": false, "isStarred": false}, {"title": "Match Markdown Text Paragraph at a Root Level", "description": "http://stackoverflow.com/q/34914559/368691", "dateCreated": "2016-01-21T15:24:47.000Z", "dateModified": "2016-01-21T15:24:47.000Z", "author": "Gajus Kuizinas", "flavor": "javascript", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?:([*_`]|\\*\\*|\\[){0,1}[a-z]+)(.*)", "permalinkFragment": "pK9mU9", "isFavorite": false, "isStarred": false}, {"title": "logical operators", "description": "", "dateCreated": "2016-01-23T10:52:38.000Z", "dateModified": "2016-01-23T10:52:38.000Z", "author": "Nicolas", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "night (.*)|Total(.*)", "permalinkFragment": "dD3cY5", "isFavorite": false, "isStarred": false}, {"title": "basic emails with separator", "description": "infinite emails with ; separator a@b.c;a@b.c;a@b.c;a@b.c;a@b.c", "dateCreated": "2016-01-25T08:41:49.000Z", "dateModified": "2016-01-25T08:41:49.000Z", "author": "gcolciago", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([^@\\.;]+@[^@\\.;]+\\.[^@\\.;]+[;]*)*[^@.;]+$", "permalinkFragment": "vF4gO1", "isFavorite": false, "isStarred": false}, {"title": "not a character and not spaces", "description": "", "dateCreated": "2016-01-25T15:02:11.000Z", "dateModified": "2016-01-25T15:02:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[^aA-zZ|^\\s]+", "permalinkFragment": "hD3gY0", "isFavorite": false, "isStarred": false}, {"title": "tablespace_Skipper", "description": "", "dateCreated": "2016-01-27T16:37:43.000Z", "dateModified": "2016-01-27T16:37:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\s+  \\w+\\s+={37}\\s+Table tablespaces do not match\\. Destination : SUM_DEMO_(\\w+) Source : SFDEV_(\\1)", "permalinkFragment": "aR8tU1", "isFavorite": false, "isStarred": false}, {"title": "Phone numbers - Poland", "description": "Validates following phone number schemes:\n1234567\n123-45-67\n12-34-578\n711234567\n0711234567\n71 123-45-78\n71-123-45-78\n071 123-45-78\n071-123-45-78\n+48711234567\n+48 71 123-45-78\n0048711234578\n0048 71 123-45-78\n(71) 123-45-78\n(071) 123-45-78\n123-456-789\n0048123456789\n+48123456789\n0048 123-456-789\n+48 123-456-789\netc.\nDashes can be substituted for spaces\nNo capture.", "dateCreated": "2016-01-28T11:23:07.000Z", "dateModified": "2016-01-28T11:23:07.000Z", "author": "Forseti", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?:(?:(?:(?:\\+|00)\\d{2})?[ -]?(?:(?:\\(0?\\d{2}\\))|(?:0?\\d{2})))?[ -]?(?:\\d{3}[- ]?\\d{2}[- ]?\\d{2}|\\d{2}[- ]?\\d{2}[- ]?\\d{3}|\\d{7})|(?:(?:(?:\\+|00)\\d{2})?[ -]?\\d{3}[ -]?\\d{3}[ -]?\\d{3}))$", "permalinkFragment": "uR2cG1", "isFavorite": false, "isStarred": false}, {"title": "Email validation", "description": "Usernames with dots, dashes and underscores. Hostnames limited to 64 chars, dash disallowed at first char of domain segment, only one consecutive dash or dot, one-char domains possible, multi-subdomains, long TLDs.", "dateCreated": "2016-01-28T14:59:43.000Z", "dateModified": "2016-01-28T14:59:43.000Z", "author": "Forseti", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?:[\\w\\d\\.-_])+@(?=.{4,64}$)(?:[\\w\\d]+[-]?[\\w\\d]+\\.|[\\w\\d]\\.)+(?:\\w{2,})$", "permalinkFragment": "lZ5aV0", "isFavorite": false, "isStarred": false}, {"title": "Names with hyphens or single quotes", "description": "Names that accept maximum of 1 hyphen or 1 Quote, does not allow white spaces, allows an unlimited length of name.", "dateCreated": "2016-01-29T12:47:43.000Z", "dateModified": "2016-01-29T12:47:43.000Z", "author": "chakra_tavy", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[a-zA-Z]+[\\'-]{0,1}[a-zA-Z]+$", "permalinkFragment": "eH9qP9", "isFavorite": false, "isStarred": false}, {"title": "ofsream open file C++", "description": "match of.open(\"test.txt\");", "dateCreated": "2016-01-30T08:07:19.000Z", "dateModified": "2016-01-30T08:07:19.000Z", "author": "\u0414\u0435\u043d\u0438\u0441 \u0441\u0443\u0445\u043e\u0432\u0435\u0440\u0445\u043e\u0432", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?P<first_part>[0-9a-zA-z_.]+\\.open\\()(?P<file_name>\\\"[0-9a-zA-z_.]+\\\")", "permalinkFragment": "mK8mT7", "isFavorite": false, "isStarred": false}, {"title": "Extract variable data from multi-line text columns", "description": "Pulls data from the 3rd line of different columns of text.", "dateCreated": "2016-02-03T00:44:11.000Z", "dateModified": "2016-02-03T00:44:11.000Z", "author": "Jan from StackOverflow, and John Kimball", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^Soldto:(?:.*\\R){2}\\K((?:(?!\\s{2}).)+)\\K\\s*\\K((?:(?!\\s{2}).)+)", "permalinkFragment": "kI4kF0", "isFavorite": false, "isStarred": false}, {"title": "Dutch postcode validation", "description": "", "dateCreated": "2016-02-08T09:22:20.000Z", "dateModified": "2016-02-08T09:22:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[1-9]{1}[0-9]{3} ?(?!sa|sd|ss)[a-zA-Z]{2}$", "permalinkFragment": "sS0bL9", "isFavorite": false, "isStarred": false}, {"title": "Credit Card Regex", "description": "", "dateCreated": "2016-02-12T20:03:47.000Z", "dateModified": "2016-02-12T20:03:47.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\b(?<!\\d.)(3[47]\\d{2}([ -]?)(?!(\\d)\\3{5}|123456|234567|345678|424242|545454)\\d{6}\\2(?!(\\d)\\4{4})\\d{5}|((4\\d|5[1-5]|65)\\d{2}|6011)([ -]?)(?!(\\d)\\8{3}|4242|5454|1234|3456|5678|2345|4567)\\d{4}\\7(?!(\\d)\\9{3})\\d{4}\\7\\d{4})(\\b|\\s)(?!.\\d\\d)", "permalinkFragment": "sQ6kT3", "isFavorite": false, "isStarred": false}, {"title": "replace divs", "description": "", "dateCreated": "2016-02-14T23:41:57.000Z", "dateModified": "2016-02-14T23:41:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gs", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "<div.*?>(.*?)<\\/div>", "permalinkFragment": "zM7wQ0", "isFavorite": false, "isStarred": false}, {"title": "MAC address capturing", "description": "Captures MAC addressess in any format:\naa bb cc dd ee ff\naa-bb-cc-dd-ee-ff\naa:bb:cc:dd:ee:ff\naabb.ccdd.eeff\naabbccddeeff", "dateCreated": "2016-02-19T10:48:41.000Z", "dateModified": "2016-02-19T10:48:41.000Z", "author": "Gilian", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "((?:[\\da-fA-F]{2}[\\s:.-]?){6})", "permalinkFragment": "yS8eO4", "isFavorite": false, "isStarred": false}, {"title": "file name without extension", "description": "", "dateCreated": "2016-02-20T10:50:05.000Z", "dateModified": "2016-02-20T10:50:05.000Z", "author": "sl", "flavor": "pcre", "delimiter": "/", "flags": "x", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(.*?)(?:\\..+)?$", "permalinkFragment": "wX4uT3", "isFavorite": false, "isStarred": false}, {"title": "Brazilian Phone number", "description": "With optional 9 digit", "dateCreated": "2016-02-20T17:02:06.000Z", "dateModified": "2016-02-20T17:02:06.000Z", "author": "Matheus Gambati", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?:\\(?)([0-9]{2})(?:\\)? ?)(9?[0-9]{4})(?:\\-)?([0-9]{4})", "permalinkFragment": "mX9vV1", "isFavorite": false, "isStarred": false}, {"title": "Isolate string in double or single quotes", "description": "Isolate strings inside double or single quotes", "dateCreated": "2016-02-21T15:03:01.000Z", "dateModified": "2016-02-21T15:03:01.000Z", "author": "garsax", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(\")([^\"]*)(\")|(')([^']*)(')", "permalinkFragment": "zA9yC9", "isFavorite": false, "isStarred": false}, {"title": "10-digit phone number with hyphens", "description": "Such as 333-333-1234.\n\nDoes not test for valid sequences of digits.  E.g. 000-000-0000 would pass.", "dateCreated": "2016-02-21T22:59:33.000Z", "dateModified": "2016-02-21T22:59:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\d{3}-\\d{3}-\\d{4}$", "permalinkFragment": "gB4nY1", "isFavorite": false, "isStarred": false}, {"title": "Tag Text", "description": "Match text between html tags", "dateCreated": "2016-02-25T04:29:17.000Z", "dateModified": "2016-02-25T04:29:17.000Z", "author": "Si", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?<=\\>).+(?=\\<)", "permalinkFragment": "bU7mH3", "isFavorite": false, "isStarred": false}, {"title": "URL does not start with correct name", "description": "APPFW BLock URL ", "dateCreated": "2016-03-01T19:10:45.000Z", "dateModified": "2016-03-01T19:10:45.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?!https:\\/\\/activate\\.careguidelines\\.com).*", "permalinkFragment": "iE5fF1", "isFavorite": false, "isStarred": false}, {"title": "Find multiline links a HTML tag", "description": "Find multiline links a HTML tag", "dateCreated": "2016-03-02T05:41:37.000Z", "dateModified": "2016-03-02T05:41:37.000Z", "author": "CyberLight", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(<a href=\".*(/media/video/\\d+/)\"*[^>]*>([^<]+)</a>)", "permalinkFragment": "eJ6bL8", "isFavorite": false, "isStarred": false}, {"title": "find file name with file extension", "description": "find file name with file extension", "dateCreated": "2016-03-10T00:51:39.000Z", "dateModified": "2016-03-10T00:51:39.000Z", "author": "rainyseason", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?:\\/)([a-z0-9]+\\.png|jpg|gif|jpeg)", "permalinkFragment": "eS5rQ9", "isFavorite": false, "isStarred": false}, {"title": "Find untranslated strings, angular", "description": "", "dateCreated": "2016-03-16T11:43:08.000Z", "dateModified": "2016-03-16T11:43:08.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\>\\s*\\{\\{|\\>\\s*[a-zA-Z0-9]|\\:\\s*[\\'|\\\"]", "permalinkFragment": "lE4kB1", "isFavorite": false, "isStarred": false}, {"title": "Decimal Numbers (+/-)", "description": "", "dateCreated": "2016-03-21T16:42:52.000Z", "dateModified": "2016-03-21T16:42:52.000Z", "author": "Zain", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^-?[0-9]+\\.[0-9]+$", "permalinkFragment": "bR0oH5", "isFavorite": false, "isStarred": false}, {"title": "regular expression to match word starting with space", "description": "", "dateCreated": "2016-03-22T10:53:29.000Z", "dateModified": "2016-03-22T10:53:29.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "( )\\bHappyCoding", "permalinkFragment": "cJ5wL2", "isFavorite": false, "isStarred": false}, {"title": "Test expression", "description": "To find at most 3 a in string", "dateCreated": "2021-09-17T06:10:51.000Z", "dateModified": "2021-09-17T06:10:51.000Z", "author": "", "flavor": "pcre2", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "a{,3}", "permalinkFragment": "B9ieA7", "isFavorite": false, "isStarred": false}, {"title": "PHP North American Phone Number", "description": "## Format phone numbers to look nice! \n\nE.g. 12345678900 --> +1(234)-567-8900 \nMatches with most ways numbers are stored\n1.234.567.8900\n1 234 567 8900\nMix and match", "dateCreated": "2021-09-17T16:48:38.000Z", "dateModified": "2021-09-17T16:48:38.000Z", "author": "Mendel Groner", "flavor": "pcre2", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "1?\\(?([0-9]{3})\\)?[-.\\s]?([0-9]{3})[-.\\s]?([0-9]{4})", "permalinkFragment": "tkTpOv", "isFavorite": false, "isStarred": false}, {"title": "CSS Colors: RGB(A), HSL(A), HEX(3,4,6,8), var(--tw-color), etc...", "description": "Versatile, multiline matching of CSS colors of many common formats, including:\n\n- [x] HEX-3: `#123` (equivalent to `#112233`) \n- [x] HEX-4: `#FA0F` ( ... `#FFAA00FF`)\n- [x] HEX-6: `#FF3300` ( ...`#F30`)\n- [x] HEX-8: `#FFAA00FF` ( ...`#FA0F`)\n- [x] RGB:    `rgb(0, 0, 0)`\n- [x] RGBA: `rgba(255, 255, 255, 1.0)`\n- [x] HSL:    `hsl(100, 50%, 50%)`\n- [x] HSLA: `hsla(100, 20%, 20%, 1.0)`\n- [x] Vars:  `var(--tw-color-name, #000000)`\n- [x] Misc:  `color: inherit;` `color: currentColor;` `color: initial;`, etc.\n\n* With or without trailing semicolon or comma\n* Forgiving of whitespace issues\n* Allows property/declaration names (e.g. `color: #fff`), most other solutions do not.", "dateCreated": "2021-12-03T04:55:17.000Z", "dateModified": "2021-12-03T04:55:17.000Z", "author": "Nicholas Berlette (@nberlette)", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^\\s*(color|background[-color]*||[a-zA-Z0-9-_]+)??[\\s:=]*[\\s]*(?:(\\b(rgb)\\s*?\\(\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?,\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?,\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?\\))|(\\b(rgba)\\s*?\\(\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?,\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?,\\s*?(000|0?\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\s*?,\\s*?(0|0\\.\\d*|1|1.0*)\\s*?\\))\\B|(\\b(transparent)|(inherit)|(initial)|(currentColor)|(var)[(]([-]{2}[^)]+)[)])|(#([a-fA-F0-9]){3,4})|(#([a-fA-F0-9]){6,8})|(\\b(hsl)\\s*?\\(\\s*?(000|0?\\d{1,2}|[1-2]\\d\\d|3[0-5]\\d|360)\\s*?,\\s*?(000|100|0?\\d{2}|0?0?\\d)%\\s*?,\\s*?(000|100|0?\\d{2}|0?0?\\d)%\\s*?\\)$)|(\\b(hsla)\\s*?\\(\\s*?(000|0?\\d{1,2}|[1-2]\\d\\d|3[0-5]\\d|360)\\s*?,\\s*?(000|100|0?\\d{2}|0?0?\\d)%\\s*?,\\s*?(000|100|0?\\d{2}|0?0?\\d)%\\s*?,\\s*?(0|0\\.\\d*|1|1.0*)\\s*?\\)\\b))", "permalinkFragment": "fsfJT0", "isFavorite": false, "isStarred": false}, {"title": "tiktok video id", "description": "get tiktok video id\n\nhttps://m.tiktok.com/h5/share/usr/6641141594707361797.html\nhttps://m.tiktok.com/v/6749869095467945218.html\nhttps://www.tiktok.com/@cchelseam..eow/video/6751181801206729990\nhttps://www.tiktok.com/embed/6567659045795758085\nhttps://www.tiktok.com/share/user/6567659045795758085\nhttps://www.tiktok.com/trending?shareId=6744531482393545985", "dateCreated": "2023-05-09T10:42:16.000Z", "dateModified": "2023-05-09T10:42:16.000Z", "author": "threedot", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(@[a-zA-z0-9]*|.*)(\\/.*\\/|trending.?shareId=)([\\d]*)", "permalinkFragment": "PVeIMO", "isFavorite": false, "isStarred": false}, {"title": "<input type=\"week\" /> pattern", "description": "As 'week' input doesn't have a [pattern] attribute, you can check its value with this RegExp.\n\nDoes not check if the given year has 52 or 53 weeks.", "dateCreated": "2022-01-25T14:53:17.000Z", "dateModified": "2022-01-25T15:04:20.000Z", "author": "Ann MB", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(000[1-9]|00[1-9]\\d|0[1-9]\\d\\d|100\\d|10[1-9]\\d|1[1-9]\\d{2}|[2-9]\\d{3}|[1-9]\\d{4}|1\\d{5}|2[0-6]\\d{4}|27[0-4]\\d{3}|275[0-6]\\d{2}|2757[0-5]\\d|275760)-W(([1-4]\\d)|(5[0-3])|0[1-9])$", "permalinkFragment": "ZdKu8J", "isFavorite": false, "isStarred": false}, {"title": "<input type=\"datetime-local\" /> pattern", "description": "As 'datetime-local' input doesn't have a [pattern] attribute, you can check its value with this RegExp.\n\nDoes not check if the given day corresponds to its month .\n\nEx : 2019-02-30 will be considered as correct", "dateCreated": "2022-01-25T14:54:17.000Z", "dateModified": "2022-01-25T15:02:51.000Z", "author": "Ann MB", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 3, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(000[1-9]|00[1-9]\\d|0[1-9]\\d\\d|100\\d|10[1-9]\\d|1[1-9]\\d{2}|[2-9]\\d{3}|[1-9]\\d{4}|1\\d{5}|2[0-6]\\d{4}|27[0-4]\\d{3}|275[0-6]\\d{2}|2757[0-5]\\d|275760)-(0[1-9]|1[012])-(0[1-9]|[12]\\d|3[01])T(0\\d|1\\d|2[0-4]):(0\\d|[1-5]\\d)(?::(0\\d|[1-5]\\d))?(?:.(00\\d|0[1-9]\\d|[1-9]\\d{2}))?$", "permalinkFragment": "iz9fgz", "isFavorite": false, "isStarred": false}, {"title": "<input type=\"date\" /> pattern", "description": "As 'date' input doesn't have a [pattern] attribute, you can check its value with this RegExp.\n\nDoes not check if the given day corresponds to its month.\n\nEx : 1989-03-30 will be considered as correct", "dateCreated": "2022-01-25T14:54:35.000Z", "dateModified": "2022-01-25T15:01:46.000Z", "author": "Ann MB", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 3, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(000[1-9]|00[1-9]\\d|0[1-9]\\d\\d|100\\d|10[1-9]\\d|1[1-9]\\d{2}|[2-9]\\d{3}|[1-9]\\d{4}|1\\d{5}|2[0-6]\\d{4}|27[0-4]\\d{3}|275[0-6]\\d{2}|2757[0-5]\\d|275760)-(0[1-9]|1[012])-(0[1-9]|[12]\\d|3[01])$", "permalinkFragment": "t078BQ", "isFavorite": false, "isStarred": false}, {"title": "<input type=\"time\" /> pattern", "description": "As 'time' input doesn't have a [pattern] attribute, you can check its value with this RegExp.\n\nYou must provide hours and minutes.\nSeconds and milliseconds are optional.\n\nTo \"activate\" seconds on the input, give it the step=\"\" attribute with a number reprensenting the incrementation in seconds.\n\nTo \"activate\" milliseconds on the input, set the step attribute to \"0.001\" ", "dateCreated": "2022-01-25T14:51:13.000Z", "dateModified": "2022-01-25T15:05:39.000Z", "author": "Ann MB", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 3, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(0\\d|1\\d|2[0-4]):(0\\d|[1-5]\\d)(?::(0\\d|[1-5]\\d))?(?:.(00\\d|0[1-9]\\d|[1-9]\\d{2}))?$", "permalinkFragment": "ruQCGZ", "isFavorite": false, "isStarred": false}, {"title": "<input type=\"number\" /> pattern", "description": "As 'number' is not implemented by all browsers, you can check your <input type=\"text\" /> value with this RegExp.", "dateCreated": "2022-01-25T18:29:55.000Z", "dateModified": "2022-01-25T18:36:22.000Z", "author": "Ann MB", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^-?\\d+\\.?(\\d+)?([eE][+-]?\\d+)?$", "permalinkFragment": "NwS4lq", "isFavorite": false, "isStarred": false}, {"title": "Password - mot de passe", "description": "  1 caract\u00e8re minuscule minimum\n+ 1 caract\u00e8re majuscule minimum\n+ 1 chiffre minimum\n+ 1 caract\u00e8re sp\u00e9cial minimum\n+  pas d'espace\n+ 8 caract\u00e8res minimum en tout", "dateCreated": "2022-07-25T15:24:25.000Z", "dateModified": "2022-07-25T15:24:25.000Z", "author": "Sofiane", "flavor": "pcre2", "delimiter": "/", "flags": "gm", "version": 2, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?=\\S*[a-z])(?=\\S*[A-Z])(?=\\S*[0-9])(?=\\S*[[:punct:]|\u00a7\u00b5\u00a4\u00a3\u00a8])\\S{8,}$", "permalinkFragment": "1ndBYE", "isFavorite": false, "isStarred": false}, {"title": "Decimal (with dot)", "description": "Decimal with a dot, if has a dot it needs a number following it", "dateCreated": "2022-01-31T20:33:37.000Z", "dateModified": "2022-01-31T20:33:37.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\d+(?:\\.?\\d+)?", "permalinkFragment": "8i0oWp", "isFavorite": false, "isStarred": false}, {"title": "T\u00fcrkiye Telefon Numaras\u0131 Kontrol\u00fc", "description": "T\u00fcrkiye'nin mobil telefonlar\u0131n\u0131n desenini kontrol eder.\n\n\u00d6rne\u011fin;\n555-123-45-67\n0 555 123 45 67\n+905551234567\n00905551234567", "dateCreated": "2022-03-25T13:12:21.000Z", "dateModified": "2022-03-25T13:12:21.000Z", "author": "Furkan Rehber", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(((\\+|00)?(90)|0)[-| ]?)?((5\\d{2})[-| ]?(\\d{3})[-| ]?(\\d{2})[-| ]?(\\d{2}))$", "permalinkFragment": "9nsqzT", "isFavorite": false, "isStarred": false}, {"title": "Task 4 Quiz", "description": "It needs a major modification, since matching an **integer is required.** The accepted answer \\d+ involves only \"positive\" integers. But *-333 or +777* are also integers, which leads to two possible solutions with the last one being the most accurate:\n\n`-?\\d+ :` \nThe hyphen (optional minus sign) and a digit 1 or more times.\nTo include the negatives.\n\n`[+-]?\\d+ : `\nOptional + or - and the quantity of more than 0 digits.`\n", "dateCreated": "2022-10-21T23:39:34.000Z", "dateModified": "2022-10-21T23:39:34.000Z", "author": "seQuienSoy", "flavor": "pcre2", "delimiter": "/", "flags": "g", "version": 2, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[+-]?\\d+", "permalinkFragment": "cNg8o9", "isFavorite": false, "isStarred": false}, {"title": "allow only alpabets digits and special characters", "description": "allow only alpabets digits and special characters", "dateCreated": "2016-03-29T07:31:40.000Z", "dateModified": "2016-03-29T07:31:40.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[A-Z@~`!@#$%^&*()_=+\\\\';:\"\\/?>.<,-]*$", "permalinkFragment": "xJ7vZ4", "isFavorite": false, "isStarred": false}, {"title": "numbers between 200 and 3000", "description": "", "dateCreated": "2016-04-02T16:48:27.000Z", "dateModified": "2016-04-02T16:48:27.000Z", "author": "Bino", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(^[2-9][0-9]{2}$)|(^[1-2][0-9]{3}$)", "permalinkFragment": "yQ8wI2", "isFavorite": false, "isStarred": false}, {"title": "Top Level Domain (TLD)", "description": "Select TLD (.com, .fr ...) from url or domain", "dateCreated": "2016-04-06T13:40:45.000Z", "dateModified": "2016-04-06T13:40:45.000Z", "author": "Etienne", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(?:[a-zA-Z]*\\.)+([a-zA-Z]+)(?:\\/.*)?", "permalinkFragment": "eV8jM7", "isFavorite": false, "isStarred": false}, {"title": "US and Mexico Phone Numbers with Extensions", "description": "", "dateCreated": "2016-04-06T16:20:52.000Z", "dateModified": "2016-04-06T16:20:52.000Z", "author": "Katrina", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?:(52\\-)|(1\\-))?(\\()?(?(1)[0-9]{2,3}|[2-9][0-9]{2})(?(3)\\)\\s?|(\\-|[.]|\\s|))(?(1)[0-9]|[2-9])[0-9]{2}(?(4)\\4|(?:\\-|[.]|\\s)?)[0-9]{4}(\\s?(?:x|ext|ext.|extension|Ext|Ext.|Extension|#)\\s?[0-9]+)?$", "permalinkFragment": "uC9pO6", "isFavorite": false, "isStarred": false}, {"title": "Replace Czech accents, Part 1", "description": "The result of this put as input into part 2.", "dateCreated": "2016-04-07T22:20:39.000Z", "dateModified": "2016-04-07T22:20:39.000Z", "author": "Premysl Karbula", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(\u00e1)|(\u00e9)|(\u00ed)|(\u00f3)|(\u00fa)|(\u016f)|(\u00fd)|(\u0161)|(\u010d)|(\u0159)|(\u011b)|(\u017e)|(\u00e1)|(\u00e9)|(\u00ed)|(\u00f3)|(\u011b)|(\u00fa)|(\u016f)|(\u00fd)|(\u0161)|(\u010d)|(\u0159)|(\u017e)", "permalinkFragment": "lK5pZ5", "isFavorite": false, "isStarred": false}, {"title": "html", "description": "", "dateCreated": "2016-04-13T12:31:54.000Z", "dateModified": "2016-04-13T12:31:54.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "<\\s*(inverse|reverse|repeat)\\s*(?:value\\s*=\\s*\"(\\d*)\")?\\s*(?:content\\s*=\\s*\".+?\")\\s*>", "permalinkFragment": "yV6fZ5", "isFavorite": false, "isStarred": false}, {"title": "url", "description": "", "dateCreated": "2016-04-15T09:32:30.000Z", "dateModified": "2016-04-15T09:32:30.000Z", "author": "oniro", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(https?:\\/\\/|)(.*?)(\\/.*|)$", "permalinkFragment": "nN7aL3", "isFavorite": false, "isStarred": false}, {"title": "Space replacement", "description": "", "dateCreated": "2016-04-17T06:07:32.000Z", "dateModified": "2016-04-17T06:07:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\s{2,}", "permalinkFragment": "rP1tI0", "isFavorite": false, "isStarred": false}, {"title": "Port validator", "description": "Validates port numbers from 1 to 65535", "dateCreated": "2016-04-19T10:13:02.000Z", "dateModified": "2016-04-19T10:13:02.000Z", "author": "Agust\u00edn Bouillet", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?P<port>[1-9]{1,4}|[1-5][\\d]{1,4}|6[0-5]{2}[0-3][0-5])$", "permalinkFragment": "eV0vL3", "isFavorite": false, "isStarred": false}, {"title": "Website validation", "description": "Simple website validation for your casual usage", "dateCreated": "2016-04-20T10:11:16.000Z", "dateModified": "2023-07-25T16:07:00.000Z", "author": "McSwagLord", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 2, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "a", "permalinkFragment": "eN2cK4", "isFavorite": false, "isStarred": false}, {"title": "Capture MSSQL tables and their potential aliases", "description": "Searches simple Select-From-Where style queries for tables and their aliases (if they have any). Doesn't properly handle subqueries used in place of tables!", "dateCreated": "2016-04-20T23:13:31.000Z", "dateModified": "2016-04-20T23:13:31.000Z", "author": "Tsaukpaetra", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\s(?:from|join)\\s*(\\[?[\\S]+)\\]?(?:\\s?)(?:(?:as)?\\s?)(?!(join|where|from|left|right|outer|inner|on))(\\w*)", "permalinkFragment": "hF2mY2", "isFavorite": false, "isStarred": false}, {"title": "email bunch", "description": "to check email bunch with commas", "dateCreated": "2016-04-21T06:35:18.000Z", "dateModified": "2016-04-21T06:35:18.000Z", "author": "jaswant singh", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(\\w+\\@[a-zA-Z]+\\.[a-zA-Z]{2,3}\\,?)+$", "permalinkFragment": "uE0hD8", "isFavorite": false, "isStarred": false}, {"title": "US Zipcode Validator", "description": "Validation rule:\n * not empty\n * numeric only\n * allow \"XXXXX\", \"XXXXX XXXX\", or \"XXXXX-XXXX\"\n * first 5 digits cannot be \"00000\" (so \"00000\", \"00000 XXXX\" and \"00000-XXXX\" will be regected)", "dateCreated": "2016-04-29T17:57:34.000Z", "dateModified": "2016-04-29T17:57:34.000Z", "author": "Zheyang Song", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?:[1-9]|0(?!0{4}))\\d{4}(?:[-\\s]\\d{4})?$", "permalinkFragment": "fM0qE5", "isFavorite": false, "isStarred": false}, {"title": "dd dd", "description": "", "dateCreated": "2016-04-29T21:55:31.000Z", "dateModified": "2016-04-29T21:55:31.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[a-zA-z]", "permalinkFragment": "oI0pF3", "isFavorite": false, "isStarred": false}, {"title": "IBAN regexp", "description": "", "dateCreated": "2016-05-03T08:58:02.000Z", "dateModified": "2016-05-03T08:58:02.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^([0-9]{2})([0-9]{4})([0-9]{4})([0-9]{4})([0-9]{4})([0-9]{4})([0-9]{2})$", "permalinkFragment": "kL9fI6", "isFavorite": false, "isStarred": false}, {"title": "extract price from text", "description": "", "dateCreated": "2016-05-11T13:26:33.000Z", "dateModified": "2016-05-11T13:26:33.000Z", "author": "mku", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\d+(,\\d{1,2})", "permalinkFragment": "nW5lQ0", "isFavorite": false, "isStarred": false}, {"title": "Line feeds to html paragraphs", "description": "Take the text from a textarea and surround text delimited with newlines with p-tags", "dateCreated": "2016-05-11T17:51:38.000Z", "dateModified": "2016-05-11T17:51:38.000Z", "author": "Bob M", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[\\n\\r\\0]*(?=\\w)(.*)", "permalinkFragment": "nH0vR2", "isFavorite": false, "isStarred": false}, {"title": "URL-http(s)", "description": "Tests for valid http or https protocol URL.\n*2 groups- one for protocol,domain, and any subdomains;      and one for path, query, params, and fragments(if any. \n\nThe following WILL match:\nhttp://foo.com/blah_blah\nhttp://foo.com/blah_blah/\nhttp://foo.com/blah_blah_(wikipedia)\nhttp://foo.com/blah_blah_(wikipedia)_(again)\nhttp://www.example.com/wpstyle/?p=364\nhttps://www.example.com/foo/?bar=baz&inga=42&quux\n\nThe following WILL NOT match:\nhttp://\u272adf.ws/123\nhttp://userid:password@example.com:8080\nhttp://userid:password@example.com:8080/\nhttp://userid@example.com\nhttp://userid@example.com/\nhttp://userid@example.com:8080\nhttp://\u0645\u062b\u0627\u0644.\u0625\u062e\u062a\u0628\u0627\u0631\nhttp://\u4f8b\u5b50.\u6d4b\u8bd5\nhttp://\u0909\u0926\u093e\u0939\u0930\u0923.\u092a\u0930\u0940\u0915\u094d\u0937\u093e\nhttp://-.~_!$&'()*+,;=:%40:80%2f::::::@example.com\nhttp://1337.net\nhttp://a.b-c.de\nhttp://223.255.255.254\n\nThe following SHOULD NOT and DO NOT match:\nhttp://\nhttp://.\nhttp://..\nhttp://../\nhttp://?\nhttp://??\nhttp://??/\nhttp://#\nhttp://##\nhttp://##/\nhttp://foo.bar?q=Spaces should be encoded\n//\n//a\n///a\n///\nhttp:///a\nfoo.com\nrdar://1234\nh://test\nhttp:// shouldfail.com\n:// should fail\nhttp://foo.bar/foo(bar)baz quux\nftps://foo.bar/\nhttp://-error-.invalid/\nhttp://a.b--c.de/\nhttp://-a.b.co\nhttp://a.b-.co\nhttp://0.0.0.0\nhttp://10.1.1.0\nhttp://10.1.1.255\nhttp://224.1.1.1\nhttp://1.1.1.1.1\nhttp://123.123.123\nhttp://3628126748\nhttp://.www.foo.bar/\nhttp://www.foo.bar./\nhttp://.www.foo.bar./\nhttp://10.1.1.1\n\nI only needed http and https; however others could be added.", "dateCreated": "2016-05-19T04:49:23.000Z", "dateModified": "2016-05-19T04:49:23.000Z", "author": "Brennan", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(https?:\\/\\/(?:[[:alnum:]]+\\.)?[[:alnum:]]+\\.com)(\\/\\S*)", "permalinkFragment": "yF5aB6", "isFavorite": false, "isStarred": false}, {"title": "html image tags", "description": "", "dateCreated": "2016-05-20T06:30:24.000Z", "dateModified": "2016-05-20T06:30:24.000Z", "author": "Thien Ho", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "<img.*?src=\"([^\"]*)\".*?width=\"([^\"]*).*?height=\"([^\"]*).*?>", "permalinkFragment": "mL8kS3", "isFavorite": false, "isStarred": false}, {"title": "username", "description": "", "dateCreated": "2016-05-30T06:26:56.000Z", "dateModified": "2016-05-30T06:26:56.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^[A-Za-z0-9_-]{1,20}$", "permalinkFragment": "lR1iF0", "isFavorite": false, "isStarred": false}, {"title": "Extract domain from URL", "description": "Extract the domain out of an url", "dateCreated": "2016-06-01T16:23:45.000Z", "dateModified": "2016-06-01T16:23:45.000Z", "author": "anubhava", "flavor": "javascript", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?:https?:\\/\\/)?(?:[^@\\/\\n]+@)?(?:www\\.)?([^:\\/\\n]+)", "permalinkFragment": "jN6kU2", "isFavorite": false, "isStarred": false}, {"title": "xregexp", "description": "", "dateCreated": "2016-06-01T19:29:06.000Z", "dateModified": "2016-06-01T19:29:06.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[\\p{L}]", "permalinkFragment": "rG6aB7", "isFavorite": false, "isStarred": false}, {"title": "Exclude filename path", "description": "Regular expression to exclude a filename path.", "dateCreated": "2016-06-03T17:44:44.000Z", "dateModified": "2016-06-03T17:44:44.000Z", "author": "JimiC", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(?!(.+filename.ext))", "permalinkFragment": "fR6iM3", "isFavorite": false, "isStarred": false}, {"title": "Get the hash of an URL", "description": "This ER is nice to get a hash from URL, I used today to pass the name of an bootstrap TAB and set the focus when the page loads.\n\nI did it using the Replace of JavaScript.", "dateCreated": "2016-06-13T13:38:11.000Z", "dateModified": "2016-06-13T13:38:11.000Z", "author": "Marcelo Sabadini", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "#([a-zA-Z0-9-_]+)$", "permalinkFragment": "bV6jH9", "isFavorite": false, "isStarred": false}, {"title": "Singapore and Malaysia Mobile numbers", "description": "Singapore and Malaysia Mobile numbers", "dateCreated": "2016-06-14T12:06:02.000Z", "dateModified": "2016-06-14T12:06:02.000Z", "author": "Harsh Gupta", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^6[05]\\d{8,10}$", "permalinkFragment": "cI3zP9", "isFavorite": false, "isStarred": false}, {"title": "Arabic and English", "description": "Matches Arabic and English and all other languages that does not use the special characters.", "dateCreated": "2016-07-12T12:41:49.000Z", "dateModified": "2016-07-12T12:41:49.000Z", "author": "Kishore", "flavor": "javascript", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "[^~`\"=!@#$%\\^&\\*\\(\\)\\-+=\\\\\\|\\}\\]\\{\\['&quot;:?.>,</]+$", "permalinkFragment": "wO4hC8", "isFavorite": false, "isStarred": false}, {"title": "UK Postcode", "description": "as per the following specifications:\n\nFORMAT         EXAMPLE\nAN NAA         M1 1AA\nANN NAA        M60 1NW\nAAN NAA        CR2 6XH\nAANN NAA       DN55 1PT\nANA NAA        W1A 1HQ\nAANA NAA       EC1A 1BB\n\n- The letters Q, V and X are not used in the first position\n- The letters I,J and Z are not used in the second position.\n- The only letters to appear in the third position are A, B, C, D, E, F, G, H, J, K, S, T, U and W.\n- The second half of the postcode is always consistent numeric, alpha, alpha format and the letters C, I, K, M, O and\nV are never used.\n", "dateCreated": "2016-07-25T14:50:06.000Z", "dateModified": "2016-07-25T14:50:06.000Z", "author": "Spluf (Cosmin Pop)", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(^\\s?[^qvx][^ijz]?[0-9]{1,2}[A,B,C,D,E,F,G,H,J,K,S,T,U,W]?\\s?[0-9][^CIKMOV]{2}\\s?)", "permalinkFragment": "tM7yE6", "isFavorite": false, "isStarred": false}, {"title": "Positive number - currency format (1234567890.12)", "description": "Positive number with 10 digits before decimal point (possible zeros in front) and 0-2 digits after (possible trailing zeros).", "dateCreated": "2016-07-29T19:58:21.000Z", "dateModified": "2016-07-29T19:58:21.000Z", "author": "Evgeny Sinitsyn", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(0*[1-9]\\d{0,9}(\\.\\d{0,2})?0*|0*\\.([1-9]|\\d[1-9]|[1-9]\\d)0*)$", "permalinkFragment": "fM9jH7", "isFavorite": false, "isStarred": false}, {"title": "Replace HTML Links with the contaioning text", "description": "", "dateCreated": "2016-08-22T11:54:21.000Z", "dateModified": "2016-08-22T11:54:21.000Z", "author": "WBS", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "(<a(?:(?!\\/a>).|\\n)*(?=\\>).)(.+)(<\\/a>)", "permalinkFragment": "tS7aA3", "isFavorite": false, "isStarred": false}, {"title": "tags", "description": "", "dateCreated": "2016-09-09T09:48:28.000Z", "dateModified": "2016-09-09T09:48:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "\\{\\{(?:\\s*)((?:#|\\^|\\/|>|&|=|!)?)(.*?)(?:\\s*)\\}\\}", "permalinkFragment": "tC8pH3", "isFavorite": false, "isStarred": false}, {"title": "Thai mobile phone", "description": "Start with 0 and the second character is 6|8|9 \n\nThai mobile phone number up to 10\n", "dateCreated": "2017-02-15T10:10:09.000Z", "dateModified": "2017-02-15T10:10:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 2, "downvotes": 1, "score": 0.20765495508553936, "userVote": null, "regex": "^(0[689]{1})+([0-9]{8})+$", "permalinkFragment": "VGDjFX", "isFavorite": false, "isStarred": false}, {"title": "Match regex", "description": "Get from regex subpattern and its regex", "dateCreated": "2016-03-26T15:54:41.000Z", "dateModified": "2016-03-26T15:54:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\?P<([a-zA-Z]+)>(([a-zA-Z0-9-_+*:?|\\[\\]!<>^(),\\.\\\\]+)|(?R)?)\\)", "permalinkFragment": "rN7wM4", "isFavorite": false, "isStarred": false}, {"title": "Test", "description": "Test", "dateCreated": "2016-03-27T17:22:35.000Z", "dateModified": "2016-03-27T17:22:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^a-zA-Z0-9\\p{Cyrillic} ]", "permalinkFragment": "rQ3pO0", "isFavorite": false, "isStarred": false}, {"title": "id validation", "description": "This will catch the id which is an integer and not characters mixed with numbers ", "dateCreated": "2016-03-28T05:06:37.000Z", "dateModified": "2016-03-28T05:06:37.000Z", "author": "noby nirmal", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([1-9])([0-9]*)$", "permalinkFragment": "oT4vU3", "isFavorite": false, "isStarred": false}, {"title": "commit 1", "description": "", "dateCreated": "2016-03-28T05:47:39.000Z", "dateModified": "2016-03-28T05:47:39.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "x", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-z\\d\"._-]{3,128})\n(@)\n([^-]\n[a-z\\d_-]*?\n[^-]\n\\.\n[^-]\n[a-z\\d_-]*?\n[^-])$", "permalinkFragment": "gR6pX3", "isFavorite": false, "isStarred": false}, {"title": "dynamic galery in detail-text", "description": "", "dateCreated": "2016-03-28T12:28:30.000Z", "dateModified": "2016-03-28T12:28:30.000Z", "author": "romqtw", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\#]?)GALERY_([0-9]+)([\\#]?)", "permalinkFragment": "eN7sU9", "isFavorite": false, "isStarred": false}, {"title": "commit 2", "description": "", "dateCreated": "2016-03-28T15:01:30.000Z", "dateModified": "2016-03-28T15:01:30.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "x", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\n(\n(?:[a-z\\d.\"_-](?<!\\.{2}))+\n)\n(@)\n(\n(?:(?!-)[a-z\\d_-]*(?<!-))+\n(?:\\.(?!-)[a-z\\d_-]*(?<!-))+\n)\n$", "permalinkFragment": "wB2wU4", "isFavorite": false, "isStarred": false}, {"title": "http://e3lanatkom.local/index.php?do=shownews", "description": "", "dateCreated": "2016-03-28T15:22:12.000Z", "dateModified": "2016-03-28T15:22:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "e3lanatkom.local.index.php?do=shownews\n", "permalinkFragment": "xJ5hK5", "isFavorite": false, "isStarred": false}, {"title": "@property", "description": "", "dateCreated": "2016-03-28T18:49:55.000Z", "dateModified": "2016-03-28T18:49:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[ \\t*]* @property[-]*(read|write|readwrite)?[ \\t]+ ([\\w\\|]*)[ \\t]+ ([\\$\\w]*)", "permalinkFragment": "nA2tL7", "isFavorite": false, "isStarred": false}, {"title": "sp push", "description": "", "dateCreated": "2016-03-28T20:28:19.000Z", "dateModified": "2016-03-28T20:28:19.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!dist\\/|bower_components\\/).+$", "permalinkFragment": "lM8iC4", "isFavorite": false, "isStarred": false}, {"title": "match but don't capture", "description": "", "dateCreated": "2016-03-28T21:23:12.000Z", "dateModified": "2016-03-28T21:23:12.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Your Updated Reservation Confirmation (?:#\\s?)?\\d+ at .+", "permalinkFragment": "cK4uY9", "isFavorite": false, "isStarred": false}, {"title": "Doubleclick tile1", "description": "", "dateCreated": "2016-03-29T00:30:53.000Z", "dateModified": "2016-03-29T00:30:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<script[^>]*>[^<]*<script[^>]*doubleclick[^>]*>[^\\r\\n]*[\\r\\n\\s]*<noscript><[^>]*tile=1[^>]*><img[^>]*><\\/a><\\/noscript>", "permalinkFragment": "hF3sE6", "isFavorite": false, "isStarred": false}, {"title": "select you exclude bayou", "description": "", "dateCreated": "2016-03-29T06:04:10.000Z", "dateModified": "2016-03-29T06:04:10.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\byou+()|u+s", "permalinkFragment": "rT3mG0", "isFavorite": false, "isStarred": false}, {"title": "ISO8601 DateTime", "description": "Matches an ISO8601 date time string, including fractional time. Does not exclude non-existent times (such as the 29th february in non-leap-years)", "dateCreated": "2016-03-29T10:45:57.000Z", "dateModified": "2016-03-29T10:45:57.000Z", "author": "Tobias Marstaller", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{4}-(0\\d|1[0-2])-([0-2]\\d|3[0-2])(T(([01]\\d|2[0-4]):([0-5]\\d)(:[0-5]\\d([\\.,]\\d+)?)?|([01]\\d|2[0-4])(:[0-5]\\d([\\.,]\\d+)?)?|([01]\\d|2[0-4])([\\.,]\\d+)?))?([+-]\\d\\d(:[0-5]\\d)?|Z)?$", "permalinkFragment": "kV2nD1", "isFavorite": false, "isStarred": false}, {"title": "ISO8601 Date Interval", "description": "ISO8601 Date Interval with support for fractional values and repeating intervals. DOES NOT SUPPORT fixed intervals (e.g. 2016-03-22P3D or 2016-03-22T14:00Z--2016-03-2518:00+02:00). See https://regex101.com/r/iN2zO9/1 for a ISO8601 date time regex.", "dateCreated": "2016-03-29T10:59:24.000Z", "dateModified": "2016-03-29T10:59:24.000Z", "author": "Tobias Marstaller", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(R\\d*\\/)?P(\\d+([\\.,]\\d+)?Y)?(\\d+([\\.,]\\d+)?M)?(\\d+([\\.,]\\d+)?W)?(\\d+([\\.,]\\d+)?D)?((?!.$)T(\\d+([\\.,]\\d+)?H)?(\\d+([\\.,]\\d+)?M)?(\\d+(\\.\\d+)?S)?)?$", "permalinkFragment": "qR2bC7", "isFavorite": false, "isStarred": false}, {"title": "Test No Match", "description": "", "dateCreated": "2016-03-29T13:09:50.000Z", "dateModified": "2016-03-29T13:09:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((\\/[a-zA-Z0-9]*)+)\\{resolutionXY\\}\\/(.*)", "permalinkFragment": "mF6aZ0", "isFavorite": false, "isStarred": false}, {"title": "\"Attached file\" Virus", "description": "MailCleaner attachment name expression.", "dateCreated": "2016-03-29T15:55:55.000Z", "dateModified": "2016-03-29T15:55:55.000Z", "author": "Robin Toy - Strobe Technologies Ltd", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(Attached file: )(.....)\\....$", "permalinkFragment": "bL5yQ2", "isFavorite": false, "isStarred": false}, {"title": "\\[[bui]\\]", "description": "", "dateCreated": "2016-03-29T16:18:00.000Z", "dateModified": "2016-03-29T16:18:00.000Z", "author": "Charlie", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[([biu])]([\\s\\S]+?)\\[\\/\\1]", "permalinkFragment": "jB8kH5", "isFavorite": false, "isStarred": false}, {"title": "test1", "description": "", "dateCreated": "2016-03-29T17:02:49.000Z", "dateModified": "2016-03-29T17:02:49.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ">\".*?(\".*?\")", "permalinkFragment": "uR1dU0", "isFavorite": false, "isStarred": false}, {"title": "Josiah url", "description": "", "dateCreated": "2016-03-29T17:44:06.000Z", "dateModified": "2016-03-29T17:44:06.000Z", "author": "Josiah", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.{0,50}$)^((https?:\\/\\/)?(www\\.)?)?([a-zA-Z0-9&amp;\\-\\'\\+\\$%_,\\/;#])+\\.([a-z]){2,4}$", "permalinkFragment": "dR0cA1", "isFavorite": false, "isStarred": false}, {"title": "Select last symbol in string", "description": "This regexp selected random last symbol in string.", "dateCreated": "2016-03-29T18:31:41.000Z", "dateModified": "2016-03-29T18:31:41.000Z", "author": "Folleah", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(&mdash;)(?!.*\\&mdash;).*", "permalinkFragment": "yK9zB0", "isFavorite": false, "isStarred": false}, {"title": "phone number", "description": "", "dateCreated": "2016-03-29T19:00:13.000Z", "dateModified": "2016-03-29T19:00:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:\\+?(?:(?:\\d){1,3}[ .-]?))?\\(?(?:\\d{3})\\)?[ .-]?\\d{3}[ .-]?\\d{4}$", "permalinkFragment": "kE3gD5", "isFavorite": false, "isStarred": false}, {"title": "finding phone numbers", "description": "we know phone numbers are [one group of 3 numbers] [another group of 3 numbers] [a group of 4 numbers] \n\nwe use D? as a way to find nondigits like the parenthesis\n\n\nThis should also work: \\(?\\d{3}\\)?\\s?-?.?\\d{3}\\", "dateCreated": "2016-03-29T20:31:13.000Z", "dateModified": "2016-03-29T20:31:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\D?[0-9]{3}\\D?\\s?[0-9]{3}\\D?\\s?[0-9]{4}", "permalinkFragment": "hS0kY0", "isFavorite": false, "isStarred": false}, {"title": "making things into columns", "description": "", "dateCreated": "2016-03-29T20:56:41.000Z", "dateModified": "2016-03-29T20:56:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^\\w+\\s?\\D+)\\s?(\\d+[,\\d+]*)\\s?(\\d+[,\\d+]*)\\s?(\\d+[,\\d+]*)\\s?(\\d+[,\\d+]*)\\s?(\\d+[,\\d+]*)\\s?", "permalinkFragment": "pK4bW7", "isFavorite": false, "isStarred": false}, {"title": "weapons list", "description": "", "dateCreated": "2016-03-29T21:32:50.000Z", "dateModified": "2016-03-29T21:32:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^\\w+\\s?\\D+)\\s?(\\d+[,\\d+]*)\\s?(\\d+[,\\d+]*)\\s?(\\d+[,\\d+]*)\\s?(\\d+[,\\d+]*)\\s?(\\d+[,\\d+]*)\\s?", "permalinkFragment": "pN1tI1", "isFavorite": false, "isStarred": false}, {"title": "places", "description": "This is a regular expression for validating places", "dateCreated": "2016-03-30T09:45:39.000Z", "dateModified": "2016-03-30T09:45:39.000Z", "author": "noby nirmal", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9.\\-,]+$", "permalinkFragment": "fJ6cG1", "isFavorite": false, "isStarred": false}, {"title": "Mexico Phones Number", "description": "telefonos en mexico", "dateCreated": "2016-03-30T10:01:14.000Z", "dateModified": "2016-03-30T10:01:14.000Z", "author": "whereisanddy", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(52)?1?(([2-9][1-9][1-8]\\d{7})|([2-9][1-9][1-9][1-8]\\d{6}))", "permalinkFragment": "nX3fG2", "isFavorite": false, "isStarred": false}, {"title": "LDAP basedn check", "description": "Check a given LDAP base DN with or without a hostname", "dateCreated": "2016-03-30T10:19:00.000Z", "dateModified": "2016-03-30T10:19:00.000Z", "author": "Daywalker", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(LDAP:\\/\\/)((?<SERVER>[a-zA-Z0-9.-_]+)\\/)?(?<DN>DC=[a-z0-9-_]+[,]*)+", "permalinkFragment": "dB3eI3", "isFavorite": false, "isStarred": false}, {"title": "MRZ Line 2", "description": "Machine readable passport rule for the second line", "dateCreated": "2016-03-30T11:11:19.000Z", "dateModified": "2016-03-30T11:11:19.000Z", "author": "Igor Ferreira", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<pnum>[\\dA-Z]{9}).(?<nat>\\w{3})(?<yob>\\d{2})(?<mob>\\d{2})(?<dob>\\d{2}).(?<sex>M|F|<{1})(?<yoe>\\d{2})(?<moe>\\d{2})(?<doe>\\d{2}).(?<prnum>[]\\d|<A-Z]{16})", "permalinkFragment": "sI3cM5", "isFavorite": false, "isStarred": false}, {"title": "MRZ Line 1", "description": "Machine Readable passport rule for first line", "dateCreated": "2016-03-30T11:17:13.000Z", "dateModified": "2016-03-30T11:17:13.000Z", "author": "Igor Ferreira", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "P<(?<country>\\w{3})(?<lname>[A-Z]+)(<(?<lname2>[A-Z]+))?<<(?<fname>[A-Z]+)<(?<mname1>[A-Z]+)?<(?<mname2>[A-Z]+)?<(?<mname3>[A-Z]+)?", "permalinkFragment": "tV3dZ0", "isFavorite": false, "isStarred": false}, {"title": "reg example ", "description": "", "dateCreated": "2016-03-30T11:17:43.000Z", "dateModified": "2016-03-30T11:17:43.000Z", "author": "horangs", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[(?P<key>AA|BB|CC)\\]\\s*(?P<value>.*)", "permalinkFragment": "rU0bC3", "isFavorite": false, "isStarred": false}, {"title": "Replace <?= $variable ?> with <?= purify($variable) ?>", "description": "", "dateCreated": "2016-03-30T14:01:14.000Z", "dateModified": "2016-03-30T14:01:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gix", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<\\?=)\n(\n  (\n    (?!\n      (htmlspecialchars|htmlentities|json_encode)\n    )\n    .\n  )*\n  [\\$]{1,}\n  (.*)\n)\n(\\?>)", "permalinkFragment": "iL4cJ8", "isFavorite": false, "isStarred": false}, {"title": "Empty Blank String Validator", "description": "Validation Expression to validate Blank String checks", "dateCreated": "2016-03-30T14:32:31.000Z", "dateModified": "2016-03-30T14:32:31.000Z", "author": "zaheer", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!\\s*$).+", "permalinkFragment": "dF1rT5", "isFavorite": false, "isStarred": false}, {"title": "aegn_closing", "description": "", "dateCreated": "2016-03-30T15:46:40.000Z", "dateModified": "2016-03-30T15:46:40.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<\\/aegn_condition[A-Za-z0-9 ]*>", "permalinkFragment": "vU6sE8", "isFavorite": false, "isStarred": false}, {"title": "Complex Password", "description": "Check if there's at least a lowercase, uppercase, digit and punctuation mark. ", "dateCreated": "2016-03-30T18:45:10.000Z", "dateModified": "2016-03-30T18:45:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*[[:lower:]])(?=.*[[:upper:]])(?=.*[[:digit:]])(?=.*[[:punct:] ])(.+)$", "permalinkFragment": "iB6lL5", "isFavorite": false, "isStarred": false}, {"title": "CORS regex filter", "description": "Regex to validate a Access-Control-Allow-Origin value", "dateCreated": "2016-03-31T01:42:43.000Z", "dateModified": "2016-03-31T01:42:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(http|https):\\/\\/[a-zA-Z][a-zA-Z0-9-.]+(:[0-9]{1,5})?", "permalinkFragment": "rG5eB6", "isFavorite": false, "isStarred": false}, {"title": "Phone Number with no letters or spaces", "description": "Phone Number with no letters or spaces", "dateCreated": "2016-03-31T02:34:06.000Z", "dateModified": "2016-03-31T02:34:06.000Z", "author": "JP Hunter", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9,(,),+,_,#,~,-]{1,45}$", "permalinkFragment": "hE9nC9", "isFavorite": false, "isStarred": false}, {"title": "Use capturing groups to grab CSV columns", "description": "This regex gets the first, the last and the middle part as capturing groups and matches the trailing semicolon as a non-capturing group. This allows you to resort CSV columns.", "dateCreated": "2016-03-31T04:27:37.000Z", "dateModified": "2016-03-31T04:27:37.000Z", "author": "Unkulunkulu", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[^;]+)(.*)(?:;)(.*$)?", "permalinkFragment": "kQ1wM7", "isFavorite": false, "isStarred": false}, {"title": "gas vars", "description": "finds definitions of gas vars in map edits (SS13 /tg/station)", "dateCreated": "2016-03-31T05:15:40.000Z", "dateModified": "2016-03-31T05:15:40.000Z", "author": "duncathan", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?:oxygen|nitrogen|carbon_dioxide|toxins)\\ ?\\=\\ ?.*?[;\\}])", "permalinkFragment": "lQ3wT6", "isFavorite": false, "isStarred": false}, {"title": "\u041f\u043e\u0438\u0441\u043a href \u0432 \u0441\u0442\u0440\u043e\u043a\u0435", "description": "", "dateCreated": "2016-03-31T05:58:50.000Z", "dateModified": "2016-03-31T05:58:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "href=\"([^\\'\\\"]+)", "permalinkFragment": "vT1mY5", "isFavorite": false, "isStarred": false}, {"title": "Matches Everything", "description": "", "dateCreated": "2016-03-31T07:42:21.000Z", "dateModified": "2016-03-31T07:42:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*\\n*)*", "permalinkFragment": "zE1pO2", "isFavorite": false, "isStarred": false}, {"title": "C#", "description": "", "dateCreated": "2016-03-31T10:14:06.000Z", "dateModified": "2016-03-31T10:14:06.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "20[0-9]{2}[01][0-9][0123][0-9]", "permalinkFragment": "fH1rL4", "isFavorite": false, "isStarred": false}, {"title": "don't match mysite or google", "description": "check referrer when redirecting", "dateCreated": "2016-03-31T11:09:46.000Z", "dateModified": "2016-03-31T11:09:46.000Z", "author": "Sandra", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((?!mysite|google).)*$", "permalinkFragment": "mO0gZ5", "isFavorite": false, "isStarred": false}, {"title": "hora", "description": "", "dateCreated": "2016-03-31T12:19:09.000Z", "dateModified": "2016-03-31T12:19:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^([012]\\d:[0-5]\\d:[0-5]\\d))$", "permalinkFragment": "gK1zN0", "isFavorite": false, "isStarred": false}, {"title": "Shot Analysis Pattern", "description": "", "dateCreated": "2016-03-31T13:09:23.000Z", "dateModified": "2016-03-31T13:09:23.000Z", "author": "mail@kevinschiffer.de", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?:^\\/\\/(([a-zA-Z0-9]*)\\..*?)\\/([a-z09_]+))|^([A-Z09_]):)(\\/(?:([a-z]*)?\\/?)(\\d{6}_.*?)\\/)?", "permalinkFragment": "yD9nY5", "isFavorite": false, "isStarred": false}, {"title": "Filter Tag Attributes", "description": "This expression was created to nullify the HTML Tag Attributes", "dateCreated": "2016-03-31T13:10:13.000Z", "dateModified": "2016-03-31T13:10:13.000Z", "author": "Capt.Rooster", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\w{2,})(\\s|=)('|\\\")(#|\\s|\\w.*?('|\\\"))", "permalinkFragment": "tX0iB3", "isFavorite": false, "isStarred": false}, {"title": "Div Matching Test", "description": "Div Matching Test", "dateCreated": "2016-03-31T13:48:30.000Z", "dateModified": "2016-03-31T13:48:30.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gs", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<div class=\"podEventRow[^>]+>(\\s*<div class=\"[^>]+>\\s*(<span[^>]+>|</span>|</?em>|[\\s0-9/,.+-]+)+[^<]*</div>\\s*)+</div>", "permalinkFragment": "eI8eY6", "isFavorite": false, "isStarred": false}, {"title": "hex4", "description": "", "dateCreated": "2016-03-31T14:11:18.000Z", "dateModified": "2016-03-31T14:11:18.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9a-fA-F]{4})", "permalinkFragment": "mH1cI0", "isFavorite": false, "isStarred": false}, {"title": "FUTURES", "description": "", "dateCreated": "2016-03-31T14:35:33.000Z", "dateModified": "2016-03-31T14:35:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.{1,})([FGHJKMNQUVXZ])[A-Za-z]*([0-9]?)([0-9]{1,4})", "permalinkFragment": "oX8gI1", "isFavorite": false, "isStarred": false}, {"title": "Float", "description": "Tests if a string can be parsed as a number which may contain a fractional component. May be negative. Plus sign and scientific notation are not supported.\n\nValid: '1234', '-1234', '-1.234', '1234.1234'\nNot valid: '1.1.1', '+1', '.1', '-.1', '10.1234E10', '1.'", "dateCreated": "2016-03-31T16:58:14.000Z", "dateModified": "2016-03-31T16:58:14.000Z", "author": "Gary Ott", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\-?\\d+(\\.(?=\\d))?\\d*$", "permalinkFragment": "gX1pM8", "isFavorite": false, "isStarred": false}, {"title": "Instagram Access Token", "description": "", "dateCreated": "2016-03-31T17:08:34.000Z", "dateModified": "2016-03-31T17:08:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "access_token=([\\w\\.]+)", "permalinkFragment": "rE5uV8", "isFavorite": false, "isStarred": false}, {"title": "HiveQL query/comment splitter", "description": "Splits a HiveQL line into query and comment sections.", "dateCreated": "2016-03-31T22:19:50.000Z", "dateModified": "2016-03-31T22:19:50.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(.*?)--(.*)$", "permalinkFragment": "kK4iZ8", "isFavorite": false, "isStarred": false}, {"title": "Check phone number", "description": "", "dateCreated": "2016-04-01T10:06:20.000Z", "dateModified": "2016-04-01T10:06:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[\\d|+][0-9]*$", "permalinkFragment": "aH9cZ6", "isFavorite": false, "isStarred": false}, {"title": "location regex", "description": "This regular expression will check for locations,use it with exec function.", "dateCreated": "2016-04-01T10:46:07.000Z", "dateModified": "2016-04-01T10:46:07.000Z", "author": "noby nirmal", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-zA-Z/]+(?!\\w)", "permalinkFragment": "fW1uC6", "isFavorite": false, "isStarred": false}, {"title": "AAMS event id", "description": "Match valid AAMS event id: \"Programma\".\"Num.Avvenimento\"", "dateCreated": "2016-04-01T13:52:04.000Z", "dateModified": "2016-04-01T13:52:04.000Z", "author": "sethmorley", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<cod_prog>[1-9]\\d*)\\.(?<num_avv>[1-9]\\d*)", "permalinkFragment": "uI1zM3", "isFavorite": false, "isStarred": false}, {"title": "Openstack object ID", "description": "gets the id of a created object", "dateCreated": "2016-04-01T14:51:50.000Z", "dateModified": "2016-04-01T14:51:50.000Z", "author": "pierre-jean metzger-gineste (nuabee.fr)", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\ id\\ \\|.)(([a-zA-Z0-9_]{8})-([a-zA-Z0-9_]{4})-([a-zA-Z0-9_]{4})-([a-zA-Z0-9_]{4})-([a-zA-Z0-9_]{12}))", "permalinkFragment": "nK1aA4", "isFavorite": false, "isStarred": false}, {"title": "get the body of a python function and its arguments", "description": "", "dateCreated": "2016-04-01T15:55:11.000Z", "dateModified": "2016-04-01T15:55:11.000Z", "author": "Ethan Riley.", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(def*\\W(\\w+)([\\w\\W]*?))(?=(def)|$)", "permalinkFragment": "fP9lR3", "isFavorite": false, "isStarred": false}, {"title": "first try", "description": "", "dateCreated": "2016-04-01T17:27:39.000Z", "dateModified": "2016-04-01T17:27:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/([a-z\\-\\d]+(\\/[a-z\\-\\d]+)?)\\/(apartments-for-rent|apartamentos-alquiler|homes-for-rent|casas-alquiler(.*))?\\/map", "permalinkFragment": "uI5qH4", "isFavorite": false, "isStarred": false}, {"title": "Get filename without extension from both windows and linux", "description": "Get filename without extension from both windows and linux full file paths", "dateCreated": "2016-04-02T02:01:10.000Z", "dateModified": "2016-04-02T02:01:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.*[\\/\\\\](?<FileNameWithoutExtension>.*)\\.(.*)$", "permalinkFragment": "wH9nO0", "isFavorite": false, "isStarred": false}, {"title": "rocola", "description": "for #regex", "dateCreated": "2016-04-02T03:20:04.000Z", "dateModified": "2016-04-02T03:20:04.000Z", "author": "ElGatoSaez", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "['rocola'], r'([^ ]*\\K)'", "permalinkFragment": "mK3uP7", "isFavorite": false, "isStarred": false}, {"title": "role in organisation", "description": "This is regular expression for exployees in an organization", "dateCreated": "2016-04-02T09:41:40.000Z", "dateModified": "2016-04-02T09:41:40.000Z", "author": "noby nirmal ", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-zA-Z# ]+(?!\\w)(?!\\D)", "permalinkFragment": "vZ7wB2", "isFavorite": false, "isStarred": false}, {"title": "location regex", "description": "This is a regular expression for checking the location", "dateCreated": "2016-04-02T09:45:36.000Z", "dateModified": "2016-04-02T09:45:36.000Z", "author": "noby nirmal", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-zA-Z/ ]+(?!\\w)(?!\\D)", "permalinkFragment": "rX2yD0", "isFavorite": false, "isStarred": false}, {"title": "minimum 0.5", "description": "bitcoin/ ether", "dateCreated": "2016-04-02T13:36:29.000Z", "dateModified": "2016-04-02T13:36:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(0\\.[5-9])\\d{0,7}$|^([1-9]{1})\\.?\\d{0,8}$|^[0-9]{2,3}\\.?\\d{0,8}$", "permalinkFragment": "iD2hF2", "isFavorite": false, "isStarred": false}, {"title": "bitcoin", "description": "bitcoin max 2", "dateCreated": "2016-04-02T13:45:09.000Z", "dateModified": "2016-04-02T13:45:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-1]{1}\\.?\\d{0,8}$|^2{1}\\.?0{0,8}$", "permalinkFragment": "xF9gZ3", "isFavorite": false, "isStarred": false}, {"title": "search file name from path / url ", "description": "", "dateCreated": "2016-04-02T21:46:59.000Z", "dateModified": "2016-04-02T21:46:59.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^\\\\/]+$", "permalinkFragment": "qU5gB1", "isFavorite": false, "isStarred": false}, {"title": "syntax?", "description": "trying to figure out how to find variable names only", "dateCreated": "2016-04-03T00:20:06.000Z", "dateModified": "2016-04-03T00:20:06.000Z", "author": "me", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:^var ((?!\\d).+))|\\1", "permalinkFragment": "lB6gT2", "isFavorite": false, "isStarred": false}, {"title": "basic email validator js", "description": "created to basically validate against mistyped email addresses, is not foolproof, but it is a start. ", "dateCreated": "2016-04-03T02:30:49.000Z", "dateModified": "2016-04-03T02:30:49.000Z", "author": "paul hess", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(([a-z\\d.]+)[@]([a-z\\d]+)[.]([a-z]+))", "permalinkFragment": "vO7kA4", "isFavorite": false, "isStarred": false}, {"title": "Search Regular Expressions", "description": "Search Regular Expressions", "dateCreated": "2016-04-03T05:00:02.000Z", "dateModified": "2016-04-03T05:00:02.000Z", "author": "Youra Hmelenko", "flavor": "pcre", "delimiter": "/", "flags": "xus", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "#\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0442\u0435\u043b\u044c \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c, \u0446\u0438\u0444\u0440\u043e\u0439, \u0431\u0443\u043a\u0432\u043e\u0439, \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u043c \u0441\u043b\u044d\u0448\u0435\u043c, \u0442\u0430\u043a \u0436\u0435 \u044d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c ()[]{}<>\n(?>([!\"#$%&'*+,.\\/:;=?@^_`|~-])\n|(\\<)|(\\()|(\\[)|(\\{))\n#\u041d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0448\u0430\u0431\u043b\u043e\u043d:\n(?(?=.*[^\\\\]\\1.*\\1)(?R)|(.*))\n#\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c\n(?(1)\\1)(?(2)\\>)(?(3)\\))(?(4)\\])(?(5)\\})\n#\u041c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432\n([mixXsuUAJ]*)", "permalinkFragment": "nK5wF6", "isFavorite": false, "isStarred": false}, {"title": "date validation (yyyy-mm-dd)", "description": "", "dateCreated": "2016-04-03T15:22:00.000Z", "dateModified": "2016-04-03T15:22:00.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d{4})-(0[1-9]|1[0-2]|[1-9])-([1-9]|0[1-9]|[1-2]\\d|3[0-1])$", "permalinkFragment": "oE3yO7", "isFavorite": false, "isStarred": false}, {"title": "HTML Anchor to StackExchange Markdown", "description": "", "dateCreated": "2016-04-03T15:28:09.000Z", "dateModified": "2016-04-03T15:28:09.000Z", "author": "Jim Logan", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<a href=\"([^\"\n]*)\">([^<]*)<.*", "permalinkFragment": "yV4iF3", "isFavorite": false, "isStarred": false}, {"title": "Split vertical space CSV with posibility of escaping", "description": "This regex will find all CSV separator that are not escaped", "dateCreated": "2016-04-03T19:41:15.000Z", "dateModified": "2016-04-03T19:41:15.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\|(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", "permalinkFragment": "iW6dE5", "isFavorite": false, "isStarred": false}, {"title": "full-notes-1", "description": "", "dateCreated": "2016-04-03T19:42:07.000Z", "dateModified": "2016-04-03T19:42:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(==+)", "permalinkFragment": "pA6iX7", "isFavorite": false, "isStarred": false}, {"title": "match sql identifiers but not functions", "description": "", "dateCreated": "2016-04-03T21:38:26.000Z", "dateModified": "2016-04-03T21:38:26.000Z", "author": "ikkez", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\w+\\((?:[^)(]+|(?R))*\\))|(?:(\\b[a-zA-Z_](?:[\\w\\-_.]+\\.?))(?=[\\s<>=!)]|$))", "permalinkFragment": "uD4rW3", "isFavorite": false, "isStarred": false}, {"title": "Sustitucion 2 E' e'", "description": "", "dateCreated": "2016-04-04T09:55:43.000Z", "dateModified": "2016-04-04T09:55:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^|[[:space:]])e'([[:space:]]|$|[.|,|;])", "permalinkFragment": "gI1bR2", "isFavorite": false, "isStarred": false}, {"title": "Sustitucion E '", "description": "", "dateCreated": "2016-04-04T10:49:51.000Z", "dateModified": "2016-04-04T10:49:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^|[[:space:]]|-)E([[:space:]])'([^0-9])", "permalinkFragment": "jQ4pN0", "isFavorite": false, "isStarred": false}, {"title": "Parses -FileDateTimeUniversal structure", "description": "", "dateCreated": "2016-04-04T20:25:26.000Z", "dateModified": "2016-04-04T20:25:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}Z", "permalinkFragment": "zL3cG4", "isFavorite": false, "isStarred": false}, {"title": "ICD9", "description": "", "dateCreated": "2016-04-04T20:50:40.000Z", "dateModified": "2016-04-04T20:50:40.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[Vv]\\d{2}\\.*\\d{1,2}$)|(^[Ee]\\d{3}\\.*\\d{0,1}$)|(^\\d{2,4}$)|(^\\d{2}\\.*\\d{1,2}$)", "permalinkFragment": "zP4xK7", "isFavorite": false, "isStarred": false}, {"title": "HCPCS", "description": "", "dateCreated": "2016-04-04T20:51:29.000Z", "dateModified": "2016-04-04T20:51:29.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z]\\d{4}$", "permalinkFragment": "sY0wA0", "isFavorite": false, "isStarred": false}, {"title": "passage parser", "description": "", "dateCreated": "2016-04-05T02:05:08.000Z", "dateModified": "2016-04-05T02:05:08.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\w+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:([a-z]+))?", "permalinkFragment": "cG6uA0", "isFavorite": false, "isStarred": false}, {"title": "URL parser for YouTube and Vimeo", "description": "Extract movie ID from URLs like YouTube and Vimeo", "dateCreated": "2016-04-05T12:23:32.000Z", "dateModified": "2016-04-05T12:23:32.000Z", "author": "Max Chuhryaev", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(http:|https:|)\\/\\/(player.|www.)?(vimeo\\.com|youtu(be\\.com|\\.be|be\\.googleapis\\.com|be\\-nocookie\\.com))\\/(video\\/|embed\\/|watch\\?\\S*v=|v\\/)?([A-Za-z0-9._%-]*)(\\&\\S+)?", "permalinkFragment": "tM7gZ0", "isFavorite": false, "isStarred": false}, {"title": "Kaluga Astral Error Parser", "description": "", "dateCreated": "2016-04-05T14:46:40.000Z", "dateModified": "2016-04-05T14:46:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\W?Receiver\\W)(?P<receiver>\\d+)(\\Wfor abonent\\W)(?P<abonent>[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12})(\\Wunregistered\\W?)", "permalinkFragment": "eJ8sT4", "isFavorite": false, "isStarred": false}, {"title": "Match value between << >>", "description": "Match any value between two less than and two greater than symbols.", "dateCreated": "2016-04-05T15:31:31.000Z", "dateModified": "2016-04-05T15:31:31.000Z", "author": "Adam Mills", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=<<)(.*?)(?=>>)", "permalinkFragment": "nL7jH0", "isFavorite": false, "isStarred": false}, {"title": "Slow As Butts Regex", "description": "Look(ahead|behind)s are slow", "dateCreated": "2016-04-05T16:28:16.000Z", "dateModified": "2016-04-05T16:28:16.000Z", "author": "", "flavor": "pcre", "delimiter": "%", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^,\\[\\]]+(?=(?:\\[|,))", "permalinkFragment": "oW8qZ8", "isFavorite": false, "isStarred": false}, {"title": "project code for multiple codes", "description": "1.\tAbility to capture emails sent and received from Exchange (using Journaling that has been activated on specific users) that have one or more of the following Project Number prefixes:\n\u201c15-\u201c\n\u201c16-\u201c\n\u201c17-\u201d...\n\u201c30-\u201c\n\u201cGGO\u201d\n", "dateCreated": "2016-04-06T04:59:28.000Z", "dateModified": "2016-04-06T04:59:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?i)\\b(?<PROJECT>(15-|16-|17-|30-|GGO)\\S*)", "permalinkFragment": "nQ7pX7", "isFavorite": false, "isStarred": false}, {"title": "ISO 8601 date formats incl. validation", "description": "Test for all ISO 8601 date formats and only accept valid dates, e.g. 2016-02-29, but not 2016-02-30 or 2017-02-29.", "dateCreated": "2016-04-06T09:13:36.000Z", "dateModified": "2016-04-06T09:13:36.000Z", "author": "Christoph P\u00e4per (Crissov)", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[+-]?(\\d{4,10}-((00[1-9]|0[1-9]\\d|[12]\\d\\d|3[0-5]\\d|36[0-5])|(0[1-9]|1[0-2])-(0[1-9]|1\\d|2[0-8])|(0[13-9]|1[0-2])-(29|30)|(0[13578]|1[02])-31|W(0[1-9]|[1-4]\\d|5[0-2])-[1-7]))|((\\d{2,8}([13579][26]|[2468][048]|0[48])|(\\d{0,6}([13579][26]|[02468][048])00))-(366|02-29))|(\\+?\\d{0,6}(([02468][048]|[13579][26])([26]0|71|[38]2|[49]3|[05]4|15|[27]6|37|[48]8|[09]9)|([02468][159]|[13579][37])(50|[16]1|[27]2|33|[48]4|[09]5|[15]6|67|[27]8|[38]9)|([02468][26]|[13579][048])([48]0|[09]1|[15]2|63|[27]4|[38]5|[49]6|[05]7|[16]8|29)|([02468][37]|[13579][159])([27]0|[38]1|[49]2|[05]3|[16]4|25|[37]6|87|[049]8|[5]9))|-\\d{0,6}(([02468][048]|[13579][26])(0[28]|1[39]|24|3[06]|4[17]|5[28]|6[49]|75|8[06]|9[27])|([02468][159]|[13579][37])(0[49]|15|2[06]|3[27]|4[38]|54|6[05]|7[16]|8[28]|9[39])|([02468][26]|[13579][048])(0[51]|16|2[28]|3[39]|44|5[06]|6[17]|7[28]|8[49]|95)|([02468][37]|[13579][159])(0[17]|1[28]|2[49]|35|4[06]|5[27]|6[38]|74|8[05]|9[16])))-W53-[1-7]$", "permalinkFragment": "dK4xD3", "isFavorite": false, "isStarred": false}, {"title": "OPC UA Server", "description": "Gets IP-Address/host name from URL", "dateCreated": "2016-04-06T10:13:47.000Z", "dateModified": "2016-04-06T10:13:47.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:opc.tcp|https|http):\\/\\/(\\S+):\\d+[\\/\\w]*", "permalinkFragment": "iB7oZ6", "isFavorite": false, "isStarred": false}, {"title": "DustySky URI", "description": "This PCRE matches DustySky URI structure.", "dateCreated": "2016-04-06T18:05:48.000Z", "dateModified": "2016-04-06T18:05:48.000Z", "author": "Damian Torres", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\.php(?:[?&](?:(?:Pn|GR|com|o|ho)=[A-Za-z0-9\\/+]{16,}={0,2}|(?:ID|v)=[0-9A-Za-z]{3,}|(?:fr|av)=[^?& ]*)){5,9}", "permalinkFragment": "uO7tL8", "isFavorite": false, "isStarred": false}, {"title": "Marrocco Phone", "description": "", "dateCreated": "2016-04-06T21:40:21.000Z", "dateModified": "2016-04-06T21:40:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "0[5-6][0-9]{8}", "permalinkFragment": "gK5mK5", "isFavorite": false, "isStarred": false}, {"title": "bb", "description": "", "dateCreated": "2016-04-07T09:15:18.000Z", "dateModified": "2016-04-07T09:15:18.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9._-]+@[a-zA-Z]+\\\\.[a-zA-Z]{2,6}$", "permalinkFragment": "gY5sG9", "isFavorite": false, "isStarred": false}, {"title": "(aller) + -z", "description": "", "dateCreated": "2016-04-07T15:36:46.000Z", "dateModified": "2016-04-07T15:36:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([[:space:]])(vais|vas|va|allons|allez|vont)([[:space:]])([^\\Qchez\\E][^\\Qassez\\E][[:alpha:]]*)(z)([[:space:]]|[[:punct:]])", "permalinkFragment": "uS5kX8", "isFavorite": false, "isStarred": false}, {"title": "asas", "description": "", "dateCreated": "2016-04-07T16:52:38.000Z", "dateModified": "2016-04-07T16:52:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "oscar", "permalinkFragment": "uZ6jV1", "isFavorite": false, "isStarred": false}, {"title": "/^([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+", "description": "", "dateCreated": "2016-04-07T17:49:12.000Z", "dateModified": "2016-04-07T17:49:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+$", "permalinkFragment": "rP6sA9", "isFavorite": false, "isStarred": false}, {"title": "Match emoji shortcodes", "description": "", "dateCreated": "2016-04-07T18:49:42.000Z", "dateModified": "2016-04-07T18:49:42.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\:(\\w|\\+|\\-)+\\:)(?=|[\\!\\.\\?]|$)", "permalinkFragment": "iE9uV0", "isFavorite": false, "isStarred": false}, {"title": "teste", "description": "", "dateCreated": "2016-04-07T20:44:15.000Z", "dateModified": "2016-04-07T20:44:15.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(http|https):\\/\\/www.biologiatotal.com.br\\/areas-da-biologia\\/[^\\/]+\\/?([?r=]+[0-9]+)?$", "permalinkFragment": "sA3hI4", "isFavorite": false, "isStarred": false}, {"title": "Folkeskoleklasse", "description": "Regex til at matche folkeskoleklasse input. Matcher et tal fra 1 - 10, derefter et eller flere mellemrum evt. efterfulgt af et punktum eller et punktum derefter efterfulgt af et eller flere mellemrum og til sidst et enkelt bogstav (stort eller lille).", "dateCreated": "2016-04-07T20:49:16.000Z", "dateModified": "2016-04-07T20:49:16.000Z", "author": "Emil Kj\u00e6r Eriksen", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d0?)(([ +]|\\.)?)+[a-zA-Z]$", "permalinkFragment": "lV4eB3", "isFavorite": false, "isStarred": false}, {"title": "Telefoonnummer", "description": "", "dateCreated": "2016-04-07T20:56:32.000Z", "dateModified": "2016-04-07T20:56:32.000Z", "author": "manoe", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0031]{4}[0-9]{8}[^a-z]|^[\\+][0-9]{10}[^a-z]|^[06]{2}[\\-][0-9]{7}[^a-z]|^[0-9]{3}[\\-][0-9]{6}[^a-z]|^[0]{1}[0-9]{8}[^a-z]", "permalinkFragment": "jK0lN0", "isFavorite": false, "isStarred": false}, {"title": "nombres y apellidos", "description": "expresi\u00f3n para python.", "dateCreated": "2016-04-07T21:34:06.000Z", "dateModified": "2016-04-07T21:34:06.000Z", "author": "davila vargas", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[A-Za-z\u00e1\u00e9\u00ed\u00f3\u00fa\u00f1]{2,}([\\s][A-Za-z\u00e1\u00e9\u00ed\u00f3\u00fa\u00f1]{2,})+$", "permalinkFragment": "hJ1gW1", "isFavorite": false, "isStarred": false}, {"title": "MQS", "description": "", "dateCreated": "2016-04-07T22:02:02.000Z", "dateModified": "2016-04-07T22:02:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^PATS_TEST,\\s*[0-9A-Za-z_.]{1,50},\\d+\\/\\d+\\/\\d+\\s+\\d+[:.]\\d+[:.]\\d+,[^,]+,[^,]*,[^,]*,[^,]*,[PFAI],[^,]*,[^,]*,[^,]*,[^,]*,[^,]*,[^,]*,[^,]*,[^,]*$", "permalinkFragment": "wV0mU0", "isFavorite": false, "isStarred": false}, {"title": "Water", "description": "<Trigger R=\"(?&lt;char&gt;[a-zA-Z]*) [a-zA-Z]{1,} gains the effect of Compressed Water from Vortexer\" SD=\"${char}\" ST=\"3\" CR=\"F\" C=\"A6s\" T=\"F\" TN=\"\" Ta=\"F\" />\n", "dateCreated": "2016-04-08T00:33:38.000Z", "dateModified": "2016-04-08T00:33:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Jessip Daggerheart is attempting to sneak up on (?<Player>\\w+)", "permalinkFragment": "gN7wB8", "isFavorite": false, "isStarred": false}, {"title": "Match for RAM, Storage", "description": "Match for ram size and storage size", "dateCreated": "2016-04-08T04:11:12.000Z", "dateModified": "2016-04-08T04:11:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[1-9][0-9]+(\\.[0-9]+)?(MB|GB|TB)$", "permalinkFragment": "vG7jY7", "isFavorite": false, "isStarred": false}, {"title": "Extract Variables from C# File", "description": "", "dateCreated": "2016-04-08T10:58:39.000Z", "dateModified": "2016-04-08T10:58:39.000Z", "author": "Adam Short", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "public\\s(\\S*)\\s(\\S*)|=\\s(\\S*)|\"(.*?)\"", "permalinkFragment": "wS8rM2", "isFavorite": false, "isStarred": false}, {"title": "(yyyy-mm-dd HH:MM:SS)", "description": "", "dateCreated": "2016-04-08T12:51:27.000Z", "dateModified": "2016-04-08T12:51:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\((\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2})\\)", "permalinkFragment": "iN0aU8", "isFavorite": false, "isStarred": false}, {"title": "Select not minified javascripts", "description": "", "dateCreated": "2016-04-08T14:38:02.000Z", "dateModified": "2016-04-08T14:38:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.*(?<!\\.min)\\.js$", "permalinkFragment": "jJ3sH6", "isFavorite": false, "isStarred": false}, {"title": "Nested Exception Thrower", "description": "", "dateCreated": "2016-04-08T15:10:20.000Z", "dateModified": "2016-04-08T15:10:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gs", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\s*\\}\\s*catch\\s*\\(\\s*\\w+\\s+(?<ErrName>\\w+)\\s*\\)\\s*\\{\\s*)m_log.error\\s*\\(\\s*\\g'ErrName'\\s*\\)\\s*;\\s+(throw\\s+new\\s+(?:\\w+)\\s*\\(\\s*\"[^;]+(?=[)];))", "permalinkFragment": "cI5eJ7", "isFavorite": false, "isStarred": false}, {"title": "GESisor", "description": "thx", "dateCreated": "2016-04-09T00:20:21.000Z", "dateModified": "2016-04-09T00:20:21.000Z", "author": "isor", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<Beleg>[A-Z,0-9]{5,6}).(?<Kontierung>[0-9]{3,5}.[0-9]{3}.[0-9]{2}-[0-9]{2}).(?<Datum>[0-9]{2}.[0-1]{1}[0-9]{1}.[0-9]{2}).(?<VS>[0-9]{3}).(?<US>[0-9]{3})?.(?<UmsatzSoSpace>.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?)(?<UmsatzSo>[0-9]{0,1}?[0-9]{0,1}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,1}?[0-9]{0,1}?[0-9]{1}?,[0-9]{2}).(?<UmsatzHaSpace>.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?)(?<UmsatzHa>[0-9]{0,1}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,1}?[0-9]{0,1}?[0-9]{1}?,[0-9]{2}).(?<GK>[0-9]{2}).(?<Buchungstext>[(\\w)(\\W)(\\s)]{53}).(?<MwSt>[0-9]{0,4}).(?<E_Nr>[0-9]{5})", "permalinkFragment": "mJ5eE6", "isFavorite": false, "isStarred": false}, {"title": "GESisor", "description": "thx", "dateCreated": "2016-04-09T00:20:24.000Z", "dateModified": "2016-04-09T00:20:24.000Z", "author": "isor", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<Beleg>[A-Z,0-9]{5,6}).(?<Kontierung>[0-9]{3,5}.[0-9]{3}.[0-9]{2}-[0-9]{2}).(?<Datum>[0-9]{2}.[0-1]{1}[0-9]{1}.[0-9]{2}).(?<VS>[0-9]{3}).(?<US>[0-9]{3})?.(?<UmsatzSoSpace>.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?)(?<UmsatzSo>[0-9]{0,1}?[0-9]{0,1}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,1}?[0-9]{0,1}?[0-9]{1}?,[0-9]{2}).(?<UmsatzHaSpace>.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?)(?<UmsatzHa>[0-9]{0,1}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,1}?[0-9]{0,1}?[0-9]{1}?,[0-9]{2}).(?<GK>[0-9]{2}).(?<Buchungstext>[(\\w)(\\W)(\\s)]{53}).(?<MwSt>[0-9]{0,4}).(?<E_Nr>[0-9]{5})", "permalinkFragment": "vJ5oQ6", "isFavorite": false, "isStarred": false}, {"title": "Odd [abc] non-consecutive repeat", "description": "Recognizes strings containing {a,b,c} an odd number of times that do not repeat the same letter twice in a row. Also recognizes null string.", "dateCreated": "2016-04-09T05:12:32.000Z", "dateModified": "2016-04-09T05:12:32.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((((?<!a)a)|((?<!b)b)|((?<!c)c))((((?<!a)a)|((?<!b)b)|((?<!c)c))(((?<!a)a)|((?<!b)b)|((?<!c)c)))*)?", "permalinkFragment": "uR7aQ9", "isFavorite": false, "isStarred": false}, {"title": "Find Mp4 URL", "description": "Match a http url that contains Mp4", "dateCreated": "2016-04-09T06:13:58.000Z", "dateModified": "2016-04-09T06:13:58.000Z", "author": "AAG", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(http:)[A-Z0-9a-z\\.\\/_]*(\\.mp4)", "permalinkFragment": "mC3aR5", "isFavorite": false, "isStarred": false}, {"title": "German nouns", "description": "Matches German nouns with \"artikels\"", "dateCreated": "2016-04-09T13:41:48.000Z", "dateModified": "2016-04-09T13:41:48.000Z", "author": "Alper K\u00fcr\u015fat @alpeer", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(der|die|das) [A-Z][a-z]+", "permalinkFragment": "zW4tK4", "isFavorite": false, "isStarred": false}, {"title": "exercicio", "description": "", "dateCreated": "2016-04-09T18:20:55.000Z", "dateModified": "2016-04-09T18:20:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([2-6]\u00aa[-feira]{0,})|^(segunda|ter\u00e7a|quarta|quinta|sexta)\\b[-feira]{0,}", "permalinkFragment": "eF6uW5", "isFavorite": false, "isStarred": false}, {"title": "Email Address Collector", "description": "Match obfuscated email addresses. ", "dateCreated": "2016-04-09T22:15:10.000Z", "dateModified": "2016-04-09T22:15:10.000Z", "author": "Nic B", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([A-Za-z0-9.-]*)( at |@)([A-Za-z0-9.-]*)(\\.| dot )([A-Za-z]{2,})", "permalinkFragment": "xM3pM6", "isFavorite": false, "isStarred": false}, {"title": "$_=$ARGV[0];s/(\\w\\W?)(\\W?\\w)/\\u$1$2/g;print", "description": "", "dateCreated": "2016-04-10T12:58:52.000Z", "dateModified": "2016-04-10T12:58:52.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "$_=$ARGV[0];s/(\\w\\W?)(\\W?\\w)/\\u$1$2/g;print", "permalinkFragment": "pJ5oB0", "isFavorite": false, "isStarred": false}, {"title": "GES_isor", "description": ".", "dateCreated": "2016-04-11T05:15:51.000Z", "dateModified": "2016-04-11T05:15:51.000Z", "author": "isorT3st", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<Beleg>[A-Z,0-9]{5,6}).(?<Kontierung>[0-9]{3,5}.[0-9]{3}.[0-9]{2}-[0-9]{2}).(?<Datum>[0-9]{2}.[0-1]{1}[0-9]{1}.[0-9]{2}).(?<VS>[0-9]{3}).(?<US>[0-9]{3})?.(?<UmsatzSoSpace>.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?)(?<UmsatzSo>[0-9]{0,1}?[0-9]{0,1}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,1}?[0-9]{0,1}?[0-9]{1}?,[0-9]{2}).(?<UmsatzHaSpace>.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?)(?<UmsatzHa>[0-9]{0,1}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,1}?[0-9]{0,1}?[0-9]{1}?,[0-9]{2}).(?<GK>[0-9]{2}).(?<Buchungstext>[(\\w)(\\W)(\\s)]{53}).(?<MwSt>[0-9]{0,4}).(?<E_Nr>[0-9]{5})", "permalinkFragment": "cB8tA9", "isFavorite": false, "isStarred": false}, {"title": "Youtube Link", "description": "", "dateCreated": "2016-04-11T14:21:26.000Z", "dateModified": "2016-04-11T14:21:26.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=)([^#\\&\\?]*).*", "permalinkFragment": "bF1hS3", "isFavorite": false, "isStarred": false}, {"title": "SEG_b3ta", "description": "", "dateCreated": "2016-04-11T15:15:35.000Z", "dateModified": "2016-04-11T15:15:35.000Z", "author": "isor_818", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<Beleg>[A-Z,0-9]{5,6})(.?.?[^0-9])(?<Kontierung>[0-9]{3,5}.[0-9]{3}.?[0-9]{2}?.?[0-9]{0,2}-?[0-9]{0,2})(.?.?.?.?[^0-9])(?<Datum>[0-9]{2}.[0-1]{1}[0-9]{1}.[0-9]{2}).(?<VS>[0-9a-zA-Z]{3})(.?.?[^0-9])(?<US>[0-9]{0,3})(.?[^0-9])(?<UmsatzSoSpace>.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?)(?<UmsatzSo>[0-9]{0,1}?[0-9]{0,1}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,1}?[0-9]{0,1}?[0-9]{1}?,[0-9]{2}).(?<UmsatzHaSpace>.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?[^0-9])(?<UmsatzHa>[0-9]{0,1}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,3}?.?[0-9]{0,1}?[0-9]{0,1}?[0-9]{1}?,[0-9]{2}).(?<GK>[0-9]{2}).(?<Buchungstext>([(\\w)(\\W)(\\s)]{21,53})).?(?<MwSt>[0-9]{0,4}[^a-z^A-Z])?(.?[^0-9]{0,4})?(?<E_Nr>[0-9]{5})?.?", "permalinkFragment": "aV3oR6", "isFavorite": false, "isStarred": false}, {"title": "Quadratic Equation Matcher", "description": "", "dateCreated": "2016-04-11T15:31:56.000Z", "dateModified": "2016-04-11T15:31:56.000Z", "author": "eyeballcode", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(-?\\d*)([a-zA-Z])\\^2 *([+-] *\\d*)\\2 *([+-] *\\d+) *= *0$", "permalinkFragment": "gW1nY9", "isFavorite": false, "isStarred": false}, {"title": "poker stars header", "description": "", "dateCreated": "2016-04-11T15:58:43.000Z", "dateModified": "2016-04-11T15:58:43.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "PokerStars\\s+Hand #(?P<hand_id>\\d+):\\s+(?P<game_type>[\\w' ]+)\\s+\\(\\$?(?P<min_bet>\\d+\\.?\\d+)/\\$?(?P<max_bet>\\d+\\.?\\d+)\\s*(?P<currency>\\w+)?\\)\\s+-\\s+(?P<date>\\d+\\/\\d+\\/\\d+)\\s(?P<time>\\d+:\\d+:\\d+)\\s(?P<timezone>[\\w\\d]+)\nTable\\s'(?P<table_name>[\\w ]+)'\\s(?P<max_seats>\\d)[-\\w \\(\\)]+#?(?P<botton_seat>\\d).+", "permalinkFragment": "pS9tL5", "isFavorite": false, "isStarred": false}, {"title": "( + eny sympol", "description": "", "dateCreated": "2016-04-11T22:47:40.000Z", "dateModified": "2016-04-11T22:47:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(([-+\\/*\\bmod\\b])*", "permalinkFragment": "rB1wV0", "isFavorite": false, "isStarred": false}, {"title": "ZettIsor", "description": "", "dateCreated": "2016-04-11T22:56:45.000Z", "dateModified": "2016-04-11T22:56:45.000Z", "author": "isor", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<Beleg>[A-Z0-9]{4,6})\\s{1,3}(?<Kontierung>\\d{3,5}[.]?\\d{3}[.]?\\d{0,2}[-]?\\d{0,2})\\s(?<Datum>[0-3][0-9][.][0-1]\\d[.]\\d\\d)\\s(?<VS>[A-Z0-9]{0,3})\\s(?<US>[0-9]{0,3})\\s?(?<UmsatzSoSPACE>[\\s]{0,17})(?<UmsatzSo>[0-9]{0,2}?[.]?\\d{0,3}[.]?\\d{0,3}[.]?\\d{0,3}?[.]?\\d{0,2}\\d{1},\\d{2})\\s?(?<UmsatzHaSPACE>[\\s]{0,16})\\s(?<UmsatzHa>[0-9]{0,1}?[.]?\\d{0,3}[.]?\\d{0,3}[.]?\\d{0,3}?[.]?\\d{0,2}\\d{1},\\d{2})\\s?(?<GK>[A-Z0-9]{0,2})\\s?(?<Buchungstext>[(\\w)(\\W)(\\s)]{14,53})\\s?(?<MwSt>[0-9]{0,4})?\\s?(?<E_Nr>[0-9]{5}$)?\\s?", "permalinkFragment": "xY5kP7", "isFavorite": false, "isStarred": false}, {"title": "1234567890-123", "description": "", "dateCreated": "2016-04-12T02:31:24.000Z", "dateModified": "2016-04-12T02:31:24.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{10}-\\d{3}$", "permalinkFragment": "pR5cR6", "isFavorite": false, "isStarred": false}, {"title": "atleast 1 character and 1 number", "description": "This regex checks if atleat a character and a number is there regardless of any special characters in the list", "dateCreated": "2016-04-12T06:38:20.000Z", "dateModified": "2016-04-12T06:38:20.000Z", "author": "Akshay Shah", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[a-zA-Z\\d#?!@$%^&*+`~._\\-\\\\\\/;'\"<>{}[\\]]).{6,}$", "permalinkFragment": "qB8nI4", "isFavorite": false, "isStarred": false}, {"title": "Suraj_WithoutDotAll", "description": "In JMeter a response had a new line character in between.\nUsed following regular expression as \"barcode\\?message=(.+)(\\n)(.+)\" and got the the result", "dateCreated": "2016-04-12T07:42:06.000Z", "dateModified": "2016-04-12T07:42:06.000Z", "author": "Suraj Shankla", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "barcode\\?message=(.+)(\\n)(.+)\"", "permalinkFragment": "dV4fR3", "isFavorite": false, "isStarred": false}, {"title": "Simple Shamsy Date", "description": "", "dateCreated": "2016-04-12T10:04:17.000Z", "dateModified": "2016-04-12T10:04:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "9[5-9]\\/[01][09]\\/[0-3][0-9]", "permalinkFragment": "tT9dQ6", "isFavorite": false, "isStarred": false}, {"title": "product_groups", "description": "", "dateCreated": "2016-04-12T11:26:28.000Z", "dateModified": "2016-04-12T11:26:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "product_groups:\\((.*)+\\)", "permalinkFragment": "eP8jW7", "isFavorite": false, "isStarred": false}, {"title": "4 digits", "description": "Find a 4 digit number", "dateCreated": "2016-04-12T14:36:45.000Z", "dateModified": "2016-04-12T14:36:45.000Z", "author": "Marie Imperial", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d{4}", "permalinkFragment": "mV2rA8", "isFavorite": false, "isStarred": false}, {"title": "asset replacement", "description": "", "dateCreated": "2016-04-12T15:21:40.000Z", "dateModified": "2016-04-12T15:21:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "url\\(('|\")?\\/assets\\/(.*?)('|\")?\\)", "permalinkFragment": "wP4tZ8", "isFavorite": false, "isStarred": false}, {"title": "WMO Group File Detector", "description": "Determines whether a filename is a WMO group file or not.", "dateCreated": "2016-04-12T19:10:29.000Z", "dateModified": "2016-04-12T19:10:29.000Z", "author": "Jarl Gullberg", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.+_[0-9]{3}\\.wmo$", "permalinkFragment": "vT5rA3", "isFavorite": false, "isStarred": false}, {"title": "test match gdrive link", "description": "test match gdrive link", "dateCreated": "2016-04-12T23:41:30.000Z", "dateModified": "2016-04-12T23:41:30.000Z", "author": "meksone", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\/[d]\\/)[-\\w]{25,}", "permalinkFragment": "qO9nL4", "isFavorite": false, "isStarred": false}, {"title": "Match wikitext link prefix", "description": "", "dateCreated": "2016-04-13T04:26:40.000Z", "dateModified": "2016-04-13T04:26:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\[\\[[a-zA-Z]*\\:)", "permalinkFragment": "oD8oN5", "isFavorite": false, "isStarred": false}, {"title": "Match first title in wikitext link", "description": "", "dateCreated": "2016-04-13T04:58:00.000Z", "dateModified": "2016-04-13T04:58:00.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[\\[([^\\|\\]]*)(?:\\||.*\\]\\])", "permalinkFragment": "cD8rC9", "isFavorite": false, "isStarred": false}, {"title": "URIs", "description": "catch URIs", "dateCreated": "2016-04-13T11:57:01.000Z", "dateModified": "2016-04-13T11:57:01.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(https?|ircs?):\\/\\/(?:www\\.)?|www\\.)((?:(?:[-\\w]+\\.)+)[-\\w]+)(?::\\d+)?(?:\\/((?:[-a-zA-Z;./\\d#:_?=&,]*)))?", "permalinkFragment": "dL9uY6", "isFavorite": false, "isStarred": false}, {"title": "Inter disassembly instruction parser", "description": "Intel-mnemonics bfd-disassembly instruction parser", "dateCreated": "2016-04-13T14:10:33.000Z", "dateModified": "2016-04-13T14:10:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?|^(\\w+)|\\w+\\sPTR\\s\\[rip\\+[^\\],]+\\](?=.*#\\s0x0*([a-f0-9]+))|(\\w+\\sPTR\\s\\[[^\\],]+\\])|(?<!#\\s)0x([a-f0-9]*)|(?<!#\\s)(?|,(\\w+)|(\\w+),))", "permalinkFragment": "bS5wQ7", "isFavorite": false, "isStarred": false}, {"title": "Email.Regular.Yasin1364 ", "description": "Email Regular Expression from YASIN1364\nSimple and easy for Use.", "dateCreated": "2016-04-13T18:48:54.000Z", "dateModified": "2016-04-13T18:48:54.000Z", "author": "YASIN1364", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[-\\w.]*@[-\\w]*\\.[\\w]{2,4}$", "permalinkFragment": "uH2oJ6", "isFavorite": false, "isStarred": false}, {"title": "IPv4", "description": "I didn't find any good (any easy) ones. So here you go ^^", "dateCreated": "2016-04-13T18:52:21.000Z", "dateModified": "2016-04-13T18:52:21.000Z", "author": "timmyRS", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(([0-9]{1,3})(\\.)([0-9]{1,3})(\\.)([0-9]{1,3})(\\.)([0-9]{1,3}))", "permalinkFragment": "mE2tH2", "isFavorite": false, "isStarred": false}, {"title": "Lead Lag Constraint", "description": "", "dateCreated": "2016-04-13T20:01:57.000Z", "dateModified": "2016-04-13T20:01:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^|\\s|,)(?:(\\d+)\\/)?(\\d+)\\+(?:\\/)?\\-(\\d+)", "permalinkFragment": "iB2fK4", "isFavorite": false, "isStarred": false}, {"title": "Speed index", "description": "For tires", "dateCreated": "2016-04-13T20:59:34.000Z", "dateModified": "2016-04-13T20:59:34.000Z", "author": "Zavs", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b(A\\d{1,8}|B|C|D|E|F|G|J|K|L|M|N|P|Q|R|S|T|U|H|V|W|Y|ZR)\\b", "permalinkFragment": "mG9bQ5", "isFavorite": false, "isStarred": false}, {"title": "Keep mutliple consective attributes", "description": "This regex keeps multiple attributes of given HTML tag. Given that required attributes are consective (in any order) and following the tag name.", "dateCreated": "2016-04-14T06:35:00.000Z", "dateModified": "2016-04-14T06:35:00.000Z", "author": "Ahmad Ahsan", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<([a-z][a-z0-9]*)(?:[^>]*?((?:\\s(?:src|href|style)=['\\\"][^'\\\"]*['\\\"]){0,3}))[^>]*?(\\/?)>", "permalinkFragment": "fU1hS3", "isFavorite": false, "isStarred": false}, {"title": "regex to find domain without instances being part of subdomain.domain", "description": "", "dateCreated": "2016-04-14T06:41:56.000Z", "dateModified": "2016-04-14T06:41:56.000Z", "author": "tripleee", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<!staging\\.)wascc\\.com\\.au", "permalinkFragment": "tQ8oT4", "isFavorite": false, "isStarred": false}, {"title": "Regex Phone fr ", "description": " avec - et . accept", "dateCreated": "2016-04-14T09:27:19.000Z", "dateModified": "2016-04-14T09:27:19.000Z", "author": "jenaye", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9\\-\\.]{1,2})([0-9\\-\\.]{1,2}){5}$", "permalinkFragment": "aL0fE6", "isFavorite": false, "isStarred": false}, {"title": "AddTable", "description": "Add T001 table", "dateCreated": "2016-04-14T11:09:46.000Z", "dateModified": "2016-04-14T11:09:46.000Z", "author": "Hugo A.", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(zzdel\\s+)(from\\s+)([^\\.]+)\\.([^\\s]+\\s)([^\\s]+)\\n(INNER\\s+)(JOIN\\s+)([^\\.]+)\\.(T001\\s+)(t0\\s+)(on\\s+)(t0\\.mandt\\s+)(=\\s+)([^\\.]+)\\.(mandt\\s+)", "permalinkFragment": "bD1xX5", "isFavorite": false, "isStarred": false}, {"title": "fieldOrderNumber", "description": "", "dateCreated": "2016-04-14T13:36:21.000Z", "dateModified": "2016-04-14T13:36:21.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\$field\\.setOrderNumber\\((\\d*)\\)", "permalinkFragment": "eB1pH3", "isFavorite": false, "isStarred": false}, {"title": "dsadsa", "description": "dsadsadsa", "dateCreated": "2016-04-14T16:13:23.000Z", "dateModified": "2016-04-14T16:13:23.000Z", "author": "dsadsadsa", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:[\\s\\/\"]+[-\\w\\/\\\\\\*]+\\s*=.+(?:\\/\\s*>))", "permalinkFragment": "bP8bK5", "isFavorite": false, "isStarred": false}, {"title": "Find specific IPs and IP Patterns", "description": "Having a couple of groups of IPs for which you can establish some kind of pattern", "dateCreated": "2016-04-14T19:40:44.000Z", "dateModified": "2016-04-14T19:40:44.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\b10\\.5\\.(29|31|32)\\.15\\b|\\b10\\.0\\.100\\.75\\b)", "permalinkFragment": "lA7rO0", "isFavorite": false, "isStarred": false}, {"title": "Match localizable strings", "description": "", "dateCreated": "2016-04-15T15:52:49.000Z", "dateModified": "2016-04-15T15:52:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(\"+[A-Z_]+\\\"", "permalinkFragment": "dU3yQ9", "isFavorite": false, "isStarred": false}, {"title": "Match localizable strings", "description": "", "dateCreated": "2016-04-15T15:54:51.000Z", "dateModified": "2016-04-15T15:54:51.000Z", "author": "LadyDascalie", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(\"+[A-Z_]+\\\"", "permalinkFragment": "kF2cI4", "isFavorite": false, "isStarred": false}, {"title": "Pro Football Weekely - Green Bay Packers", "description": "", "dateCreated": "2016-04-15T20:56:06.000Z", "dateModified": "2016-04-15T20:56:06.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gU", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<article(?: class=\"lead\")?><a href=\".*\" target=\"_top\"><img(?: height=\".*\")? src=\"(.*)\"(?: width=\".*\")? \\/><\\/a><h[1,2]><a href=\"(.*)\" target=\"_top\">(.*)<\\/a><\\/h[1,2]><small>By .*<\\/small><small>Updated: (.*) -  (.*)<\\/small><div class=\"clear\"><\\/div><\\/article>", "permalinkFragment": "xA9uB3", "isFavorite": false, "isStarred": false}, {"title": "Stateless functional component matching", "description": "", "dateCreated": "2016-04-15T21:55:49.000Z", "dateModified": "2016-04-15T21:55:49.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^const\\s+\\S+\\s+=\\s+\\(\\n*\\s*props(.|\\n)*\\) => {", "permalinkFragment": "dY3fV3", "isFavorite": false, "isStarred": false}, {"title": "Extron SMP351 info string", "description": "Get the 7 values coming from the device (telnet port 23) after sending the get info (b'I\\r') command.", "dateCreated": "2016-04-15T22:24:16.000Z", "dateModified": "2016-04-15T22:24:16.000Z", "author": "FT", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<ChA([0-9])\\*ChB([0-9])>\\*<(.*?)>\\*<(.*?)>\\*<(.*?)>\\*<(.*?)>\\*<(.*?)>\\n", "permalinkFragment": "kI7sV1", "isFavorite": false, "isStarred": false}, {"title": "lesson 1", "description": "", "dateCreated": "2016-04-16T05:20:33.000Z", "dateModified": "2016-04-16T05:20:33.000Z", "author": "Anmol", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<pre class=(\"[^\"]+\") name=\"code\">", "permalinkFragment": "mL9jY6", "isFavorite": false, "isStarred": false}, {"title": "HTML hyperlinks", "description": "Match all Hyperlinks", "dateCreated": "2016-04-16T16:40:58.000Z", "dateModified": "2016-04-16T16:40:58.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "siU", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<a\\s[^>]*href=(\\\"??)(http[^\\\" >]*?)\\\\1[^>]*>(.*)<\\/a>", "permalinkFragment": "kV9yG4", "isFavorite": false, "isStarred": false}, {"title": "lesson 4", "description": "", "dateCreated": "2016-04-16T20:29:07.000Z", "dateModified": "2016-04-16T20:29:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.+(gif|png|jpg)$", "permalinkFragment": "pE6nZ3", "isFavorite": false, "isStarred": false}, {"title": "URL parser/validator", "description": "Validates and parses absolute URLs:\n\n* Optional http:// or https:// at the start\n* IPv4 supported, IPv6 ***NOT*** supported\n* International characters (punycode) ***NOT*** supported\n* Extracts scheme, username, password, IPv4 address or domain, port, path, querystring and fragment\n* Sensible restrictions on domain and path", "dateCreated": "2016-04-16T20:50:22.000Z", "dateModified": "2016-04-16T20:50:22.000Z", "author": "doin", "flavor": "pcre", "delimiter": "/", "flags": "ix", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(https?:\\/\\/)?                                                # optional scheme\n  ((?:[-a-z0-9._~!$&\\'()*+,;=]|%[0-9a-f]{2})+                  # optional username@,\n   (?::(?:[-a-z0-9._~!$&\\'()*+,;=]|%[0-9a-f]{2})+)?@)?         #          or username:password@\n  (?:((?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5]))    # IPv4 address\n    |((?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z][a-z0-9-]*[a-z0-9]))                           # or dot-separated domain labels\n  (:\\d+)?                                                      # optional port number\n  ((?:\\/(?:[-a-z0-9._~!$&\\'()*+,;=:@]|%[0-9a-f]{2})+)*\\/?)     # path (possibly empty, may end in /, no double-// allowed)\n  (\\?(?:[-a-z0-9._~!$&\\'()*+,;=:@\\/?]|%[0-9a-f]{2})*)?         # optional querystring\n  (\\#(?:[-a-z0-9._~!$&\\'()*+,;=:@\\/?]|%[0-9a-f]{2})*)?$        # optional fragment", "permalinkFragment": "hB1kV1", "isFavorite": false, "isStarred": false}, {"title": "BASE Amplicon filename parsing", "description": "BASE Amplicon parsing", "dateCreated": "2016-04-18T02:18:26.000Z", "dateModified": "2016-04-18T02:18:26.000Z", "author": "sthysel", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<id>\\d{4,6})_1_(?P<amplicon>A16S|ITS|16S|18S)_(?P<vendor>AGRF|UNSW)_(?P<index>[G|A|T|C|_]*)_(?P<plate>\\w{5})_(?P<section>S\\d{1,3})_(?P<lane>L\\d{3})_(?P<read>R[1|2])\\.fastq\\.gz", "permalinkFragment": "wN7hZ2", "isFavorite": false, "isStarred": false}, {"title": "Format phone number", "description": "", "dateCreated": "2016-04-18T08:27:55.000Z", "dateModified": "2016-04-18T08:27:55.000Z", "author": "andreasonny83", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\d]{2})([\\d]{4})", "permalinkFragment": "nN7sD4", "isFavorite": false, "isStarred": false}, {"title": "Parse Youtube links", "description": "", "dateCreated": "2016-04-18T08:38:02.000Z", "dateModified": "2016-04-18T08:38:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:youtube(?:-nocookie)?\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})", "permalinkFragment": "sF7cO3", "isFavorite": false, "isStarred": false}, {"title": "Pubmed Dates", "description": "PubMEd XML contains multiple date blocks, with or without Month, day, hour, minute. \nUSAGE:\n   while(my($pubstatus,$year,$month,$day,$hour,$minute)= $article =~ m%\n  (?:\\s*<PubMedPubDate\\sPubStatus=\\\"(.*?)\\\">\n   (?:\\s*<Year>(\\d*?)</Year>\\s)*\n   (?:\\s*<Month(?:\\/)*>(\\d*?)(?:</Month>)*?\\s)*\n   (?:\\s*<Day(?:\\/)*>(\\d*?)(?:</Day>)*\\s)*\n   (?:\\s*<Hour>(\\d*?)</Hour>\\s)*\n   (?:\\s*<Minute>(\\d*?)</Minute>\\s)*\n     \\s*</PubMedPubDate>)\n   %imsgx){    ", "dateCreated": "2016-04-18T11:52:09.000Z", "dateModified": "2016-04-18T11:52:09.000Z", "author": "Andy Reid", "flavor": "pcre", "delimiter": "%", "flags": "imsgx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:\\s*<PubMedPubDate\\sPubStatus=\\\"(.*?)\\\">\n   (?:\\s*<Year>(\\d*?)</Year>\\s)*\n   (?:\\s*<Month(?:\\/)*>(\\d*?)(?:</Month>)*?\\s)*\n   (?:\\s*<Day(?:\\/)*>(\\d*?)(?:</Day>)*\\s)*\n   (?:\\s*<Hour>(\\d*?)</Hour>\\s)*\n   (?:\\s*<Minute>(\\d*?)</Minute>\\s)*\n     \\s*</PubMedPubDate>)", "permalinkFragment": "dN3rM3", "isFavorite": false, "isStarred": false}, {"title": "Get 3 segment nz table name", "description": "", "dateCreated": "2016-04-18T16:02:56.000Z", "dateModified": "2016-04-18T16:02:56.000Z", "author": "vwei02", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s((?:\\w|_)+\\.(?:\\w|_)+\\.(?:\\w|_)+)\\s", "permalinkFragment": "qM1rH0", "isFavorite": false, "isStarred": false}, {"title": "Get table name from query", "description": "this extracts the table name in the from or join clause from SQL query", "dateCreated": "2016-04-18T16:34:15.000Z", "dateModified": "2016-04-18T16:34:15.000Z", "author": "vwei02", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(?:from|join)(?:\\s|\\()+((?:\\w*\\.\\w*)+)(?:\\s|\\))+)", "permalinkFragment": "gZ6yY8", "isFavorite": false, "isStarred": false}, {"title": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e", "description": "\u041d\u0430\u0439\u0442\u0438 \u0447\u0438\u0441\u043b\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e.", "dateCreated": "2016-04-18T16:55:48.000Z", "dateModified": "2016-04-18T16:55:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b[0-9]{1,3}(?:,[0-9]{3})*(?=\\b(?!\\S)|[\\.\\,\\!\\?])", "permalinkFragment": "nL8yO9", "isFavorite": false, "isStarred": false}, {"title": "Parse faxmail log", "description": "", "dateCreated": "2016-04-19T00:08:33.000Z", "dateModified": "2016-04-19T00:08:33.000Z", "author": "Michael Blair", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z]+\\s+[\\d:]+\\s[\\d:]+)\\s(\\S+)\\s(\\S+):\\s([\\d]+-[\\d]+-[\\d]+\\s[\\d]+:[\\d]+:[\\d]+)?\\s?(.*)", "permalinkFragment": "sP6eH3", "isFavorite": false, "isStarred": false}, {"title": "Exact match of whole word or phrase in string", "description": "word in sentense - true\nsentense has a word - true\nThere is a word in the sentense - true\nSentense wordless - false\nSentense is empty - false\nwords are in the sentense - false\nSentense has words - false\netc.", "dateCreated": "2016-04-19T07:49:22.000Z", "dateModified": "2016-04-19T07:49:22.000Z", "author": "Denisenko Artem", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^word\\s.*|.*\\sword$|.*\\sword\\s.*", "permalinkFragment": "aV8qX7", "isFavorite": false, "isStarred": false}, {"title": "2001-9999", "description": "2001-9999", "dateCreated": "2016-04-19T08:51:44.000Z", "dateModified": "2016-04-19T08:51:44.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([2-9][0][0][1-9])|([2-9]\\d[1-9]\\d)|([2-9][1-9]\\d\\d)", "permalinkFragment": "cD5bV6", "isFavorite": false, "isStarred": false}, {"title": "Cisco Mac address regex", "description": "just a a simple match for a mac address", "dateCreated": "2016-04-19T09:08:06.000Z", "dateModified": "2016-04-19T09:08:06.000Z", "author": "celtic", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9a-f]{4}[\\.][0-9a-f]{4}[\\.][0-9a-f]{4})", "permalinkFragment": "iY0sY1", "isFavorite": false, "isStarred": false}, {"title": "Jaba", "description": "", "dateCreated": "2016-04-19T11:11:34.000Z", "dateModified": "2016-04-19T11:11:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmU", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=P{)(.*\\n?)(?=})", "permalinkFragment": "pI7lK7", "isFavorite": false, "isStarred": false}, {"title": "Url parser", "description": "Parse url with any complexity", "dateCreated": "2016-04-19T12:03:52.000Z", "dateModified": "2016-04-19T12:03:52.000Z", "author": "Bohdanov Mikhail", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:(?:(?:([^:\\/\\/]+):)?\\/\\/)?(?:([\\w\\-.@]+)(?::(.*))?@)?([\\w-.]+)(?::([0-9]+))?)?(?:(\\/.*?\\/?)(?:([\\w-.]+))?)?(?:\\?([^#]*))?(?:#(.*))?$", "permalinkFragment": "xO7jJ0", "isFavorite": false, "isStarred": false}, {"title": "dd/mm/yyyy inc. LeapYears", "description": "1900 - 2015. Useful for Birthdates", "dateCreated": "2016-04-19T12:16:20.000Z", "dateModified": "2016-04-19T12:16:20.000Z", "author": "ChrisAbra", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((((0[1-9]|[12]\\d|3[01])\\/(0[13578]|10|12))|((0[1-9]|[12]\\d|30)\\/(0[469]|11))|((0[1-9]|1[0-9]|2[0-8]))\\/02)\\/(19\\d\\d|(200\\d|201[0-5])))|(29\\/02\\/((?!1900)19([02468][048]|[13579][26])|(2000)|(2004)|(2008)|2012))", "permalinkFragment": "jD2rT6", "isFavorite": false, "isStarred": false}, {"title": "dates", "description": "", "dateCreated": "2016-04-19T12:24:37.000Z", "dateModified": "2016-04-19T12:24:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\D+)(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})(\\D+)(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})(\\D+)", "permalinkFragment": "wV4aT8", "isFavorite": false, "isStarred": false}, {"title": "WINCOR", "description": "", "dateCreated": "2016-04-19T12:30:35.000Z", "dateModified": "2016-04-19T12:30:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(I\\d{11})R(\\d{9})(\\d{6})(0{3})FR(\\D{1})$\n", "permalinkFragment": "fA1cU8", "isFavorite": false, "isStarred": false}, {"title": "foo", "description": "", "dateCreated": "2016-04-19T13:55:19.000Z", "dateModified": "2016-04-19T13:55:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-z0-9.\\-]+$", "permalinkFragment": "cB9cA0", "isFavorite": false, "isStarred": false}, {"title": "CATEGORY", "description": "", "dateCreated": "2016-04-19T16:46:14.000Z", "dateModified": "2016-04-19T16:46:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.+)\\:", "permalinkFragment": "sG7vE5", "isFavorite": false, "isStarred": false}, {"title": "Text to Sentence with URLs", "description": "Text to sentence is easy, but not when there are URLs or website names inside the text. ", "dateCreated": "2016-04-19T20:39:51.000Z", "dateModified": "2016-04-19T20:39:51.000Z", "author": "khpatel4991", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\.!\\?|\\{\\}]+[\\.!\\?]+(?:[a-z]+[\\.!\\?]+)?)", "permalinkFragment": "bL2bC5", "isFavorite": false, "isStarred": false}, {"title": "DD-MM-YYYY", "description": "Any date that as a valid month, a valid date and a year composed of 4 numbers. You can change the '-' caracter to any divider you want.", "dateCreated": "2016-04-19T21:31:19.000Z", "dateModified": "2016-04-19T21:31:19.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-(\\d{4}$)", "permalinkFragment": "nI1uO9", "isFavorite": false, "isStarred": false}, {"title": "uuu", "description": "uuu", "dateCreated": "2016-04-20T05:44:05.000Z", "dateModified": "2016-04-20T05:44:05.000Z", "author": "uuu", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "projection_type*[a-zA-Z0-9=&/;:?+\"_,.-]{1,1000}", "permalinkFragment": "iE4xG0", "isFavorite": false, "isStarred": false}, {"title": "DevExpress AutoFilter: Keyword", "description": "Identify if string contains filter keyword", "dateCreated": "2016-04-20T09:04:27.000Z", "dateModified": "2016-04-20T09:04:27.000Z", "author": "lina", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*(\\sAND\\s|\\sOR\\s|!|~|>|<|=|>=|<=|<>|,|\")+)|(\\s*BLANK\\s*$)", "permalinkFragment": "pE1oV9", "isFavorite": false, "isStarred": false}, {"title": "Search for attributes", "description": "A search attribues in a image tag.", "dateCreated": "2016-04-20T09:32:18.000Z", "dateModified": "2016-04-20T09:32:18.000Z", "author": "Agust\u00edn Bouillet", "flavor": "python", "delimiter": "\"", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<attr>javascript|longdesc|src|alt|style|class|title|data\\-[\\w\\-]+)\\=('|\"|\\\\\"|\\\\')(?P<value>[^\\2]+?)?\\2", "permalinkFragment": "oN6tZ5", "isFavorite": false, "isStarred": false}, {"title": "URL with query", "description": "validate a url with or without query string and scheme", "dateCreated": "2016-04-20T11:35:51.000Z", "dateModified": "2016-04-20T11:35:51.000Z", "author": "Ganey", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((http|https)\\:\\/\\/|)([\\w]+\\.)+\\w+($|[\\w\\/\\.]+$|[\\w\\/\\.]+\\?[\\w\\=\\&\\.]+$)", "permalinkFragment": "fX9dY7", "isFavorite": false, "isStarred": false}, {"title": "email validation", "description": "if you want to validate user mail", "dateCreated": "2016-04-20T12:58:08.000Z", "dateModified": "2016-04-20T12:58:08.000Z", "author": "amine.hallili@gmail.com", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z]+[^@]*@[a-zA-Z]+[^@]*\\.[a-zA-Z]{2,}[^@]*$", "permalinkFragment": "pQ1lM7", "isFavorite": false, "isStarred": false}, {"title": "IRCCloud extract usernames", "description": "Extract the usernames out of a log dump from IRCCloud", "dateCreated": "2016-04-20T13:10:26.000Z", "dateModified": "2016-04-20T13:10:26.000Z", "author": "Ivoah", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\] <(\\S+)>", "permalinkFragment": "cK0jP8", "isFavorite": false, "isStarred": false}, {"title": "email validation ", "description": "checks that the mail is valid", "dateCreated": "2016-04-20T13:10:52.000Z", "dateModified": "2016-04-20T13:10:52.000Z", "author": "amine.hallili@gmail.com", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z]+[^@]*@[a-zA-Z]+[^@]*\\.[a-zA-Z]{2,}[^@]*$", "permalinkFragment": "zY3qV2", "isFavorite": false, "isStarred": false}, {"title": "Password Security and Validation", "description": "A password regex that has to have at least 1 uppercase caracter, 1 lowercase caracter, 1 special caracter and a digit", "dateCreated": "2016-04-20T14:51:14.000Z", "dateModified": "2016-04-20T14:51:14.000Z", "author": "MestreMurai", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((?=\\S*?[A-Z])(?=\\S*?[a-z])(?=\\S*?[0-9])(?=.*[!@#$&*]).{6,})\\S$", "permalinkFragment": "hN2yF5", "isFavorite": false, "isStarred": false}, {"title": "validate 14,9 decimals", "description": "validate 14,9 decimals", "dateCreated": "2016-04-20T14:54:10.000Z", "dateModified": "2016-04-20T14:54:10.000Z", "author": "Ganey", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[\\d]{1,19}($|\\.[\\d]{0,4}$)", "permalinkFragment": "jF1dM5", "isFavorite": false, "isStarred": false}, {"title": "us phone numbers 1", "description": "", "dateCreated": "2016-04-20T15:57:42.000Z", "dateModified": "2016-04-20T15:57:42.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d? ?)?(\\d{3}|\\(\\d{3}\\))[ -]?\\d{3}[ -]?\\d+$", "permalinkFragment": "uJ1pQ3", "isFavorite": false, "isStarred": false}, {"title": "US Phone Numbers 2", "description": "", "dateCreated": "2016-04-20T16:02:01.000Z", "dateModified": "2016-04-20T16:02:01.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d\\s?(?:\\(\\d{3}\\))?\\s?[\\d|\\-]{8,12})$", "permalinkFragment": "eL9hC8", "isFavorite": false, "isStarred": false}, {"title": "Find label tags without for attributes", "description": "", "dateCreated": "2016-04-20T19:06:15.000Z", "dateModified": "2016-04-20T19:06:15.000Z", "author": "DevlshOne", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!.*for).*<label.*$", "permalinkFragment": "bG1gB9", "isFavorite": false, "isStarred": false}, {"title": "Giphy ID Regex", "description": "Get the ID from the multiple Giphy URLs", "dateCreated": "2016-04-20T21:04:43.000Z", "dateModified": "2016-04-20T21:04:43.000Z", "author": "", "flavor": "pcre", "delimiter": "~", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https?://(?|media\\.giphy\\.com/media/([^ /\\n]+)/giphy\\.gif|i\\.giphy\\.com/([^ /\\n]+)\\.gif|giphy\\.com/gifs/(?:.*-)?([^ /\\n]+))", "permalinkFragment": "xD1rQ6", "isFavorite": false, "isStarred": false}, {"title": ".Net", "description": "", "dateCreated": "2016-04-21T05:54:42.000Z", "dateModified": "2016-04-21T05:54:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(9665|\\+9665|009665|05)[0-9]{8}$", "permalinkFragment": "tI5bI5", "isFavorite": false, "isStarred": false}, {"title": "header-tags", "description": "", "dateCreated": "2016-04-21T06:14:13.000Z", "dateModified": "2016-04-21T06:14:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "uiU", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\<[\\s]*h5+[\\s]*\\>(.*)\\<[\\s]*\\/h5+[\\s]*\\>", "permalinkFragment": "dR9yW8", "isFavorite": false, "isStarred": false}, {"title": "Title Case deliminator split", "description": "Splits words for title casing;\n\n``` \n$0[0].toUpperCase();\n```", "dateCreated": "2016-04-21T09:37:15.000Z", "dateModified": "2016-04-21T09:37:15.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:\\s+[^a-z0-9]+|[^a-z0-9']+\\s+|\\s|[&\\/])+", "permalinkFragment": "wL4uU1", "isFavorite": false, "isStarred": false}, {"title": "Validation for full ISO8601 date and time with timezone", "description": "The RegExp validates ISO8601 date and time (without milliseconds) with timezone offset.", "dateCreated": "2016-04-21T11:15:03.000Z", "dateModified": "2016-04-21T11:15:03.000Z", "author": "pioneer32", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:19|20)\\d{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:Z|-0[1-9]|-1\\d|-2[0-3]|-00:?(?:0[1-9]|[1-5]\\d)|\\+[01]\\d|\\+2[0-3])(?:|:?[0-5]\\d)$", "permalinkFragment": "pJ2jS4", "isFavorite": false, "isStarred": false}, {"title": "fasting range", "description": "Find fasting range in lab result text", "dateCreated": "2016-04-21T16:19:44.000Z", "dateModified": "2016-04-21T16:19:44.000Z", "author": "geoff", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(FAST\\.|LT|LESS THAN|below|<|LE|<=|GT|Greater THAN|above|>|GE|>=) ?(\\d+.\\d+|\\d+)(-)(\\d+.\\d+|\\d+)", "permalinkFragment": "tO6aE3", "isFavorite": false, "isStarred": false}, {"title": "result range ", "description": "Find range in lab result text", "dateCreated": "2016-04-21T16:22:55.000Z", "dateModified": "2016-04-21T16:22:55.000Z", "author": "geoff", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": " ?(\\d+.\\d+|\\d+)(-)(\\d+.\\d+|\\d+)", "permalinkFragment": "hZ5nJ3", "isFavorite": false, "isStarred": false}, {"title": "Match all files in root dir", "description": "Intended for use on a webserver.\nOnly matches files in / and excludes files, whcih could be in subfolders (/myfile).", "dateCreated": "2016-04-21T17:39:30.000Z", "dateModified": "2016-04-21T17:39:30.000Z", "author": "rugk (rugk <at> posteo.de)", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^/(([a-zA-Z]*)(\\.[a-zA-Z\\?\\=\\&]*))?$", "permalinkFragment": "aK8fT3", "isFavorite": false, "isStarred": false}, {"title": "bb-*", "description": "aaa", "dateCreated": "2016-04-22T01:02:49.000Z", "dateModified": "2016-04-22T01:02:49.000Z", "author": "wyj", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\bbb-([\\w\\.]+(?::.+)?)=\\\"([\\w\\.:]+?)\\\"\\s?", "permalinkFragment": "xQ6bM4", "isFavorite": false, "isStarred": false}, {"title": "matching foramt ,xxx:", "description": "for dictionary", "dateCreated": "2016-04-22T02:42:47.000Z", "dateModified": "2016-04-22T02:42:47.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\,(.*?)\\:", "permalinkFragment": "wB6rM1", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "", "dateCreated": "2016-04-22T10:25:32.000Z", "dateModified": "2016-04-22T10:25:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s\u79d1\u76ee\u30b3\u30fc\u30c9SOA=(?P<subject_code_soa>.*?)(?:,\\s|\\s\\[PRF)", "permalinkFragment": "sL0cF7", "isFavorite": false, "isStarred": false}, {"title": "Comienzo de string", "description": "Se\u00f1ala el comienzo de un string en modo multilinea", "dateCreated": "2016-04-22T11:03:53.000Z", "dateModified": "2016-04-22T11:03:53.000Z", "author": "Juan Miguel", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^En", "permalinkFragment": "kN1gJ4", "isFavorite": false, "isStarred": false}, {"title": "Add a string to a comma-separated list if not already in list", "description": "- matches only lines that do not contain the string\n- uses negative look arounds\n- appends the new item always to the back\n- suffers from a leading comma in case the list was empty", "dateCreated": "2016-04-22T11:20:25.000Z", "dateModified": "2016-04-22T11:20:25.000Z", "author": "@ubunatic", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(text[ ]*=[ ]*)'((?(?!item_1[,]?).)*)'", "permalinkFragment": "oH4wN4", "isFavorite": false, "isStarred": false}, {"title": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u0430 \u0441\u043b\u043e\u0432", "description": "\u041e\u0442 \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0440\u043e\u043a\u0438, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c", "dateCreated": "2016-04-22T13:21:14.000Z", "dateModified": "2016-04-22T13:21:14.000Z", "author": "DocSS", "flavor": "pcre", "delimiter": "/", "flags": "ugm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([-\\p{L}_&]+)[\\s]+\\1(\\W)", "permalinkFragment": "oU1fP7", "isFavorite": false, "isStarred": false}, {"title": "SASS variables parser", "description": "Parse SASS variables returning its variable name and properties.", "dateCreated": "2016-04-22T14:34:12.000Z", "dateModified": "2016-04-22T14:34:12.000Z", "author": "Agust\u00edn Bouillet", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<selector>\\$[\\w\\-]+)\\s*:\\s*(?P<properties>[^;]*?)\\s*\\;", "permalinkFragment": "xZ1tT3", "isFavorite": false, "isStarred": false}, {"title": "match url", "description": "", "dateCreated": "2016-04-22T16:51:52.000Z", "dateModified": "2016-04-22T16:51:52.000Z", "author": "jakub", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((ftp|http):\\/\\/)?(w{3})?\\.([a-zA-Z0-9.-]+)\\.([a-z]{2}|([a-z]{2,3}\\.[a-z]{2}))", "permalinkFragment": "tM4bQ5", "isFavorite": false, "isStarred": false}, {"title": "Compare two comma separated 4-digit years (first must be greater)", "description": "Compares two comma separated 4-digit years, and if the first one is greater, a match is returned. \nAUTHOR: Wiktor Stribizew\nSO PRofile: http://stackoverflow.com/users/3832970/wiktor-stribi%C5%BCew", "dateCreated": "2016-04-22T22:31:54.000Z", "dateModified": "2016-04-22T22:31:54.000Z", "author": "Wiktor Stribizew", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^ \n (?<born>                      # BORN part start\n  (?:(?<o>1)|(?<t>2)|(?<h>3)|(?<f>4)|(?<v>5)|(?<s>6)|(?<n>7)|(?<e>8)|(?<i>9)|(?<z>0))            # Thousands\n  (?:(?<o2>1)|(?<t2>2)|(?<h2>3)|(?<f2>4)|(?<v2>5)|(?<s2>6)|(?<n2>7)|(?<e2>8)|(?<i2>9)|(?<z2>0))  # Centuries\n  (?:(?<o3>1)|(?<t3>2)|(?<h3>3)|(?<f3>4)|(?<v3>5)|(?<s3>6)|(?<n3>7)|(?<e3>8)|(?<i3>9)|(?<z3>0))  # Decades\n  (?:(?<o4>1)|(?<t4>2)|(?<h4>3)|(?<f4>4)|(?<v4>5)|(?<s4>6)|(?<n4>7)|(?<e4>8)|(?<i4>9)|(?<z4>0))  # Last digit\n )  \n ,  \n (?!\\k<born>) #Fail if years are identical\n (?:\n  #1st digit is lower\n  (?:(?(o)0|(?(t)[01]|(?(h)[0-2]|(?(f)[0-3]|(?(v)[0-4]|(?(s)[0-5]|(?(n)[0-6]|(?(e)[0-7]|(?(i)[0-8]|-1)))))))))) \\d{3}  |\n  #1st digit is lower or identical\n  (?:(?(o)[01]|(?(t)[0-2]|(?(h)[0-3]|(?(f)[0-4]|(?(v)[0-5]|(?(s)[0-6]|(?(n)[0-7]|(?(e)[0-8]|(?(i)[0-9]|-1))))))))))\n    #and 2nd is lower \n    (?:(?(o2)0|(?(t2)[01]|(?(h2)[0-2]|(?(f2)[0-3]|(?(v2)[0-4]|(?(s2)[0-5]|(?(n2)[0-6]|(?(e2)[0-7]|(?(i2)[0-8]|-1)))))))))) \\d{2} |\n  #1st digit is lower or identical\n  (?:(?(o)[01]|(?(t)[0-2]|(?(h)[0-3]|(?(f)[0-4]|(?(v)[0-5]|(?(s)[0-6]|(?(n)[0-7]|(?(e)[0-8]|(?(i)[0-9]|-1))))))))))\n    #and 2nd is lower or identical\n    (?:(?(o2)[01]|(?(t2)[0-2]|(?(h2)[0-3]|(?(f2)[0-4]|(?(v2)[0-5]|(?(s2)[0-6]|(?(n2)[0-7]|(?(e2)[0-8]|(?(i2)[0-9]|-1))))))))))\n      #and 3rd is lower\n      (?:(?(o3)0|(?(t3)[01]|(?(h3)[0-2]|(?(f3)[0-3]|(?(v3)[0-4]|(?(s3)[0-5]|(?(n3)[0-6]|(?(e3)[0-7]|(?(i3)[0-8]|-1)))))))))) \\d |\n  #1st digit is lower or identical\n  (?:(?(o)[01]|(?(t)[0-2]|(?(h)[0-3]|(?(f)[0-4]|(?(v)[0-5]|(?(s)[0-6]|(?(n)[0-7]|(?(e)[0-8]|(?(i)[0-9]|-1))))))))))\n    #and 2nd is lower or identical\n    (?:(?(o2)[01]|(?(t2)[0-2]|(?(h2)[0-3]|(?(f2)[0-4]|(?(v2)[0-5]|(?(s2)[0-6]|(?(n2)[0-7]|(?(e2)[0-8]|(?(i2)[0-9]|-1))))))))))\n      #and 3rd is lower or identical\n      (?:(?(o3)[01]|(?(t3)[0-2]|(?(h3)[0-3]|(?(f3)[0-4]|(?(v3)[0-5]|(?(s3)[0-6]|(?(n3)[0-7]|(?(e3)[0-8]|(?(i3)[0-9]|-1))))))))))\n        #and 4th is lower\n        (?:(?(o4)0|(?(t4)[01]|(?(h4)[0-2]|(?(f4)[0-3]|(?(v4)[0-4]|(?(s4)[0-5]|(?(n4)[0-6]|(?(e4)[0-7]|(?(i4)[0-8]|-1))))))))))\n)\n$", "permalinkFragment": "zW5xV0", "isFavorite": false, "isStarred": false}, {"title": "before or equal to 12:35pm", "description": "", "dateCreated": "2016-04-22T23:15:39.000Z", "dateModified": "2016-04-22T23:15:39.000Z", "author": "Brandon", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(0\\d:[0-5]\\d)|(^1[01]:[0-5]\\d)|(^12:[0-2]\\d)|(^12:3[0-5])", "permalinkFragment": "kK4iL8", "isFavorite": false, "isStarred": false}, {"title": "match anything before 19-35pm", "description": "", "dateCreated": "2016-04-23T00:24:18.000Z", "dateModified": "2016-04-23T00:24:18.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(0\\d:[0-5]\\d)|(^1[0-8]:[0-5]\\d)|(^19:[0-2]\\d)|(^19:3[0-5])", "permalinkFragment": "nF7vR7", "isFavorite": false, "isStarred": false}, {"title": "dawdw", "description": "", "dateCreated": "2016-04-23T08:58:41.000Z", "dateModified": "2016-04-23T08:58:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z])+(\\d+)([]a-zA-Z]+)", "permalinkFragment": "nP3gT8", "isFavorite": false, "isStarred": false}, {"title": "IP username", "description": "", "dateCreated": "2016-04-23T09:02:35.000Z", "dateModified": "2016-04-23T09:02:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "IP=([\\w.:]+)\\smessage='.*'\\suser=(\\w*)", "permalinkFragment": "bW0gU8", "isFavorite": false, "isStarred": false}, {"title": "LettersChangeNumber", "description": "", "dateCreated": "2016-04-23T09:04:11.000Z", "dateModified": "2016-04-23T09:04:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z])+(\\d+)([]a-zA-Z]+)", "permalinkFragment": "vV6dR8", "isFavorite": false, "isStarred": false}, {"title": "Check sudoku", "description": "Check if a sudoku board is valid or not. The board has to be as a single line. Seen at http://codegolf.stackexchange.com/questions/78210/regex-golf-verify-a-sudoku-solution", "dateCreated": "2016-04-23T16:58:38.000Z", "dateModified": "2016-04-23T16:58:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!.*(?=(.))((.{9})+|(.(?!(?3)*$))+|(?(?=.(...)*$)(.(?!(.{27})*$)){7}|.)+)\\1)", "permalinkFragment": "vE5iY9", "isFavorite": false, "isStarred": false}, {"title": "<Trigger R=\"&#92;&#92;aPC -?\\d+ [^:]+:[^&#92;&#92;]+&#92;&#92;/a tells", "description": "", "dateCreated": "2016-04-24T14:36:41.000Z", "dateModified": "2016-04-24T14:36:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Jessip Daggerheart is attempting to sneak up on (?<Player>\\w+)", "permalinkFragment": "tA6xA5", "isFavorite": false, "isStarred": false}, {"title": "\u0440\u0430\u0437\u0431\u043e\u0440 \u0430\u0434\u0440\u0435\u0441\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438", "description": "", "dateCreated": "2016-04-25T06:02:04.000Z", "dateModified": "2016-04-25T06:02:04.000Z", "author": "Stanislav", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:([a-z]+)(?::\\/\\/))?((?:www.)?(?:\\w+-?)+\\w+(?:\\.\\w{2,3}){1,2})\\/((?:(?:\\w+-?\\w+\\/?)+)\\.\\w+)(?:(?:\\?)([^#]*)(?:(?:#)(\\w+))?)?", "permalinkFragment": "aH9xV2", "isFavorite": false, "isStarred": false}, {"title": "Places Regex", "description": "", "dateCreated": "2016-04-25T10:00:19.000Z", "dateModified": "2016-04-25T10:00:19.000Z", "author": "", "flavor": "pcre", "delimiter": "@", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "/([a-z-]+)-([0-9]+[AB]?)/([a-z0-9-]+)-([a-z0-9]+)\\.html", "permalinkFragment": "nF5mM2", "isFavorite": false, "isStarred": false}, {"title": "/software version", "description": "only xxx , xxx.xxx and xxx.xxx.xxx are allowed", "dateCreated": "2016-04-25T11:55:45.000Z", "dateModified": "2016-04-25T11:55:45.000Z", "author": "neha tiwari", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([0-9]{1,3})|(([0-9]{1,3})[.]([0-9]{1,3}))|(([0-9]{1,3})[.]([0-9]{1,3})[.]([0-9]{1,3})))$", "permalinkFragment": "hW9pJ9", "isFavorite": false, "isStarred": false}, {"title": "g-test", "description": "little test for g modifier", "dateCreated": "2016-04-25T12:26:33.000Z", "dateModified": "2016-04-25T12:26:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<ort>(.*?)<\\/ort>", "permalinkFragment": "fU2qS9", "isFavorite": false, "isStarred": false}, {"title": "Email validation", "description": "complete one email validation regex", "dateCreated": "2016-04-25T12:57:21.000Z", "dateModified": "2016-04-25T12:57:21.000Z", "author": "amine.hallili@gmail.com", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-z0-9]+([^@][a-z0-9])*@[a-z0-9]{2,}([^@.][a-z0-9])*(\\.[a-z]{2,}([^@.][a-z0-9])*)+$", "permalinkFragment": "pO8tP8", "isFavorite": false, "isStarred": false}, {"title": "Cucumber feature regex", "description": "", "dateCreated": "2016-04-25T13:30:03.000Z", "dateModified": "2016-04-25T13:30:03.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<step>Given|When|Then|And)\\s+(?<stepName>[^\\r\\n\"]+)\\s*(?<stepParameter>\"[^\"]*\")?\\s*[\\n\\r]", "permalinkFragment": "bE8fO6", "isFavorite": false, "isStarred": false}, {"title": "Regex ID from Gifs.com URLs", "description": "", "dateCreated": "2016-04-25T17:59:58.000Z", "dateModified": "2016-04-25T17:59:58.000Z", "author": "gif, gifs", "flavor": "pcre", "delimiter": "~", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https?://(?|j\\.gifs\\.com/([^ /\\n]+)\\.gif|gifs\\.com/gif/([^ /\\n]+))", "permalinkFragment": "cI3kK1", "isFavorite": false, "isStarred": false}, {"title": "Find line and insert under it", "description": "Finds a line and appends the replacement below it. Tries to preserve indentation (tabs or spaces) and to avoid duplicate replacements.\n\nI used it in Sublime Text to batch edit several instances of a JS config object across several files.", "dateCreated": "2016-04-25T18:26:08.000Z", "dateModified": "2016-04-25T18:26:08.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[\\t\\s]*)(forgot: \"to\",)(?!\\n[\\t\\s]*insert: \"something\",)", "permalinkFragment": "yF2dA2", "isFavorite": false, "isStarred": false}, {"title": "Regex for rfc", "description": "validates the format for the rfc", "dateCreated": "2016-04-25T19:01:47.000Z", "dateModified": "2016-04-25T19:01:47.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z]{3,4}(\\d{6})((\\D|\\d){3})?$", "permalinkFragment": "kW2yI9", "isFavorite": false, "isStarred": false}, {"title": "Stone", "description": "Stone Stuff", "dateCreated": "2016-04-25T21:40:40.000Z", "dateModified": "2016-04-25T21:40:40.000Z", "author": "mralves", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<date>\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2})\\|\\|(?<key>[^\\|]+)\\|\\|(?<level>[^\\|]+)\\|\\|(?<info>[^\\|\\n]+)(?:\\|\\|(?<optional>[\\S\\s]*?)(?=\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\|\\|[^\\|]+\\|\\|[^\\|]+))?", "permalinkFragment": "nI6zA5", "isFavorite": false, "isStarred": false}, {"title": "CUW - Remarketing List", "description": "", "dateCreated": "2016-04-25T23:51:29.000Z", "dateModified": "2016-04-25T23:51:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*online\\.cuw\\.edu\\/.*(online\\-education\\-degrees|masters\\-degree\\-education|.*master\\-of\\-science\\-in.*|.*masters\\-of\\-science\\-in.*|programs\\/graduate\\/(educational\\-leadership|literacy|special-education|teaching\\-learning))|.*onlineinfo\\.cuw\\.edu\\/(go\\/(7\\-key\\-ideas\\-lutheran\\-school\\-administrators|career\\-consultation|curriculum\\-instruction|education\\-(degrees|technology)|educational\\-leadership|educator\\-quiz|general\\-accelerated|ms\\-(counseling|education\\-literacy|educational\\-administration|special\\-education|teaching\\-and\\-learning))))\\/|.*www\\.cuw\\.edu\\/(programs\\/(ed\\-admin|educationtech|familystudies|literacy|specialeducation|teachlearn)\\/index\\.html)|.*onlineinfo\\.cuw\\.edu\\/strengthsfinder\\-for\\-teachers", "permalinkFragment": "aU7fP6", "isFavorite": false, "isStarred": false}, {"title": "Ip address", "description": "xxx.xxx.xxx.xxx and xxx.xxx.xxx.xxx/xxx", "dateCreated": "2016-04-26T04:55:44.000Z", "dateModified": "2016-04-26T04:55:44.000Z", "author": "nehatiwari", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^0*([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.0*([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.0*([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.0*(([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])|(([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])(\\/([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5]))))$", "permalinkFragment": "mY2lW6", "isFavorite": false, "isStarred": false}, {"title": "log", "description": "", "dateCreated": "2016-04-26T08:50:58.000Z", "dateModified": "2016-04-26T08:50:58.000Z", "author": "lattis", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\[\\d{4}-\\d{2}-\\d{2}\\s+\\d{2}:\\d{2}:\\d{2},\\d{3}\\])\\s+(DEBUG|INFO|ERROR)\\s+(\\[(\\w?\\s*)*\\])", "permalinkFragment": "bF8zZ9", "isFavorite": false, "isStarred": false}, {"title": ".Net app.config appSettings key value matcher", "description": "", "dateCreated": "2016-04-26T11:26:33.000Z", "dateModified": "2016-04-26T11:26:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "key\\s*=\\s*\"(Lock.Id)\"\\s+value\\s*=\\s*\"([^\\\"]+)\"", "permalinkFragment": "bS4eY4", "isFavorite": false, "isStarred": false}, {"title": "CISCO IP Phone EAP-MD5 Username matching", "description": "", "dateCreated": "2016-04-26T11:53:02.000Z", "dateModified": "2016-04-26T11:53:02.000Z", "author": "R. de Jong", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(CP-([0-9A-Z]{1,6})-SEP([0-9A-F]{12}))$", "permalinkFragment": "oP4hB9", "isFavorite": false, "isStarred": false}, {"title": "BDDF", "description": "", "dateCreated": "2016-04-26T12:48:17.000Z", "dateModified": "2016-04-26T12:48:17.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^      Comnt   \u00a3(.+)$", "permalinkFragment": "uS5gK4", "isFavorite": false, "isStarred": false}, {"title": "crappy method call search (2+ args)", "description": "", "dateCreated": "2016-04-26T14:29:53.000Z", "dateModified": "2016-04-26T14:29:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "hasAccess\\((?:[^,]+,){2}[^()]+\\)", "permalinkFragment": "qZ4eG8", "isFavorite": false, "isStarred": false}, {"title": "Find PHP close tag at end of file", "description": "", "dateCreated": "2016-04-26T14:41:09.000Z", "dateModified": "2016-04-26T14:41:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\?>\\s*\\Z", "permalinkFragment": "oF5eM5", "isFavorite": false, "isStarred": false}, {"title": "marcel hostnames", "description": "", "dateCreated": "2016-04-26T16:42:03.000Z", "dateModified": "2016-04-26T16:42:03.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(www|qa|backoffice|backoffice\\.qa)\\.marceldigital\\.com|marceldigital(\\-south\\-central|\\-prod\\-swap|\\-central|\\-west|\\-east)?\\.azurewebsites\\.net|localhost", "permalinkFragment": "dC5uL0", "isFavorite": false, "isStarred": false}, {"title": "TitleCase__elementWithCase--modifierMatcher", "description": "Match BEM type regex.", "dateCreated": "2016-04-26T20:12:11.000Z", "dateModified": "2016-04-26T20:12:11.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([A-Z][a-z]+)+((__([a-z]+[A-Z]?)+)(--([a-z]+[A-Z]?)+)?)?$", "permalinkFragment": "dR3rD3", "isFavorite": false, "isStarred": false}, {"title": "shortcode iframe regex", "description": "shortcode iframe regex", "dateCreated": "2016-04-26T21:44:52.000Z", "dateModified": "2016-04-26T21:44:52.000Z", "author": "James Peng", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<span data-shortcode=\"iframe\"[^>]*data-src=[\\\\\\/]*\\\"(http:[\\\\\\/]+([^\\\\\\/]+)[^'\\\"]+)['\\\"]", "permalinkFragment": "wM7gN4", "isFavorite": false, "isStarred": false}, {"title": "hacked-url-parser", "description": "", "dateCreated": "2016-04-27T01:37:33.000Z", "dateModified": "2016-04-27T01:37:33.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-z]+\\:)\\/*([^\\/\\s\\?]*)(\\?[a-z0-9\\-@\\^=%&;\\/~\\+]*)*[\\?]?([^ \\#]*)#?([^ \\#]*)", "permalinkFragment": "dR5qN1", "isFavorite": false, "isStarred": false}, {"title": "test url parse #6", "description": "", "dateCreated": "2016-04-27T01:38:29.000Z", "dateModified": "2016-04-27T01:38:29.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-z]+\\:)\\/*([^\\/\\s\\?]*)(\\?[a-z0-9\\-@\\^=%&;\\/~\\+]*)*[\\?]?([^ \\#]*)#?([^ \\#]*)", "permalinkFragment": "hI0cR2", "isFavorite": false, "isStarred": false}, {"title": "More than 2 empty lines", "description": "", "dateCreated": "2016-04-27T08:47:18.000Z", "dateModified": "2016-04-27T08:47:18.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\s*(\\r\\n?|\\n)){3,}", "permalinkFragment": "pW8dO9", "isFavorite": false, "isStarred": false}, {"title": "Query String", "description": "Cross-engine query string parsing including when stored in anchor tags.\n\nNot really tested, but basic functionality is there.", "dateCreated": "2016-04-27T15:11:12.000Z", "dateModified": "2016-04-27T15:11:12.000Z", "author": "abernix", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(?=[#?]).*?[#?]|(?!.*?[#?])^|&)([^= \\n]+?)=([^& \\n]+?)(?=$|&)", "permalinkFragment": "lQ4sO5", "isFavorite": false, "isStarred": false}, {"title": "Versione Abbreviata", "description": "", "dateCreated": "2016-04-27T17:37:17.000Z", "dateModified": "2016-04-27T17:37:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\w]+\\.asp", "permalinkFragment": "pV6aK5", "isFavorite": false, "isStarred": false}, {"title": "GA WDi 14", "description": "Regular expression for General Assembly WDi 14", "dateCreated": "2016-04-28T11:10:43.000Z", "dateModified": "2016-04-28T11:10:43.000Z", "author": "Fabio Camatti", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^aeiou][aeiou][^aeiou]$", "permalinkFragment": "kJ7rT9", "isFavorite": false, "isStarred": false}, {"title": "perl", "description": "", "dateCreated": "2016-04-28T11:55:29.000Z", "dateModified": "2016-04-28T11:55:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-z_]+):((\\d+M)|all):{0,}([a-z_]+){0,}", "permalinkFragment": "uK4mH6", "isFavorite": false, "isStarred": false}, {"title": "mewmew", "description": "", "dateCreated": "2016-04-28T12:03:21.000Z", "dateModified": "2016-04-28T12:03:21.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\w+ id(\\d{4})\\:\\n(.*)\\n{3}", "permalinkFragment": "qK9bP2", "isFavorite": false, "isStarred": false}, {"title": "sudo-command", "description": "unix sudo command search", "dateCreated": "2016-04-28T15:04:02.000Z", "dateModified": "2023-07-20T09:30:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 2, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[^;\\n]*;){3}\\s+(?P<command>.+)", "permalinkFragment": "zA8rL6", "isFavorite": false, "isStarred": false}, {"title": "RPN calculator grammar", "description": "For a custom, nested stack, RPN calculator", "dateCreated": "2016-04-28T15:42:30.000Z", "dateModified": "2016-04-28T15:42:30.000Z", "author": "Alex Pilon", "flavor": "pcre", "delimiter": "/", "flags": "mxuJ", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<number>\n  (?:\n    \\d+\n    (?:\\.\\d*)?\n  )|\n  (?:\\d*\\.\\d+)\n)|\n(?<immediate>\n  (?<str>\n    (?:\n      '\n      (?<__str__>\n        (?:[^'\\\\]|\\\\')*\n      )\n      '\n    )|\n    (?:\n      \\\n\n      (?<__str__>.)\n    )\n  )|\n  (?<operator>\n    (?:\n      p|\n      \\\u00bb|\n      R|\n      \\_|\n      \\-|\n      \\\u00b0|\n      r|\n      \\\u2229|\n      \\\u00ab|\n      \\\u221e|\n      \\\u2205|\n      \\~|\n      \\/|\n      \\]|\n      C|\n      \\%|\n      P|\n      \\*|\n      \\^|\n      \\\u222a|\n      d|\n      \\[|\n      F|\n      l|\n      s|\n      \\!|\n      \\+|\n      \\=|\n      h|\n      f|\n      c\n    )\n  )|\n  (?<apply>\\$)|\n  (?<space>\\s+)\n)", "permalinkFragment": "eP0nH2", "isFavorite": false, "isStarred": false}, {"title": "Extract CN from DN (CanonicalName from DistinguishedName)", "description": "Given a DistinguishedName string, extracts the CN portion, coping with escaped characters", "dateCreated": "2016-04-28T16:23:10.000Z", "dateModified": "2016-04-28T16:23:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(CN=)(.*?)(?<!\\\\),.*", "permalinkFragment": "kV2oX6", "isFavorite": false, "isStarred": false}, {"title": "Panda", "description": "", "dateCreated": "2016-04-28T17:35:52.000Z", "dateModified": "2016-04-28T17:35:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/(?:(?![a-z]+\\/)(?![A-Z]+\\/)(?![0-9]+\\/)[a-zA-Z0-9]+\\/[A-F0-9\\/]*?){3,} HTTP", "permalinkFragment": "qM4hW8", "isFavorite": false, "isStarred": false}, {"title": "MERS-CoV", "description": "Search text for MERS-CoV references", "dateCreated": "2016-04-28T19:11:09.000Z", "dateModified": "2016-04-28T19:11:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(MERS|SARS)|(Middle\\sEast\\sRespiratory\\sSyndrome)|(SARS|MERS)-CoV|coronavirus(es)", "permalinkFragment": "jS8vW8", "isFavorite": false, "isStarred": false}, {"title": "Find_Anything_between_sequences", "description": "This will find anything between 2 sequences and only return the value", "dateCreated": "2016-04-28T19:47:38.000Z", "dateModified": "2016-04-28T19:47:38.000Z", "author": "BTW", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "proxy for task \\[\\K.+?(?=from job)", "permalinkFragment": "hI2tH5", "isFavorite": false, "isStarred": false}, {"title": "extract arguments from a javascript function", "description": "extract arguments from a javascript function", "dateCreated": "2016-04-29T10:10:19.000Z", "dateModified": "2016-04-29T10:10:19.000Z", "author": "SS", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "function\\([\\s]*?'([\\S]*?)'[\\s]*?,[\\s]*?'([\\S]*?)'[\\s]*?,[\\s]*?'([\\S]*?)'[\\s]*?,[\\s]*?'([\\S]*?)'\\)", "permalinkFragment": "jJ7lH4", "isFavorite": false, "isStarred": false}, {"title": "Google extract id", "description": "", "dateCreated": "2016-04-29T10:42:21.000Z", "dateModified": "2016-04-29T10:42:21.000Z", "author": "Razvan Suciu", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:https?:\\/\\/)?(?:www\\.)?plus\\.google\\.com\\/([\\w]+\\/)?([\\d]\\/)?([+]?[\\w(\\_\\-)?p{L}]+|[\\d]{21})(?:\\/)?(?:[\\w(\\-\\_)?]+)?", "permalinkFragment": "iW5dM7", "isFavorite": false, "isStarred": false}, {"title": "IP address validation", "description": "shortest ip validation regex", "dateCreated": "2016-04-29T13:43:29.000Z", "dateModified": "2016-04-29T13:43:29.000Z", "author": "Giacomo.", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((2[0-4]\\d|25[0-5]|1?\\d?\\d)\\.){3}(2[0-4]\\d|25[0-5]|1?\\d?\\d)", "permalinkFragment": "iB6lQ9", "isFavorite": false, "isStarred": false}, {"title": "Find All Types In Salesforce's Package.xml", "description": "This regex will find all the types definitions following the <types><members></members><name></name></types>", "dateCreated": "2016-04-29T16:32:48.000Z", "dateModified": "2016-04-29T16:32:48.000Z", "author": "Jerome Russ", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s*<types>\\s*(<members>.+<\\/members>\\s*)*<name>.*<\\/name>\\s*<\\/types>", "permalinkFragment": "pI3lA7", "isFavorite": false, "isStarred": false}, {"title": "get instance name", "description": "takes a url and takes the instance name after the base url", "dateCreated": "2016-04-29T18:45:45.000Z", "dateModified": "2016-04-29T18:45:45.000Z", "author": "amitair", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".+:\\/\\/[\\w,\\.]*\\/([\\w \\.]*)\\/?", "permalinkFragment": "fQ0kD9", "isFavorite": false, "isStarred": false}, {"title": "isDomainValid", "description": "isDomainValid", "dateCreated": "2016-04-29T19:54:10.000Z", "dateModified": "2016-04-29T19:54:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:(?![\u00d7\u00de\u00df\u00f7\u00fe\u00f8])[-0-9a-z\u00c0-\u00ff.])+\\.(?:[a-z])+?$", "permalinkFragment": "fR0dN3", "isFavorite": false, "isStarred": false}, {"title": "Negative", "description": "Negation in pattern example", "dateCreated": "2016-04-29T20:07:47.000Z", "dateModified": "2016-04-29T20:07:47.000Z", "author": "Kutuzov Alexey <Kutuz27>", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((?!hello|goodby)[\\s\\w]+) ((?!word|cosmos)[\\s\\w]+)!", "permalinkFragment": "gE4tK8", "isFavorite": false, "isStarred": false}, {"title": "fastest mac address match", "description": "matches format:\n\na0:39:f7:83:19:c3\n\ndetail at: http://nabtron.com/", "dateCreated": "2016-04-30T12:53:57.000Z", "dateModified": "2016-04-30T12:53:57.000Z", "author": "nabtron", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((?:[\\da-fA-F]{2}\\:){5}[\\da-fA-F]{2})$", "permalinkFragment": "aD3sS3", "isFavorite": false, "isStarred": false}, {"title": "Teste com espa\u00e7os ", "description": "", "dateCreated": "2016-05-01T18:10:38.000Z", "dateModified": "2016-05-01T18:10:38.000Z", "author": "JEIx", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((^| )sim( |$))", "permalinkFragment": "iJ0zW5", "isFavorite": false, "isStarred": false}, {"title": "Match things between quotes in Bluecoat log file", "description": "Mostly for matching things that match bluecoat category.", "dateCreated": "2016-05-01T22:03:34.000Z", "dateModified": "2016-05-01T22:03:34.000Z", "author": "Thomas", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "CAT:\"((?:[^\\\"]+|\\\\.)*)\"", "permalinkFragment": "xS4gD2", "isFavorite": false, "isStarred": false}, {"title": "Sabre FOP Parse", "description": "", "dateCreated": "2016-05-01T22:38:47.000Z", "dateModified": "2016-05-01T22:38:47.000Z", "author": "Max", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\.-\\*([A-Z]{2})([0-9]{15,20})\u2021([0-9]{2})\\/([0-9]{2})", "permalinkFragment": "bP3pN6", "isFavorite": false, "isStarred": false}, {"title": "Sabre Signature Line Parsing", "description": "", "dateCreated": "2016-05-01T23:40:19.000Z", "dateModified": "2016-05-01T23:40:19.000Z", "author": "Max", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([A-Z0-9]{4})\\.([A-Z0-9]{4})\\*A([A-Z0-9]{2}) ([0-9]{4})\\/([0-9]{2}[A-Z]{3}[0-9]{2})", "permalinkFragment": "gT0zC6", "isFavorite": false, "isStarred": false}, {"title": "Extract Query Parameter", "description": "Break URLs into three parts\n- Url\n- ?\n- QueryString", "dateCreated": "2016-05-02T02:42:58.000Z", "dateModified": "2016-05-02T02:42:58.000Z", "author": "Sachin Jain", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.+)(\\?)(.+)", "permalinkFragment": "jH7sC7", "isFavorite": false, "isStarred": false}, {"title": "Password", "description": "min length 6 and 1 number 1 epecial charachtor\n", "dateCreated": "2016-05-02T06:39:06.000Z", "dateModified": "2016-05-02T06:39:06.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*?[0-9].*?[0-9])(?=.*[!@#$%])[0-9a-zA-Z!@#$%0-9]{8,}$ ", "permalinkFragment": "iH3xR4", "isFavorite": false, "isStarred": false}, {"title": "JS No space title", "description": "Numbers, letters, and underscore with no special characters, no spaces, no leading number, and no leading or trailing underscore for use in KnockoutJS (or any JS validation).", "dateCreated": "2016-05-02T13:23:21.000Z", "dateModified": "2016-05-02T13:23:21.000Z", "author": "Owen Dismuke", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:^[a-z])(?:\\w)*(?:[a-z0-9]$)", "permalinkFragment": "sW6pN4", "isFavorite": false, "isStarred": false}, {"title": "Architectural and construction CSI specification", "description": "CSI Documentation usually formatted as ## ## ##(.##.##.##) this extracts the CSI number", "dateCreated": "2016-05-02T18:07:34.000Z", "dateModified": "2016-05-02T18:07:34.000Z", "author": "Ron E. Allen Apsis0215", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{2}(?:[\\s\\.]{1,3})){3,6}", "permalinkFragment": "rM3dJ3", "isFavorite": false, "isStarred": false}, {"title": "For Version Number", "description": "Validation for version numbers like 33.3.33", "dateCreated": "2016-05-02T20:34:17.000Z", "dateModified": "2016-05-02T20:34:17.000Z", "author": "Gokul", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^(\\d+)(\\.\\d+)(\\.\\d+))$", "permalinkFragment": "lQ5oN9", "isFavorite": false, "isStarred": false}, {"title": "parse range", "description": "", "dateCreated": "2016-05-02T23:19:56.000Z", "dateModified": "2016-05-02T23:19:56.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d+[MK])[,;\\s]|(\\d+[MK])$", "permalinkFragment": "zV0mT9", "isFavorite": false, "isStarred": false}, {"title": "ipv6 validation", "description": "Matches all IPv6 Addresses (without Port)\nfe80::21d8:f50:c295:c4be\n2001:cdba:0000:0000:0000:0000:3257:9652\n2001:cdba:0:0:0:0:3257:9652\n2001:cdba::3257:9652\n2001:cdba::1222\n21DA:D3:0:2F3B:2AA:FF:FE28:9C5A\n2001:cdba::1:2:3:3257:9652\n", "dateCreated": "2016-05-03T10:03:12.000Z", "dateModified": "2016-05-03T10:03:12.000Z", "author": "Aleksandar Trkulja", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([0-9A-Fa-f]{1,4}:){7})([0-9A-Fa-f]{1,4})$|(([0-9A-Fa-f]{1,4}:){1,6}:)(([0-9A-Fa-f]{1,4}:){0,4})([0-9A-Fa-f]{1,4})$", "permalinkFragment": "cP9mH9", "isFavorite": false, "isStarred": false}, {"title": "ICAO Airline from flight number", "description": "", "dateCreated": "2016-05-03T10:55:31.000Z", "dateModified": "2016-05-03T10:55:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z]{3}", "permalinkFragment": "lH5zO3", "isFavorite": false, "isStarred": false}, {"title": "square brackets", "description": "", "dateCreated": "2016-05-03T14:20:51.000Z", "dateModified": "2016-05-03T14:20:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[.*\\]", "permalinkFragment": "wK5kR0", "isFavorite": false, "isStarred": false}, {"title": "id number", "description": "find first letter that matches c or e then ensure remaining line is a digit", "dateCreated": "2016-05-03T15:50:17.000Z", "dateModified": "2016-05-03T15:50:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([c|e])([0-9]{6})$", "permalinkFragment": "eO7cC7", "isFavorite": false, "isStarred": false}, {"title": "Timecode (25fps)", "description": "Detects all valid 25 fps Timecode in HH:MM:SS:FF format in teh range 00:00:00:00 - 23:59:59:24 range.", "dateCreated": "2016-05-04T13:23:27.000Z", "dateModified": "2016-05-04T13:23:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?P<Timecode>(?P<Hours>[0-1][0-9]|2[0-3]):(?P<Minutes>[0-5][0-9]):(?P<Seconds>[0-5][0-9]):(?P<Frames>[0-1][0-9]|2[0-4]))$", "permalinkFragment": "eC0kA3", "isFavorite": false, "isStarred": false}, {"title": "4c", "description": "", "dateCreated": "2016-05-05T03:08:27.000Z", "dateModified": "2016-05-05T03:08:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=^[01]*$)^(.).*\\1|.$", "permalinkFragment": "sZ3mV5", "isFavorite": false, "isStarred": false}, {"title": "Python", "description": "", "dateCreated": "2016-05-05T04:58:40.000Z", "dateModified": "2016-05-05T04:58:40.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<a\\s.*href=['\"]([^'\"]+)['\"].*>.*</a>", "permalinkFragment": "cX7uZ9", "isFavorite": false, "isStarred": false}, {"title": "Cap named group in urls", "description": "", "dateCreated": "2016-05-05T06:55:29.000Z", "dateModified": "2016-05-05T06:55:29.000Z", "author": "SPeed", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/config\\/(?'asset'\\w+)\\/sim_mgmt\\/v1\\/(?'rsc'profile|link){1}(\\?_=\\d+)?$", "permalinkFragment": "kS3rJ3", "isFavorite": false, "isStarred": false}, {"title": "Shortcode", "description": "", "dateCreated": "2016-05-05T07:58:00.000Z", "dateModified": "2016-05-05T07:58:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\[(test|test2)(?![\\w-]).*?\\](?![\"])(.*?\\[\\/(\\2)\\])?)", "permalinkFragment": "eT0cB1", "isFavorite": false, "isStarred": false}, {"title": "qqq", "description": "qqqq", "dateCreated": "2016-05-05T11:05:57.000Z", "dateModified": "2016-05-05T11:05:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "Ug", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.+):.+\\(.+\\),", "permalinkFragment": "fL3oO0", "isFavorite": false, "isStarred": false}, {"title": "stepic python extract domain", "description": "", "dateCreated": "2016-05-05T11:22:08.000Z", "dateModified": "2016-05-05T11:22:08.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<a.*\\shref=[\\\"\\'](?:(?:\\w+)://)*((?:[\\w-]+\\.)+(?:[\\w-]+))(?::\\d+)?(?:/|$)?(?:[^\\s]+)?[\\\"\\'].*>", "permalinkFragment": "xL3iV5", "isFavorite": false, "isStarred": false}, {"title": "First of tags define", "description": "<Tag>", "dateCreated": "2016-05-05T16:03:02.000Z", "dateModified": "2016-05-05T16:03:02.000Z", "author": "regedit", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(<[a-z][a-z0-0]*[^>]*>))", "permalinkFragment": "xR3aE4", "isFavorite": false, "isStarred": false}, {"title": "ps-Aux Named Token capture", "description": "", "dateCreated": "2016-05-05T17:08:38.000Z", "dateModified": "2016-05-05T17:08:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?<User>[a-zA-Z0-9-_+]+)\\s+(?<PID>\\d{1,10000}+)\\s+(?<CPU>\\d+\\.\\d+)\\s+(?<Memory>\\d+\\.\\d+)\\s+(?<VSZ>\\d{1,10000})\\s+(?<RSS>\\d{1,10000}+)\\s+(?<TTY>[a-zA-Z0-9\\/\\?]+)\\s+(?<Stat>[a-zA-Z0-9\\+\\-\\<\\>]+)\\s+(?<START>(?<StartDate>(?<StartMonth>[a-zA-Z]+)(?<StartDay>\\d+))|(?<StartTime>(?<StartHour>\\d+)\\:(?<StartMinute>\\d+)))\\s+(?<TIME>(?<Hours>\\d+)\\:(?<Minutes>\\d+))\\s+(?<Command>.*\\R+))", "permalinkFragment": "qA6qV5", "isFavorite": false, "isStarred": false}, {"title": "EIN Validation", "description": "", "dateCreated": "2016-05-05T19:19:29.000Z", "dateModified": "2016-05-05T19:19:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(#EIN Validation)^(?:01|02|03|04|05|06|10|11|12|13|14|15|16|20|21|22|23|24|25|26|27|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|46|47|48|50|51|52|53|54|55|56|57|58|59|60|61|62|63|64|65|66|67|68|71|72|73|74|75|76|77|80|81|82|83|84|85|86|87|88|90|91|92|93|94|95|98|99)\\d\\d\\d\\d\\d\\d\\d(?<!0000000|111111111|222222222|333333333|444444444|555555555|666666666|777777777|888888888|999999999|123456789|987654321)$", "permalinkFragment": "lF8jF8", "isFavorite": false, "isStarred": false}, {"title": "URL", "description": "separate all parts of an url", "dateCreated": "2016-05-05T20:25:59.000Z", "dateModified": "2016-05-05T20:25:59.000Z", "author": "Kai", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<Protocol>http[s]?:\\/\\/)?(?P<Host>(?:www.)?\\w+.(?P<Domain>\\w{1,10}))(?P<Query>.+)", "permalinkFragment": "oI2sQ4", "isFavorite": false, "isStarred": false}, {"title": "Dates", "description": "Date for spanish calendar", "dateCreated": "2016-05-06T12:07:29.000Z", "dateModified": "2016-05-06T12:07:29.000Z", "author": "gornovah", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*?),.*?((?:(?:[0-2]?\\d{1})|(?:[3][01]{1}))[-:\\/.](?:[0]?[1-9]|[1][012])[-:\\/.](?:(?:[1]{1}\\d{1}\\d{1}\\d{1})|(?:[2]{1}\\d{3})))(?![\\d]).*?((?:(?:[0-1][0-9])|(?:[2][0-3])|(?:[0-9])):(?:[0-5][0-9])(?::[0-5][0-9])?(?:\\\\s?(?:am|AM|pm|PM))?)", "permalinkFragment": "iY2cI5", "isFavorite": false, "isStarred": false}, {"title": "The very important regex for every projects", "description": "This regex can ALL!", "dateCreated": "2016-05-06T13:11:56.000Z", "dateModified": "2016-05-06T13:11:56.000Z", "author": "YURMATH ER", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^|\\s)(\\w+)(?=\\s|$)", "permalinkFragment": "oM0hX1", "isFavorite": false, "isStarred": false}, {"title": "Match Hashtags", "description": "Matches hashtags withing string", "dateCreated": "2016-05-06T14:22:00.000Z", "dateModified": "2016-05-06T14:22:00.000Z", "author": "Melik Karapetyan", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(#[\\pL_0-9]+)", "permalinkFragment": "dW9eB5", "isFavorite": false, "isStarred": false}, {"title": "event", "description": "", "dateCreated": "2016-05-06T18:45:04.000Z", "dateModified": "2016-05-06T18:45:04.000Z", "author": "lokesh_sharma", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((.|\\n)*)\\w+ (today |tommorrow |day after tommorrow |next moth |next week |next day |next year |(january|february|march|april|may|june|july|august|september|october|november|december) \\d{2} )(at|@) ((0?[0-9]|1[012])([:. ][0-9]{2})?(\\s?[ap]m)|([01]?[0-9]|2[0-3])([:.][0-9]{2})?).*", "permalinkFragment": "sW0wG3", "isFavorite": false, "isStarred": false}, {"title": "UPE Coding Style Checker", "description": "", "dateCreated": "2016-05-06T20:33:42.000Z", "dateModified": "2016-05-06T20:33:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z0-9]=)|(\\n\\s*\\{)|(\\(\\s)|(\\s\\))|(\\s,)|(\\n\\s*\\{)|(\\t)|(\\)\\{)|(.{81,})|([a-zA-Z0-9][&|\\+\\-\\*\\/%]+[a-zA-Z0-9])|(class [a-z])|(class .*_)|( ;)|(==[a-zA-Z0-9])|([a-zA-Z0-9].=[a-zA-Z0-9])", "permalinkFragment": "bI8sB7", "isFavorite": false, "isStarred": false}, {"title": "Global KPI's", "description": "", "dateCreated": "2016-05-07T08:57:18.000Z", "dateModified": "2016-05-07T08:57:18.000Z", "author": "Alastair", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "'.*[\\x00-\\x1F].*|.*\\x81.*|.*\\x8D.*|.*\\x8F.*|.*\\x90.*|.*\\x9D.*|.*\\xA0.*|.*\\xAD.*|.*\\x7b.*|.*\\x7d.*'", "permalinkFragment": "zG7wK7", "isFavorite": false, "isStarred": false}, {"title": "Reject Characters", "description": "", "dateCreated": "2016-05-07T08:58:36.000Z", "dateModified": "2016-05-07T08:58:36.000Z", "author": "Alastair", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "'.*[\\x00-\\x1F].*|.*\\x81.*|.*\\x8D.*|.*\\x8F.*|.*\\x90.*|.*\\x9D.*|.*\\xA0.*|.*\\xAD.*|.*\\x7b.*|.*\\x7d.*'", "permalinkFragment": "jU3cC7", "isFavorite": false, "isStarred": false}, {"title": "email", "description": "email validator", "dateCreated": "2016-05-07T13:32:42.000Z", "dateModified": "2016-05-07T13:32:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[A-Za-z0-9~!#$%^&*()_+=\\-`|\\\\\\/\\[\\];,{}\"']+[A-Za-z0-9~!#$%^&:* ()_+=\\-`|\\\\\\/\\[\\].;,{}\"']+@[A-Za-z0-9~!#$%^&:*()_+=\\-`|\\\\\\/\\[\\].;,{}\"']+@{0,1}[A-Za-z0-9~!#$%^&:*()_+=\\-`|\\\\\\/\\[\\].;,{}\"']+[A-Za-z0-9\\]]$", "permalinkFragment": "nS9vS7", "isFavorite": false, "isStarred": false}, {"title": "Cusip Text Parser", "description": "Parses CUSIP text output from sec.gov", "dateCreated": "2016-05-08T03:18:41.000Z", "dateModified": "2016-05-08T03:18:41.000Z", "author": "Gary Vidal", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([\\w\\d]{6})\\s([\\w\\d]{2})\\s+([\\w\\d]{1})\\s+((\\*)\\s)?(.*)((NOTE|ORD|COM|CALL|PUT|PFD|OPTION|PARTNERSHIP\\sUNIT|INT\\sUNI|RIGHT|ORD|NAMEN\\sAKT|DBCV|CL\\sA|\\*W|DEBT|SHS|UNIT).*)(DELETED|ADDED)?$", "permalinkFragment": "vN3tE5", "isFavorite": false, "isStarred": false}, {"title": "teste", "description": "", "dateCreated": "2016-05-09T03:23:01.000Z", "dateModified": "2016-05-09T03:23:01.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Seat (?P<playerseat>[0-9]+): (?P<playername>[.?]+)", "permalinkFragment": "tW4bJ2", "isFavorite": false, "isStarred": false}, {"title": "Mask an email regex II (no TLD)", "description": "Replaces second to last but one characters with asterisks in email all parts BUT TLD: test01@gmail.com -> t****1@g****.com\n\nAUTHOR SO link: http://stackoverflow.com/users/3832970/wiktor-stribi%C5%BCew", "dateCreated": "2016-05-09T07:10:30.000Z", "dateModified": "2016-05-09T07:10:30.000Z", "author": "Wiktor Stribi\u017cew", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=.).(?=[^@]*?.@)|(?:(?<=@.)|(?!^)\\G(?=[^@]*$)).(?=.*\\.)", "permalinkFragment": "jI0hU2", "isFavorite": false, "isStarred": false}, {"title": "URL", "description": "", "dateCreated": "2016-05-09T13:53:33.000Z", "dateModified": "2016-05-09T13:53:33.000Z", "author": "Mustafa Talaeezadeh Khouzani", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(?<scheme>https?):\\/\\/)?(?<hostname>.+?)(?:\\/(?<path>.*?))?(?:\\?(?<parameter>.*?))?(?:#(?<fragment>.*))?$", "permalinkFragment": "eR0hK2", "isFavorite": false, "isStarred": false}, {"title": "Stampare id", "description": "", "dateCreated": "2016-05-09T14:30:02.000Z", "dateModified": "2016-05-09T14:30:02.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9]+)", "permalinkFragment": "dN7aG9", "isFavorite": false, "isStarred": false}, {"title": "regex for iso 8601 date between 1970 and 2999 ", "description": "regex for iso 8601 date between 1970 and 2999 that match only valid date, the only mistake possible in this regexp is the bisextile year how are not checked", "dateCreated": "2016-05-10T06:48:49.000Z", "dateModified": "2016-05-10T06:48:49.000Z", "author": "KurayamiNoDaiTenshi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(19[789]\\d|2\\d{3})-((0[13578]|1[02])-([0-2]\\d|3[01])|02-[0-2]\\d|0[469]|11-([0-2]\\d|30))T([01]\\d|2[0-4])(:[0-5]\\d){2}Z$", "permalinkFragment": "uE8aM1", "isFavorite": false, "isStarred": false}, {"title": "regex for iso 8601 date between 1970 and 2999", "description": "regex for iso 8601 date between 1970 and 2999 that match only valid date, the only mistake possible in this regexp is the bisextile year how are not checked", "dateCreated": "2016-05-10T06:57:04.000Z", "dateModified": "2016-05-10T06:57:04.000Z", "author": "KurayamiNoDaiTenshi", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(19[789]\\d|2\\d{3})-((0[13578]|1[02])-([0-2]\\d|3[01])|02-[0-2]\\d|0[469]|11-([0-2]\\d|30))T([01]\\d|2[0-4])(:[0-5]\\d){2}Z$", "permalinkFragment": "iC5yQ0", "isFavorite": false, "isStarred": false}, {"title": "timestamped ping parser", "description": "ping -i 20 host | perl -nle 'print scalar(localtime), \" \", $_'\n", "dateCreated": "2016-05-10T08:52:11.000Z", "dateModified": "2016-05-10T08:52:11.000Z", "author": "jb", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\w+ (\\w+) (\\d+) (\\d+:\\d+:\\d+) (\\d+)) (?:\\d+ bytes )?From (.+)icmp_seq=\\d+ (ttl=\\d+ )?(.*)(time=(\\d+.\\d+) ms)?", "permalinkFragment": "rV5zJ5", "isFavorite": false, "isStarred": false}, {"title": "vermaj", "description": "", "dateCreated": "2016-05-10T11:07:57.000Z", "dateModified": "2016-05-10T11:07:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "#define\\s*M2M_FIRMWARE_VERSION_MAJOR_NO\\s*\\((\\d*)\\)", "permalinkFragment": "dV5sM6", "isFavorite": false, "isStarred": false}, {"title": "d", "description": "dd", "dateCreated": "2016-05-10T11:21:41.000Z", "dateModified": "2016-05-10T11:21:41.000Z", "author": "d", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "3001-001-003", "permalinkFragment": "kZ4eV0", "isFavorite": false, "isStarred": false}, {"title": "TalkTalk DEV Site", "description": "", "dateCreated": "2016-05-10T11:22:40.000Z", "dateModified": "2016-05-10T11:22:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "talkdev.co.uk\\/.*billsandpayments.*", "permalinkFragment": "zY2uC6", "isFavorite": false, "isStarred": false}, {"title": "Matching a string ../[a-zA-Z0-9]/[a-zA-Z0-9]/[a-zA-Z0-9]/..", "description": "", "dateCreated": "2016-05-10T12:21:29.000Z", "dateModified": "2016-05-10T12:21:29.000Z", "author": "Mohit Reddy", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*\\/[a-zA-Z0-9]{1}\\/[a-zA-Z0-9]{1}\\/[a-zA-Z0-9]{1}\\/)(.*)", "permalinkFragment": "vF8pY7", "isFavorite": false, "isStarred": false}, {"title": "EPA PMN Code", "description": "The PMN Code used in EPA", "dateCreated": "2016-05-10T12:27:27.000Z", "dateModified": "2016-05-10T12:27:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^P-\\d{2}-\\d{4}$", "permalinkFragment": "xK3wP4", "isFavorite": false, "isStarred": false}, {"title": "digits", "description": "", "dateCreated": "2016-05-10T14:13:02.000Z", "dateModified": "2016-05-10T14:13:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "d+ von d+", "permalinkFragment": "nX7xK1", "isFavorite": false, "isStarred": false}, {"title": "delete function comment from begining", "description": "delete function comment from begining", "dateCreated": "2016-05-11T03:26:04.000Z", "dateModified": "2016-05-11T03:26:04.000Z", "author": "wewe", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(?:\\n)?[^\\n]*){0,22}", "permalinkFragment": "wR7aT1", "isFavorite": false, "isStarred": false}, {"title": "/^\\d{4}-\\d{2}-\\d{2}$/", "description": "date regax", "dateCreated": "2016-05-11T06:51:29.000Z", "dateModified": "2016-05-11T06:51:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[1-9][0-9]{3}|[1-9][0-9]{2}|[1-9][0-9]|[1-9])$", "permalinkFragment": "fQ8wU1", "isFavorite": false, "isStarred": false}, {"title": "Num\u00e9ro de demandeur d'emploi", "description": "Format du num\u00e9ro de demandeur d'emploi au P\u00f4le emploi en France.\nContient 7 chiffres et une lettre ou 8 chiffres.", "dateCreated": "2016-05-11T08:14:57.000Z", "dateModified": "2016-05-11T08:14:57.000Z", "author": "Fabien Delannoy", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9]{7}[[:alnum:]]$", "permalinkFragment": "yS4bW8", "isFavorite": false, "isStarred": false}, {"title": "MAC address", "description": "This regular expression matches whatever looks like a MAC addresses.", "dateCreated": "2016-05-11T09:02:39.000Z", "dateModified": "2016-05-11T09:02:39.000Z", "author": "piwi82", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b[[:xdigit:]]{2}(?:[^[:xdigit:]]?[[:xdigit:]]{2}){5}\\b", "permalinkFragment": "bS4mZ9", "isFavorite": false, "isStarred": false}, {"title": "search ora-log", "description": "", "dateCreated": "2016-05-11T10:17:54.000Z", "dateModified": "2016-05-11T10:17:54.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d{4}-\\d{2}.*(\\n.*){6,7}ORA-06512: at line 1", "permalinkFragment": "oV1nV4", "isFavorite": false, "isStarred": false}, {"title": "Mail address", "description": "Matches mail addresses according to https://en.wikipedia.org/wiki/Email_address#Syntax", "dateCreated": "2016-05-11T10:25:54.000Z", "dateModified": "2016-05-11T10:25:54.000Z", "author": "piwi82", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<full>(?<local>[\\w!#$%&'*+\\-\\/=?^_`{|}~]+(?:\\.[\\w!#$%&'*+\\-\\/=?^_`{|}~]+)*|\"[\\w!#$%&'*+\\-\\/=?^_`{|}~(),:;<>@\\[\\] \\\\\"]+(?:\\.[\\w!#$%&'*+\\-\\/=?^_`{|}~(),:;<>@\\[\\] \\\\\"]+)*\")@(?<domain>[[:alnum:]-]+(?:\\.[[:alnum:]-]+)*|\\[[0-9.]+\\]|\\[IPv6:[[:xdigit:]:]+\\]))$", "permalinkFragment": "iT4vI4", "isFavorite": false, "isStarred": false}, {"title": "Hyphenated words", "description": "Detecta las palabras con gui\u00f3n\n(tambi\u00e9n incluyendo varios guiones)\n(tambi\u00e9n incluye cuando solo hay una letra a uno de los lados)\nContiene las letras de todos los idiomas", "dateCreated": "2016-05-11T15:45:41.000Z", "dateModified": "2016-05-11T15:45:41.000Z", "author": "Oscar", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\p{L}+(?>-\\p{L}+)+", "permalinkFragment": "wH0sB7", "isFavorite": false, "isStarred": false}, {"title": "Email Finder", "description": "Finds all emails including .co.uk like ones", "dateCreated": "2016-05-11T15:57:33.000Z", "dateModified": "2016-05-11T15:57:33.000Z", "author": "Oliver", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((([a-zA-Z]|[0-9])|([-]|[_]|[.]))+[@](([a-zA-Z0-9])|([-])){2,63}[.](([a-zA-Z0-9]){2,63})[.](([a-zA-Z0-9]){2,63}))|((([a-zA-Z]|[0-9])|([-]|[_]|[.]))+[@](([a-zA-Z0-9])|([-])){2,63}[.](([a-zA-Z0-9]){2,63}))", "permalinkFragment": "bR7nK9", "isFavorite": false, "isStarred": false}, {"title": "regex", "description": "", "dateCreated": "2016-05-11T17:46:56.000Z", "dateModified": "2016-05-11T17:46:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^ ]*) ([^ ]*) ([^ ]*) (\\[(.*)\\]) (\\\"(.*)\\\") ([0-9]*) ([0-9]*) (\\\"(.*)\\\") (\\\"(.*))", "permalinkFragment": "jH5fR0", "isFavorite": false, "isStarred": false}, {"title": "BE phone number format", "description": "BE phone number format", "dateCreated": "2016-05-11T18:44:28.000Z", "dateModified": "2016-05-11T18:44:28.000Z", "author": "GM", "flavor": "pcre", "delimiter": "/", "flags": "mig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?x)\n(\n  (?:\\+|00)\n  [[:blank:]]?32\n)?\n[[:blank:]]?\n(?:0|\\(0\\))?\n[[:blank:]]?\n(\n  (?:\n    \\d\n    (?:\\/|\\.|[[:blank:]])?\n  ){8,9}\n)", "permalinkFragment": "qS9fL2", "isFavorite": false, "isStarred": false}, {"title": "Assinatura", "description": "", "dateCreated": "2016-05-11T20:06:11.000Z", "dateModified": "2016-05-11T20:06:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\bByVal\\b|\\bByRef\\b)? +(\\w+)(?: +as +(\\w+))?(?: *= *[\\w\"]+)? *[\\)|,]?", "permalinkFragment": "iG1sN9", "isFavorite": false, "isStarred": false}, {"title": "Comany Names", "description": "Common company names with &, -", "dateCreated": "2016-05-11T22:23:58.000Z", "dateModified": "2016-05-11T22:23:58.000Z", "author": "jamiros & nrajchevski", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\w[\\w.\\-#&\\s]*$", "permalinkFragment": "jW5nC1", "isFavorite": false, "isStarred": false}, {"title": "Company Names", "description": "Regular company names", "dateCreated": "2016-05-11T22:25:36.000Z", "dateModified": "2016-05-11T22:25:36.000Z", "author": "jamiros & nrajchevski", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\w[\\w.\\-#&\\s]*$", "permalinkFragment": "iC3xK6", "isFavorite": false, "isStarred": false}, {"title": "deu", "description": "", "dateCreated": "2016-05-12T03:55:48.000Z", "dateModified": "2016-05-12T03:55:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[0-9]{5}", "permalinkFragment": "fD4hM5", "isFavorite": false, "isStarred": false}, {"title": "Original regex", "description": "", "dateCreated": "2016-05-12T04:11:08.000Z", "dateModified": "2016-05-12T04:11:08.000Z", "author": "Malhar", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "dcs.lustre.device.ost.attributes\\[.*-((.*).+?),.*,rate\\]", "permalinkFragment": "nW8xK2", "isFavorite": false, "isStarred": false}, {"title": "Comment Finder (Java/C#)", "description": "Search comment in Java and C# Code", "dateCreated": "2016-05-12T10:04:54.000Z", "dateModified": "2016-05-12T10:04:54.000Z", "author": "Peter Boccia", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((\\/\\/[^\\n\\r]*)|(\\/\\*[^\\*\\/]*\\*\\/))", "permalinkFragment": "yK6sV6", "isFavorite": false, "isStarred": false}, {"title": "Full Name", "description": "2 or more words allowed in any alphabet with \"'\" and \"-\" symbols (not more than one successively) and dot in the end of any word.", "dateCreated": "2016-05-12T10:16:52.000Z", "dateModified": "2016-05-12T10:16:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\p{L}+(['-]\\p{L}+)*\\.?(\\s\\p{L}+(['-]\\p{L}+)*\\.?)+$", "permalinkFragment": "rR5hQ4", "isFavorite": false, "isStarred": false}, {"title": "Get everything after the last slash", "description": "", "dateCreated": "2016-05-12T11:57:46.000Z", "dateModified": "2016-05-12T11:57:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?!.*\\/).+", "permalinkFragment": "fG1sB9", "isFavorite": false, "isStarred": false}, {"title": "body followed by plain space", "description": "", "dateCreated": "2016-05-12T12:38:42.000Z", "dateModified": "2016-05-12T12:38:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^body|\\sbody([\\s*|\\{|:])", "permalinkFragment": "sD0jW8", "isFavorite": false, "isStarred": false}, {"title": "Luca", "description": "Esempi di regex", "dateCreated": "2016-05-12T17:47:54.000Z", "dateModified": "2016-05-12T17:47:54.000Z", "author": "prof.manini", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Z][a-z]+", "permalinkFragment": "kE4wN4", "isFavorite": false, "isStarred": false}, {"title": "Class selector picker", "description": "", "dateCreated": "2016-05-12T22:48:17.000Z", "dateModified": "2016-05-12T22:48:17.000Z", "author": "Charlie", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:class).*(?<!\\-)(?:[[:blank:]]|\\\")(button)(?:[[:blank:]]|\\\")", "permalinkFragment": "uT2sP0", "isFavorite": false, "isStarred": false}, {"title": "Capture shell envs variables", "description": "Allows the capture of environment variables for expansion or elimination.", "dateCreated": "2016-05-13T01:48:18.000Z", "dateModified": "2016-05-13T01:48:18.000Z", "author": "Everton Ribeiro <nuxlli@gmail.com>", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^\\\\](?:(?:\\\\{2})*)\\$(?:(?:[=|-]?([A-Z0-9_]*[A-Z_]+[A-Z0-9_]*)|(?:{[=|-]?([A-Z0-9_]*[A-Z_]+[A-Z0-9_]*)})))", "permalinkFragment": "bH0tN6", "isFavorite": false, "isStarred": false}, {"title": "soccer24.inp", "description": "spagetti shit av fotbalside eivind snakket om", "dateCreated": "2016-05-13T16:09:24.000Z", "dateModified": "2016-05-13T16:09:24.000Z", "author": "skandix", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<td class=\"cell_ad [\\w]{4}\">\\d{2}:\\d{2}", "permalinkFragment": "gO5eO2", "isFavorite": false, "isStarred": false}, {"title": "dollar amount or percent/rate", "description": "This will verify input is non-zero and either a valid dollar amount ($3, $3.4, $3.40, $.4, $.40) or a valid percent/rate (2%, 2.5%, .5%) with up to four decimal places.  Could probably be more efficient with the lookaheads.", "dateCreated": "2016-05-13T16:50:25.000Z", "dateModified": "2016-05-13T16:50:25.000Z", "author": "Keith Freeman", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\$(?=[1-9])((\\d*\\.\\d{1,2})|\\d+\\.?)|((?=[1-9])(\\d+\\.?)|((?=([1-9]+|\\d*\\.0*[1-9]+))\\d*\\.\\d{1,4}))\\%)$", "permalinkFragment": "mX6hN5", "isFavorite": false, "isStarred": false}, {"title": "ReporteController", "description": "", "dateCreated": "2016-05-13T19:35:31.000Z", "dateModified": "2016-05-13T19:35:31.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(= new ReportViewModel\\d+)\\((id)\\)", "permalinkFragment": "yZ9iN4", "isFavorite": false, "isStarred": false}, {"title": "Experimental", "description": "", "dateCreated": "2016-05-14T12:55:02.000Z", "dateModified": "2016-05-14T12:55:02.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:[\\?&](foo\\=[^&]*))|(?:[\\?&](foo(?=[&#])))|(?:&(foo(?!.)))", "permalinkFragment": "rI2pF6", "isFavorite": false, "isStarred": false}, {"title": "Lua Anonymous Function Matching", "description": "", "dateCreated": "2016-05-14T16:03:12.000Z", "dateModified": "2016-05-14T16:03:12.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "return(\\s|.)+end(\\))?(\\s+)?$", "permalinkFragment": "lB4bC1", "isFavorite": false, "isStarred": false}, {"title": "CPS", "description": "", "dateCreated": "2016-05-14T16:07:31.000Z", "dateModified": "2016-05-14T16:07:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "CPS\\d", "permalinkFragment": "hB3wM1", "isFavorite": false, "isStarred": false}, {"title": "Lua Module Matching", "description": "", "dateCreated": "2016-05-14T16:07:34.000Z", "dateModified": "2016-05-14T16:07:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "return.*(\\s+)?$", "permalinkFragment": "jR9jY3", "isFavorite": false, "isStarred": false}, {"title": "All but my string", "description": "Return all but the given string", "dateCreated": "2016-05-14T20:12:10.000Z", "dateModified": "2016-05-14T20:12:10.000Z", "author": "elypma", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((?!LeA_1).)*$", "permalinkFragment": "jE0gW2", "isFavorite": false, "isStarred": false}, {"title": "Match the value of a given parameter in a query string", "description": "", "dateCreated": "2016-05-14T21:13:48.000Z", "dateModified": "2016-05-14T21:13:48.000Z", "author": "Guido W. Pettinari", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "qsrc=([^$&;]*)", "permalinkFragment": "gI7wA6", "isFavorite": false, "isStarred": false}, {"title": "Accounting Numeric Format", "description": "ACCEPTS ONE DASH \"-\" IN FRONT.  \nACCEPTS ONE PERIOD \".\" AFTER NUMBERS.  \nACCEPTS COMMAS.  \nDOES NOT ACCEPT PARENTHESIS \"()\".  ", "dateCreated": "2016-05-14T23:08:10.000Z", "dateModified": "2016-05-14T23:08:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^-?[0-9]+[\\d,]*[\\.]?[\\d]*$", "permalinkFragment": "rK8gR1", "isFavorite": false, "isStarred": false}, {"title": "File Extensions for NodejS recoginition for madge", "description": "", "dateCreated": "2016-05-15T00:37:31.000Z", "dateModified": "2016-05-15T00:37:31.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\.(coffee|jsx|marko.js)", "permalinkFragment": "lO7sE1", "isFavorite": false, "isStarred": false}, {"title": "Outcode Extraction", "description": "Outcode extraction for UK postcode", "dateCreated": "2016-05-15T10:08:40.000Z", "dateModified": "2016-05-15T10:08:40.000Z", "author": "Begbaaji", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<Incode>\\w+)(?P<outcode>\\w{1}\\w{2})", "permalinkFragment": "hX2lN9", "isFavorite": false, "isStarred": false}, {"title": "Query Strings Capture", "description": "A solution for capture params or the param=value pair of query strings.", "dateCreated": "2016-05-15T10:20:34.000Z", "dateModified": "2016-05-15T10:20:34.000Z", "author": "Rafael Laurindo", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?<=[\\?\\&])foo\\=[^\\&\\#]*)|((?<=[\\?\\&])foo(?=[\\&\\#]))|((?<=[\\?\\&])foo(?!.))", "permalinkFragment": "cI5sT1", "isFavorite": false, "isStarred": false}, {"title": "Reqursive concrete chunk", "description": "(?R) Alternative", "dateCreated": "2016-05-15T12:03:28.000Z", "dateModified": "2016-05-15T12:03:28.000Z", "author": "lexus.1995@mail.ru", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<name>\\{(?:[^\\{\\}]+|(?P>name))*\\})", "permalinkFragment": "kI3uD3", "isFavorite": false, "isStarred": false}, {"title": "4 digits", "description": "", "dateCreated": "2016-05-15T20:38:56.000Z", "dateModified": "2016-05-15T20:38:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9]{1,4}$", "permalinkFragment": "kN7qJ0", "isFavorite": false, "isStarred": false}, {"title": "Australian BSB", "description": "Matches Australian BSB numbers", "dateCreated": "2016-05-15T22:55:14.000Z", "dateModified": "2016-05-15T22:55:14.000Z", "author": "Michael Fishpool", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d{6}|\\d{3}-{1}\\d{3})$", "permalinkFragment": "qX5rZ8", "isFavorite": false, "isStarred": false}, {"title": "AsDate", "description": "", "dateCreated": "2016-05-16T03:38:26.000Z", "dateModified": "2016-05-16T03:38:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(AsDate|asdate|ASDATE)\\((\".*\"),(.+)\\)\\s*", "permalinkFragment": "dL1yM3", "isFavorite": false, "isStarred": false}, {"title": "OTP Card payment", "description": "", "dateCreated": "2016-05-16T08:18:25.000Z", "dateModified": "2016-05-16T08:18:25.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<year>\\d{2})(?P<month>\\d{2})(?P<day>\\d{2}) (?P<hour>\\d{2}):(?P<min>\\d{2}).+: (?P<tr_amount>-[\\d\\.]+) (?P<tr_currency>\\w+);(?P<merchant>.+);.+(?P<card>\\d{4});.+(?P<acc_balance>[\\+-][\\d\\.]+) (?P<acc_currency>\\w+).+", "permalinkFragment": "eO2eF3", "isFavorite": false, "isStarred": false}, {"title": "Match a string only for a percentage number", "description": "This regex checks if a string contains a number that ends with a \"%\" character ignoring all other cases.\n96% -> accept\n96.6% -> accept\nkk% -> Reject\n96%% -> Reject\n", "dateCreated": "2016-05-16T12:16:27.000Z", "dateModified": "2016-05-16T12:16:27.000Z", "author": "Krishna", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[\\d]+[\\.]{0,1}[\\d]*%$)", "permalinkFragment": "oF0cP9", "isFavorite": false, "isStarred": false}, {"title": "XML URL", "description": "validates an xml URL. Allows ips and domain names", "dateCreated": "2016-05-16T14:59:57.000Z", "dateModified": "2016-05-16T14:59:57.000Z", "author": "allofus", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(http(s?):\\/\\/)?(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|([a-zA-Z0-9\\-\\_]+(\\.[a-zA-Z]{2,3})))+(\\/[a-zA-Z0-9\\_\\-\\s\\.\\/\\?\\%\\#\\&\\=]*)?\\.xml$", "permalinkFragment": "eQ3aM2", "isFavorite": false, "isStarred": false}, {"title": "Negative regex for block of text", "description": "This will make sure a certain regex does not exist in a block of text, that includes new lines", "dateCreated": "2016-05-16T20:41:45.000Z", "dateModified": "2016-05-16T20:41:45.000Z", "author": "Mandeep Rai", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?![\\S\\s]*should not exist)", "permalinkFragment": "kO0bU4", "isFavorite": false, "isStarred": false}, {"title": "CSS to Reagent", "description": "Transforms standart CSS rules to Reagents {:style{}}", "dateCreated": "2016-05-16T23:47:46.000Z", "dateModified": "2016-05-16T23:47:46.000Z", "author": "Ugis", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\s\\{]+?(?=:))(:\\s)([^;]*);", "permalinkFragment": "uC7tD2", "isFavorite": false, "isStarred": false}, {"title": "Fecha y hora", "description": "", "dateCreated": "2016-05-17T11:04:27.000Z", "dateModified": "2016-05-17T11:04:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([0]?[1-9]|1[0-2])\\/([0-2]?[0-9]|3[0-1])\\/[1-2]\\d{3}) (20|21|22|23|[0-1]?\\d{1}):([0-5]?\\d{1}):([0-5]?\\d{1})$", "permalinkFragment": "pD6tL2", "isFavorite": false, "isStarred": false}, {"title": "Abbreviation Finder", "description": "Matches any abbreviations of a length between 2 and 4.", "dateCreated": "2016-05-17T12:28:15.000Z", "dateModified": "2016-05-17T12:28:15.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<![A-Z]{1}[a-z]{1})(?=[A-Z](?![a-z]{1}))([a-zA-Z]{2,4})(?![a-z]{1})(?![A-Z]+[_])", "permalinkFragment": "eQ7lV5", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "", "dateCreated": "2016-05-17T13:05:12.000Z", "dateModified": "2016-05-17T13:05:12.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "test", "permalinkFragment": "zJ4cQ2", "isFavorite": false, "isStarred": false}, {"title": "Match one or more chars in a text", "description": "", "dateCreated": "2016-05-17T19:02:39.000Z", "dateModified": "2016-05-17T19:02:39.000Z", "author": "padre629", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\[\\]\\*\\?\\:\\/\\\\\\s]+", "permalinkFragment": "rB5lX8", "isFavorite": false, "isStarred": false}, {"title": "Last character", "description": "Get the last character from any line of a string", "dateCreated": "2016-05-18T08:02:46.000Z", "dateModified": "2016-05-18T08:02:46.000Z", "author": "Edward Aryee", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(.)*)*", "permalinkFragment": "wY8kC2", "isFavorite": false, "isStarred": false}, {"title": "AIX ps -ef", "description": "", "dateCreated": "2016-05-18T09:03:33.000Z", "dateModified": "2016-05-18T09:03:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([^\\s]*)\\s*([^\\s]*)\\s*([^\\s]*)\\s*([^\\s]*)\\s*([^\\s]*)\\s*([^\\s]*)\\s*([^\\s]*)\\s*(.*)$", "permalinkFragment": "cG2yN9", "isFavorite": false, "isStarred": false}, {"title": "week parser", "description": "", "dateCreated": "2016-05-18T11:51:07.000Z", "dateModified": "2016-05-18T11:51:07.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d{4})-(\\d+)$", "permalinkFragment": "sQ9vR1", "isFavorite": false, "isStarred": false}, {"title": "Eu format currency support different currencies", "description": "3.332.987,00 \u20ac\n$ 3\n34,2 $", "dateCreated": "2016-05-18T12:51:00.000Z", "dateModified": "2016-05-18T12:51:00.000Z", "author": "mattmezza", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([\\\u20ac\\$\\\u00a5\\\u00a3]\\s?)(\\d{1,3}[.](\\d{3}[.])*\\d{3}|\\d+)([,]\\d{1,2})?)|((\\d{1,3}[.](\\d{3}[.])*\\d{3}|\\d+)([,]\\d{1,2})?(\\s?[\\\u20ac\\$\\\u00a5\\\u00a3])?)$", "permalinkFragment": "wV2zD6", "isFavorite": false, "isStarred": false}, {"title": "\u0412\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 \u041c\u041f\u041a \u0438 \u0435\u0433\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u044b\u0435 \u0447\u0430\u0441\u0442\u0438 ", "description": "", "dateCreated": "2016-05-18T15:37:48.000Z", "dateModified": "2016-05-18T15:37:48.000Z", "author": "Irina", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<Section>[a-hA-H])(?<Class>(\\s*|0)*[1-9]\\d{0,1})\\s*(?<Subclass>[a-hA-H])(?<Maingroup>(\\s*|0)*[1-9]\\d{0,1})\\s*\\/\\s*(?<Subgroup>(\\s|0)*[1-9]\\d{0,3})", "permalinkFragment": "qI6uD0", "isFavorite": false, "isStarred": false}, {"title": "http.edu.tr", "description": "", "dateCreated": "2016-05-18T16:29:11.000Z", "dateModified": "2016-05-18T16:29:11.000Z", "author": "html", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(((http|ftp):\\/\\/)(((\\d)|(\\w))+\\.)+((com)(\\.tr+)))", "permalinkFragment": "kA8vB4", "isFavorite": false, "isStarred": false}, {"title": "Most recent subpattern", "description": "", "dateCreated": "2016-05-18T19:17:37.000Z", "dateModified": "2016-05-18T19:17:37.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d+),\\1", "permalinkFragment": "qC4sA2", "isFavorite": false, "isStarred": false}, {"title": "E-mail RegExp", "description": "Expre\u00e7\u00e3o Regular para E-Mails.", "dateCreated": "2016-05-18T20:26:10.000Z", "dateModified": "2016-05-18T20:26:10.000Z", "author": "Mizael Silva Lemos nemeses606@gmail.com", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-z\\_\\.]+(\\@)[a-z]+(\\.)+[a-z]{0,4}(\\.)?[a-z]{1,4}$", "permalinkFragment": "zR0dR8", "isFavorite": false, "isStarred": false}, {"title": "ftp response from ftpwebrequest", "description": "", "dateCreated": "2016-05-19T07:52:38.000Z", "dateModified": "2016-05-19T07:52:38.000Z", "author": "azhar", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<dir>[\\-d])(?<permission>([\\-r][\\-w][\\-xt]){3})\\s+\\d+\\s+\\w+\\s+\\w+\\s+(?<size>\\d+)\\s+(?<timestamp>\\w+\\s+\\d+\\s+\\d{1,2}:\\d{2})\\s+(?<name>.+)", "permalinkFragment": "fW9sH1", "isFavorite": false, "isStarred": false}, {"title": "Mobile Number Malta", "description": "Comprehensive regex for all the 99/79/77 mobile numbers for malta with all types of space paddings used, and with option to add +356 or 00356 with brackets and without.", "dateCreated": "2016-05-19T08:02:40.000Z", "dateModified": "2016-05-19T08:02:40.000Z", "author": "Xmiq", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\((0{2}|\\+)(\\d{3})\\)|((0{2})|\\+)\\d{3}|)\\s?((7|9)9|77)(\\d{6}|\\s\\d{3}\\s\\d{3}|\\d{2}\\s\\d{4})", "permalinkFragment": "mD2bZ7", "isFavorite": false, "isStarred": false}, {"title": "currency", "description": "", "dateCreated": "2016-05-19T08:18:29.000Z", "dateModified": "2016-05-19T08:18:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d*(\\.\\d{1,2})?$", "permalinkFragment": "wM6gL3", "isFavorite": false, "isStarred": false}, {"title": "JavaScript/EC6/TypeScript import statement", "description": "Matches import statement in JavaScript/EC6/TypeScript files", "dateCreated": "2016-05-19T11:30:57.000Z", "dateModified": "2016-05-19T11:30:57.000Z", "author": "Vadym Milichev", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:^|\\n)import ([^\\n]*) from ('|\")ng-forward([^\\2]*)\\2", "permalinkFragment": "aZ3wN4", "isFavorite": false, "isStarred": false}, {"title": "test de @", "description": "test de @", "dateCreated": "2016-05-19T12:11:50.000Z", "dateModified": "2016-05-19T12:11:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(@{1}.*? )", "permalinkFragment": "yV6rD3", "isFavorite": false, "isStarred": false}, {"title": "Extract Cert and Expiration from List", "description": "", "dateCreated": "2016-05-19T12:25:57.000Z", "dateModified": "2016-05-19T12:25:57.000Z", "author": "John Crowley", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "sys file ssl-cert ([^{}]*)|expiration-string \"([^\"]*)", "permalinkFragment": "dM8oK5", "isFavorite": false, "isStarred": false}, {"title": "SSL Expiration and Domain Extract", "description": "", "dateCreated": "2016-05-19T13:05:07.000Z", "dateModified": "2016-05-19T13:05:07.000Z", "author": "Nick Ramos", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "expiration-string \"(.+?)\"|subject \"CN=(.+?),", "permalinkFragment": "wA5jM6", "isFavorite": false, "isStarred": false}, {"title": "Extract name of tables from a SQL", "description": "Assumes the database name starts with \"IDP_PRD_\"", "dateCreated": "2016-05-19T14:46:21.000Z", "dateModified": "2016-05-19T14:46:21.000Z", "author": "Vance", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:FROM|JOIN)\\s*(IDP_PRD_.+?)(?:\\s|\\))", "permalinkFragment": "sI5wE5", "isFavorite": false, "isStarred": false}, {"title": "Time Parsing", "description": "", "dateCreated": "2016-05-19T14:57:28.000Z", "dateModified": "2016-05-19T14:57:28.000Z", "author": "Michael Stemle", "flavor": "pcre", "delimiter": "/", "flags": "imgx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^                 # New line\nT?([00-23]{2})    # Hour block (00 through 23 hours)\n\\:?([00-59]{2})   # Minute block  (00 through 59 minutes)\n\\s*               # Optional space\n([ap])?\\.?(m?)\\.? # AM or PM, with or without periods\n$                 # End of the string.", "permalinkFragment": "tP3oK3", "isFavorite": false, "isStarred": false}, {"title": "IklusivVolumen", "description": "", "dateCreated": "2016-05-19T16:58:14.000Z", "dateModified": "2016-05-19T16:58:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9]+,[0-9]+|[0-9]+) (GB|MB) \\(([0-9]+,[0-9]+|[0-9]+) [a-zA-Z]+[\\/|`]s ?\\)", "permalinkFragment": "nO0yX8", "isFavorite": false, "isStarred": false}, {"title": "simple split for email address", "description": "Simple match for parts of an email address to get firstname, lastname and email domain. (Does not include validity check!)", "dateCreated": "2016-05-20T08:02:37.000Z", "dateModified": "2016-05-20T08:02:37.000Z", "author": "art-ist.cc", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\S[^\\.]*)(\\.(\\S*))?@(\\S*)", "permalinkFragment": "bS7hD9", "isFavorite": false, "isStarred": false}, {"title": "orphaned", "description": "", "dateCreated": "2016-05-20T10:14:34.000Z", "dateModified": "2016-05-20T10:14:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\S+\\s(?<name>\\S+)+\\D+", "permalinkFragment": "jM0tY5", "isFavorite": false, "isStarred": false}, {"title": "Match URLS http|https www|ww|www3  etc ", "description": "match various web urls", "dateCreated": "2016-05-20T10:48:07.000Z", "dateModified": "2016-05-20T10:48:07.000Z", "author": "ganey", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((http|https)\\:\\/\\/|)([\\w|\\-]+\\.)+\\w+($|[\\w\\-\\/\\.]+$|[\\w\\/\\.]+\\?[\\w\\=\\&\\.]+$)", "permalinkFragment": "wJ3fA9", "isFavorite": false, "isStarred": false}, {"title": "Code INSEE des d\u00e9partements fran\u00e7ais", "description": "Cette expression r\u00e9guli\u00e8re valide une cha\u00eene de caract\u00e8res repr\u00e9sentant un code d\u00e9partement selon le code INSEE. Voir http://www.insee.fr/fr/methodes/nomenclatures/cog/", "dateCreated": "2016-05-20T12:46:22.000Z", "dateModified": "2016-05-20T12:46:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([02][1-9]|2[AB]|[1345678][0-9]|9[012345]|97[12346])$", "permalinkFragment": "oP3nU3", "isFavorite": false, "isStarred": false}, {"title": "Dashie Save", "description": "TS3 REGEX NAME BLACKLIST", "dateCreated": "2016-05-20T13:23:04.000Z", "dateModified": "2016-05-20T13:23:04.000Z", "author": "Dashie @inetpwnz", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".*(d|d[~`!@#$%^&:;\"'?|<>*\\(\\)\\[\\]\\{\\}\\/\\\\+.,_\\-\\s]*)([a@4\\p{L}\\s]|[a@4\\p{L}]e|[a@4\\p{L}][~`!@#$%^&:;\"'?|<>*\\(\\)\\[\\]\\{\\}\\/\\\\+.,_\\-\\s]*)([s%5$]|[s5$]c|[s%5$][~`!@#$%^&:;\"'?|<>*\\(\\)\\[\\]\\{\\}\\/\\\\+.,_\\-\\s\\p{L}]*)(h|h[~`!@#$%^&:;\"'?|<>*\\(\\)\\[\\]\\{\\}\\/\\\\+.,_\\-\\s]*)([i!1y|]|[i!1y|][~`!@#$%^&:;\"'?|<>*\\(\\)\\[\\]\\{\\}\\/\\\\+.,_\\-\\s]*)?[yie\u20ac3].*", "permalinkFragment": "oH5hO4", "isFavorite": false, "isStarred": false}, {"title": "Extract Course Number from Member DataBase Area", "description": "", "dateCreated": "2016-05-20T13:45:02.000Z", "dateModified": "2016-05-20T13:45:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\s|\\S){0,40}\\\"([0-9]{1,3})\\\"\\;\\}", "permalinkFragment": "vW1lS6", "isFavorite": false, "isStarred": false}, {"title": "MarketdataQuoteHandlerMessages", "description": "", "dateCreated": "2016-05-20T14:52:21.000Z", "dateModified": "2016-05-20T14:52:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\d\\s:,.-]+)\\s+\\w+\\s+\\w+QuoteHandler:(\\w+)\\s+Processed\\s+(\\d+)\\s+quote\\s+messages\\s+for\\s+service\\s+([\\w\\s]+)\\s+seq\\sno:\\s+(\\d+)\\s+Latency:\\s+([-\\d\\.]+)\\s+ms\\s+exchange time:\\s+([\\d+\\-\\:\\.\\s]+)msg rate:\\s+([\\d\\.]+)\\s+msgs\\/sec\\s+Packets\\s+on\\s+client\\s+queue:\\s+(\\d+),\\s+packets\\s+on\\s+client\\s+buffer:\\s+(\\d+),\\s+packets\\s+on\\s+server\\s+queue:\\s+(\\d+),\\s+server\\s+latency:\\s+([\\d\\.]+)\\s+ms,\\s+round\\s+trip\\s+time:\\s+([\\d\\.]+)\\s+ms,\\s+\\w+\\s+cnt:\\s+(\\d+)", "permalinkFragment": "mM2vE4", "isFavorite": false, "isStarred": false}, {"title": "qeqe", "description": "qweqwe", "dateCreated": "2016-05-20T16:01:27.000Z", "dateModified": "2016-05-20T16:01:27.000Z", "author": "qweqe", "flavor": "pcre", "delimiter": "@", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".*[((9D9APE).*)|(PE)]\\.DVR", "permalinkFragment": "wA2pE8", "isFavorite": false, "isStarred": false}, {"title": "email regex", "description": "", "dateCreated": "2016-05-20T17:31:16.000Z", "dateModified": "2016-05-20T17:31:16.000Z", "author": "thegamerbr1", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^[\\w.]+@(\\w)+\\.[\\w.]+$]", "permalinkFragment": "eQ4bH6", "isFavorite": false, "isStarred": false}, {"title": "Repeating letters more than once", "description": "", "dateCreated": "2016-05-20T23:10:37.000Z", "dateModified": "2016-05-20T23:10:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:\\p{L}\\p{M}?)*(\\p{L}\\p{M}?)(?=\\1{2})(?:\\p{L}\\p{M}?)*$", "permalinkFragment": "hY0vV2", "isFavorite": false, "isStarred": false}, {"title": "Get Src Image Tag", "description": "", "dateCreated": "2016-05-21T05:37:57.000Z", "dateModified": "2016-05-21T05:37:57.000Z", "author": "Leo Pham", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "src\\s*=\\s*\"(.+?)\"", "permalinkFragment": "uI2vE0", "isFavorite": false, "isStarred": false}, {"title": "Thaana", "description": "Thaana detect", "dateCreated": "2016-05-21T15:37:26.000Z", "dateModified": "2016-05-21T15:37:26.000Z", "author": "Yoosuf", "flavor": "pcre", "delimiter": "/", "flags": "u", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[\\p{Thaana}.\\-\\\u061f\\\ufdf2\\\u060c\\s]+$", "permalinkFragment": "iV6rU3", "isFavorite": false, "isStarred": false}, {"title": "Match different types of quoted strings in Javascript", "description": "The regex tries to match several types of quotations trying to avoid extreme cases. Bare in mind that this was developed for a specific use and thus some of the matches might not work for you.", "dateCreated": "2016-05-22T00:04:54.000Z", "dateModified": "2016-05-22T00:04:54.000Z", "author": "Shadi Lahham", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\u201c[^\u201c\u201d]+\u201d)|\\s(\u201c[^\u201c\u201d]+\u201d)|^(\"[^\"]+\")|\\s(\"[^\"]+\")|^('.*')\\s|\\s('.*')\\s|^('.*')$", "permalinkFragment": "fS9qP0", "isFavorite": false, "isStarred": false}, {"title": "Searching succeeding matching words", "description": "If you want to search succeeding words replace number in curly brace", "dateCreated": "2016-05-22T06:28:38.000Z", "dateModified": "2016-05-22T06:28:38.000Z", "author": "tassman", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:\\S+\\s+){1}(\\S+)", "permalinkFragment": "hY1oC1", "isFavorite": false, "isStarred": false}, {"title": "Razor template for JS files", "description": "", "dateCreated": "2016-05-22T07:47:37.000Z", "dateModified": "2016-05-22T07:47:37.000Z", "author": "Rodrigo Stuchi", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/(?:\\/|\\/\\s)razor:([^~]*?=)([^~]*?;)[^*]+?\\/(?:\\/|\\s)endrazor", "permalinkFragment": "dU1hT7", "isFavorite": false, "isStarred": false}, {"title": "email w/o query params", "description": "highlights emails that don't have query parameters ", "dateCreated": "2016-05-22T10:03:00.000Z", "dateModified": "2016-05-22T10:03:00.000Z", "author": "duaazahi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(http|ftp|https):\\/\\/([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.@,^%:\\/~+#-]+)([?][\\w@?^=%&\\/~+#-]+)+", "permalinkFragment": "gS6fC5", "isFavorite": false, "isStarred": false}, {"title": "LinkedIn Regex", "description": "", "dateCreated": "2016-05-22T12:24:01.000Z", "dateModified": "2016-05-22T12:24:01.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((https?:\\/\\/)?((www|\\w\\w)\\.)?linkedin\\.com\\/)((([\\w]{2,3})?)|([^\\/]+\\/(([\\w|\\d-&#?=])+\\/?){1,}))$", "permalinkFragment": "eT7kF7", "isFavorite": false, "isStarred": false}, {"title": "regex to find img src tags into html", "description": "", "dateCreated": "2016-05-22T21:28:23.000Z", "dateModified": "2016-05-22T21:28:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<img\\b[^>]*\\bsrc=\"([^\"]*\\/)[^\\/\"]*\"[^<>]*>", "permalinkFragment": "tP8hR3", "isFavorite": false, "isStarred": false}, {"title": "LogTag data from Error stack", "description": "", "dateCreated": "2016-05-22T22:59:15.000Z", "dateModified": "2016-05-22T22:59:15.000Z", "author": "rbeer", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "at .*\\.(\\w*) \\(.*js\\/(\\w*)\\/(?!logger)(\\w*)\\..{2,4}:(\\d*:\\d*)\\)", "permalinkFragment": "nA8sO4", "isFavorite": false, "isStarred": false}, {"title": "Non greedy Quotes JS", "description": "Matches 4 different types of quoted text avoiding html element and element attributes. Single quotes allow for contractions withing the quotes.", "dateCreated": "2016-05-23T10:26:26.000Z", "dateModified": "2016-05-23T10:26:26.000Z", "author": "Shadi Lahham", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\u201c[^\u201c\\n<\u201d]*?\u201d)|(\u2018[^\u2018\\n<\u2019]*?\u2019)|(?:^|[^=\"])(\"[^=\"\\n<\"]*?\")|('(?!(s|t|ll|d|m|ve|re)\\s)[^\\n<]*?')(?!(s|t|ll|d|m|ve|re))", "permalinkFragment": "iY9pP5", "isFavorite": false, "isStarred": false}, {"title": "Date and Day", "description": "Thur 10\nTue 2\nMon 1\ne.t.c", "dateCreated": "2016-05-23T15:04:43.000Z", "dateModified": "2016-05-23T15:04:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:T(?:hur|ue)|Wed|Fri|S(?:at|un)|Mon) (?P<date>\\d{1,2})$", "permalinkFragment": "xK9oZ2", "isFavorite": false, "isStarred": false}, {"title": "matches name in author field in Epic Notes", "description": "Matches author fields", "dateCreated": "2016-05-23T16:48:50.000Z", "dateModified": "2016-05-23T16:48:50.000Z", "author": "Mike Adams", "flavor": "python", "delimiter": "\"", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=by )(\\w+) (\\w+)", "permalinkFragment": "jD6sG0", "isFavorite": false, "isStarred": false}, {"title": "C#", "description": "", "dateCreated": "2016-05-24T06:49:10.000Z", "dateModified": "2016-05-24T06:49:10.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\"@\\\"^(([A-Za-z]))$\\\"\"", "permalinkFragment": "rG7xP7", "isFavorite": false, "isStarred": false}, {"title": "0000000", "description": "", "dateCreated": "2016-05-24T06:53:47.000Z", "dateModified": "2016-05-24T06:53:47.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\+\\d{1,3}[- ]?)?\\d{10}$", "permalinkFragment": "bV3jX3", "isFavorite": false, "isStarred": false}, {"title": "Username check", "description": "", "dateCreated": "2016-05-24T07:14:21.000Z", "dateModified": "2016-05-24T07:14:21.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\d\\D][^!\"\u00a3$%&@/()='?\u00ec^#{}[\\]]*)", "permalinkFragment": "pA6lQ1", "isFavorite": false, "isStarred": false}, {"title": "Twitter hashtag", "description": "", "dateCreated": "2016-05-24T08:17:01.000Z", "dateModified": "2016-05-24T08:17:01.000Z", "author": "ksc", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:^|$|[^&\\p{L}\\p{M}\\p{Nd} _\\\\u200c\\\\u200d\\\\ua67e\\\\u05be\\\\u05f3\\\\u05f4\\\\uff5e\\\\u301c\\\\u309b\\\\u309c\\\\u30a0\\\\u30fb\\\\u3003\\\\u0f0b\\\\u0f0c\\\\u00b7])([#\uff03](?!\\\\ufe0f|\\\\u20e3)[\\p{L}\\p{M}\\p{Nd} _\\\\u200c\\\\u200d\\\\ua67e\\\\u05be\\\\u05f3\\\\u05f4\\\\uff5e\\\\u301c\\\\u309b\\\\u309c\\\\u30a0\\\\u30fb\\\\u3003\\\\u0f0b\\\\u0f0c\\\\u00b7 ]*[\\p{L}\\p{M}][\\p{L}\\p{M}\\p{Nd} _\\\\u200c\\\\u200d\\\\ua67e\\\\u05be\\\\u05f3\\\\u05f4\\\\uff5e\\\\u301c\\\\u309b\\\\u309c\\\\u30a0\\\\u30fb\\\\u3003\\\\u0f0b\\\\u0f0c\\\\u00b7 ]*)", "permalinkFragment": "lL4hT3", "isFavorite": false, "isStarred": false}, {"title": "srt time frame", "description": "srt time frame", "dateCreated": "2016-05-24T22:08:40.000Z", "dateModified": "2016-05-24T22:08:40.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{2,}(:|,)){3}\\d{2,} --> (\\d{2,}(:|,)){3}\\d{2,}", "permalinkFragment": "gY2lY0", "isFavorite": false, "isStarred": false}, {"title": "Name with spaces also useful for city name", "description": "It will accepts the name with spaces with no limitation and we can also use same for city.", "dateCreated": "2016-05-25T05:06:08.000Z", "dateModified": "2016-05-25T05:06:08.000Z", "author": "Pravallika Chowdary", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z\\s]+$", "permalinkFragment": "iO4aS8", "isFavorite": false, "isStarred": false}, {"title": "Mobile number with spaces", "description": "It accepts the mobile no with space upto 13 digits with country code but without + symbol.\nfollowing are examples\n1.9959966566\n2.919959966566\n3.91 995 996 6566\n4.995 996 6566\n5.91 9959966566", "dateCreated": "2016-05-25T05:08:59.000Z", "dateModified": "2016-05-25T05:08:59.000Z", "author": "Pravallika Chowdary", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d{1,3}[-\\s]?|)\\d{3}[-\\s]?\\d{3}[-\\s]?\\d{4}$", "permalinkFragment": "rV1eQ4", "isFavorite": false, "isStarred": false}, {"title": "Password with limits", "description": "It will accepts  minimum 8 characters, and should have 1 Uppercase letter, 1 Lowercase letter, 1 Number and 1 Special Character.", "dateCreated": "2016-05-25T05:10:39.000Z", "dateModified": "2016-05-25T05:10:39.000Z", "author": "Pravallika Chowdary", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[`~!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]).*$", "permalinkFragment": "pG4sN5", "isFavorite": false, "isStarred": false}, {"title": "Zipcode with alphanumeric", "description": "It Should take 10 numbers and alphabetic characters and numbers only.", "dateCreated": "2016-05-25T05:11:56.000Z", "dateModified": "2016-05-25T05:11:56.000Z", "author": "Pravallika Chowdary", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9]{0,10}$", "permalinkFragment": "nM7bO8", "isFavorite": false, "isStarred": false}, {"title": "ANGULAR IMPORT TYPESCRIPT", "description": "", "dateCreated": "2016-05-25T11:46:42.000Z", "dateModified": "2016-05-25T11:46:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(import)[\\s|\\n]*\\{(.+)\\}[\\s|\\n]*from[\\s|\\n]*'..\\/..\\/(.+)';", "permalinkFragment": "nS9uO9", "isFavorite": false, "isStarred": false}, {"title": "Data URI scheme", "description": "Simple and not complete pattern for getting the items of a Data URI scheme.", "dateCreated": "2016-05-25T13:11:10.000Z", "dateModified": "2016-05-25T13:11:10.000Z", "author": "@afoeder", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^data:(image\\/(?:jpeg|png|gif));base64,(.+)$", "permalinkFragment": "uG7wR6", "isFavorite": false, "isStarred": false}, {"title": "tag remover", "description": "remove html tags, while leaving text in between", "dateCreated": "2016-05-25T14:18:19.000Z", "dateModified": "2016-05-25T14:18:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<[a-z]+>)?+(.*?)(<\\/[a-z]+>)", "permalinkFragment": "sE3iB8", "isFavorite": false, "isStarred": false}, {"title": "url segment parsing", "description": "URL Parsing", "dateCreated": "2016-05-26T02:40:56.000Z", "dateModified": "2016-05-26T02:40:56.000Z", "author": "Ricardo Cantu", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".*sites\\/(.*?[^\\/]+)", "permalinkFragment": "nM1lF4", "isFavorite": false, "isStarred": false}, {"title": "Gaddafi", "description": "Matches all spellings of the name Gaddafi that I've yet discovered.", "dateCreated": "2016-05-26T02:55:30.000Z", "dateModified": "2016-05-26T02:55:30.000Z", "author": "Klisz", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:[aeAE][lI][ -])?(?:[GKQ]h?|Qu)[aeu]([tdz]{1,2}[h']?)\\1?af{1,2}[iy]", "permalinkFragment": "fP5xL1", "isFavorite": false, "isStarred": false}, {"title": "match @user but not email@example.com", "description": "for finding user mentions in markdown-like comments", "dateCreated": "2016-05-26T05:36:17.000Z", "dateModified": "2016-05-26T05:36:17.000Z", "author": "Holger Schmidt (https://github.com/forger)", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?:(?<=\\s|\\W|\\A))@(\\w+))", "permalinkFragment": "fV9gM8", "isFavorite": false, "isStarred": false}, {"title": "Teaching potatoes how to search", "description": "You see how it matches the hit ratio line? Yeah m8, that simple", "dateCreated": "2016-05-26T07:03:43.000Z", "dateModified": "2016-05-26T07:03:43.000Z", "author": "11\" Mipsmagician", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Hit ratio.*", "permalinkFragment": "lW3uV3", "isFavorite": false, "isStarred": false}, {"title": "Text by word tail-trimming regex pattern", "description": "", "dateCreated": "2016-05-26T08:04:30.000Z", "dateModified": "2016-05-26T08:04:30.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gsm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\r\\n\\f]+(?:[\\w]+\\b)[[:punct:]]*)(.*).{6}$", "permalinkFragment": "bC8qZ3", "isFavorite": false, "isStarred": false}, {"title": "URL Match and split", "description": "match any type of url and split each part (protocol, domain, page, GET, and ID) in capture groups ", "dateCreated": "2016-05-26T09:53:45.000Z", "dateModified": "2016-05-26T09:53:45.000Z", "author": "", "flavor": "pcre", "delimiter": "~", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(\\w+)://)?(?:(\\w+)\\:(\\w+)@)?([^/:]+)?(?:\\:(\\d*))?([^#?]+)?(?:\\?([^#]+))?(?:#(.+$))", "permalinkFragment": "eW9xT4", "isFavorite": false, "isStarred": false}, {"title": "remove specific div", "description": "removes divs of the print class", "dateCreated": "2016-05-26T10:52:35.000Z", "dateModified": "2016-05-26T10:52:35.000Z", "author": "Nicolaj", "flavor": "python", "delimiter": "\"", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<div\\s\\w{5}=\\\"print[^>]*?>[\\s\\S]*?<\\/div>", "permalinkFragment": "eN6gO7", "isFavorite": false, "isStarred": false}, {"title": "<a href=\"([^\"]*)\"[^<]*>(?:(?!<\\/?a\\b[^<]*>)[\\s\\S])*<img src=\"([^\"]*)\"\\", "description": "", "dateCreated": "2016-05-26T13:23:25.000Z", "dateModified": "2016-05-26T13:23:25.000Z", "author": "Ivan Vlajic", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<a href=\"([^\"]*)\"[^<]*>(?:(?!<\\/?a\\b[^<]*>)[\\s\\S])*<img src=\"([^\"]*)\"\\s*.*?<\\/a>", "permalinkFragment": "eI7cW1", "isFavorite": false, "isStarred": false}, {"title": "Liberal URL detector", "description": "Detects almost all URLs contained in a sentence", "dateCreated": "2016-05-26T13:55:50.000Z", "dateModified": "2016-05-26T13:55:50.000Z", "author": "https://gist.github.com/gruber", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?i)\\b((?:https?:(?:\\/{1,3}|[a-z0-9%])|[a-z0-9.\\-]+[.](?:com|net|org|edu|gov|mil|aero|asia|biz|cat|coop|info|int|jobs|mobi|museum|name|post|pro|tel|travel|xxx|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|cu|cv|cx|cy|cz|dd|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|Ja|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|yu|za|zm|zw)\\/)(?:[^\\s()<>{}\\[\\]]+|\\([^\\s()]*?\\([^\\s()]+\\)[^\\s()]*?\\)|\\([^\\s]+?\\))+(?:\\([^\\s()]*?\\([^\\s()]+\\)[^\\s()]*?\\)|\\([^\\s]+?\\)|[^\\s`!()\\[\\]{};:'\".,<>?\u00ab\u00bb\u201c\u201d\u2018\u2019])|(?:(?<!@)[a-z0-9]+(?:[.\\-][a-z0-9]+)*[.](?:com|net|org|edu|gov|mil|aero|asia|biz|cat|coop|info|int|jobs|mobi|museum|name|post|pro|tel|travel|xxx|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|cu|cv|cx|cy|cz|dd|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|Ja|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|yu|za|zm|zw)\\b\\/?(?!@)))", "permalinkFragment": "sN4rT0", "isFavorite": false, "isStarred": false}, {"title": "Todo Comments", "description": "", "dateCreated": "2016-05-26T17:03:40.000Z", "dateModified": "2016-05-26T17:03:40.000Z", "author": "Marvin Hagemeister", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/\\/(?: ?|\\t?)(?:TODO|XXX|FIXME)(?:\\:?|\\ ?)(.*$)", "permalinkFragment": "bC2fQ5", "isFavorite": false, "isStarred": false}, {"title": "Getting video urls from content", "description": "For use on wordpress on multisite. Finds mp4 videos within the content.", "dateCreated": "2016-05-27T03:39:26.000Z", "dateModified": "2016-05-27T03:39:26.000Z", "author": "Mike Kormendy", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:<video[^>].*src=\\\")(?<src>[^\"].*)(?=\\?)", "permalinkFragment": "xL3cX2", "isFavorite": false, "isStarred": false}, {"title": "men", "description": "", "dateCreated": "2016-05-27T08:05:55.000Z", "dateModified": "2016-05-27T08:05:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".*[^o]men.*", "permalinkFragment": "gW6oU2", "isFavorite": false, "isStarred": false}, {"title": "password8s", "description": "password con 8", "dateCreated": "2016-05-27T14:49:14.000Z", "dateModified": "2016-05-27T14:49:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$", "permalinkFragment": "oE5mP0", "isFavorite": false, "isStarred": false}, {"title": "match non-regular words", "description": "", "dateCreated": "2016-05-27T15:04:25.000Z", "dateModified": "2016-05-27T15:04:25.000Z", "author": "Jason", "flavor": "pcre", "delimiter": "/", "flags": "ug", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\W|^)([^\\s](?=[^\\s]*[^a-z\\s\\;\\,\\.\\:\\/\\-])[^\\,\\s]*(?<=[^\\.\\;\\)\\:\\/]))(?=\\W|$)", "permalinkFragment": "yE3jS7", "isFavorite": false, "isStarred": false}, {"title": "email regex", "description": "", "dateCreated": "2016-05-27T17:09:49.000Z", "dateModified": "2016-05-27T17:09:49.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))){2,6}$", "permalinkFragment": "sP9sF1", "isFavorite": false, "isStarred": false}, {"title": "CSV : Match values with carriage return", "description": "Use with csv with \";\" delim. \nMatches values that contains carriage return not surrounded by \ndouble quotes.\n", "dateCreated": "2016-05-27T19:44:31.000Z", "dateModified": "2016-05-27T19:44:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=;)\"(([^;]?)([\\r\\n]?))+\"(?![1-9;])", "permalinkFragment": "eB5nY5", "isFavorite": false, "isStarred": false}, {"title": "Detects IPv4 and IPv6 addresses", "description": "This is loosely based on some other examples, but goes a bit further in terms of what it will and won't match.  In particular, it matches IPv6 addresses like ff02::, ff02:1000::, and (the syntactically valid but improbable) ::0001:0002", "dateCreated": "2016-05-27T20:28:55.000Z", "dateModified": "2016-05-27T20:28:55.000Z", "author": "Alan", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<ip_addr>((\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})|((([\\da-fA-F]{1,4}:){7})([\\da-fA-F]{1,4})$|(([\\da-fA-F]{1,4}:){1,6}:)(([\\da-fA-F]{1,4}:){0,4})([\\da-fA-F]{1,4}))|(::[\\da-fA-F]{1,4})|(([\\da-fA-F]{1,4}:){0,7}[\\da-fA-F]{1,4}::)))$", "permalinkFragment": "mX5tC9", "isFavorite": false, "isStarred": false}, {"title": "Extracts table names from SELECT query", "description": "Finds table names in table list and subqueries.\nTable names are in group #1 of all matches\nOne note. In case of table list (like SELECT * FROM table1, table2, etc) group#1 will contain all tables string (like \"table1, table2, etc\") so it's necessary to do additional handing like splitting the string", "dateCreated": "2016-05-27T22:16:35.000Z", "dateModified": "2016-05-27T22:16:35.000Z", "author": "Mykhaylo Khodorev (mykhaylo.khodorev@gmail.com)", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=FROM|JOIN|OJ)[\\s\\(]+(((`?[\\w_]+`?)(\\s*,\\s*)*)+)", "permalinkFragment": "bW4hG0", "isFavorite": false, "isStarred": false}, {"title": "sentence regex", "description": "This regex will pick sentences.", "dateCreated": "2016-05-28T12:15:22.000Z", "dateModified": "2016-05-28T12:15:22.000Z", "author": "noby nirmal", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(([A-Z][a-z]*(\\s))([a-z]*(\\s))*([a-z]+)[.])*(?!([A-z0-9]*(\\s)))", "permalinkFragment": "rM5vQ8", "isFavorite": false, "isStarred": false}, {"title": "Extracts table names from SELECT query", "description": "Finds table names in table list and subqueries.\nTable names are in group #1 of all matches\nOne note. In case of table list (like SELECT * FROM table1, table2, etc) group#1 will contain all tables string (like \"table1, table2, etc\") so it's necessary to do additional handing like splitting the string", "dateCreated": "2016-05-27T22:16:35.000Z", "dateModified": "2016-05-27T22:16:35.000Z", "author": "Mykhaylo Khodorev (mykhaylo.khodorev@gmail.com)", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=FROM|JOIN|OJ)[\\s\\(]+(((`?[\\w_]+`?)(\\s*,\\s*)*)+)", "permalinkFragment": "bW4hG0", "isFavorite": false, "isStarred": false}, {"title": "sentence regex", "description": "This regex will pick sentences.", "dateCreated": "2016-05-28T12:15:22.000Z", "dateModified": "2016-05-28T12:15:22.000Z", "author": "noby nirmal", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(([A-Z][a-z]*(\\s))([a-z]*(\\s))*([a-z]+)[.])*(?!([A-z0-9]*(\\s)))", "permalinkFragment": "rM5vQ8", "isFavorite": false, "isStarred": false}, {"title": "Bigger or lower than a number with <>", "description": "", "dateCreated": "2016-05-28T12:21:21.000Z", "dateModified": "2016-05-28T12:21:21.000Z", "author": "woss.io", "flavor": "python", "delimiter": "\"", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(>|<)?(?:\\s+)?(\\d+)(?:\\s+)?(>|<)?$", "permalinkFragment": "oT8uG7", "isFavorite": false, "isStarred": false}, {"title": "sentence checker", "description": "This will check for any no of strings", "dateCreated": "2016-05-28T12:45:27.000Z", "dateModified": "2016-05-28T12:45:27.000Z", "author": "noby nirmal", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((([A-Z][a-z]*(\\s))([a-z]*(\\s))*[a-z]*[.])(\\s)*)*(?!([A-z0-9]*(\\s)))", "permalinkFragment": "lR9eF7", "isFavorite": false, "isStarred": false}, {"title": "Sentence checker", "description": "This will validate any nu of lines", "dateCreated": "2016-05-28T12:46:30.000Z", "dateModified": "2016-05-28T12:46:30.000Z", "author": "noby nirmal", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((([A-Z][a-z]*(\\s))([a-z]*(\\s))*[a-z]*[.])(\\s)*)*(?!([A-z0-9]*(\\s)))", "permalinkFragment": "kI2fY7", "isFavorite": false, "isStarred": false}, {"title": "anime English title", "description": "anime English title from snipertopanime", "dateCreated": "2016-05-29T05:27:23.000Z", "dateModified": "2016-05-29T05:27:23.000Z", "author": "Wasdee", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9a-zA-Z][:0-9a-zA-Z ]+)(?= )", "permalinkFragment": "gU2aQ4", "isFavorite": false, "isStarred": false}, {"title": "Find </a>", "description": "", "dateCreated": "2016-05-29T14:19:37.000Z", "dateModified": "2016-05-29T14:19:37.000Z", "author": "Ivan Milazzotti", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\s<\\/a>)", "permalinkFragment": "uA3fW6", "isFavorite": false, "isStarred": false}, {"title": "Find specific tag content", "description": "", "dateCreated": "2016-05-29T15:15:35.000Z", "dateModified": "2016-05-29T15:15:35.000Z", "author": "Ivan Milazzotti", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<h5\\>Atores<\\/h5\\>\\s*)", "permalinkFragment": "fI1nP9", "isFavorite": false, "isStarred": false}, {"title": "Wikipedia parse", "description": "", "dateCreated": "2016-05-29T21:36:02.000Z", "dateModified": "2016-05-29T21:36:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "sig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<namespace\\b[^>|^\\/>]*>(.*?)<\\/namespace>", "permalinkFragment": "bL7aQ8", "isFavorite": false, "isStarred": false}, {"title": "Extracts table names from SELECT query", "description": "Finds table names in table list and subqueries. Table names are in group #1 of all matches One note. In case of table list (like SELECT * FROM table1, table2, etc) group#1 will contain all tables string (like \"table1, table2, etc\"). In case of subquery in a table list group#1 may contain also other symbols besides table names and commas (most likely - \"(\" ). So it's necessary to do additional handing like splitting the string. ", "dateCreated": "2016-05-29T22:34:24.000Z", "dateModified": "2016-05-29T22:34:24.000Z", "author": "Mykhaylo Khodorev (mykhaylo.khodorev@gmail.com)", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=FROM|JOIN|OJ)[\\s\\(]+((((?!SELECT\\b)`?[\\w_]+`?)(\\s*\\)?,\\s*)*)+)", "permalinkFragment": "uF5dP5", "isFavorite": false, "isStarred": false}, {"title": "auto-complete", "description": "", "dateCreated": "2016-05-29T22:55:43.000Z", "dateModified": "2016-05-29T22:55:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "class=\"([^\"]*)", "permalinkFragment": "eR8tF3", "isFavorite": false, "isStarred": false}, {"title": "matching+backreferencing method parameters", "description": "match a specific method name\nmatch a quoted double value for method parameter 1\nmatch a quoted, specific string value for method parameter 2", "dateCreated": "2016-05-30T08:51:33.000Z", "dateModified": "2016-05-30T08:51:33.000Z", "author": "nickleus", "flavor": "pcre", "delimiter": "/", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^isCellValueEqualTo\\(('[0-9]+\\.[0-9]+'), ('CashValue')\\);$", "permalinkFragment": "eP1cI0", "isFavorite": false, "isStarred": false}, {"title": "potential shell", "description": "Potential malware/sheel signature", "dateCreated": "2016-05-30T13:06:54.000Z", "dateModified": "2016-05-30T13:06:54.000Z", "author": "cedk / ced404", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\$(.*)(\\s?)=(\\s?)\"(.*)\"(\\s?);(\\s?)\\$(.*)eval", "permalinkFragment": "rV7nU2", "isFavorite": false, "isStarred": false}, {"title": "Spaces", "description": "Get all spaces in a string", "dateCreated": "2016-05-30T15:01:23.000Z", "dateModified": "2016-05-30T15:01:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\s)[^.png]", "permalinkFragment": "eT7iV2", "isFavorite": false, "isStarred": false}, {"title": "EDI parser - INVRPT 97A", "description": "INVRPT:D:97A", "dateCreated": "2016-05-30T23:13:43.000Z", "dateModified": "2016-05-30T23:13:43.000Z", "author": "Ran Z", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "LIN\\+(?'LIN'[A-Z0-9]+)\\+\\+(?'Article'\\w+).+?(?=QTY)QTY\\+145:(?'QTY'[0-9\\.]+):(?'UOM'\\w+)'STS\\+\\+\\+(?'STS'\\w+)", "permalinkFragment": "oK7lU2", "isFavorite": false, "isStarred": false}, {"title": "i", "description": "", "dateCreated": "2016-05-31T02:05:51.000Z", "dateModified": "2016-05-31T02:05:51.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "10|[0-9]{1}", "permalinkFragment": "vO6uB2", "isFavorite": false, "isStarred": false}, {"title": "Plant Ninja woocommerce product category rewrites", "description": "", "dateCreated": "2016-05-31T04:10:51.000Z", "dateModified": "2016-05-31T04:10:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "shop\\/(vegan-[^\\/]*?)\\/?$", "permalinkFragment": "oX1mE0", "isFavorite": false, "isStarred": false}, {"title": "Plant Ninja woocommerce product category rewrites", "description": "", "dateCreated": "2016-05-31T04:21:28.000Z", "dateModified": "2016-05-31T04:21:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "shop(?:\\/.*)*?\\/(vegan-[^\\/]*?)\\/?$", "permalinkFragment": "iT1yE9", "isFavorite": false, "isStarred": false}, {"title": "Percentage complete", "description": "", "dateCreated": "2016-05-31T05:48:58.000Z", "dateModified": "2016-05-31T05:48:58.000Z", "author": "Asif", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9]\\d*$", "permalinkFragment": "qH4uC1", "isFavorite": false, "isStarred": false}, {"title": "Dates validation", "description": "Not accurate", "dateCreated": "2016-05-31T08:52:16.000Z", "dateModified": "2016-05-31T08:52:16.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z", "permalinkFragment": "hH1bV6", "isFavorite": false, "isStarred": false}, {"title": "Fax number Regx for all countries", "description": "Fax number Regx for all countries", "dateCreated": "2016-05-31T10:01:37.000Z", "dateModified": "2016-05-31T10:01:37.000Z", "author": "Priya Viswanathan", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\+)?(((((\\d+)|(\\(\\d+\\))|(\\(\\d+\\s(\\d)\\)))(\\s|-|\\d+))+)|((\\d+)|(\\(\\d+\\))$)+)+\\d$", "permalinkFragment": "nT4yZ4", "isFavorite": false, "isStarred": false}, {"title": "Hashtag", "description": "To find hashtags. It also allows underscores (_), not sure if that is officially correct.", "dateCreated": "2016-05-31T10:07:41.000Z", "dateModified": "2016-05-31T10:07:41.000Z", "author": "cad", "flavor": "pcre", "delimiter": "/", "flags": "giu", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=[\\.,; >])#(?!\\d)(\\w+)", "permalinkFragment": "xX6bP5", "isFavorite": false, "isStarred": false}, {"title": "tr", "description": "", "dateCreated": "2016-05-31T16:22:22.000Z", "dateModified": "2016-05-31T16:22:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{8}-\\d{4})_(.{1,})_avl\\.properties_(\\d{8}-\\d{4})_(.{1,})_avl.properties_(\\d{8})\\.txt$", "permalinkFragment": "eR9dA8", "isFavorite": false, "isStarred": false}, {"title": "Gyazo Page to PNG", "description": "Turns Gyazo page links into PNG links (useful for auto-previews, embedding etc.)", "dateCreated": "2016-05-31T17:03:58.000Z", "dateModified": "2016-05-31T17:03:58.000Z", "author": "md678685", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https:\\/\\/gyazo.com\\/([0-9A-Za-z]{1,32})", "permalinkFragment": "fS4dB0", "isFavorite": false, "isStarred": false}, {"title": "Copyright Search", "description": "searches for either Copyright or copyright symbol, or the programmer's short hand of (c) (which is NOT legal, use the symbol!).", "dateCreated": "2016-05-31T19:39:21.000Z", "dateModified": "2016-05-31T19:39:21.000Z", "author": "Henry Rieke", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b(((copyright)\\s)?)((\u00a9|\\(c\\))?[^(\\(|\\;|\\{)])", "permalinkFragment": "xG5kQ6", "isFavorite": false, "isStarred": false}, {"title": "Catastrophic Backtrack", "description": "This regexp matches urls, but causes catastrophic backtrack", "dateCreated": "2016-06-01T05:38:58.000Z", "dateModified": "2016-06-01T05:38:58.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(?:(?:[a-z\\x{00a1}-\\x{ffff}0-9]+-?)*[a-z\\x{00a1}-\\x{ffff}0-9]+)(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}0-9]+-?)*[a-z\\x{00a1}-\\x{ffff}0-9]+)*(?:\\.([a-z\\x{00a1}-\\x{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?", "permalinkFragment": "yB5eU5", "isFavorite": false, "isStarred": false}, {"title": "Chemical formula regex", "description": "Parses some chemical formula", "dateCreated": "2016-06-01T08:50:26.000Z", "dateModified": "2016-06-01T08:50:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([A-Z][a-z]?)(\\d*(?:(?:[\\.|\\,])\\d+(?:\\%)?)?)|(?:[\\(|\\[])([^()]*(?:(?:[\\(|\\[]).*(?:[\\)|\\]]))?[^()]*)(?:[\\)|\\]])(\\d*(?:(?:[\\.|\\,]?)\\d+(?:\\%)?))", "permalinkFragment": "vE6nC7", "isFavorite": false, "isStarred": false}, {"title": "Search for Abbreviations and acronyms", "description": "", "dateCreated": "2016-06-01T09:01:47.000Z", "dateModified": "2016-06-01T09:01:47.000Z", "author": "Agust\u00edn Bouillet", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:[\\s\\-\\_\\\u2014\\\u2013\\~\\(\\[\\{\\\"\\'\\\u2039\\\u00ab\\\u201c\\\u2018\\\u00a1\\\u00bf\\/]?(AySA)[\\.\\,\\:\\;\\-\\_\\\u2014\\\u2013\\~\\s\\)\\]\\}\\\"\\'\\\u203a\\\u00bb\\\u201d\\\u2019\\!\\?\\*\\/]?)", "permalinkFragment": "pQ2wI6", "isFavorite": false, "isStarred": false}, {"title": "Apache Error Log Date Parsing", "description": "Parse the date from an Apache Error Log in the format of \"Wed Jun 01 20:05:21.12345 2016\"", "dateCreated": "2016-06-01T10:46:55.000Z", "dateModified": "2016-06-01T10:46:55.000Z", "author": "garys", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<dayname>[A-Za-z]{3})\\s(?<month>[A-Za-z]{3})\\s(?<dayofmonth>\\d{2})\\s(?<hour>\\d{2}):(?<minutes>\\d{2}):(?<seconds>\\d{2})(?:\\.(?<milliseconds>\\d*))?\\s(?<year>\\d{4})", "permalinkFragment": "qF2oG0", "isFavorite": false, "isStarred": false}, {"title": "ip addr", "description": "", "dateCreated": "2016-06-01T12:46:44.000Z", "dateModified": "2016-06-01T12:46:44.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\n", "permalinkFragment": "vI9mK1", "isFavorite": false, "isStarred": false}, {"title": "timestamp offset", "description": "", "dateCreated": "2016-06-01T13:34:16.000Z", "dateModified": "2016-06-01T13:34:16.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([+-]?)(\\d+)([a-zA-Z]+)$", "permalinkFragment": "bY0uP1", "isFavorite": false, "isStarred": false}, {"title": "Url Exclud word", "description": "exclude match if a word is in the url", "dateCreated": "2016-06-01T15:25:01.000Z", "dateModified": "2016-06-01T15:25:01.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/blog\\/+^(?!.*tag).*$", "permalinkFragment": "cU4xM0", "isFavorite": false, "isStarred": false}, {"title": "Perfect URL Validation", "description": "", "dateCreated": "2016-06-01T17:27:52.000Z", "dateModified": "2016-06-01T17:27:52.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$", "permalinkFragment": "mJ7rR6", "isFavorite": false, "isStarred": false}, {"title": "Helpful for refactoring functions (ex: removing second argument)", "description": "", "dateCreated": "2016-06-01T17:30:41.000Z", "dateModified": "2016-06-01T17:30:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Tracer.log\\((.*), true\\)", "permalinkFragment": "iJ2gH3", "isFavorite": false, "isStarred": false}, {"title": "Amplify", "description": "Amplify XDA Guide", "dateCreated": "2016-06-02T02:17:37.000Z", "dateModified": "2016-06-02T02:17:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "CONTEXT_MANAGER_ALARM_WAKEUP_[0-9]{4,}", "permalinkFragment": "eV0zS9", "isFavorite": false, "isStarred": false}, {"title": "click_error", "description": "", "dateCreated": "2016-06-02T08:40:17.000Z", "dateModified": "2016-06-02T08:40:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "-*\\nRuntime error\\n*User: (?<User>\\w.+)\\nDomain: (?<Domain>\\w.+)\\nURI: (?<uri>\\/?\\w.+)\\nReferer: (?<referer>\\w.+)\\nAgent: (?<agent>\\w.+)\\n.+\\n.+\\nweb.Server Traceback \\(most recent call last\\):\\n(?<trace>.(.|\\n)*)", "permalinkFragment": "vK1nQ7", "isFavorite": false, "isStarred": false}, {"title": "work trimming output", "description": "", "dateCreated": "2016-06-02T09:10:29.000Z", "dateModified": "2016-06-02T09:10:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(=.*([^\\n]*\\n+)+=+)", "permalinkFragment": "mS7lC6", "isFavorite": false, "isStarred": false}, {"title": "HPE / report part 4", "description": "", "dateCreated": "2016-06-02T09:13:55.000Z", "dateModified": "2016-06-02T09:13:55.000Z", "author": "stelf", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.{3})(.{17})(.{17})(.{20})(.{20})(.{10})(.{6})(.{30})(.{8})(.{8})(.{17})(.{3})(.{10})(.{3})(.{10})(.{3})(.{15})(.{15})(.{30})(.{8})(.{17})(.{17})(.{2})(.{1})(.{10})(.{10})(.{10})(.{10})(.{10})(.{15})(.{15})(.{30})(.{30})(.{17})(.{17})(.{35})", "permalinkFragment": "dF0oI8", "isFavorite": false, "isStarred": false}, {"title": "IP range 193.172.166.100 193.172.166.251", "description": "", "dateCreated": "2016-06-02T11:42:49.000Z", "dateModified": "2016-06-02T11:42:49.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^193\\.172\\.166\\.(1[0-9][0-9]|2[0-4][0-9]|25[0-1])$", "permalinkFragment": "tW3pK3", "isFavorite": false, "isStarred": false}, {"title": "IP Range 193.172.166.0 - 193.172.166.31", "description": "", "dateCreated": "2016-06-02T11:49:02.000Z", "dateModified": "2016-06-02T11:49:02.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^193\\.172\\.166\\.([1-2][0-9]|3[0-1]|[0-9])$", "permalinkFragment": "nV1rN2", "isFavorite": false, "isStarred": false}, {"title": "Verify Password ", "description": "I verify if a string contains from 8 to 10 char and at least one of the following: Upper case char, lower case char, number, special character", "dateCreated": "2016-06-02T12:19:09.000Z", "dateModified": "2016-06-02T12:19:09.000Z", "author": "exSnake", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!\"#$%&'()*+,-.:;<=>?@[\\]^_`{|}~]).*).{8,10}", "permalinkFragment": "aD1sD8", "isFavorite": false, "isStarred": false}, {"title": "Formato RUN", "description": "Formato del Rol \u00danico Nacional en Chile", "dateCreated": "2016-06-02T12:22:32.000Z", "dateModified": "2016-06-02T12:22:32.000Z", "author": "Jorge Moyano Fuentes", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9]{1,2}\\.[0-9]{3}\\.[0-9]{3}-[0-9kK]", "permalinkFragment": "kS8gA2", "isFavorite": false, "isStarred": false}, {"title": "Match for courses", "description": "Match with courses like:\nAB123, AB 123, ABC123 or ABC 123", "dateCreated": "2016-06-02T16:02:29.000Z", "dateModified": "2016-06-02T16:02:29.000Z", "author": "Matheus Sampaio", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b([a-zA-Z]{2,3}[\\s]*[0-9]{3})\\b", "permalinkFragment": "hP1vU2", "isFavorite": false, "isStarred": false}, {"title": "controllers check", "description": "", "dateCreated": "2016-06-02T16:15:11.000Z", "dateModified": "2016-06-02T16:15:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(.*)edit$|^(.*)del$|^(.*)add$", "permalinkFragment": "fX7vO7", "isFavorite": false, "isStarred": false}, {"title": "HSI DISCOUNTS", "description": "", "dateCreated": "2016-06-02T21:21:54.000Z", "dateModified": "2016-06-02T21:21:54.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "WZ[BC](9[03]|66)", "permalinkFragment": "hJ3uF3", "isFavorite": false, "isStarred": false}, {"title": "DATA Charge", "description": "", "dateCreated": "2016-06-02T21:38:40.000Z", "dateModified": "2016-06-02T21:38:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[FHD]?[LP]U?\\d{3}|H032B|RVS8N", "permalinkFragment": "xH0uK0", "isFavorite": false, "isStarred": false}, {"title": "ES6 Template Literals", "description": "Matches the template literals in a given string", "dateCreated": "2016-06-02T23:25:57.000Z", "dateModified": "2016-06-02T23:25:57.000Z", "author": "Ozzy", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\$\\{[\\s]*.*?[\\s]*\\})", "permalinkFragment": "sM8wO5", "isFavorite": false, "isStarred": false}, {"title": "FHIR API", "description": "HA Proxy URL rewrite for the FHIR APIs", "dateCreated": "2016-06-03T01:57:14.000Z", "dateModified": "2016-06-03T01:57:14.000Z", "author": "gpiskun", "flavor": "pcre", "delimiter": "`", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "/fhir/(dstu[1-9])/([^/?]+)(/?.*)", "permalinkFragment": "dD6jT2", "isFavorite": false, "isStarred": false}, {"title": "US Publication Number", "description": "To search the publication number in uspto documents.", "dateCreated": "2016-06-03T04:32:28.000Z", "dateModified": "2016-06-03T04:32:28.000Z", "author": "Mohd Amir", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[U][S]\\s(?:\\d{1}\\,\\d{3}\\,\\d{3})", "permalinkFragment": "dA9wW9", "isFavorite": false, "isStarred": false}, {"title": "__import__(\"os\")", "description": "", "dateCreated": "2016-06-03T06:54:05.000Z", "dateModified": "2016-06-03T06:54:05.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "/", "permalinkFragment": "mC2eH9", "isFavorite": false, "isStarred": false}, {"title": "neudecker regex", "description": "neudecker regex", "dateCreated": "2016-06-03T07:19:48.000Z", "dateModified": "2016-06-03T07:19:48.000Z", "author": "joe", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9A-F]{2}[:\\- ]{5}[0-9A-F]{2}$", "permalinkFragment": "bU0cP1", "isFavorite": false, "isStarred": false}, {"title": "KLC051 Regex", "description": "", "dateCreated": "2016-06-03T09:10:29.000Z", "dateModified": "2016-06-03T09:10:29.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:Product (\\d{6})(\\d{8}) (.{12}) (.+)\\s?\\*BCA)+", "permalinkFragment": "tK0rN3", "isFavorite": false, "isStarred": false}, {"title": "Duplicate Properties", "description": "This regex is to find duplicates in properties- or config-files with '='-separated key value pairs.", "dateCreated": "2016-06-03T09:59:21.000Z", "dateModified": "2016-06-03T09:59:21.000Z", "author": "vgross", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*?)\\=.*?\\r*\\n\\1", "permalinkFragment": "hC8lP4", "isFavorite": false, "isStarred": false}, {"title": "my first regex", "description": "", "dateCreated": "2016-06-03T11:07:07.000Z", "dateModified": "2016-06-03T11:07:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(<{1}[a-zA-Z0-9]*:(?i)password>|<{1}(?i)password>)(.*)(<\\/[a-zA-Z0-9]*:(?i)password>|<\\/(?i)password>)", "permalinkFragment": "wE9wG7", "isFavorite": false, "isStarred": false}, {"title": "Decimal numbers (plus exponent)", "description": "Matches decimal numbers also with exponent (23.8e12)\nIt does not match silly things like 00000000000.0000000000 as other \"decimal number regex\"", "dateCreated": "2016-06-03T11:12:26.000Z", "dateModified": "2016-06-03T11:12:26.000Z", "author": "Mirco Sanguineti", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^-?(0?|[1-9]+\\d*)(\\.(0{1}|0*[1-9]+\\d*)(e\\d+)?)?$", "permalinkFragment": "hB1yY3", "isFavorite": false, "isStarred": false}, {"title": "Improved decimal numbers", "description": "Decimal numbers matcher with optional matching for exponent (12.4e7) and optional thousand comma separator matches both 1,234.05 and 1234.05. Also matches negative numbers (-1234.05)", "dateCreated": "2016-06-03T11:32:16.000Z", "dateModified": "2016-06-03T11:32:16.000Z", "author": "Mirco Sanguineti", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^-?(0?|(([1-9]{1}\\d{0,2})(,\\d{1,3})*|[1-9]+\\d*))(\\.(0{1}|\\d*[1-9]{1})(e(0|[1-9]{1}\\d*))?)?$", "permalinkFragment": "wR2vT6", "isFavorite": false, "isStarred": false}, {"title": "DDmmyyyy", "description": "", "dateCreated": "2016-06-03T11:55:39.000Z", "dateModified": "2016-06-03T11:55:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((0[1-9])|(1[0-2]))(([0-2][1-9])|(3[0-1]))((19\\d\\d)|(2\\d\\d\\d))$", "permalinkFragment": "sX7lV2", "isFavorite": false, "isStarred": false}, {"title": "Turkish Date (4 digit year) Regex (with leap year control)", "description": "Following inputs are accepted\ndd.mm.yyyy\n\nwhile 29.02.2016 accepted, 29.02.2017 is not.\nalso some months last days should be 30, not 31\n\nex: 31.11.2016 not accepted\n", "dateCreated": "2016-06-03T14:33:53.000Z", "dateModified": "2016-06-03T14:33:53.000Z", "author": "Abdulhamit Mabocoglu", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(((0?[1-9]|1\\d|2[0-8])\\.(0?[1-9]|1[012])|(29|30)\\.(0?[13456789]|1[012])|31\\.(0?[13578]|1[02]))\\.(19|[2-9]\\d)\\d{2}|29\\.0?2\\.((19|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00)))$", "permalinkFragment": "mY8vF4", "isFavorite": false, "isStarred": false}, {"title": "ls -a Linux Output - Parse Filename", "description": "Parse just the filename from ls -a output on Linux.", "dateCreated": "2016-06-03T14:51:09.000Z", "dateModified": "2016-06-03T14:51:09.000Z", "author": "Brian Hannan", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\S+\\s+\\S+\\s+\\S+\\s+\\S+\\s+\\S+\\s+\\S+\\s+\\S+\\s+\\S+\\s+(.*)", "permalinkFragment": "tK5dC4", "isFavorite": false, "isStarred": false}, {"title": "Bloomberg Futures", "description": "Separates generic and individual bloomberg symbols into 'root', 'month' (or lack of it), 'year' or 'generic contract number' and 'yellow key'\n\nProblem is that matches for root are 1 and 4, can't give them save reference or number. Will update if figure out", "dateCreated": "2016-06-03T19:59:27.000Z", "dateModified": "2016-06-03T19:59:27.000Z", "author": "@TradingMax", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(.*)([FGHJKMNQUVXZ])(\\d{1,2})|(.*[^\\d])(\\d{1,2}))\\s(\\w*)", "permalinkFragment": "lV3sS1", "isFavorite": false, "isStarred": false}, {"title": "username", "description": "REGEX to validate field username 3-20 chars", "dateCreated": "2016-06-04T00:25:37.000Z", "dateModified": "2016-06-04T00:25:37.000Z", "author": "Fernando Migliorini Ten\u00f3rio", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=^.{3,20}$)^[a-zA-Z][a-zA-Z0-9]*[._-]?[a-zA-Z0-9]+$", "permalinkFragment": "mF5hM4", "isFavorite": false, "isStarred": false}, {"title": "Find all ASINs in a text", "description": "ASIN = Amazon Standard Identification Number", "dateCreated": "2016-06-04T15:52:58.000Z", "dateModified": "2016-06-04T15:52:58.000Z", "author": "NN", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(B\\d{2}\\w{7})", "permalinkFragment": "bP3bK6", "isFavorite": false, "isStarred": false}, {"title": "File Extension", "description": "Grabs the last \".\" of a string, and any word characters (\\w) that follow.", "dateCreated": "2016-06-04T19:05:14.000Z", "dateModified": "2016-06-04T19:05:14.000Z", "author": "G", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((\\.)\\w+)$", "permalinkFragment": "oF6bY4", "isFavorite": false, "isStarred": false}, {"title": ";'", "description": "", "dateCreated": "2016-06-05T10:02:38.000Z", "dateModified": "2016-06-05T10:02:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ";'", "permalinkFragment": "tU3qB8", "isFavorite": false, "isStarred": false}, {"title": "Detect blank space", "description": "If regex = true the string contain blank space !\n", "dateCreated": "2016-06-05T15:29:40.000Z", "dateModified": "2016-06-05T15:29:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^a-zA-Z0-9]", "permalinkFragment": "gV8sY2", "isFavorite": false, "isStarred": false}, {"title": "Remove spaces between brackets", "description": "Removes space after opening and before closing square and reqular brackets/parenthesis and keeps what's inside", "dateCreated": "2016-06-05T16:55:24.000Z", "dateModified": "2016-06-05T16:55:24.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([[(])+\\s*(.*)\\s+([\\])])", "permalinkFragment": "fS9jW3", "isFavorite": false, "isStarred": false}, {"title": "List of phone numbers", "description": "List of phone numbers separated by commas\n241 214 2414,(214) 224 4244, 214/224 4224,2142244244", "dateCreated": "2016-06-06T01:06:17.000Z", "dateModified": "2016-06-06T01:06:17.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([\\(]?\\d{3}[\\)]?[\\/ -]?\\d{3}[ -]?\\d{4})[, ]*)+$", "permalinkFragment": "nJ1bH3", "isFavorite": false, "isStarred": false}, {"title": "Date of Birth", "description": "", "dateCreated": "2016-06-06T01:47:13.000Z", "dateModified": "2016-06-06T01:47:13.000Z", "author": "Marcos Andr\u00e9", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(0[1-9]|1[0-9]|2[0-9]|3[01]).(0[1-9]|1[012]).([19]{2})?([1-9]{2})", "permalinkFragment": "mM2cE3", "isFavorite": false, "isStarred": false}, {"title": "link", "description": "", "dateCreated": "2016-06-06T08:39:55.000Z", "dateModified": "2016-06-06T08:39:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "href=\"+[a-zA-Z0-9\\-\\_\\.\\=\\/]+\"", "permalinkFragment": "xG5cR0", "isFavorite": false, "isStarred": false}, {"title": "URL Matcher", "description": "", "dateCreated": "2016-06-06T10:17:31.000Z", "dateModified": "2016-06-06T10:17:31.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:(?P<protocol>http[s]?|ftp)(?::\\/\\/))?\\/?(?P<address>(?P<hostname>[^\\/\\.]+)*?(?:\\.)?(?P<domain>[^\\/\\.]+(?:\\.[^:\\/\\s\\.]+(\\.[^:\\/\\s\\.]\u200c\u200b+){0,1})?))(:\\d+)?(?:$|\\/)(?P<fullpath>(?P<path>[^#?\\s]*?)(?:\\/(?P<name>[^#?\\/\\s]*))?)(?:\\?(?P<arg>.*?))?(?:#(?P<anchor>[\\w\\-]+))?$", "permalinkFragment": "kY6pU3", "isFavorite": false, "isStarred": false}, {"title": "t01", "description": "t01", "dateCreated": "2016-06-06T11:10:56.000Z", "dateModified": "2016-06-06T11:10:56.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "key[ :']+([^,;'\"]+)[ '\",;]+", "permalinkFragment": "oG0uR9", "isFavorite": false, "isStarred": false}, {"title": "LiveRes", "description": "Postcode Validation", "dateCreated": "2016-06-06T15:22:24.000Z", "dateModified": "2016-06-06T15:22:24.000Z", "author": "Dan Manning", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(GIR 0AA|[A-PR-UWYZ]([0-9]{1,2}|([A-HK-Y][0-9]|[A-HK-Y][0-9]([0-9]|[ABEHMNPRV-Y]))|[0-9][A-HJKPS-UW]) {0,1}[0-9][ABD-HJLNP-UW-Z]{2})$", "permalinkFragment": "qZ0lV0", "isFavorite": false, "isStarred": false}, {"title": "Email", "description": "Requires any character, @ sign and a period in the extension of the email address", "dateCreated": "2016-06-06T21:31:37.000Z", "dateModified": "2016-06-06T21:31:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".+\\@.+\\..+", "permalinkFragment": "dK8xQ7", "isFavorite": false, "isStarred": false}, {"title": "Poedit Translation", "description": "", "dateCreated": "2016-06-06T21:53:53.000Z", "dateModified": "2016-06-06T21:53:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\{\\{(\\\"{1}.+\\\"{1}) ?\\| ?t ?", "permalinkFragment": "fC1qK3", "isFavorite": false, "isStarred": false}, {"title": "comma in brackets", "description": "select all comma in brackets", "dateCreated": "2016-06-07T06:52:07.000Z", "dateModified": "2016-06-07T06:52:07.000Z", "author": "the-dreamer", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=[^(]*\\)),", "permalinkFragment": "yY9cX1", "isFavorite": false, "isStarred": false}, {"title": "Capturing URL tester", "description": "This pcre style regex tests for valid URLs capturing the whole address. It will capture http and https only. Compatible with multiple sub-domains and raw IPV4 addresses, as well as paths, queries, and parameters. See below for examples:\n\nWill match these valid URLS:\n\nhttps://www.example.com/foo/?bar=baz&inga=42&quux\nhttp://foo.com/blah_(wikipedia)#cite-1\nhttp://foo.com/blah_(wikipedia)_blah#cite-1\nhttp://foo.com/unicode_(\u272a)_in_parens\nhttp://foo.com/(something)?after=parens\nhttp://code.google.com/events/#&product=browser\nhttp://142.42.1.1/\nhttp://142.42.1.1:8080/\n\nWill NOT match though valid URLS\n\nhttp://\u272adf.ws/123\nhttp://userid:password@example.com:8080\nhttp://userid:password@example.com:8080/\nhttp://userid@example.com\nhttp://userid@example.com/\nhttp://userid@example.com:8080\nhttp://userid@example.com:8080/\nhttp://userid:password@example.com\nhttp://userid:password@example.com/\n\nDoes NOT and should not match these bad URLS: \n\nhttp://\nhttp://.\nhttp://..\nhttp://../\nhttp://?\nhttp://??\nhttp://??/\nhttp://#\nhttp://##\nhttp://##/\nhttp://foo.bar?q=Spaces should be encoded\n//\n//a\n///a\n///\nhttp:///a\nfoo.com\nrdar://1234\nh://test\nhttp:// shouldfail.com\n:// should fail\nhttp://foo.bar/foo(bar)baz quux\nftps://foo.bar/\nhttp://-error-.invalid/\nhttp://a.b--c.de/\nhttp://-a.b.co\nhttp://a.b-.co\nhttp://3628126748\nhttp://.www.foo.bar/\nhttp://www.foo.bar./\nhttp://.www.foo.bar./\n\nIts not perfect, it will match http://999.999.999.999 and similar invalid IPV4 addresses and is not optimized but met my  needs.", "dateCreated": "2016-06-07T08:21:35.000Z", "dateModified": "2016-06-07T08:21:35.000Z", "author": "1nc3p710n", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(https?\\:\\/\\/(?:[[:alnum:]]+\\.)?[[:alnum:]]+\\.(?:com|net|org)\\/\\S*)|(https?\\:\\/\\/(?:\\d{1,3}\\.){3}\\d{1,3}\\/?(?:\\:\\d{0,6})?\\/?)", "permalinkFragment": "nT0wM9", "isFavorite": false, "isStarred": false}, {"title": "\u5c0f\u5199\u5355\u8bcd", "description": "\u641c\u7d22\u53e5\u5b50\u4e2d\u7684\u5c0f\u5199\u5355\u8bcd", "dateCreated": "2016-06-07T09:40:05.000Z", "dateModified": "2016-06-07T09:40:05.000Z", "author": "enihsyou", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b([a-z]+(?:[-_]?[a-z])*)\\b", "permalinkFragment": "xJ0eM2", "isFavorite": false, "isStarred": false}, {"title": "SAP Valid Chars", "description": "", "dateCreated": "2016-06-07T12:31:50.000Z", "dateModified": "2016-06-07T12:31:50.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-zA-Z0-9#&()-:\"',.\\/\u00b0\u00e4\u00c4\u00d6\u00f6\u00fc\u00dc\u00df\u00e1\u00e9\u00ed\u00f3\u00fa\u00fc\u00f1\u00bf\u00a1 ]*)$", "permalinkFragment": "aV2gN7", "isFavorite": false, "isStarred": false}, {"title": "CNH CATEGORIA", "description": "", "dateCreated": "2016-06-07T12:52:22.000Z", "dateModified": "2016-06-07T12:52:22.000Z", "author": "Wagner Lu\u00eds da Silva", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-E]{1,2}", "permalinkFragment": "sI4uP9", "isFavorite": false, "isStarred": false}, {"title": "Meta book descr", "description": "validate book desctiption", "dateCreated": "2016-06-07T13:13:15.000Z", "dateModified": "2016-06-07T13:13:15.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[(\\w+\\s)+.,-]{100,}", "permalinkFragment": "rT6eT1", "isFavorite": false, "isStarred": false}, {"title": "Simple Url Matcher", "description": "Simple url matcher catches most urls users enter", "dateCreated": "2016-06-07T14:06:59.000Z", "dateModified": "2016-06-07T14:06:59.000Z", "author": "kristian epps", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(https?:\\/\\/)?([\\dA-Za-z\\.-]+)\\.([A-Za-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$", "permalinkFragment": "uX3pJ6", "isFavorite": false, "isStarred": false}, {"title": "e-mail address (RFC5322)", "description": "https://www.w3.org/TR/html5/forms.html#valid-e-mail-address", "dateCreated": "2016-06-07T14:36:39.000Z", "dateModified": "2016-06-07T14:36:39.000Z", "author": "Abdulhamit Mabocoglu", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$", "permalinkFragment": "zY0sV2", "isFavorite": false, "isStarred": false}, {"title": "BUNGALOW EXTRA SERVICES", "description": "", "dateCreated": "2016-06-07T14:54:36.000Z", "dateModified": "2016-06-07T14:54:36.000Z", "author": "GVEILLEUR", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Extra services:([.\\n\\d\\s\\w]+)\\n", "permalinkFragment": "jJ0zX1", "isFavorite": false, "isStarred": false}, {"title": "Simple Email", "description": "Verify email : a.b@c.d", "dateCreated": "2016-06-07T15:28:11.000Z", "dateModified": "2016-06-07T15:28:11.000Z", "author": "Smiley32", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.+@.+\\..+$", "permalinkFragment": "zI1vB1", "isFavorite": false, "isStarred": false}, {"title": "Test", "description": "", "dateCreated": "2016-06-07T15:28:30.000Z", "dateModified": "2016-06-07T15:28:30.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".*\\s(?<Memory>.\\d*)\\s(?<Cpu>.\\d*)\\s(?<Truc>[^\\s+]*)", "permalinkFragment": "eL6gD2", "isFavorite": false, "isStarred": false}, {"title": "V\u00e9rifie un num\u00e9ro de t\u00e9l\u00e9phone (fran\u00e7ais)", "description": "V\u00e9rifie un num\u00e9ro de t\u00e9l\u00e9phone (fran\u00e7ais) :\n0630848239 --> ok\n06.30.84.82.39 --> ok\n06-30-84-82-39 --> ok\n06 30 84 82 39 --> ok\n+33630848239 --> ok\n+336.30.84.82.39 --> ok\n+336-30-84-82-39 --> ok\n+336 30 84 82 39 --> ok\n+33 630848239 --> ok\n+33 6.30.84.82.39 --> ok\n+33 6-30-84-82-39 --> ok\n+33 6 30 84 82 39 --> ok\netc.", "dateCreated": "2016-06-07T15:32:27.000Z", "dateModified": "2016-06-07T15:32:27.000Z", "author": "Smiley32", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(0|(\\+[0-9]{2}[. -]?))[1-9]([. -]?[0-9][0-9]){4}$", "permalinkFragment": "xZ6uO4", "isFavorite": false, "isStarred": false}, {"title": "Add ons prices", "description": "", "dateCreated": "2016-06-07T15:36:35.000Z", "dateModified": "2016-06-07T15:36:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "huurprijs\\s+\u20ac([.\\n\\d\\s\\w\\S]+)", "permalinkFragment": "kC3sF6", "isFavorite": false, "isStarred": false}, {"title": "JS - Url script name", "description": "Get the script name from an url without extension and version number", "dateCreated": "2016-06-07T15:41:50.000Z", "dateModified": "2016-06-07T15:41:50.000Z", "author": "vrashq", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\/]+?)([-_0-9]*?)(\\.[^\\/]*)?\\.js", "permalinkFragment": "dS0mU6", "isFavorite": false, "isStarred": false}, {"title": "Match code in JS(basic)", "description": "it matches the code in JS, assumes that at least one function is defined to match with.", "dateCreated": "2016-06-07T15:50:32.000Z", "dateModified": "2016-06-07T15:50:32.000Z", "author": "Dark knight", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\n\\r]*.*function.*(.*).*{.*", "permalinkFragment": "nD2fI7", "isFavorite": false, "isStarred": false}, {"title": "HDFS Audit Log Parser", "description": "", "dateCreated": "2016-06-07T17:52:48.000Z", "dateModified": "2016-06-07T17:52:48.000Z", "author": "Vance Wei", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?P<type>.)(?P<permission>.+?)\\s+(?P<replication>\\d+|-)\\s+(?P<user>\\w*)\\s+(?P<group>\\w*)\\s+(?P<size>\\d+)\\s+(?P<time>\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2})\\s+(?P<path>.+)$", "permalinkFragment": "hU9jT7", "isFavorite": false, "isStarred": false}, {"title": "validaci\u00f3n de correo electr\u00f3nico", "description": "", "dateCreated": "2016-06-07T18:06:31.000Z", "dateModified": "2016-06-07T18:06:31.000Z", "author": "arkosnoemarenom", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([a-zA-Z]+)([a-zA-Z0-9\\.\\-\\_]*)([a-zA-Z]+))@(([a-zA-Z0-9]+)([a-zA-Z0-9\\.\\-\\_]*)([a-zA-Z0-9]+)\\.)([a-zA-Z0-9]{2,})$", "permalinkFragment": "uH1pR3", "isFavorite": false, "isStarred": false}, {"title": "rat", "description": "", "dateCreated": "2016-06-07T19:16:43.000Z", "dateModified": "2016-06-07T19:16:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "rat", "permalinkFragment": "eI3xP5", "isFavorite": false, "isStarred": false}, {"title": "Windows command line", "description": "", "dateCreated": "2016-06-08T09:59:50.000Z", "dateModified": "2016-06-08T09:59:50.000Z", "author": "Christoph P.", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:-|\\/)(foo|bar)(?:\\\"([^\\\"]*)\\\")?(?:$|[[:space:]])", "permalinkFragment": "nS3eV5", "isFavorite": false, "isStarred": false}, {"title": "Image Candidate String", "description": "", "dateCreated": "2016-06-08T10:32:30.000Z", "dateModified": "2016-06-08T10:32:30.000Z", "author": "J. Porter", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\u0020\\u0009\\u000A\\u000C\\u000D]*([^,\\u0020\\u0009\\u000A\\u000C\\u000D][^\\u0020\\u0009\\u000A\\u000C\\u000D]*[^,\\u0020\\u0009\\u000A\\u000C\\u000D]?)(?:(?:[\\u0020\\u0009\\u000A\\u000C\\u000D]+(\\d+w))|(?:[\\u0020\\u0009\\u000A\\u000C\\u000D]+(\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?x)))?[\\u0020\\u0009\\u000A\\u000C\\u000D]*", "permalinkFragment": "uX3xP8", "isFavorite": false, "isStarred": false}, {"title": "BUNGALOW NL MODEL V 2 PRICE CAPTURE", "description": "", "dateCreated": "2016-06-08T11:38:27.000Z", "dateModified": "2016-06-08T11:38:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Kostenoverzicht[\\n|\\r]([.\\n\\d\\s\\w\\S]+)[\\n|\\r]Met", "permalinkFragment": "vQ6mY4", "isFavorite": false, "isStarred": false}, {"title": "MD link to html", "description": "", "dateCreated": "2016-06-08T14:03:13.000Z", "dateModified": "2016-06-08T14:03:13.000Z", "author": "cr", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[(.+?)\\]\\((https?:\\/\\/|ftp:\\/\\/|mailto:[^\\)]+)\\)", "permalinkFragment": "aV5bL4", "isFavorite": false, "isStarred": false}, {"title": "regex tel mobile fr", "description": "", "dateCreated": "2016-06-08T14:34:12.000Z", "dateModified": "2016-06-08T14:34:12.000Z", "author": "talipcr", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((\\+|00)33\\s?|00|0)[123456789](\\s?\\d{2}){4}$", "permalinkFragment": "iW4fY9", "isFavorite": false, "isStarred": false}, {"title": "non-word chars and underscore", "description": "", "dateCreated": "2016-06-08T14:39:01.000Z", "dateModified": "2016-06-08T14:39:01.000Z", "author": "webDevRich", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^a-zA-Z]", "permalinkFragment": "sK5sO9", "isFavorite": false, "isStarred": false}, {"title": "Pushjet UUID Match", "description": "Matches a valid Pushjet UUID", "dateCreated": "2016-06-08T18:42:51.000Z", "dateModified": "2016-06-08T18:42:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}", "permalinkFragment": "hQ2mI9", "isFavorite": false, "isStarred": false}, {"title": "Pushjet UUID Match", "description": "Matches a valid Pushjet UUID", "dateCreated": "2016-06-08T18:42:51.000Z", "dateModified": "2016-06-08T18:42:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}", "permalinkFragment": "tH6mJ7", "isFavorite": false, "isStarred": false}, {"title": "Pushjet Server Pubkey", "description": "Matches a valid Pushjet Server Pubkey", "dateCreated": "2016-06-08T18:45:21.000Z", "dateModified": "2016-06-08T18:45:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-f0-9]{4}-[a-f0-9]{6}-[a-f0-9]{12}-[a-f0-9]{5}-[a-f0-9]{9}", "permalinkFragment": "jU9lY0", "isFavorite": false, "isStarred": false}, {"title": "Pushjet Service Privkey", "description": "Matches a pushjet service private key", "dateCreated": "2016-06-08T18:46:14.000Z", "dateModified": "2016-06-08T18:46:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-f0-9]{32}", "permalinkFragment": "fT1gK0", "isFavorite": false, "isStarred": false}, {"title": "Parenthesis 1", "description": "Look for parenthesis containing a mathematical equation.", "dateCreated": "2016-06-09T01:35:06.000Z", "dateModified": "2016-06-09T01:35:06.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(\\d+(\\+|\\-|\\*|\\/)\\d\\)", "permalinkFragment": "hQ2lQ9", "isFavorite": false, "isStarred": false}, {"title": "video", "description": "", "dateCreated": "2016-06-09T06:19:57.000Z", "dateModified": "2016-06-09T06:19:57.000Z", "author": "riya", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[video(?:.*?(?:webm|mp4)=\"([^\"]*)\")?(?:.*?(?:webm|mp4)=\"([^\"]*)\")?.*\\]\\[\\/video\\]", "permalinkFragment": "vH1lB6", "isFavorite": false, "isStarred": false}, {"title": "polish landline numbers", "description": "", "dateCreated": "2016-06-09T09:03:57.000Z", "dateModified": "2016-06-09T09:03:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((4822|4832|4833|4883|4885|4852|4882|4823|4834|4855|4858|4895|4875|4862|4841|4863|4894|4812|4813|4876|4865|4881|4886|4842|4818|4889|4877|4829|4867|4844|4824|4861|4816|4848|4817|4825|4843|4846|4859|4887|4891|4815|4814|4856|4874|4854|4871|4884|4868|4830|4838|4839)\\d{5})$", "permalinkFragment": "pB4nU1", "isFavorite": false, "isStarred": false}, {"title": "nlc variation ", "description": "", "dateCreated": "2016-06-09T12:41:27.000Z", "dateModified": "2016-06-09T12:41:27.000Z", "author": "yasaman", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\"[^a-zA-Z\\'\\s@\\%1-9/\\:\\\\?]\"", "permalinkFragment": "mF9nT7", "isFavorite": false, "isStarred": false}, {"title": "Elite:Dangerous system jump parsing", "description": "Matches lines which indicate jumping into a new system in the Elite:Dangerous netLog files.\n\nExtracts pertinent data; most important are the Time, System Name, and Star Position. The rest is not interesting (yet) so the regexp could be simplified a little for better performance.", "dateCreated": "2016-06-09T14:36:18.000Z", "dateModified": "2016-06-09T14:36:18.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "{(?<Time>\\d{2}:\\d{2}:\\d{2})\\} System:\"(?<SystemName>[^\"]+)\" StarPos:\\((?<StarPos_X>[^,]+),(?<StarPos_Y>[^,]+),(?<StarPos_Z>[^)]+)\\)ly( Body:(?<Body>\\d+) RelPos:\\((?<RelPos>[^)]+)\\)km)?(\\s+(?<TravelMode>\\w+))?", "permalinkFragment": "qH7hV2", "isFavorite": false, "isStarred": false}, {"title": "euro", "description": "euro", "dateCreated": "2016-06-09T14:37:55.000Z", "dateModified": "2016-06-09T14:37:55.000Z", "author": "mario", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[1-9]{1}[\\d]*[,]{0,1}\\d{0,2}$", "permalinkFragment": "yU6oN1", "isFavorite": false, "isStarred": false}, {"title": "IPv4 list comma separated", "description": "Matches IPv4 address list separated by comma (,).\nDoes not match an incomplete list (e.g. 192.168.1.0,)", "dateCreated": "2016-06-09T14:40:02.000Z", "dateModified": "2016-06-09T14:40:02.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?),)*((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", "permalinkFragment": "fV1fP0", "isFavorite": false, "isStarred": false}, {"title": "Filter public functions", "description": "It filters out the body of all public functions.", "dateCreated": "2016-06-09T17:22:37.000Z", "dateModified": "2016-06-09T17:22:37.000Z", "author": "Sachin", "flavor": "python", "delimiter": "\"", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\n]+\\s+public function [a-z]+[(][a-zA-Z0-9=',]+[)]\\n+\\s+[{]\\n(.+?)\\n+\\s+[}]", "permalinkFragment": "vE2sR2", "isFavorite": false, "isStarred": false}, {"title": "956896685", "description": "", "dateCreated": "2016-06-09T18:02:12.000Z", "dateModified": "2016-06-09T18:02:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9]{20}", "permalinkFragment": "gZ9mQ4", "isFavorite": false, "isStarred": false}, {"title": "String no longer than 100", "description": "", "dateCreated": "2016-06-09T18:05:56.000Z", "dateModified": "2016-06-09T18:05:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Za-z]{1,100}", "permalinkFragment": "iX9iD2", "isFavorite": false, "isStarred": false}, {"title": "Hebrew pronunciation", "description": "", "dateCreated": "2016-06-09T19:50:32.000Z", "dateModified": "2016-06-09T19:50:32.000Z", "author": "Michael Sharpe", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([ABGDHVZChTIKLMNSOPTzQRShTh\\s]{1,}\\s[^.]*)", "permalinkFragment": "hJ4hQ3", "isFavorite": false, "isStarred": false}, {"title": "^\\\\s+$", "description": "", "dateCreated": "2016-06-10T05:28:40.000Z", "dateModified": "2016-06-10T05:28:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\\\s+$", "permalinkFragment": "iK8dO1", "isFavorite": false, "isStarred": false}, {"title": "EclipseKeyword_1", "description": "", "dateCreated": "2016-06-10T06:52:16.000Z", "dateModified": "2016-06-10T06:52:16.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "SPECGRID([\\s\\S]*?)\\/", "permalinkFragment": "lM1nK9", "isFavorite": false, "isStarred": false}, {"title": "S\u30e9\u30f3\u30af", "description": "Added new combatant (\u30af\u30ed\u30c3\u30af\u30fb\u30df\u30c6\u30fc\u30cc|\u30b1\u30ed\u30b2\u30ed\u30b9|\u30ac\u30fc\u30ed\u30c3\u30af|\u30dc\u30ca\u30b3\u30f3|\u30ca\u30f3\u30c7\u30a3|\u30c1\u30a7\u30eb\u30ce\u30dc\u30fc\u30b0|\u30ec\u30c9\u30ed\u30cd\u30c3\u30c8|\u30a6\u30eb\u30ac\u30eb|\u30de\u30a4\u30f3\u30c9\u30d5\u30ec\u30a2|\u30b5\u30a6\u30b6\u30f3\u30c9\u30ad\u30e3\u30b9\u30c8\u30fb\u30bb\u30c0|\u30be\u30fc\u30ca\u30fb\u30b7\u30fc\u30ab\u30fc|\u30d6\u30ed\u30f3\u30c6\u30b9|\u30d0\u30eb\u30a6\u30fc\u30eb|\u30cc\u30cb\u30e5\u30cc\u30a6\u30a3|\u30df\u30cb\u30e7\u30fc\u30ab\u30aa\u30f3|\u30b5\u30d5\u30a1\u30c8|\u30a2\u30b0\u30ea\u30c3\u30d1|\u30ab\u30a4\u30b6\u30fc\u30d9\u30d2\u30fc\u30e2\u30b9|\u6975\u697d\u9ce5|\u30ac\u30f3\u30c0\u30eb\u30f4\u30a1|\u30bb\u30fc\u30f3\u30e0\u30eb\u30a6|\u30da\u30a4\u30eb\u30e9\u30a4\u30c0\u30fc|\u30ec\u30a6\u30af\u30ed\u30c3\u30bf)", "dateCreated": "2016-06-10T08:22:52.000Z", "dateModified": "2016-06-10T08:22:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Added new combatant (\u30af\u30ed\u30c3\u30af\u30fb\u30df\u30c6\u30fc\u30cc|\u30b1\u30ed\u30b2\u30ed\u30b9|\u30ac\u30fc\u30ed\u30c3\u30af|\u30dc\u30ca\u30b3\u30f3|\u30ca\u30f3\u30c7\u30a3|\u30c1\u30a7\u30eb\u30ce\u30dc\u30fc\u30b0|\u30ec\u30c9\u30ed\u30cd\u30c3\u30c8|\u30a6\u30eb\u30ac\u30eb|\u30de\u30a4\u30f3\u30c9\u30d5\u30ec\u30a2|\u30b5\u30a6\u30b6\u30f3\u30c9\u30ad\u30e3\u30b9\u30c8\u30fb\u30bb\u30c0|\u30be\u30fc\u30ca\u30fb\u30b7\u30fc\u30ab\u30fc|\u30d6\u30ed\u30f3\u30c6\u30b9|\u30d0\u30eb\u30a6\u30fc\u30eb|\u30cc\u30cb\u30e5\u30cc\u30a6\u30a3|\u30df\u30cb\u30e7\u30fc\u30ab\u30aa\u30f3|\u30b5\u30d5\u30a1\u30c8|\u30a2\u30b0\u30ea\u30c3\u30d1|\u30ab\u30a4\u30b6\u30fc\u30d9\u30d2\u30fc\u30e2\u30b9|\u6975\u697d\u9ce5|\u30ac\u30f3\u30c0\u30eb\u30f4\u30a1|\u30bb\u30fc\u30f3\u30e0\u30eb\u30a6|\u30da\u30a4\u30eb\u30e9\u30a4\u30c0\u30fc|\u30ec\u30a6\u30af\u30ed\u30c3\u30bf)Jessip Daggerheart is attempting to sneak up on (?<Player>\\w+)", "permalinkFragment": "rQ5wE6", "isFavorite": false, "isStarred": false}, {"title": "$1_$1_suffix", "description": "", "dateCreated": "2016-06-10T14:55:23.000Z", "dateModified": "2016-06-10T14:55:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.+)", "permalinkFragment": "vJ9dE2", "isFavorite": false, "isStarred": false}, {"title": "hkey user classes", "description": "", "dateCreated": "2016-06-10T15:36:34.000Z", "dateModified": "2016-06-10T15:36:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "HKEY_USERS\\\\[^\\\\]+Classes\\\\", "permalinkFragment": "vC1iP9", "isFavorite": false, "isStarred": false}, {"title": "email match", "description": "match email address, with groups for entire email and domain.com", "dateCreated": "2016-06-10T18:18:00.000Z", "dateModified": "2016-06-10T18:18:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\w.-]+@([\\w-]+)\\.+\\w{2,})", "permalinkFragment": "bQ2uM7", "isFavorite": false, "isStarred": false}, {"title": "JSESSIONID con GME 8.5", "description": "JSESSIONID con GME 8.5", "dateCreated": "2016-06-10T21:50:02.000Z", "dateModified": "2016-06-10T21:50:02.000Z", "author": "Dario Tobia", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s*([JSESSIONID]+)\\s*=\\s*(?:\"([^\"])\"|([^;\"]*))\\s*", "permalinkFragment": "vG1yL8", "isFavorite": false, "isStarred": false}, {"title": "b", "description": "", "dateCreated": "2016-06-10T23:21:59.000Z", "dateModified": "2016-06-10T23:21:59.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<level>\\d+)\\s*(?<wood>\\d+)\\s*(?<clay>\\d+)\\s*(?<iron>\\d+)\\s*(?<crop>\\d+)\\s*(?<cropusage>\\d+)\\s*(?<time>\\d+:\\d+:\\d+)\\s*(?<pop>\\d+)\\s*(?<production>\\d+)", "permalinkFragment": "eL4nE5", "isFavorite": false, "isStarred": false}, {"title": "password REGEX", "description": "atleast one letter\natleast one symbol\natleast one number\natleast 7 charachter length", "dateCreated": "2016-06-11T10:28:37.000Z", "dateModified": "2016-06-11T10:28:37.000Z", "author": "lotfi.aly@gmail.com", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{7,}$", "permalinkFragment": "nO8oO1", "isFavorite": false, "isStarred": false}, {"title": "*", "description": "", "dateCreated": "2016-06-11T12:26:29.000Z", "dateModified": "2016-06-11T12:26:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "if [Level] != \"Information\"", "permalinkFragment": "bM5rT5", "isFavorite": false, "isStarred": false}, {"title": "Procura numeros de telefone do Brazil", "description": "", "dateCreated": "2016-06-11T14:55:44.000Z", "dateModified": "2016-06-11T14:55:44.000Z", "author": "Ranielly Ferreira", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(?\\+?([0-9]{2})?\\s?\\(?(11|12|13|14|15|16|17|18|19|21|22|24|27|28|31|32|33|34|35|37|38|41|42|43|44|45|46|47|48|49|51|53|54|55|61|62|63|64|65|66|67|68|69|71|73|74|75|77|79|81|82|83|84|85|86|87|88|89|91|92|93|94|95|96|97|98|99)?\\)?\\s?(9\\s)?([0-9]{8,11})", "permalinkFragment": "jP2vJ9", "isFavorite": false, "isStarred": false}, {"title": "Detecting urls in a block of text", "description": "", "dateCreated": "2016-06-11T15:17:13.000Z", "dateModified": "2016-06-11T15:17:13.000Z", "author": "http://www.regexguru.com/2008/11/detecting-urls-in-a-block-of-text/", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[A-Z0-9+&@#\\/%=~_|]", "permalinkFragment": "eX1jG3", "isFavorite": false, "isStarred": false}, {"title": "Link parser for my Soundbot", "description": "If a link is not a youtube video, then i need to be sure that the video is a downlodable audio file", "dateCreated": "2016-06-11T15:42:59.000Z", "dateModified": "2016-06-11T15:42:59.000Z", "author": "Crax", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\S*(mp3|ogg|wav)\\/?", "permalinkFragment": "aA9wH7", "isFavorite": false, "isStarred": false}, {"title": "MultiTag Best Regex", "description": "Now include regex inside {{ }}", "dateCreated": "2016-06-11T21:04:30.000Z", "dateModified": "2016-06-11T21:04:30.000Z", "author": "Ricardo Feitoza", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\[((\\/.*\\/)*\\w{0,3}[^\\]]+|[^\\]]+)\\])([\\n|\\s]*)({{(?:[^}{]+(\\/.*\\/)*[^}{]+|{{(?:[^}{]+(\\/.*\\/)*[^}{]+|{{(?:[^}{]+(\\/.*\\/)*[^}{]+|{{(?:[^}{]+(\\/.*\\/)*[^}{]+|{{(?:[^}{]+(\\/.*\\/)*[^}{]+|{{(?:[^}{]+(\\/.*\\/)*[^}{]+|{{(?:[^}{]+(\\/.*\\/)*[^}{]+|{{(?:[^}{]+(\\/.*\\/)*[^}{]+|{{(?:[^}{]+(\\/.*\\/)*[^}{]+|{{(?:[^}{]+(\\/.*\\/)*[^}{]+|{{(?:[^}{]+(\\/.*\\/)*[^}{]+|{{[^}{]*(\\/.*\\/)*[^}{]*}})*}})*}})*}})*}})*}})*}})*}})*}})*}})*}})*}})*", "permalinkFragment": "hC7xI2", "isFavorite": false, "isStarred": false}, {"title": "Strip unicode u", "description": "", "dateCreated": "2016-06-12T06:45:05.000Z", "dateModified": "2016-06-12T06:45:05.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\[u'|\\',|u\\'|'])", "permalinkFragment": "sA2aW1", "isFavorite": false, "isStarred": false}, {"title": "freeproxylists.net", "description": "regex for freeproxylists.net", "dateCreated": "2016-06-12T17:26:27.000Z", "dateModified": "2016-06-12T17:26:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d+\\.\\d+\\.\\d+\\.\\d+)<\\/a><\\/td><td align=\"center\">(\\d+)<\\/td>", "permalinkFragment": "cJ1eU5", "isFavorite": false, "isStarred": false}, {"title": "Match everything after last slash", "description": "", "dateCreated": "2016-06-13T04:54:27.000Z", "dateModified": "2016-06-13T04:54:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\\\]+$)", "permalinkFragment": "zJ1zK6", "isFavorite": false, "isStarred": false}, {"title": "1", "description": "", "dateCreated": "2016-06-13T13:53:22.000Z", "dateModified": "2016-06-13T13:53:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?i)und\\D+(\\d+)", "permalinkFragment": "iR2yG7", "isFavorite": false, "isStarred": false}, {"title": "Match only ONE letter after a number", "description": "", "dateCreated": "2016-06-13T15:41:05.000Z", "dateModified": "2016-06-13T15:41:05.000Z", "author": "padre629", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9]+)([a-z\u00e1\u00e9\u00ed\u00f3\u00fa\u00f1]{1})", "permalinkFragment": "iJ3eE1", "isFavorite": false, "isStarred": false}, {"title": "Complex Javascript Regex (ASCII Only)", "description": "", "dateCreated": "2016-06-13T19:55:35.000Z", "dateModified": "2016-06-13T19:55:35.000Z", "author": "datatypevoid", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=[A-Za-z0-9][A-Za-z0-9@._%+-]{5,253}$)[A-Za-z0-9._%+-]{1,64}@(?:(?=[A-Za-z0-9-]{1,63}\\.)[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*\\.){1,8}[A-Za-z]{2,63}$", "permalinkFragment": "qK6fD0", "isFavorite": false, "isStarred": false}, {"title": "Complex Javascript Regex (With Non ASCII Support)", "description": "", "dateCreated": "2016-06-13T20:02:00.000Z", "dateModified": "2016-06-13T20:02:00.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=([A-Za-z0-9]|[^\\x00-\\x7F])([A-Za-z0-9@._%+-]|[^\\x00-\\x7F]){5,253}$)([A-Za-z0-9._%+-]|[^\\x00-\\x7F]){1,64}@(?:(?=([A-Za-z0-9-]|[^\\x00-\\x7F]){1,63}\\.)([A-Za-z0-9]|[^\\x00-\\x7F])+(?:-([A-Za-z0-9]|[^\\x00-\\x7F])+)*\\.){1,8}([A-Za-z]|[^\\x00-\\x7F]){2,63}$", "permalinkFragment": "xJ9lD9", "isFavorite": false, "isStarred": false}, {"title": "URL pattern", "description": "URL pattern. include cyrillic characters", "dateCreated": "2016-06-13T20:32:37.000Z", "dateModified": "2016-06-13T20:32:37.000Z", "author": "Bobsans", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(https?:\\/\\/)?([\\da-z\u0430-\u044f\\.\\-_]+)\\.([a-z\u0430-\u044f\\._]{2,6})([a-z\u0430-\u044f\\d\\.\\-\\?\\/&=#%_]*)*", "permalinkFragment": "wG6iB3", "isFavorite": false, "isStarred": false}, {"title": "Cha\u00eene non vide", "description": "V\u00e9rifie si la cha\u00eene fournie est vide (c'est \u00e0 dire compos\u00e9 uniquement d'espaces) ou non", "dateCreated": "2016-06-14T08:29:45.000Z", "dateModified": "2016-06-14T08:29:45.000Z", "author": "Alain Souchet", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!\\s*$).*$", "permalinkFragment": "xG8jK0", "isFavorite": false, "isStarred": false}, {"title": "Email", "description": "Teste la validit\u00e9 d'une adresse email", "dateCreated": "2016-06-14T08:35:14.000Z", "dateModified": "2016-06-14T08:35:14.000Z", "author": "Alain Souchet", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([a-zA-Z]|[0-9])|([-]|[_]|[.]))+[@](([a-zA-Z0-9])|([-])){2,63}[.](([a-zA-Z0-9]){2,63})+$", "permalinkFragment": "qS2jF4", "isFavorite": false, "isStarred": false}, {"title": "The correct order of the brackets 2", "description": "Check the correct order of the brackets (),<>,{},[]\nfix slashes", "dateCreated": "2016-06-14T11:03:25.000Z", "dateModified": "2016-06-14T11:03:25.000Z", "author": "Korniychuk Anton<ancor.dev@gmail.com>", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([^()[\\]{}<>]*)(\\(((?1)(?2)*)*\\)|\\[(?3)*\\]|<(?3)*>|{(?3)*})(?1)$", "permalinkFragment": "tK3hY2", "isFavorite": false, "isStarred": false}, {"title": "Address", "description": "Regex for extracting address with pincode.", "dateCreated": "2016-06-14T12:21:23.000Z", "dateModified": "2016-06-14T12:21:23.000Z", "author": "Irfan Patel", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*)(?<=,)((.\\n|.)*)(\\D\\d{6}\\D)", "permalinkFragment": "qM6sJ9", "isFavorite": false, "isStarred": false}, {"title": "Disassembly Line Bytes", "description": "", "dateCreated": "2016-06-14T12:48:39.000Z", "dateModified": "2016-06-14T12:48:39.000Z", "author": "zhaDe", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "#Line Address\n((?<=\n  ^[0-9a-fA-F]{6}\\:\n )\n|\n (?<=\n  ^[0-9a-fA-F]{2}\\/[0-9a-fA-F]{4}\\:\n )\n)\n\n#Space\n\\s+\n\n#Pre-Bytes stuff \n.*?\n\n[0-9a-fA-F]+\n[\\+\\-\\!\\@\\*\\#\\^x\\$\\s]*\n\n(?(?=\n   \\t\n  )\n (\\t)\n|\n (?(?=\n[ ]{2})[ ]{2}|(?=($|\\n))))", "permalinkFragment": "jK2hQ1", "isFavorite": false, "isStarred": false}, {"title": "Date validation in dd MMM yyyy format", "description": "Date validation in dd MMM yyyy format Ex:14 Jan 2014", "dateCreated": "2016-06-14T14:11:46.000Z", "dateModified": "2016-06-14T14:11:46.000Z", "author": "neel", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([0-9])|([0-2][0-9])|([3][0-1]))\\ (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\ \\d{4}$", "permalinkFragment": "gX8fB6", "isFavorite": false, "isStarred": false}, {"title": "V8 Stack", "description": "Parses the V8 StackFrames", "dateCreated": "2016-06-14T16:49:11.000Z", "dateModified": "2016-06-14T16:49:11.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "at (?:.+\\s+\\()?(?:.+?:\\d+:\\d+|[^)]+)\\)?", "permalinkFragment": "wR8gP8", "isFavorite": false, "isStarred": false}, {"title": "Strip Dashes", "description": "", "dateCreated": "2016-06-14T18:14:52.000Z", "dateModified": "2016-06-14T18:14:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^\\d]", "permalinkFragment": "pV1bK5", "isFavorite": false, "isStarred": false}, {"title": "Apache Log Parser", "description": "Parse Apache web logs to be stored in python (most likely a tuple for manipulation, parsing, and correlation)", "dateCreated": "2016-06-15T15:11:46.000Z", "dateModified": "2016-06-15T15:11:46.000Z", "author": "hos", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\d.]+) - - \\[(.*?)\\] \\\"(.*?)\\\" (\\d{3}\\s\\d{3}) \\\"(.*?)\\\" \\\"(.*?)\\\"", "permalinkFragment": "cO0zV0", "isFavorite": false, "isStarred": false}, {"title": "linkedin select username", "description": "Select just the username from urls", "dateCreated": "2016-06-15T18:26:18.000Z", "dateModified": "2016-06-15T18:26:18.000Z", "author": "chocksy", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:http(s)?:\\/\\/)?(?:[\\w]+\\.)?linkedin\\.com\\/(?:pub|in|profile)?(?:\\/*)([\\w\\-\\.]*)", "permalinkFragment": "xL7aN2", "isFavorite": false, "isStarred": false}, {"title": "dribbble username select from url", "description": "select username from dribbble url", "dateCreated": "2016-06-15T18:28:20.000Z", "dateModified": "2016-06-15T18:28:20.000Z", "author": "chocksy", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:http?:\\/\\/|https?:\\/\\/)?(?:www\\.)?dribbble\\.com\\/(?:\\/*)([\\w\\-\\.]*)", "permalinkFragment": "zC2cC0", "isFavorite": false, "isStarred": false}, {"title": "stackoverflow profile url select last", "description": "select last part from stackoverflow links. They should be profile urls.", "dateCreated": "2016-06-15T18:31:14.000Z", "dateModified": "2016-06-15T18:31:14.000Z", "author": "chocksy", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:http?:\\/\\/|https?:\\/\\/)?(?:www\\.)?stackoverflow\\.com\\/(?:\\/*)([\\w\\-\\.\\/]*)", "permalinkFragment": "eB2pQ7", "isFavorite": false, "isStarred": false}, {"title": "select github username from url", "description": "select the github username from url", "dateCreated": "2016-06-15T18:33:50.000Z", "dateModified": "2016-06-15T18:33:50.000Z", "author": "chocksy", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:http?:\\/\\/|https?:\\/\\/)?(?:www\\.)?github\\.com\\/(?:\\/*)([\\w\\-\\.\\/]*)", "permalinkFragment": "yW9lM6", "isFavorite": false, "isStarred": false}, {"title": "ngResource", "description": "", "dateCreated": "2016-06-16T05:43:37.000Z", "dateModified": "2016-06-16T05:43:37.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^|[^\\\\]):http(\\W|$)", "permalinkFragment": "aD6eD9", "isFavorite": false, "isStarred": false}, {"title": "Extract UUID v4 from a string", "description": "", "dateCreated": "2016-06-16T08:39:08.000Z", "dateModified": "2016-06-16T08:39:08.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}", "permalinkFragment": "lO2qG7", "isFavorite": false, "isStarred": false}, {"title": "R\u00e8gle REMP13", "description": "Remplacement de gout par go\u00fbt,cout par co\u00fbt,maitrise par ma\u00eetrise,tache par t\u00e2che", "dateCreated": "2016-06-16T09:43:10.000Z", "dateModified": "2016-06-16T09:43:10.000Z", "author": "dbr", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\bgout)(s\\b|\\b)", "permalinkFragment": "cU5pN1", "isFavorite": false, "isStarred": false}, {"title": "R\u00e8gle REMP 13", "description": "Remplacement de co\u00fbt, go\u00fbt, tache...", "dateCreated": "2016-06-16T09:47:25.000Z", "dateModified": "2016-06-16T09:47:25.000Z", "author": "DBR", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\bcout)(s\\b|\\b)", "permalinkFragment": "aZ2dV2", "isFavorite": false, "isStarred": false}, {"title": "SIV - French registration (licence) plates", "description": "registration plates of France in SIV format", "dateCreated": "2016-06-16T10:14:05.000Z", "dateModified": "2016-06-16T10:14:05.000Z", "author": "Qwertiy", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!ss|ww|.[iou]|[iou].)([a-z]{2})[-\\s]?(\\d{3})[-\\s]?(?!ss|ww|.[iou]|[iou].)([a-z]{2})$", "permalinkFragment": "hS6lU3", "isFavorite": false, "isStarred": false}, {"title": "FindAllMatches", "description": "", "dateCreated": "2016-06-16T11:15:39.000Z", "dateModified": "2016-06-16T11:15:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?<=\\.|^)[a-zA-Z]|[A-Z])", "permalinkFragment": "xY9gX4", "isFavorite": false, "isStarred": false}, {"title": "number float/decimal", "description": "[0-9-.E]+.", "dateCreated": "2016-06-16T12:01:48.000Z", "dateModified": "2016-06-16T12:01:48.000Z", "author": "harel", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[0-9-.E]+.", "permalinkFragment": "hN6oK3", "isFavorite": false, "isStarred": false}, {"title": "Fields separated by two or more spaces", "description": "", "dateCreated": "2016-06-16T12:05:33.000Z", "dateModified": "2016-06-16T12:05:33.000Z", "author": "John Oxley", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?:[^ ]|[^ ] [^ ])+)(?:  +|$)", "permalinkFragment": "dB4tK4", "isFavorite": false, "isStarred": false}, {"title": "ad google apps for business domain regexp", "description": "", "dateCreated": "2016-06-16T13:10:15.000Z", "dateModified": "2016-06-16T13:10:15.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,}[a-zA-Z0-9]+(\\.com|\\.info|\\.net|\\.org|\\.eu|\\.de|\\.ph)$", "permalinkFragment": "iZ6rM3", "isFavorite": false, "isStarred": false}, {"title": "Belkin", "description": "", "dateCreated": "2016-06-16T17:13:02.000Z", "dateModified": "2016-06-16T17:13:02.000Z", "author": "Tejal", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\\"error_description\\\"\\:\\\"(?P<error_description>.\\w+\\s+\\w+)", "permalinkFragment": "dW8yJ0", "isFavorite": false, "isStarred": false}, {"title": "static files", "description": "", "dateCreated": "2016-06-16T18:17:04.000Z", "dateModified": "2016-06-16T18:17:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<!\\.min)\\.(js|css)$", "permalinkFragment": "rW2pB2", "isFavorite": false, "isStarred": false}, {"title": "foobar", "description": "", "dateCreated": "2016-06-17T07:56:55.000Z", "dateModified": "2016-06-17T07:56:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9]+)", "permalinkFragment": "nN9zT5", "isFavorite": false, "isStarred": false}, {"title": "defmodule regex", "description": "", "dateCreated": "2016-06-17T11:35:02.000Z", "dateModified": "2016-06-17T11:35:02.000Z", "author": "Jakub Hajto", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "defmodule ([a-zA-Z]+) do\\n([\\s\\S]*)end", "permalinkFragment": "oA4kM9", "isFavorite": false, "isStarred": false}, {"title": "Functions, macros and protocols", "description": "", "dateCreated": "2016-06-17T13:36:38.000Z", "dateModified": "2016-06-17T13:36:38.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "def(p|macro|protocol|macrop)? ([a-zA-Z]+)(\\([a-zA-Z, ]+\\))? do([\\s\\S]+?)end", "permalinkFragment": "pX6bS3", "isFavorite": false, "isStarred": false}, {"title": "OdiScenarioFolder filter on smartexport xml", "description": "OdiScenarioFolder filter on smartexport xml", "dateCreated": "2016-06-17T15:34:05.000Z", "dateModified": "2016-06-17T15:34:05.000Z", "author": "Angelo", "flavor": "pcre", "delimiter": "/", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s*<Object class=\"com.sunopsis.dwg.dbobj.SnpScenFolder\">(.*?)<\\/Object>", "permalinkFragment": "gR3pD1", "isFavorite": false, "isStarred": false}, {"title": "then:error: blocks with self reference", "description": "", "dateCreated": "2016-06-17T20:52:18.000Z", "dateModified": "2016-06-17T20:52:18.000Z", "author": "Anthony D", "flavor": "pcre", "delimiter": "/", "flags": "ms", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "then:.*(?!}])self|error:.*(?!}])self", "permalinkFragment": "sZ3iQ7", "isFavorite": false, "isStarred": false}, {"title": "a", "description": "", "dateCreated": "2016-06-18T06:58:03.000Z", "dateModified": "2016-06-18T06:58:03.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[\\x00-\\x20]+|[\\x00-\\x20]+$", "permalinkFragment": "nM4aQ1", "isFavorite": false, "isStarred": false}, {"title": "Firewall CSF", "description": "Gets the SRC from the CSF Log files", "dateCreated": "2016-06-18T08:49:38.000Z", "dateModified": "2016-06-18T08:49:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "SRC=([^ ]*)", "permalinkFragment": "qJ2gD6", "isFavorite": false, "isStarred": false}, {"title": "CSF Firewall SRC", "description": "Gets the SRC IP address from the CSF Firewall logs", "dateCreated": "2016-06-18T08:58:31.000Z", "dateModified": "2016-06-18T08:58:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:SRC=([^ ]*))", "permalinkFragment": "rH7rR0", "isFavorite": false, "isStarred": false}, {"title": "Regex", "description": "", "dateCreated": "2016-06-18T12:10:42.000Z", "dateModified": "2016-06-18T12:10:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "#=#=#[a-zA-Z]{5}\\b", "permalinkFragment": "lZ5vE0", "isFavorite": false, "isStarred": false}, {"title": "First Test", "description": "", "dateCreated": "2016-06-18T22:37:56.000Z", "dateModified": "2016-06-18T22:37:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((?:\\+27|27)|0)(\\d{9})$", "permalinkFragment": "xB9xX4", "isFavorite": false, "isStarred": false}, {"title": "[A-Za-z0-9-]+", "description": "", "dateCreated": "2016-06-19T09:08:38.000Z", "dateModified": "2016-06-19T09:08:38.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=^.$)(?=.*\\d)(?=.*[%&]+)(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$", "permalinkFragment": "dL8rK5", "isFavorite": false, "isStarred": false}, {"title": "link url match", "description": "matches url", "dateCreated": "2016-06-19T14:49:40.000Z", "dateModified": "2016-06-19T14:49:40.000Z", "author": "bgrgndz", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((http|https|ftp)\\:\\/\\/[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(:[a-zA-Z0-9]*)?\\/?([a-zA-Z0-9\\-\\._\\?\\,\\'\\/\\\\\\+&amp;%\\$#\\=~])*)", "permalinkFragment": "fV5dM5", "isFavorite": false, "isStarred": false}, {"title": "URL Matcher", "description": "Refernce : http://code.tutsplus.com/tutorials/8-regular-expressions-you-should-know--net-6149", "dateCreated": "2016-06-20T01:28:49.000Z", "dateModified": "2016-06-20T01:28:49.000Z", "author": "Mehdi.Shokohi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$", "permalinkFragment": "fM4sF7", "isFavorite": false, "isStarred": false}, {"title": "Separate by double quotes", "description": "String that may begin or end with spaces, and contains double-quoted text, separated by a number of spaces", "dateCreated": "2016-06-20T07:24:33.000Z", "dateModified": "2016-06-20T07:24:33.000Z", "author": "Rafael Sanchez", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s*\"([^\"]+)\"\\s*", "permalinkFragment": "nD6bF5", "isFavorite": false, "isStarred": false}, {"title": "java", "description": "", "dateCreated": "2016-06-20T07:55:54.000Z", "dateModified": "2016-06-20T07:55:54.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\\\d+(-\\\\d+)", "permalinkFragment": "hP1jM2", "isFavorite": false, "isStarred": false}, {"title": "Dices", "description": "", "dateCreated": "2016-06-20T12:46:32.000Z", "dateModified": "2016-06-20T12:46:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d{0,8}d\\d{1,8}", "permalinkFragment": "cG3aA9", "isFavorite": false, "isStarred": false}, {"title": "example", "description": "", "dateCreated": "2016-06-20T13:17:11.000Z", "dateModified": "2016-06-20T13:17:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "45", "permalinkFragment": "mX9bY4", "isFavorite": false, "isStarred": false}, {"title": "Smile", "description": "", "dateCreated": "2016-06-20T18:08:19.000Z", "dateModified": "2016-06-20T18:08:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ":smile_([0-9]{2}):", "permalinkFragment": "yE6zZ5", "isFavorite": false, "isStarred": false}, {"title": "for SO", "description": "", "dateCreated": "2016-06-20T18:11:53.000Z", "dateModified": "2016-06-20T18:11:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ":smile_([0-9]{0,2}):", "permalinkFragment": "tV2vZ6", "isFavorite": false, "isStarred": false}, {"title": "Lookbehind - Javascript", "description": "", "dateCreated": "2016-06-20T18:47:35.000Z", "dateModified": "2016-06-20T18:47:35.000Z", "author": "Matheus Siqueira", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^?:\\).{0,}](.+)", "permalinkFragment": "tF7aA8", "isFavorite": false, "isStarred": false}, {"title": "Lookbehind - Javascript", "description": "POsitive lookbehind javascript.", "dateCreated": "2016-06-20T18:51:52.000Z", "dateModified": "2016-06-20T18:51:52.000Z", "author": "Matheus de Sousa Siqueira - (matheussiqueira.ec@gmail.com)", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^?:\\).{0,}](.+)", "permalinkFragment": "mX5lC9", "isFavorite": false, "isStarred": false}, {"title": "Words starting with hash symbol", "description": "", "dateCreated": "2016-06-21T02:24:35.000Z", "dateModified": "2016-06-21T02:24:35.000Z", "author": "harish", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "#[^\\s,]+", "permalinkFragment": "hA3uV7", "isFavorite": false, "isStarred": false}, {"title": "Date", "description": "Legal dates", "dateCreated": "2016-06-21T09:22:10.000Z", "dateModified": "2016-06-21T09:22:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9]{2})\\/([0-9]{2})", "permalinkFragment": "jT1oU7", "isFavorite": false, "isStarred": false}, {"title": "PHP function tester", "description": "Test the prototype of a PHP fuction (even PHP7)\nprotected function f1(int ...$test): string\nis true,\nfunction f2 ( array $test2 = array(), $test3)\nis true...", "dateCreated": "2016-06-21T10:29:44.000Z", "dateModified": "2016-06-21T10:29:44.000Z", "author": "Smiley32", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(( *\t* *(public|private|protected) +function)|( *\t* *function)) +[a-zA-Z_][a-zA-Z0-9_-]* *(\\(( *(([a-zA-Z_][a-zA-Z0-9_-]* +)?(\\.\\.\\.)?\\$[a-zA-Z_][a-zA-Z0-9_-]*( *= *[^\\),]+(\\([^\\)]*\\))?)?)( *, *([a-zA-Z_][a-zA-Z0-9_-]* +)?(\\.\\.\\.)?\\$[a-zA-Z_][a-zA-Z0-9_-]*( *= *[^\\),]+(\\([^\\)]*\\))?)?)*)? *\\) *(: *[a-zA-Z_][a-zA-Z0-9_-]*)?)$", "permalinkFragment": "qK0iS2", "isFavorite": false, "isStarred": false}, {"title": "Split Java Stack Traces", "description": "", "dateCreated": "2016-06-21T11:36:38.000Z", "dateModified": "2016-06-21T11:36:38.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((^\\S[^\\n]+)(\\n\\s+[^\\n]+)*)", "permalinkFragment": "uU1vQ6", "isFavorite": false, "isStarred": false}, {"title": "Match query-string parameters", "description": "", "dateCreated": "2016-06-21T14:52:23.000Z", "dateModified": "2016-06-21T14:52:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\\\?&]([^&=]+)=([^&=]+)", "permalinkFragment": "yX2eI1", "isFavorite": false, "isStarred": false}, {"title": "H6 Hisense", "description": "", "dateCreated": "2016-06-21T16:18:17.000Z", "dateModified": "2016-06-21T16:18:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((?!\\/EHANCE).)*$", "permalinkFragment": "fX7xH8", "isFavorite": false, "isStarred": false}, {"title": "req_ip", "description": "Plex origination request IP", "dateCreated": "2016-06-21T17:07:17.000Z", "dateModified": "2016-06-21T17:07:17.000Z", "author": "sydvishus", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Request\\:\\s\\[(?P<req_ip>\\d+\\.\\d+\\.\\d+\\.\\d+)", "permalinkFragment": "cW3sB7", "isFavorite": false, "isStarred": false}, {"title": "Extract facebook video id", "description": "", "dateCreated": "2016-06-21T22:54:51.000Z", "dateModified": "2016-06-21T22:54:51.000Z", "author": "Stathis Aliprandis", "flavor": "pcre", "delimiter": "~", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:(?:https?://)?(?:www|mobile|web|0)\\.)?facebook\\.com/(?:video\\.php\\?v=|.*?/videos/)(\\d+)$", "permalinkFragment": "wJ1jC3", "isFavorite": false, "isStarred": false}, {"title": "grabs first part of formula", "description": "", "dateCreated": "2016-06-22T00:33:32.000Z", "dateModified": "2016-06-22T00:33:32.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Z][a-z]?|\\(|\\[|\\d", "permalinkFragment": "sJ4oU3", "isFavorite": false, "isStarred": false}, {"title": "Non-Characters", "description": "TO Select Non-Characters", "dateCreated": "2016-06-22T11:02:30.000Z", "dateModified": "2016-06-22T11:02:30.000Z", "author": "Naveen", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\W\\D", "permalinkFragment": "qC4dB3", "isFavorite": false, "isStarred": false}, {"title": "UrlTest", "description": "", "dateCreated": "2016-06-22T12:32:35.000Z", "dateModified": "2016-06-22T12:32:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:https?:[^\\s]+)|\\(?(\\+?[0-9]{0,4}\\)?[-. ]*\\(?[0-9]\\d{0,3}\\)?[-. ]*\\d{0,3}[-. ]*\\d{4,5})([ \\t]*[-,:#\\/ ]*[ \\t]*(\\s*Access[- \\t]*Code[ \\t]*:[ \\t]*|\\s*Conference[- \\t]*ID[ \\t]*:[ \\t]*|\\s*Pass[- \\t]*code[ \\t]*:[ \\t]*|\\s*Participant[- \\t]*PIN[ \\t]*:[ \\t]*|[,:#\\/ ]?))(\\d{0,3}[- ]*\\d{0,3}[- ]*\\d{0,3})?", "permalinkFragment": "rF2eW5", "isFavorite": false, "isStarred": false}, {"title": "Url ", "description": "Regex for full url", "dateCreated": "2016-06-22T14:09:52.000Z", "dateModified": "2016-06-22T14:09:52.000Z", "author": "MrDenzo", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\b)(https?:\\/\\/)(www.)?[\\w-]{2,}\\.[a-zA-Z-]{2,}[\\w\\/\\.?=&#-]*(\\b)", "permalinkFragment": "oT3wX4", "isFavorite": false, "isStarred": false}, {"title": "Full url", "description": "For full url.", "dateCreated": "2016-06-22T14:17:13.000Z", "dateModified": "2016-06-22T14:17:13.000Z", "author": "MrDenzo", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\b)(https?:\\/\\/)(www.)?[\\w-]{2,}\\.[a-zA-Z\\-0-9]{1,}[\\w\\/\\.\\?\\=\\&\\#\\-\\%\\+]*(\\b)", "permalinkFragment": "mB6wN3", "isFavorite": false, "isStarred": false}, {"title": "IBM_DS parse", "description": "", "dateCreated": "2016-06-22T15:06:08.000Z", "dateModified": "2016-06-22T15:06:08.000Z", "author": "Anton Rastyazhenko", "flavor": "pcre", "delimiter": "/", "flags": "igUms", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=^\\s+Drive\\s+at\\s+Enclosure\\s+(\\d+),\\s+Slot\\s+(\\d+)).*(Status)\\s?+:(.*)$", "permalinkFragment": "yP6yF0", "isFavorite": false, "isStarred": false}, {"title": "WRAP LONG STRING TO SPEC LENGTH", "description": "fixed we do not need \\b 'cose it broke with quotes used in processed text", "dateCreated": "2016-06-22T16:40:38.000Z", "dateModified": "2016-06-22T16:40:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "iug", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.{1,40})(?:\\s+|\\n|$)", "permalinkFragment": "eF2sA1", "isFavorite": false, "isStarred": false}, {"title": "Universal URL", "description": "Matches any forms of common URLs with a single regular expression", "dateCreated": "2016-06-22T20:07:18.000Z", "dateModified": "2016-06-22T20:07:18.000Z", "author": "np.trivial", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<scheme>\\w+):\\/\\/((?<user>\\w+)(\\:(?<password>[^\\/:]+))?@)?(?<hostname>[\\w-.]+)(:(?<port>\\d+))?\\/(?<request>(?<path>[^#\\s\\?]+)(\\?(?<query>[^#\\s]+))?(#(?<fragment>[^#\\s]+))?)?", "permalinkFragment": "eV2kT7", "isFavorite": false, "isStarred": false}, {"title": "JS Variable Parser", "description": "Parses variables for Javascript.", "dateCreated": "2016-06-22T20:39:08.000Z", "dateModified": "2016-06-22T20:39:08.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(var\\s+(\\w[\\w\\-\\_]*)\\s*(?:=\\s*(\\d+|['\"][\\w\\W]+['\"]))?;?)", "permalinkFragment": "lO8iF7", "isFavorite": false, "isStarred": false}, {"title": "javascript anonymous function matcher", "description": "only anon functions", "dateCreated": "2016-06-23T07:10:05.000Z", "dateModified": "2016-06-23T07:10:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "function[\\s]*\\(\\s*([^)]*?)\\s*\\)", "permalinkFragment": "cV6tP8", "isFavorite": false, "isStarred": false}, {"title": "Add ngInject to all files", "description": "", "dateCreated": "2016-06-23T08:37:37.000Z", "dateModified": "2016-06-23T08:37:37.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(export[^(]*)(\\(([^)]+)\\))([^{]*)(\\{([^}]+)\\})", "permalinkFragment": "lS9lP1", "isFavorite": false, "isStarred": false}, {"title": "XLS Sheet :replacement with Regex", "description": "This expression will be useful to distinct group of Special characters making a blocker while creating the sheet though code\n\ne.g IF sheet name is given XXX/[abc]/YYY name through code.It must be renamed as such naming is not allowed in XLS.", "dateCreated": "2016-06-23T08:46:25.000Z", "dateModified": "2016-06-23T08:46:25.000Z", "author": "Reshma Nehlani", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\\\\\/\\?\\[\\]\\*]+)", "permalinkFragment": "dI2cF0", "isFavorite": false, "isStarred": false}, {"title": "add ngInject", "description": "", "dateCreated": "2016-06-23T09:02:13.000Z", "dateModified": "2016-06-23T09:02:13.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(export[^(]*)(\\(([^)]+)\\))([^{]*)([^{]*{)", "permalinkFragment": "vG8gC6", "isFavorite": false, "isStarred": false}, {"title": "RGX lj-ARRAY", "description": "RGX lj-ARRAY", "dateCreated": "2016-06-23T10:52:44.000Z", "dateModified": "2016-06-23T10:52:44.000Z", "author": "LJARRAY", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(((([a-z]+[A-Z]*[0-9]*)+.([a-z]+[A-Z]*[0-9]*)+|([a-z]+[A-Z]*[0-9]*)+[(]([a-z]+[A-Z]*[0-9]*)+[)])\\.[>,<,>=,<=,==,<,!=]\\.(([a-z]+[A-Z]*[0-9]*)|([a-z]+[A-Z]*[0-9]*)+[(]([a-z]+[A-Z]*[0-9]*)+[)]))+(OR|AND|{}))*", "permalinkFragment": "aW4yR7", "isFavorite": false, "isStarred": false}, {"title": "InnerHTML", "description": "", "dateCreated": "2016-06-23T11:46:30.000Z", "dateModified": "2016-06-23T11:46:30.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\>(.*?)\\<", "permalinkFragment": "oN5aC3", "isFavorite": false, "isStarred": false}, {"title": "10-digit number", "description": "Accepts a 10-digit whole number only", "dateCreated": "2016-06-23T16:07:15.000Z", "dateModified": "2016-06-23T16:07:15.000Z", "author": "SoftwareSimian", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{10}$", "permalinkFragment": "cG4kD9", "isFavorite": false, "isStarred": false}, {"title": "Y or N ", "description": "Single character Yes Or No\nAccepts Y|N|y|n", "dateCreated": "2016-06-23T16:08:43.000Z", "dateModified": "2016-06-23T16:08:43.000Z", "author": "SoftwareSimian", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[nyNY]{1}$", "permalinkFragment": "aM4wP4", "isFavorite": false, "isStarred": false}, {"title": "grab value from json", "description": "", "dateCreated": "2016-06-23T17:25:58.000Z", "dateModified": "2016-06-23T17:25:58.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\"value\":\")(.*?)(?=\",)", "permalinkFragment": "tE6zJ5", "isFavorite": false, "isStarred": false}, {"title": "pull version number", "description": "", "dateCreated": "2016-06-23T17:46:44.000Z", "dateModified": "2016-06-23T17:46:44.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=<td colspan=\\\\\"1\\\\\">fs-newarch-proxy</td> <td colspan=\\\\\"1\\\\\">)(.*?)(?=</td>)", "permalinkFragment": "qB8lF7", "isFavorite": false, "isStarred": false}, {"title": "t() argument extractor", "description": "Extracts the string passed to the Drupal t() function and keeps the string in the 3rd capture.", "dateCreated": "2016-06-23T18:18:58.000Z", "dateModified": "2016-06-23T18:18:58.000Z", "author": "Travis Uribe", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "t\\s*\\(('|\"|<<<(\\w+))([\\s\\S]+?)(?:(?<!\\\\)\\1|\\2)", "permalinkFragment": "gL9lJ0", "isFavorite": false, "isStarred": false}, {"title": "Big Time Regex?", "description": "", "dateCreated": "2016-06-23T20:04:55.000Z", "dateModified": "2016-06-23T20:04:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?:[ ]|^|[^\\d\\.\\:\\-\\r\\n$\u00a3])((?:1[0-9]|2[0-4]|0?[1-9]|00|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)[ ]?[\\:\\. ]?[ ]?(?:[0-5][0-9]|fifteen|thirty|fou?rty ?five)(?:[ ]?(?:am|pm)|[ ]?o\\'?[ ]?clock))(?:\\b|$|,\\b)|(?:[ ]|^|[^\\d\\.\\:\\-\\r\\n$\u00a3])(((?:1[0-9]|2[0-4]|0?[1-9]|00|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)(?:[ ]?(?:am|pm))|[ ]?o\\'?[ ]?clock))(?:\\b|$|,\\b)|(?:[ ]|^|[^\\d\\.\\:\\-\\r\\n$\u00a3])((?:1[0-9]|2[0-4]|0?[1-9]|00|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)[ ]?[\\:\\. ][ ]?(?:[0-5][0-9]|fifteen|thirty|fou?rty ?five)(?:\\b|$|,\\b))|(?:[ ]|^|[^\\d\\.\\:\\-\\r\\n$\u00a3])((?:1[0-9]|2[0-4]|0?[1-9]|00) ?(?:PS?T|GMT|\u2206USA|\u2206US|ET|BST|\u2206UK|UK ?[Tt]ime|[Ee]astern [Tt]ime|[Pp]acific [Tt]ime|[Cc]entral [Tt]ime|\u2206UTC|ACDT|ACST|ACT|ACT|ADT|AEDT|AEST|AFT|AKDT|AKST|AMST|AMT|AMT|ART|AST|AST|AWDT|AWST|AZOST|AZT|BDT|BDT|BIOT|BRST|BRT|BST|BST|BST|BTT|CCT|CDT|CDT|CEDT|CEST|CET|CHADT|CHAST|CHOT|ChST|CHUT|CIST|CIT|CKT|CLST|CLT|COT|CST|CST|CST|CST|CST|CT|CVT|CWST|CXT|DAVT|DDUT|DFT|EASST|ECT|ECT|EDT|EEDT|EEST|EET|EGST|EGT|EIT|EST|EST|FET|FJT|FKST|FKST|FKT|FNT|GALT|GAMT|GFT|GILT|GIT|GMT|GST|GST|GYT|HADT|HAEC|HAST|HKT|HMT|HOVT|HST|IBST|ICT|IDT|IRDT|IRKT|IRST|IST|IST|IST|JST|KGT|KOST|KRAT|KST|LHST|LHST|LINT|MAGT|MART|MAWT|MDT|MET|MEST|MHT|MIST|MMT|MSK|MST|MST|MST|MUT|MVT|MYT|NCT|NDT|NFT|NPT|NST|NT|NUT|NZDT|NZST|OMST|ORAT|PDT|PETT|PGT|PHOT|PKT|PMDT|PMST|PONT|PST|PST|PYST|PYT|RET|ROTT|SAKT|SAMT|SAST|SBT|SCT|SGT|SLST|SRET|SRT|SST|SST|SYOT|TAHT|THA|TFT|TJT|TKT|TLT|TMT|TOT|TVT|ULAT|USZ1|UYST|UYT|UZT|VET|VLAT|VOLT|VOST|VUT|WAKT|WAST|WAT|WEDT|WEST|WET|WST|YAKT))\\b)", "permalinkFragment": "aJ2zN0", "isFavorite": false, "isStarred": false}, {"title": "BigTimeRegex", "description": "Description", "dateCreated": "2016-06-23T20:05:37.000Z", "dateModified": "2016-06-23T20:05:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?:[ ]|^|[^\\d\\.\\:\\-\\r\\n$\u00a3])((?:1[0-9]|2[0-4]|0?[1-9]|00|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)[ ]?[\\:\\. ]?[ ]?(?:[0-5][0-9]|fifteen|thirty|fou?rty ?five)(?:[ ]?(?:am|pm)|[ ]?o\\'?[ ]?clock))(?:\\b|$|,\\b)|(?:[ ]|^|[^\\d\\.\\:\\-\\r\\n$\u00a3])(((?:1[0-9]|2[0-4]|0?[1-9]|00|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)(?:[ ]?(?:am|pm))|[ ]?o\\'?[ ]?clock))(?:\\b|$|,\\b)|(?:[ ]|^|[^\\d\\.\\:\\-\\r\\n$\u00a3])((?:1[0-9]|2[0-4]|0?[1-9]|00|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)[ ]?[\\:\\. ][ ]?(?:[0-5][0-9]|fifteen|thirty|fou?rty ?five)(?:\\b|$|,\\b))|(?:[ ]|^|[^\\d\\.\\:\\-\\r\\n$\u00a3])((?:1[0-9]|2[0-4]|0?[1-9]|00) ?(?:PS?T|GMT|\u2206USA|\u2206US|ET|BST|\u2206UK|UK ?[Tt]ime|[Ee]astern [Tt]ime|[Pp]acific [Tt]ime|[Cc]entral [Tt]ime|\u2206UTC|ACDT|ACST|ACT|ACT|ADT|AEDT|AEST|AFT|AKDT|AKST|AMST|AMT|AMT|ART|AST|AST|AWDT|AWST|AZOST|AZT|BDT|BDT|BIOT|BRST|BRT|BST|BST|BST|BTT|CCT|CDT|CDT|CEDT|CEST|CET|CHADT|CHAST|CHOT|ChST|CHUT|CIST|CIT|CKT|CLST|CLT|COT|CST|CST|CST|CST|CST|CT|CVT|CWST|CXT|DAVT|DDUT|DFT|EASST|ECT|ECT|EDT|EEDT|EEST|EET|EGST|EGT|EIT|EST|EST|FET|FJT|FKST|FKST|FKT|FNT|GALT|GAMT|GFT|GILT|GIT|GMT|GST|GST|GYT|HADT|HAEC|HAST|HKT|HMT|HOVT|HST|IBST|ICT|IDT|IRDT|IRKT|IRST|IST|IST|IST|JST|KGT|KOST|KRAT|KST|LHST|LHST|LINT|MAGT|MART|MAWT|MDT|MET|MEST|MHT|MIST|MMT|MSK|MST|MST|MST|MUT|MVT|MYT|NCT|NDT|NFT|NPT|NST|NT|NUT|NZDT|NZST|OMST|ORAT|PDT|PETT|PGT|PHOT|PKT|PMDT|PMST|PONT|PST|PST|PYST|PYT|RET|ROTT|SAKT|SAMT|SAST|SBT|SCT|SGT|SLST|SRET|SRT|SST|SST|SYOT|TAHT|THA|TFT|TJT|TKT|TLT|TMT|TOT|TVT|ULAT|USZ1|UYST|UYT|UZT|VET|VLAT|VOLT|VOST|VUT|WAKT|WAST|WAT|WEDT|WEST|WET|WST|YAKT))\\b)", "permalinkFragment": "tS9sP3", "isFavorite": false, "isStarred": false}, {"title": "BigTimeRegex2", "description": "", "dateCreated": "2016-06-23T20:06:54.000Z", "dateModified": "2016-06-23T20:06:54.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gmix", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\b(\\b(?:times|some time|any time))\\b|\\b(1[0-9]th)\\b|\\b([2-3]0th)\\b|\\b([2-3]?1st)\\b|\\b(2?2nd)\\b|\\b(2?3rd)\\b|\\b(2?[4-9]th)\\b|\\b((?:(?:1[0-9]|2[0-4]|0?[0-9])(?:(?:[ ]?(?:or|[,/-]|to|and)[ ]?))){0,3}((?:1[0-9]|2[0-4]|0?[0-9]))((?:[ ]?[\\:\\.][ ]?)([0-5][0-9])|(?:[ ]?[ap]m|[ ]?o\\'?[ ]?clock)|(?:[ ]?(?:PS?T|GMT|\u2206USA|\u2206US|ET|BST|\u2206UK|UK[ ]?[Tt]ime|[Ee]astern[ ]?[Tt]ime|[Pp]acific[ ]?[Tt]ime|[Cc]entral[ ]?[Tt]ime|\u2206UTC|ACDT|ACST|ACT|ACT|ADT|AEDT|AEST|AFT|AKDT|AKST|AMST|AMT|AMT|ART|AST|AST|AWDT|AWST|AZOST|AZT|BDT|BDT|BIOT|BRST|BRT|BST|BST|BST|BTT|CCT|CDT|CDT|CEDT|CEST|CET|CHADT|CHAST|CHOT|ChST|CHUT|CIST|CIT|CKT|CLST|CLT|COT|CST|CST|CST|CST|CST|CT|CVT|CWST|CXT|DAVT|DDUT|DFT|EASST|ECT|ECT|EDT|EEDT|EEST|EET|EGST|EGT|EIT|EST|EST|FET|FJT|FKST|FKST|FKT|FNT|GALT|GAMT|GFT|GILT|GIT|GMT|GST|GST|GYT|HADT|HAEC|HAST|HKT|HMT|HOVT|HST|IBST|ICT|IDT|IRDT|IRKT|IRST|IST|IST|IST|JST|KGT|KOST|KRAT|KST|LHST|LHST|LINT|MAGT|MART|MAWT|MDT|MET|MEST|MHT|MIST|MMT|MSK|MST|MST|MST|MUT|MVT|MYT|NCT|NDT|NFT|NPT|NST|NT|NUT|NZDT|NZST|OMST|ORAT|PDT|PETT|PGT|PHOT|PKT|PMDT|PMST|PONT|PST|PST|PYST|PYT|RET|ROTT|SAKT|SAMT|SAST|SBT|SCT|SGT|SLST|SRET|SRT|SST|SST|SYOT|TAHT|THA|TFT|TJT|TKT|TLT|TMT|TOT|TVT|ULAT|USZ1|UYST|UYT|UZT|VET|VLAT|VOLT|VOST|VUT|WAKT|WAST|WAT|WEDT|WEST|WET|WST|YAKT)\\b)){1,3})\\b|\\b(january)\\b|\\b(jan\\b)\\b|\\b(february)\\b|\\b(feb\\b)\\b|\\b(march)\\b|\\b(mar\\b)\\b|\\b(april)\\b|\\b(apr\\b)\\b|\\b(may\\b)\\b|\\b(june)\\b|\\b(jun\\b)\\b|\\b(july)\\b|\\b(jul\\b)\\b|\\b(august)\\b|\\b(aug\\b)\\b|\\b(september)\\b|\\b(sept?)\\b|\\b(october)\\b|\\b(oct\\b)\\b|\\b(november)\\b|\\b(nov\\b)\\b|\\b(december)\\b|\\b(dec\\b)\\b|\\b(\\bnext\\b)\\b|\\b(tomorr?ow (?:afternoon|morning|\\bmorn\\b|evening|\\beve\\b|midd?ay))\\b|\\b(\\bfew\\b)\\b|\\b(\\bafter\\b)\\b|\\b(last (?:not Last [week] of [month|year]))\\b|\\b([Mm]onday)\\b|\\b(year)\\b|\\b(afternoon)\\b|\\b(hours?)\\b|\\b(\\bnoon\\b)\\b|\\b(lunch)\\b|\\b(weekend)\\b|\\b(seconds)\\b|\\b(meeting)\\b|\\b(\\bfirst\\b)\\b|\\b(\\bseveral\\b)\\b|\\b(\\bbefore\\b)\\b|\\b(the other [wee|day|month|year])\\b|\\b([Mm]on\\b)\\b|\\b(month)\\b|\\b(morning)\\b|\\b(minutes?)\\b|\\b(midnight)\\b|\\b(brunch)\\b|\\b(today)\\b|\\b(\\bsecs\\b)\\b|\\b(call)\\b|\\b(\\bsecond\\b)\\b|\\b(\\bcouple\\b)\\b|\\b(\\bbetween\\b)\\b|\\b(^^Regex less opening condition)\\b|\\b([Tt]uesday)\\b|\\b(\\bweek\\b)\\b|\\b(\\bmorn\\b)\\b|\\b(\\bdays\\b)\\b|\\b(midday)\\b|\\b(dinner)\\b|\\b(\u2206now)\\b|\\b(minutes)\\b|\\b(phone call)\\b|\\b(\\bthird\\b)\\b|\\b(\\bsome\\b)\\b|\\b(in ?-? ?between)\\b|\\b([Tt]ue\\b)\\b|\\b(\\bday\\b)\\b|\\b(evening)\\b|\\b(fou?rtnights)\\b|\\b(breakfast)\\b|\\b(tomorrow)\\b|\\b(\\bmins\\b)\\b|\\b(conference call)\\b|\\b(\\bfourth\\b)\\b|\\b(\\bmany\\b)\\b|\\b([Ww]ednesday)\\b|\\b(fou?rtnight)\\b|\\b(\\beve\\b)\\b|\\b(years)\\b|\\b(\\bmns\\b)\\b|\\b(coffee)\\b|\\b(following)\\b|\\b(\\bin a)\\b|\\b([Ww]eds?)\\b|\\b(days\u2206)\\b|\\b(midd?ay)\\b|\\b(months)\\b|\\b(hours)\\b|\\b(\\bcoming\\b)\\b|\\b([Tt]hursday)\\b|\\b(weeks)\\b|\\b(\\bhrs\\b)\\b|\\b(\\blast\\b)\\b|\\b([1-9][0-9])\\b|\\b([Tt]hur)\\b|\\b(\\bthis\\b)\\b|\\b([Ff]riday)\\b|\\b([Ff]ri\\b)\\b|\\b([Ss]aturday)\\b|\\b(meet)\\b|\\b([Ss]at\\b)\\b|\\b(phone)\\b|\\b([Ss]unday)\\b|\\b([Ss]un\\b)\\b|\\b(Enhanced Version For Martin. +ve Look Behinds and limited scope for the number of minutes in the secon number. 5,10,15,20,30,45 mins past the hour)\\b|\\b(Enhanced Version For Martin. +ve Look Behinds)\\b|\\b(\\bPS?T\\b)\\b|\\b(\\bGMT\\b)\\b|\\b(\\b\u2206USA\\b)\\b|\\b(\\b\u2206US\\b)\\b|\\b(\\bET\\b)\\b|\\b(\\bBST\\b)\\b|\\b(\\b\u2206UK\\b)\\b|\\b(\\bUK ?[Tt]ime\\b)\\b|\\b(\\b[Ee]astern [Tt]ime\\b)\\b|\\b(\\b[Pp]acific [Tt]ime\\b)\\b|\\b(\\b[Cc]entral [Tt]ime\\b)\\b|\\b(\\bACDT\\b)\\b|\\b(\\bACST\\b)\\b|\\b(\\bACT\\b)\\b|\\b(\\bADT\\b)\\b|\\b(\\bAEDT\\b)\\b|\\b(\\bAEST\\b)\\b|\\b(\\bAFT\\b)\\b|\\b(\\bAKDT\\b)\\b|\\b(\\bAKST\\b)\\b|\\b(\\bAMST\\b)\\b|\\b(\\bAMT\\b)\\b|\\b(\\bART\\b)\\b|\\b(\\bAST\\b)\\b|\\b(\\bAWDT\\b)\\b|\\b(\\bAWST\\b)\\b|\\b(\\bAZOST\\b)\\b|\\b(\\bAZT\\b)\\b|\\b(\\bBDT\\b)\\b|\\b(\\bBIOT\\b)\\b|\\b(\\bBRST\\b)\\b|\\b(\\bBRT\\b)\\b|\\b(\\bBTT\\b)\\b|\\b(\\bCCT\\b)\\b|\\b(\\bCDT\\b)\\b|\\b(\\bCEDT\\b)\\b|\\b(\\bCEST\\b)\\b|\\b(\\bCET\\b)\\b|\\b(\\bCHADT\\b)\\b|\\b(\\bCHAST\\b)\\b|\\b(\\bCHOT\\b)\\b|\\b(\\bChST\\b)\\b|\\b(\\bCHUT\\b)\\b|\\b(\\bCIST\\b)\\b|\\b(\\bCIT\\b)\\b|\\b(\\bCKT\\b)\\b|\\b(\\bCLST\\b)\\b|\\b(\\bCLT\\b)\\b|\\b(\\bCOT\\b)\\b|\\b(\\bCST\\b)\\b|\\b(\\bCT\\b)\\b|\\b(\\bCVT\\b)\\b|\\b(\\bCWST\\b)\\b|\\b(\\bCXT\\b)\\b|\\b(\\bDAVT\\b)\\b|\\b(\\bDDUT\\b)\\b|\\b(\\bDFT\\b)\\b|\\b(\\bEASST\\b)\\b|\\b(\\bECT\\b)\\b|\\b(\\bEDT\\b)\\b|\\b(\\bEEDT\\b)\\b|\\b(\\bEEST\\b)\\b|\\b(\\bEET\\b)\\b|\\b(\\bEGST\\b)\\b|\\b(\\bEGT\\b)\\b|\\b(\\bEIT\\b)\\b|\\b(\\bEST\\b)\\b|\\b(\\bFET\\b)\\b|\\b(\\bFJT\\b)\\b|\\b(\\bFKST\\b)\\b|\\b(\\bFKT\\b)\\b|\\b(\\bFNT\\b)\\b|\\b(\\bGALT\\b)\\b|\\b(\\bGAMT\\b)\\b|\\b(\\bGFT\\b)\\b|\\b(\\bGILT\\b)\\b|\\b(\\bGIT\\b)\\b|\\b(\\bGST\\b)\\b|\\b(\\bGYT\\b)\\b|\\b(\\bHADT\\b)\\b|\\b(\\bHAEC\\b)\\b|\\b(\\bHAST\\b)\\b|\\b(\\bHKT\\b)\\b|\\b(\\bHMT\\b)\\b|\\b(\\bHOVT\\b)\\b|\\b(\\bHST\\b)\\b|\\b(\\bIBST\\b)\\b|\\b(\\bICT\\b)\\b|\\b(\\bIDT\\b)\\b|\\b(\\bIRDT\\b)\\b|\\b(\\bIRKT\\b)\\b|\\b(\\bIRST\\b)\\b|\\b(\\bIST\\b)\\b|\\b(\\bJST\\b)\\b|\\b(\\bKGT\\b)\\b|\\b(\\bKOST\\b)\\b|\\b(\\bKRAT\\b)\\b|\\b(\\bKST\\b)\\b|\\b(\\bLHST\\b)\\b|\\b(\\bLINT\\b)\\b|\\b(\\bMAGT\\b)\\b|\\b(\\bMART\\b)\\b|\\b(\\bMAWT\\b)\\b|\\b(\\bMDT\\b)\\b|\\b(\\bMET\\b)\\b|\\b(\\bMEST\\b)\\b|\\b(\\bMHT\\b)\\b|\\b(\\bMIST\\b)\\b|\\b(\\bMMT\\b)\\b|\\b(\\bMSK\\b)\\b|\\b(\\bMST\\b)\\b|\\b(\\bMUT\\b)\\b|\\b(\\bMVT\\b)\\b|\\b(\\bMYT\\b)\\b|\\b(\\bNCT\\b)\\b|\\b(\\bNDT\\b)\\b|\\b(\\bNFT\\b)\\b|\\b(\\bNPT\\b)\\b|\\b(\\bNST\\b)\\b|\\b(\\bNT\\b)\\b|\\b(\\bNUT\\b)\\b|\\b(\\bNZDT\\b)\\b|\\b(\\bNZST\\b)\\b|\\b(\\bOMST\\b)\\b|\\b(\\bORAT\\b)\\b|\\b(\\bPDT\\b)\\b|\\b(\\bPETT\\b)\\b|\\b(\\bPGT\\b)\\b|\\b(\\bPHOT\\b)\\b|\\b(\\bPKT\\b)\\b|\\b(\\bPMDT\\b)\\b|\\b(\\bPMST\\b)\\b|\\b(\\bPONT\\b)\\b|\\b(\\bPST\\b)\\b|\\b(\\bPYST\\b)\\b|\\b(\\bPYT\\b)\\b|\\b(\\bRET\\b)\\b|\\b(\\bROTT\\b)\\b|\\b(\\bSAKT\\b)\\b|\\b(\\bSAMT\\b)\\b|\\b(\\bSAST\\b)\\b|\\b(\\bSBT\\b)\\b|\\b(\\bSCT\\b)\\b|\\b(\\bSGT\\b)\\b|\\b(\\bSLST\\b)\\b|\\b(\\bSRET\\b)\\b|\\b(\\bSRT\\b)\\b|\\b(\\bSST\\b)\\b|\\b(\\bSYOT\\b)\\b|\\b(\\bTAHT\\b)\\b|\\b(\\bTHA\\b)\\b|\\b(\\bTFT\\b)\\b|\\b(\\bTJT\\b)\\b|\\b(\\bTKT\\b)\\b|\\b(\\bTLT\\b)\\b|\\b(\\bTMT\\b)\\b|\\b(\\bTOT\\b)\\b|\\b(\\bTVT\\b)\\b|\\b(\\bUCT\\b)\\b|\\b(\\bULAT\\b)\\b|\\b(\\bUSZ1\\b)\\b|\\b(\\bUTC\\b)\\b|\\b(\\bUYST\\b)\\b|\\b(\\bUYT\\b)\\b|\\b(\\bUZT\\b)\\b|\\b(\\bVET\\b)\\b|\\b(\\bVLAT\\b)\\b|\\b(\\bVOLT\\b)\\b|\\b(\\bVOST\\b)\\b|\\b(\\bVUT\\b)\\b|\\b(\\bWAKT\\b)\\b|\\b(\\bWAST\\b)\\b|\\b(\\bWAT\\b)\\b|\\b(\\bWEDT\\b)\\b|\\b(\\bWEST\\b)\\b|\\b(\\bWET\\b)\\b|\\b(\\bWST\\b)\\b|\\b(\\bYAKT\\b)\\b|\\b(\\bUK\\b)\\b|\\b(\\bUS\\b)\\b|\\b(\\bPT\\b)\\b|\\b(\\bUK Time\\b)\\b|\\b(\\bUKTime\\b)\\b|\\b(\\bUK time\\b)\\b|\\b(\\bUKtime\\b)\\b|\\b(\\bEastern Time\\b)\\b|\\b(\\bEastern time\\b)\\b|\\b(\\beastern time\\b)\\b|\\b(\\bPacific Time\\b)\\b|\\b(\\bPacific time\\b)\\b|\\b(\\bpacific time\\b)\\b|\\b(\\bCentral Time\\b)\\b|\\b(\\bCentral time\\b)\\b|\\b(\\bcentral time\\b)\\b|\\b(\\bEasternTime\\b)\\b|\\b(\\bEasterntime\\b)\\b|\\b(Spanish time)\\b|\\b(Atlanta time)\\b)", "permalinkFragment": "uY0rL6", "isFavorite": false, "isStarred": false}, {"title": "BigTimeRegex3", "description": "", "dateCreated": "2016-06-23T20:08:00.000Z", "dateModified": "2016-06-23T20:08:00.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gmix", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "#Modifiers                              << NOT GOING TO DO THESE HERE.\n   #\u2202 Before After Until in?Between\n   #\u2202 onwards\n#Time-Time << Don't need as both times will match\n#Lonely HOURS List: 10,time or 12      <not going to do this\n\n# - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -  \n# - - - - - - - - - - - BIG TIME REGEX - - - - - - - - - - - - \n\n#LONELY HOURS\n#These guys are just \\d\\d. So we identify them through proximity to known times\n(?:\n   #Boundary Lookaround\n   (?<=[ ]|^|[^\\d\\.:\\r\\n$\u00a3-])\n   #hour - you always have hours\n   (?:1[0-9]|2[0-4]|0?[0-9])\n   \n   (?:\n      #Hour [or / to - , and]\n      #People don't say \"12pm or 3?\" much. Build it if it comes up.\n      (?:[ ]?   (?:or|[,/-]|to|and)   [ ]?)\n   )\n){0,3}\n\n#TIME BASICS:\n#Basic times that are definitely times. Have to come last so longer strings match first.\n      #Boundary Lookaround (BREAK THIS FOR THE LONELY NUMBERS)\n#      (?<=[ ]|^|[^\\d\\.:\\r\\n$\u00a3-])\n      #hour - you always have hours\n   (  (?:1[0-9]|2[0-4]|0?[0-9])   )\n      #Clarifier. Minutes, AM|PM, a TimeZone or a combination.\n   (\n         #Minutes\n         (?:[ ]?[\\:\\. ][ ]?)   ([0-5][0-9])\n         #AM|PM\n       | (?:[ ]?[ap]m|[ ]?o\\'?[ ]?clock)\n         #TimeZones\n       | (?:[ ]?   (?:PS?T|GMT|\u2206USA|\u2206US|ET|BST|\u2206UK\n         |UK[ ]?[Tt]ime|[Ee]astern[ ]?[Tt]ime|[Pp]acific[ ]?[Tt]ime|[Cc]entral[ ]?[Tt]ime\n         |\u2206UTC|ACDT|ACST|ACT|ACT|ADT|AEDT|AEST|AFT|AKDT|AKST|AMST|AMT|AMT|ART|AST|AST|AWDT\n         |AWST|AZOST|AZT|BDT|BDT|BIOT|BRST|BRT|BST|BST|BST|BTT|CCT|CDT|CDT|CEDT|CEST|CET\n         |CHADT|CHAST|CHOT|ChST|CHUT|CIST|CIT|CKT|CLST|CLT|COT|CST|CST|CST|CST|CST|CT|CVT\n         |CWST|CXT|DAVT|DDUT|DFT|EASST|ECT|ECT|EDT|EEDT|EEST|EET|EGST|EGT|EIT|EST|EST|FET\n         |FJT|FKST|FKST|FKT|FNT|GALT|GAMT|GFT|GILT|GIT|GMT|GST|GST|GYT|HADT|HAEC|HAST|HKT\n         |HMT|HOVT|HST|IBST|ICT|IDT|IRDT|IRKT|IRST|IST|IST|IST|JST|KGT|KOST|KRAT|KST|LHST\n         |LHST|LINT|MAGT|MART|MAWT|MDT|MET|MEST|MHT|MIST|MMT|MSK|MST|MST|MST|MUT|MVT|MYT|NCT\n         |NDT|NFT|NPT|NST|NT|NUT|NZDT|NZST|OMST|ORAT|PDT|PETT|PGT|PHOT|PKT|PMDT|PMST|PONT\n         |PST|PST|PYST|PYT|RET|ROTT|SAKT|SAMT|SAST|SBT|SCT|SGT|SLST|SRET|SRT|SST|SST|SYOT\n         |TAHT|THA|TFT|TJT|TKT|TLT|TMT|TOT|TVT|ULAT|USZ1|UYST|UYT|UZT|VET|VLAT|VOLT|VOST\n         |VUT|WAKT|WAST|WAT|WEDT|WEST|WET|WST|YAKT)\\b   )\n         #Now enable the combo. Note ideally we would say \"use one of each\" e.g., =/10:234210\n   ){1,3}\n\n\n\n#Lonely HOURS: List of Military times <Here we have enough info to allow no \":\".\n   |( (?:\n      #Boundary Lookaround\n      (?<=[ ]|^|[^\\d\\.:\\r\\n$\u00a3-])\n      #Must open with a military time, no \"445\" must be \"0445\"\n      (?:1[0-9]|2[0-4]|0[0-9])\n      (?:[ ]?[0-5][0-9][ ]?)\n      #or and\n      (?:[ ]?    (?:or|[,/-]|to|and)  [ ]?)\n      #2-4 military times, including the closing one\n      ){1,3}\n      #Must also end with a military time\n      (?:1[0-9]|2[0-4]|0[0-9])\n      (?:[ ]?[0-5][0-9][ ]?)\n   )\n\n#Post rationalise the boundary criteria (?:\\b|$|,\\b)", "permalinkFragment": "gA5lZ2", "isFavorite": false, "isStarred": false}, {"title": "a", "description": "", "dateCreated": "2016-06-23T20:19:58.000Z", "dateModified": "2016-06-23T20:19:58.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gmix", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "#### NEGATIONS ####\n\n#Busy \u2202\n\\b(\n      #wrapper\n      (?:(?:from|is|i|am|at|on|it|do|to|for|a|make|the\n                    |that|day|time|month|exactly\n                    |call|meeting|lunch|breakfast|brunch)[ ])*\n      (?:\n         #negative words\n         (?:busy|can'?t|can[ ]?n?ot|unavailable|except)\n         #negated positive words\n         |(?:not|\u2206)[ ]   (?:be|\u2206)?[ ]?   (?:available|free|around|do|able)\n      )\n      #wrapper\n      [ ]?(?:(?:from|is|i|am|at|on|it|do|to|for|a|make|the\n                    |that|day|time|month|exactly\n                    |call|meeting|lunch|breakfast|brunch)[ ])*\n         #wrapper gets one free word\n         (?:[ ]?   (?:\\S+)   [ ]?)?\n            #Repeat wrapper so free word can be anywhere in continuation\n            [ ]?(?:(?:from|is|i|am|at|on|it|do|to|for|a|make|the\n                          |that|day|time|month|exactly\n                          |call|meeting|lunch|breakfast|brunch)[ ])*\n   [ ]?(\u2202|then|at[ ]that[ ]time)\n|\n#\u2202 Busy\n   #reverse the above after everything else\n\u2206\n\n#am doing|at X at|on \u2202\n|  ( (   (\\b(?:am|are|will[ ]be)\\b[ ])\n         (at|on|doing|\\S+ing|OOO|out[ ]of[ ]office)[ ]\n         #\"Have a\" is a special case. Can't have \"a\" in the second group.\n#      |  (?:have|has)[ ](?:an?)[ ]\n         #\"Have a\" also needs a negative lookahead for various false positives\n#         (?! .* (?:free|open|clean?r?|fresh|blank|vacant|bare|naked) )\n         #8 Free words, no \\s\\r\\n or \".!?\"\n     )   (?:[^.\u2022 !?\\r\\n]+[ ]){0,8}\n         #may need to come back to the below, ?'d out for now\n         (?:at|on)?\n   )\n   \n   (\u2202|then|at[ ]that[ ]time)\n\n\n#REVERSE EXCEPT: \"I am busy Tomorrow Except for 3-5pm\"\n\n#\"I have a 3pm\"\n\n)\n\n\n\n#busy \u2202 (and also \u2202) - NO ALTERNATION\n[ ]? (?:(?:(?:and|maybe|also|aswell|as| [\\.,?!:;] ) [ ])* (\u2202))?\n\n\n\n#SAVIOUR STRINGS: Noone says \"we can do X\" after valid dates.They might: \"We can also do X\"\n|\n   #\"a\" can't be the first word\n   (?!a)\n   #match continous strings made up of 2 groups of words\n   ((?:(?:we|could|how|i|a|is|it|am|be|do|can|you|would)[ ])+   )\n   ((?:(?:it|on|at|to|do|from\n            |have|can|able|make|about|free|exactly|say|call|take|possible|meet)[ ])+   )\n   (\u2202)", "permalinkFragment": "uX7kX0", "isFavorite": false, "isStarred": false}, {"title": "Verify name with @{name}", "description": "Check whether string consists of @{name}. Work only for the beginning of the string.", "dateCreated": "2016-06-24T06:54:46.000Z", "dateModified": "2016-06-24T06:54:46.000Z", "author": "bologer", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^@[a-zA-Z_.?]{1,},", "permalinkFragment": "cM6wW3", "isFavorite": false, "isStarred": false}, {"title": "multiple upstream time", "description": "", "dateCreated": "2016-06-24T11:33:39.000Z", "dateModified": "2016-06-24T11:33:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[^ ]*, )*?(?<client_ip>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\] \"(?<method>\\S+)(?: +(?<uri>[^\\\"]*?)(?: +\\S*)?)?\" \"(?<body>.*?)\" (?<code>[^ ]*) (?<size>[^ ]*)(?: \"(?<referer>[^\\\"]*)\" \"(?<agent>[^\\\"]*)\")? (?<request_time>[^ ]*) (?<upstream_response_time>.*)$", "permalinkFragment": "xZ0nF4", "isFavorite": false, "isStarred": false}, {"title": "smiley", "description": "", "dateCreated": "2016-06-24T11:43:09.000Z", "dateModified": "2016-06-24T11:43:09.000Z", "author": "FallenShard", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([:;>8=]+[\\ *\\-\\'`]*[)}\\]D]+)|([({\\[D]+[\\ *\\-\\'`]*[:;>8=]+)", "permalinkFragment": "gB3kC3", "isFavorite": false, "isStarred": false}, {"title": "ADCE Descomposici\u00f3n", "description": "", "dateCreated": "2016-06-24T13:24:33.000Z", "dateModified": "2016-06-24T13:24:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(U)(AA|AB|BA|BB|CC|CD|EA|FA|GA|HA|IA|JA|AE|CE|GE|FB|JB|GB|HL|IL|JL)(E|U|W)(E)(DN|AZ)(\\d{2,2})(\\d)(\\d{8,8})$", "permalinkFragment": "oF2rT0", "isFavorite": false, "isStarred": false}, {"title": "ADCE - Validaci\u00f3n", "description": "", "dateCreated": "2016-06-24T13:26:42.000Z", "dateModified": "2016-06-24T13:26:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^U(?:AA|AB|BA|BB|CC|CD|EA|FA|GA|HA|IA|JA|AE|CE|GE|FB|JB|GB|HL|IL|JL)[E|U|W]E(?:DN|AZ)\\d{2,2}\\d\\d{8,8}$", "permalinkFragment": "zY2vD3", "isFavorite": false, "isStarred": false}, {"title": "HTML tag search", "description": "finds the common html tags", "dateCreated": "2016-06-24T20:46:03.000Z", "dateModified": "2016-06-24T20:46:03.000Z", "author": "Henri Mulder", "flavor": "python", "delimiter": "\"", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<(/?[BIT)(html)(body)(title)(head)]+)>", "permalinkFragment": "lS8xJ6", "isFavorite": false, "isStarred": false}, {"title": "match directory paths with names", "description": "crazy rhumbl regex for build", "dateCreated": "2016-06-24T22:47:53.000Z", "dateModified": "2016-06-24T22:47:53.000Z", "author": "luwenh", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "['\"]((?:[.]+|app)[^\"]*user\\.service)['\"]|\"([.]+[^\"]*canvas-pan-zoom\\.service)\"", "permalinkFragment": "kU0fM5", "isFavorite": false, "isStarred": false}, {"title": "re", "description": "", "dateCreated": "2016-06-26T18:53:20.000Z", "dateModified": "2016-06-26T18:53:20.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^x-y", "permalinkFragment": "yJ2gS0", "isFavorite": false, "isStarred": false}, {"title": "Save", "description": "", "dateCreated": "2016-06-27T05:23:39.000Z", "dateModified": "2016-06-27T05:23:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<td.*(File)(<[^>]*>)*:(<[^>]*>)*([\\w])+\\.(jpg).*td>", "permalinkFragment": "vF6dE5", "isFavorite": false, "isStarred": false}, {"title": "xref phone number", "description": "", "dateCreated": "2016-06-27T07:24:13.000Z", "dateModified": "2016-06-27T07:24:13.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[+]?([-\\d]{8,15})\\d$", "permalinkFragment": "hK0tQ7", "isFavorite": false, "isStarred": false}, {"title": "Full URL", "description": "  IPs\n+ Domains\n+ Ports\n+ Directories\n+ Files\n\n= Full Support", "dateCreated": "2016-06-27T07:49:53.000Z", "dateModified": "2016-06-27T07:49:53.000Z", "author": "timmyRS", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((http|https)(\\:\\/\\/)((([a-zA-Z_\\-0-9]{1,2000})(\\.)([a-zA-Z_\\-0-9]{1,2000})(\\.)([a-zA-Z_\\-0-9]{1,16}))|(([a-zA-Z_\\-0-9]{1,2000})(\\.)([a-zA-Z_\\-0-9]{1,16})))((([\\:\\/a-zA-Z\\ _\\-%0-9\\.\\?\\=]{1,3000})|(\\/)|())))", "permalinkFragment": "qS5bW4", "isFavorite": false, "isStarred": false}, {"title": "No Double space and special character, no leading space ISO-8859-1", "description": "Matches everything exept a String with one of the following:\nLeading or ending space\nmultiple spaces\ndouble special character", "dateCreated": "2016-06-27T08:25:08.000Z", "dateModified": "2016-06-27T08:25:08.000Z", "author": "Hunziger", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\p{Zs}])([^\\p{Zs}\\p{S}\\p{P}])*((\\p{Zs}|!|\"|#|\\$|%|&|'|\\(|\\)|\\*|\\+|,|\\-|\\.|\\/|:|;|<|=|>|\\?|@|\\[|\\\\|\\]|\\^|_|`|\\{|\\||\\}|~|\u00a1|\u00a2|\u00a3|\u00a4|\u00a5|\u00a6|\u00a7|\u00a8|\u00a9|\u00ab|\u00ac|\u00ae|\u00af|\u00b0|\u00b1|\u00b2|\u00b3|\u00b4|\u00b6|\u00b7|\u00b8|\u00b9|\u00bb|\u00bc|\u00bd|\u00be|\u00bf|\u00d7|\u00f7)(?!\\4)([^\\p{Zs}\\p{S}\\p{P}])*)*", "permalinkFragment": "gU0fT3", "isFavorite": false, "isStarred": false}, {"title": "Your BANK a/c xxxx 4114 will be debited for Rs 97856.5 towards HDFCBan", "description": "", "dateCreated": "2016-06-27T13:30:42.000Z", "dateModified": "2016-06-27T13:30:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Your BANK a\\/c xxxx (\\d{4}) will be debited for Rs ([\\d|,]+\\.*\\d+) towards HDFCBank CreditCard payment on (\\d{2}\\/\\w{3}\\/\\d{4}) .", "permalinkFragment": "lR8uF2", "isFavorite": false, "isStarred": false}, {"title": "Email", "description": "Refunds email validation", "dateCreated": "2016-06-27T13:50:44.000Z", "dateModified": "2016-06-27T13:50:44.000Z", "author": "Greg Kedge", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$", "permalinkFragment": "nW0tH0", "isFavorite": false, "isStarred": false}, {"title": "International Phone Codes", "description": "", "dateCreated": "2016-06-27T16:30:04.000Z", "dateModified": "2016-06-27T16:30:04.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\+(44|1|91|61))[0-9]+", "permalinkFragment": "wK9cU2", "isFavorite": false, "isStarred": false}, {"title": "Lynda Anchors", "description": "", "dateCreated": "2016-06-27T19:24:40.000Z", "dateModified": "2016-06-27T19:24:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\<a.*href=\"([^\"]+)\".*class=\"item-name.*\".*>\\s+(.*)\\s+\\<\\/a\\>", "permalinkFragment": "qG0eR2", "isFavorite": false, "isStarred": false}, {"title": "dd", "description": "", "dateCreated": "2016-06-27T19:47:36.000Z", "dateModified": "2016-06-27T19:47:36.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[1-9](?:[\\d]{0,5}))(?:,[\\d]{1,2})?$", "permalinkFragment": "sL8jO5", "isFavorite": false, "isStarred": false}, {"title": "SIEM Extended Attribute Regex", "description": "", "dateCreated": "2016-06-27T20:45:11.000Z", "dateModified": "2016-06-27T20:45:11.000Z", "author": "Stephen Kim", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.*?(?=\\=)=\\s\"(?P<Severity>.*?(?=\\\"))\".*?(?=Gauge32).*?(?=:):\\s(?P<EventCount>\\d+).*?(?=AlarmOriginEntity).*?(?=\\:):\\s+\"(?P<OriginEntity>.*?(?=\\\"))\".*?(?=\\\")\"(?P<OriginHost>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedHost>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedApp>.*?(?=\\\"))\".*?(?=\\\")\"(?P<VendorMessageID>.*?(?=\\\"))\".*?(?=\\\")\"(?P<MPERuleName>.*?(?=\\\"))\".*?(?=\\\")\"(?P<EventDirection>.*?(?=\\\"))\".*?(?=\\\")\"(?P<OriginZone>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedZone>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedEntity>.*?(?=\\\"))\".*?(?=\\\")\"(?P<OriginLocation>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedLocation>.*?(?=\\\"))\".*?(?=\\\")\"(?P<OriginNetwork>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedNetwork>.*?(?=\\\"))\".*?(?=\\\")\"(?P<OriginPort>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedPort>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmProtocol>.*?(?=\\\"))\".*?(?=\\\")\"(?P<OriginUser>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedUser>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmObject>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmSender>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmRecipient>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmSubject>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmGroup>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmDomain>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmSession>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmProcessName>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmURL>.*?(?=\\\"))\".*?(?=\\\")\"(?P<BytesIn>.*?(?=\\\"))\".*?(?=\\\")\"(?P<BytesOut>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ItemsIn>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ItemsOut>.*?(?=\\\"))\".*?(?=\\\")\"(?P<Duration>.*?(?=\\\"))\".*?(?=\\\")\"(?P<Amount>.*?(?=\\\"))\".*?(?=\\\")\"(?P<Quantity>.*?(?=\\\"))\".*?(?=\\\")\"(?P<Rate>.*?(?=\\\"))\".*?(?=\\\")\"(?P<Size>.*?(?=\\\"))\".*?(?=v\\=)(?P<Message>.*?(?=\\<\\/aie\\>)).*?(?=\\=)=\\s\"(?P<KBWebRefernce>.*?(?=\\\"))\".*?(?=\\\")\"(?P<OriginMACAddress>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedMACAddress>.*?(?=\\\"))\".*?(?=\\\")\"(?P<OriginNATIPAddress>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedNATIPAddress>.*?(?=\\\"))\".*?(?=\\\")\"(?P<OriginInterface>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedInterface>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmPID>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmVersion>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmCommand>.*?(?=\\\"))\".*?(?=\\\")\"(?P<AlarmObjectName>.*?(?=\\\"))\".*?(?=\\\")\"(?P<OriginNATPORT>.*?(?=\\\"))\".*?(?=\\\")\"(?P<ImpactedNATPort>.*?(?=\\\"))\"", "permalinkFragment": "nW9nC2", "isFavorite": false, "isStarred": false}, {"title": "Modernest of Emails", "description": "  New gTLDs (2-14 chars)\n+ Allows sentence endings after email\n+ Accepts every char (except space)\n\n= Full Email Support\n\nNote: 14 chars because of \"cashbackbonus\" domains that are coming.", "dateCreated": "2016-06-28T00:20:40.000Z", "dateModified": "2016-06-28T00:20:40.000Z", "author": "timmyRS", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\ ]+[\\@]{1}[^\\ ]+[\\.]{1}[a-zA-Z]{2,14})", "permalinkFragment": "aK3eK9", "isFavorite": false, "isStarred": false}, {"title": "find latitude longitude ", "description": "find & get  long lat in a string ", "dateCreated": "2016-06-28T02:12:59.000Z", "dateModified": "2016-06-28T02:12:59.000Z", "author": "Michael CAILLET http://mica.bike", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([-+]?\\d{1,2}[.]\\d{3,6})\\s?,?([-+]?\\d{1,2}[.]\\d{3,6})", "permalinkFragment": "zT7fT6", "isFavorite": false, "isStarred": false}, {"title": "dd", "description": "", "dateCreated": "2016-06-28T07:52:11.000Z", "dateModified": "2016-06-28T07:52:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "cur rent", "permalinkFragment": "mI4nT2", "isFavorite": false, "isStarred": false}, {"title": "Google Category Extraction", "description": "Extract first term in url path for google category extraction", "dateCreated": "2016-06-28T13:37:10.000Z", "dateModified": "2016-06-28T13:37:10.000Z", "author": "SCFarmer", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\/]+)", "permalinkFragment": "cL9fN2", "isFavorite": false, "isStarred": false}, {"title": "Simbols", "description": "remove dublicate punctuation marks and keep punctuation if stay near a word( abc, , ,) last , ,", "dateCreated": "2016-06-28T14:10:09.000Z", "dateModified": "2016-06-28T14:10:09.000Z", "author": "Suciu Razvan", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<![a-z])([\\,\\.\\?]+)?(\\s[\\,\\.\\?]+)?", "permalinkFragment": "kH4sP1", "isFavorite": false, "isStarred": false}, {"title": "the best regex", "description": "", "dateCreated": "2016-06-28T18:00:49.000Z", "dateModified": "2016-06-28T18:00:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?:http(?:s)?:\\/\\/)?\\S+\\.\\S+\\.\\S+) | ((?:[0-9]{1,3}\\.){3}[0-9]{1,3})", "permalinkFragment": "yM5xU6", "isFavorite": false, "isStarred": false}, {"title": "MM/DD", "description": "", "dateCreated": "2016-06-29T01:53:38.000Z", "dateModified": "2016-06-29T01:53:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(1[0-2]|[1-9])[\\s\\\\\\/\\.-](3[0-1]|[1-2][0-9]|[1-9])", "permalinkFragment": "wF8zY8", "isFavorite": false, "isStarred": false}, {"title": "76.7877", "description": "", "dateCreated": "2016-06-29T04:32:39.000Z", "dateModified": "2016-06-29T04:32:39.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}$", "permalinkFragment": "oS8cX4", "isFavorite": false, "isStarred": false}, {"title": "Uppercase Lowercase Digit mandatory only", "description": "Match at least one upper case, lower case and digit between 1 and 20 length with no special characters", "dateCreated": "2016-06-29T08:14:30.000Z", "dateModified": "2016-06-29T08:14:30.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*[\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\[\\]\\{\\}\\`\\~\\|\\\\\\/\\?\\>\\<\\.\\,\\:\\;\\'\\\"]).{1,20}", "permalinkFragment": "qU4wA6", "isFavorite": false, "isStarred": false}, {"title": "Search for Array-Variables in PHP.", "description": "", "dateCreated": "2016-06-29T08:23:03.000Z", "dateModified": "2016-06-29T08:23:03.000Z", "author": "Bert Bredewold", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\$([\\w]+)\\[('|\")([^\\W]+)('|\")\\]", "permalinkFragment": "bX1sV8", "isFavorite": false, "isStarred": false}, {"title": "SS3 message", "description": "", "dateCreated": "2016-06-29T17:15:41.000Z", "dateModified": "2016-06-29T17:15:41.000Z", "author": "Abishek", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\$([0-9]+),{1}([0-9]+),{1}([0-9]+),{1}([0-9]+),{1}([0-9]+)$[\\r\\n]*)", "permalinkFragment": "tZ5zR6", "isFavorite": false, "isStarred": false}, {"title": "Removes formatting chars from string", "description": "Removes formatting chars from string like \\n, \\r, \\t and etc", "dateCreated": "2016-06-29T20:31:15.000Z", "dateModified": "2016-06-29T20:31:15.000Z", "author": "binary_fm", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\\\s+|\\\\.|&nbsp;", "permalinkFragment": "kN2uM1", "isFavorite": false, "isStarred": false}, {"title": "Match URLs", "description": "", "dateCreated": "2016-06-30T01:47:51.000Z", "dateModified": "2016-06-30T01:47:51.000Z", "author": "JOHN GRUBER", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?i)\\b((?:https?:\\/\\/|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?\u00ab\u00bb\u201c\u201d\u2018\u2019]))", "permalinkFragment": "jR4pK1", "isFavorite": false, "isStarred": false}, {"title": "Telefone Brasil", "description": "Telefone com DDD entre parenteces ou sem com e sem tra\u00e7o ou sem DDD", "dateCreated": "2016-06-30T02:17:43.000Z", "dateModified": "2016-06-30T02:17:43.000Z", "author": "Vinicius G", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\(|)([1-9]{3}|[1-9]{2})(\\)| {1})( {1}|)(((\\d{5}\\-\\d{4})|(\\d{5}\\d{4}))|((\\d{4}\\-\\d{4})|(\\d{4}\\d{4})))|\\d{5}(\\-|)\\d{4}|\\d{4}(\\-|)\\d{4}", "permalinkFragment": "nA9xG5", "isFavorite": false, "isStarred": false}, {"title": "Funktion Matcher", "description": "", "dateCreated": "2016-06-30T09:48:04.000Z", "dateModified": "2016-06-30T09:48:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<func>\\S*)\\((?#beginn Param)(.*[,\\)])(?#end Param)\\)", "permalinkFragment": "aP8oN9", "isFavorite": false, "isStarred": false}, {"title": "Password Validation 8-32 chars", "description": "", "dateCreated": "2016-06-30T10:30:32.000Z", "dateModified": "2016-06-30T10:30:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=^.{8,32}$)(?=.*\\d)(?=.*[!@#$%^&*]+)(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$", "permalinkFragment": "mJ2wE9", "isFavorite": false, "isStarred": false}, {"title": "PIAS LS OUTPUT", "description": "", "dateCreated": "2016-06-30T12:31:51.000Z", "dateModified": "2016-06-30T12:31:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gims", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:Location\\t)(.*?)(?:                        LONGITUDINAL STRENGTH CALCULATION)", "permalinkFragment": "wB8dX7", "isFavorite": false, "isStarred": false}, {"title": "Regex Validator", "description": "A regex to parse regexs", "dateCreated": "2016-06-30T12:48:51.000Z", "dateModified": "2016-06-30T12:48:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "s(.)(.*?.?(?<!\\\\)(?:\\\\\\\\)*)\\1(.*?.?(?<!\\\\)(?:\\\\\\\\)*)\\1([gimsxr]*?)$", "permalinkFragment": "lA6gL1", "isFavorite": false, "isStarred": false}, {"title": "Catdance", "description": "", "dateCreated": "2016-06-30T17:48:39.000Z", "dateModified": "2016-06-30T17:48:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/promotions\\/catdance-festival-[0-9]{4}\\/play", "permalinkFragment": "eP4jA3", "isFavorite": false, "isStarred": false}, {"title": "Check if string contains special chars", "description": "If string contains special chars no match. Blank space is safe. It will accept blank spaces.", "dateCreated": "2016-06-30T18:38:40.000Z", "dateModified": "2016-06-30T18:38:40.000Z", "author": "binary_fm", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9 ]*$", "permalinkFragment": "qR5kK3", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "", "dateCreated": "2016-06-30T19:13:37.000Z", "dateModified": "2016-06-30T19:13:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!^\\/\\/third_party).*demo", "permalinkFragment": "rF5aZ3", "isFavorite": false, "isStarred": false}, {"title": "RUBROS", "description": "", "dateCreated": "2016-06-30T20:57:47.000Z", "dateModified": "2016-06-30T20:57:47.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*)?_G_(.*)_TC_(.*)_TOTAL_Sum_(.*)", "permalinkFragment": "yB7pD6", "isFavorite": false, "isStarred": false}, {"title": "tempate location", "description": "", "dateCreated": "2016-07-01T06:35:41.000Z", "dateModified": "2016-07-01T06:35:41.000Z", "author": "Tadas", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\/([0-9]{6})((?!.*\\.php(?:[\\?#].*|$)).*)$", "permalinkFragment": "uX7tW8", "isFavorite": false, "isStarred": false}, {"title": "n+5", "description": "", "dateCreated": "2016-07-01T10:29:12.000Z", "dateModified": "2016-07-01T10:29:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "tut.+by\n", "permalinkFragment": "wI4hI1", "isFavorite": false, "isStarred": false}, {"title": "E-mail validation", "description": "", "dateCreated": "2016-07-01T11:22:03.000Z", "dateModified": "2016-07-01T11:22:03.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$", "permalinkFragment": "kB8wY6", "isFavorite": false, "isStarred": false}, {"title": "TestMode Build Zip Files", "description": "", "dateCreated": "2016-07-01T14:22:23.000Z", "dateModified": "2016-07-01T14:22:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\\\\\\\qdalrep02\\\\ClientReleases\\\\[a-zA-Z]*\\\\TestMode\\\\[a-zA-Z]*\\\\\\d*.\\d.\\d*\\\\_BuildHistory\\\\Build\\d*.\\d.\\d*.\\d*.\\d*\\\\\\*.zip", "permalinkFragment": "qK0hL0", "isFavorite": false, "isStarred": false}, {"title": "Get Month and Year from different date format", "description": "Get Month and Year from different date format", "dateCreated": "2016-07-01T19:00:05.000Z", "dateModified": "2016-07-01T19:00:05.000Z", "author": "ankit s", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^(\\d{1,2})\\/(\\d{4})(.*))|(^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})(.*))|(^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})(.*))", "permalinkFragment": "xZ6iC1", "isFavorite": false, "isStarred": false}, {"title": "123", "description": "", "dateCreated": "2016-07-01T20:55:20.000Z", "dateModified": "2016-07-01T20:55:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\S\\s]+?(<a.*?(href=\"(.*)\")>(.*)?<\\/a>).*", "permalinkFragment": "tB3yV5", "isFavorite": false, "isStarred": false}, {"title": "Remove blank lines", "description": "Removes all blank lines.\n\nPHP:\ntrim(preg_replace(\"/(^[\\r\\n]*|[\\r\\n]+)[\\s\\t]*[\\r\\n]+/\", \"\\n\", $string));\n\nYou have replace with a newline char to break non-blank lines. This also leaves a single trailing newline, easily removed with trim($string); if needed.", "dateCreated": "2016-07-01T23:43:52.000Z", "dateModified": "2016-07-01T23:43:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[\\r\\n]*|[\\r\\n]+)[\\s\\t]*[\\r\\n]+", "permalinkFragment": "kJ6bP0", "isFavorite": false, "isStarred": false}, {"title": "N\u00famero telefone celular brasileiro", "description": "Recebe os formatos:\n1: dd xxxxx-xxxx \n2: (dd) xxxxx-xxxx\n3: ddxxxxx-xxxx\n4: (dd)xxxxx-xxxx", "dateCreated": "2016-07-02T01:32:45.000Z", "dateModified": "2016-07-02T01:32:45.000Z", "author": "Cleverson", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\(?\\d{2}\\)?)\\s?(\\d{5})-(\\d{4})", "permalinkFragment": "hC7gT0", "isFavorite": false, "isStarred": false}, {"title": "C-style comments", "description": "Match C-style comments", "dateCreated": "2016-07-02T13:39:37.000Z", "dateModified": "2016-07-02T13:39:37.000Z", "author": "Mykola Orliuk", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\*([^*]*)(\\*+[^/*][^*]*)*\\*+", "permalinkFragment": "vP1qU8", "isFavorite": false, "isStarred": false}, {"title": "Extract title from icecast default json", "description": "", "dateCreated": "2016-07-02T14:15:20.000Z", "dateModified": "2016-07-02T14:15:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\"title\":\")[^\"]*", "permalinkFragment": "oX1sJ4", "isFavorite": false, "isStarred": false}, {"title": "amazon video filter", "description": "", "dateCreated": "2016-07-02T20:52:52.000Z", "dateModified": "2016-07-02T20:52:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "www.amazon.com.*atv.*", "permalinkFragment": "pI9nU3", "isFavorite": false, "isStarred": false}, {"title": "STM32 MCUs", "description": "Select STM32 MCU, Flash & RAM size", "dateCreated": "2016-07-03T00:19:09.000Z", "dateModified": "2016-07-03T00:19:09.000Z", "author": "Ivaylo Iltchev", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^STM32(?'family'F0|F1|F2|F3|F4|F7|L0|L1|L4|TS)\\d{2}((\\w\\w|)(-A|-X|)|);(?'flash'\\d{1,4});(?'ram'\\d{1,4})$", "permalinkFragment": "tP0iB4", "isFavorite": false, "isStarred": false}, {"title": "STM32 Check MCU", "description": "", "dateCreated": "2016-07-03T19:30:16.000Z", "dateModified": "2016-07-03T19:30:16.000Z", "author": "Ivaylo Iltchev", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "STM32(F[0-47]|L[014]|TS)\\d{2}(\\w{2}(\\-[A|X])?)?", "permalinkFragment": "uH4wJ8", "isFavorite": false, "isStarred": false}, {"title": "step1", "description": "", "dateCreated": "2016-07-03T21:47:00.000Z", "dateModified": "2016-07-03T21:47:00.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<delim>[^\\w\\n\"\\'])(?P<space> ?)(?P<quote>[\"\\'~]).*?(?P=quote)(?P=delim)", "permalinkFragment": "jM1aT5", "isFavorite": false, "isStarred": false}, {"title": "RSA Cellphone numbers Supporting 060 and 061", "description": "", "dateCreated": "2016-07-04T06:26:43.000Z", "dateModified": "2016-07-04T06:26:43.000Z", "author": "R Heydenrych", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^0[678][012347][0-9]{7})", "permalinkFragment": "wZ9hK2", "isFavorite": false, "isStarred": false}, {"title": "split string with phones", "description": "", "dateCreated": "2016-07-04T12:51:25.000Z", "dateModified": "2016-07-04T12:51:25.000Z", "author": "rocker", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\d(][\\s\\d()-]{5,14})(?:[\\s;,.]|$)", "permalinkFragment": "hN6lX1", "isFavorite": false, "isStarred": false}, {"title": "Perforce Helix Path", "description": "Breaks a Perforce Helix Path into depot, folder, filename.", "dateCreated": "2016-07-04T14:04:33.000Z", "dateModified": "2016-07-04T14:04:33.000Z", "author": "Jason Leonard", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\/\\/([^\\/]+)((?:\\/[^\\/]+)*)\\/([^\\/]+)$", "permalinkFragment": "wX1xO9", "isFavorite": false, "isStarred": false}, {"title": "ISO8601 patterns", "description": "", "dateCreated": "2016-07-04T14:36:13.000Z", "dateModified": "2016-07-04T14:36:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{4})(-)?(\\d{2})(-)?(\\d{2})(T)?(\\d{2})(\\:)?(\\d{2})(\\:)?(\\d{2})(\\+(\\d{2}:\\d{2})|\\.(\\d{3}Z)|Z)", "permalinkFragment": "mV5wF6", "isFavorite": false, "isStarred": false}, {"title": "GUEST CAPTURE DERTOUR", "description": "", "dateCreated": "2016-07-04T16:02:03.000Z", "dateModified": "2016-07-04T16:02:03.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\d]{1,2})\\s+([\\w]+)\\s+([\\d]{4})\\s+-\\s+([\\d]{1,2})\\s+([\\w]+)\\s+([\\d]{4})\\s+([\\d]{1,2})\\s+N[a,\u00e4]chte\\s+([.\\s\\S]+)\\s+DERTOUR", "permalinkFragment": "rS7dG9", "isFavorite": false, "isStarred": false}, {"title": "hitta rubrik p\u00e5 sidor enligt standarmall PDF SKF resultat", "description": "", "dateCreated": "2016-07-04T18:25:39.000Z", "dateModified": "2016-07-04T18:25:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Resultatlista\\n\\d\\d\\d\\d-\\d\\d-\\d\\d.*", "permalinkFragment": "gF1pN0", "isFavorite": false, "isStarred": false}, {"title": "kassasysteem", "description": "", "dateCreated": "2016-07-04T21:49:37.000Z", "dateModified": "2016-07-04T21:49:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\/(?:products|branche|industry)\\/?(.*)", "permalinkFragment": "vP1vU2", "isFavorite": false, "isStarred": false}, {"title": "change img src", "description": "", "dateCreated": "2016-07-05T09:03:16.000Z", "dateModified": "2016-07-05T09:03:16.000Z", "author": "Aditya kumar pandey", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<img.*src=)[\"']https:\\/\\/(.*)[\"']", "permalinkFragment": "bN7qT2", "isFavorite": false, "isStarred": false}, {"title": "anchor change href", "description": "", "dateCreated": "2016-07-05T09:03:53.000Z", "dateModified": "2016-07-05T09:03:53.000Z", "author": "Aditya kumar pandey", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".*<a\\shref=\"http:\\/\\/(.*)\">.*<\\/a>.*", "permalinkFragment": "lS2yR0", "isFavorite": false, "isStarred": false}, {"title": "img change src", "description": "", "dateCreated": "2016-07-05T09:04:23.000Z", "dateModified": "2016-07-05T09:04:23.000Z", "author": "aditya kumar pandey", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<img.*src=)[\"']https:\\/\\/(.*)[\"']", "permalinkFragment": "uK9tD5", "isFavorite": false, "isStarred": false}, {"title": "Phpunit coverage filter", "description": "", "dateCreated": "2016-07-05T10:07:20.000Z", "dateModified": "2016-07-05T10:07:20.000Z", "author": "Albert P", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\s*Lines:\\s+(\\d+.\\d+\\%)", "permalinkFragment": "uU8sM7", "isFavorite": false, "isStarred": false}, {"title": "French ID MRZ", "description": "", "dateCreated": "2016-07-05T13:38:34.000Z", "dateModified": "2016-07-05T13:38:34.000Z", "author": "Igor Ferreira", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<type>[A-Z]{1})(?<subtype>[A-Z]{1})(?<country>[A-Z]{3})(?<last_name>[A-Z<]{25})(?<department>[A-Z0-9<]{3})(?<office>[0-9<]{3})\\n(?<id_card>[A-Z0-9]{12})(?<id_check>[0-9]{1})(?<first_name>[A-Z<]{14})(?<birth_date>[0-9]{6})(?<birth_check>[0-9]{1})(?<gender>[MF]{1})(?<full_check>[0-9]{1})", "permalinkFragment": "yP9eA5", "isFavorite": false, "isStarred": false}, {"title": "addListener()", "description": "", "dateCreated": "2016-07-05T14:42:42.000Z", "dateModified": "2016-07-05T14:42:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "sg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([.\\w]+\\(?\\)?)\\.addListener\\((Events.\\w+), [^\\{]*?\\{.*?(\\s+)public void handleEvent\\(.*? (\\w+)\\)", "permalinkFragment": "uD8qC6", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "test", "dateCreated": "2016-07-05T15:54:20.000Z", "dateModified": "2016-07-05T15:54:20.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.*(?=.{8})(?=.*\\d)(?=.*[A-Z]).*$", "permalinkFragment": "zY6kG7", "isFavorite": false, "isStarred": false}, {"title": "comics groupings", "description": "", "dateCreated": "2016-07-05T16:08:48.000Z", "dateModified": "2016-07-05T16:08:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<title>(?P<series>.+)\\s(?P<series_index>\\d{1,3})(\\s|)(\\((?P<published>\\d{4}|)\\)|)(\\s|)(\\([dD]igital\\)|))\\s\\-\\s(?P<publisher>(?P<author>Marvel))", "permalinkFragment": "zA9vV4", "isFavorite": false, "isStarred": false}, {"title": "ACA IRS First Name", "description": "First Name required by IRS for ACA Transmission", "dateCreated": "2016-07-05T18:50:50.000Z", "dateModified": "2016-07-05T18:50:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([A\u2010Za\u2010z\\\u2010] ?)*[A\u2010Za\u2010z\\\u2010]", "permalinkFragment": "aO6oY6", "isFavorite": false, "isStarred": false}, {"title": "Currency matcher with curreny symbol", "description": "matches currency with or without currency symbol", "dateCreated": "2016-07-05T19:24:13.000Z", "dateModified": "2016-07-05T19:24:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s?[^0-9]?\\s?[0-9,]+([\\\\.]{1})?[0-9]+\\s?", "permalinkFragment": "oQ9xC5", "isFavorite": false, "isStarred": false}, {"title": "Instagram mentions", "description": "Instagram mention with management of dot including at the end", "dateCreated": "2016-07-06T03:58:54.000Z", "dateModified": "2016-07-06T03:58:54.000Z", "author": "page_a", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\w+)([.](?!$|[^\\w]))?", "permalinkFragment": "tS7wJ8", "isFavorite": false, "isStarred": false}, {"title": "Instagram mentions", "description": "Management of dots including at the end of string.", "dateCreated": "2016-07-06T04:01:02.000Z", "dateModified": "2016-07-06T04:01:02.000Z", "author": "page_a", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((\\w+)([.](?!$|[^\\w]))?)", "permalinkFragment": "cK5zA6", "isFavorite": false, "isStarred": false}, {"title": "Youtube Link ID Parser", "description": "Parses the ID out of a youtube link", "dateCreated": "2016-07-06T12:00:47.000Z", "dateModified": "2016-07-06T12:00:47.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})", "permalinkFragment": "bU3jH4", "isFavorite": false, "isStarred": false}, {"title": "Email validator Pattern with extract groups", "description": "Email validator that adheres directly to the specification for email address naming. It allows for everything from ipaddress and country-code domains, to very rare characters in the username.", "dateCreated": "2016-07-06T14:48:22.000Z", "dateModified": "2016-07-06T14:48:22.000Z", "author": "Andy Smith", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$", "permalinkFragment": "oZ3uQ3", "isFavorite": false, "isStarred": false}, {"title": "[1]EMAIL VALIDATOR PATTERN WITH EXTRACT GROUPS", "description": "Email validator that adheres directly to the specification for email address naming. It allows for everything from ipaddress and country-code domains, to very rare characters in the username.", "dateCreated": "2016-07-06T14:54:23.000Z", "dateModified": "2016-07-06T14:54:23.000Z", "author": "Andy Smith", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$", "permalinkFragment": "fO5rK5", "isFavorite": false, "isStarred": false}, {"title": "[1]EXTRACT URL GET PARAMETERS", "description": "Returns key/value pair of a url. Also works with google fonts which has additional information", "dateCreated": "2016-07-06T14:56:29.000Z", "dateModified": "2016-07-06T14:56:29.000Z", "author": "\u2014 Anonymous", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!\\/\\\\w]*))?)", "permalinkFragment": "jR0aO7", "isFavorite": false, "isStarred": false}, {"title": "[1]EXTRACT URL GET API PARAMETERS ", "description": "Returns key/value pair of a url. Also works with google fonts which has additional information", "dateCreated": "2016-07-06T14:58:24.000Z", "dateModified": "2016-07-06T14:58:24.000Z", "author": "Anonymous", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:\\?|\\&)(?<key>[\\w]+)=(?<value>[\\w+,.-]+)(?:\\:?)(?<option>[\\w,]*)", "permalinkFragment": "eV2hX7", "isFavorite": false, "isStarred": false}, {"title": "dt", "description": "", "dateCreated": "2016-07-06T19:20:46.000Z", "dateModified": "2016-07-06T19:20:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\\\W|^)(?:within|in)\\s*([1-9][0-9]{0,5})\\s*(m?|min?|mins?|minutes?|h?|hours?|d?|days?)(?=\\W|$)", "permalinkFragment": "pQ5dO8", "isFavorite": false, "isStarred": false}, {"title": "Find Empty Classes", "description": "", "dateCreated": "2016-07-06T22:03:34.000Z", "dateModified": "2016-07-06T22:03:34.000Z", "author": "bees", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\\"(\\s+)\\\"", "permalinkFragment": "eX9lD6", "isFavorite": false, "isStarred": false}, {"title": "Remove Empty Lines", "description": "", "dateCreated": "2016-07-06T22:06:45.000Z", "dateModified": "2016-07-06T22:06:45.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[\\t ]*(?:\\r?\\n|\\r))+", "permalinkFragment": "hL2gQ2", "isFavorite": false, "isStarred": false}, {"title": "SubRE", "description": "", "dateCreated": "2016-07-07T00:22:56.000Z", "dateModified": "2016-07-07T00:22:56.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b(\\d{1,2})(?!\\d|bit|\uae30)", "permalinkFragment": "kQ9pY9", "isFavorite": false, "isStarred": false}, {"title": "Parse C++ printf format string", "description": "Get standard parts of C++ format modifiers", "dateCreated": "2016-07-07T08:17:25.000Z", "dateModified": "2016-07-07T08:17:25.000Z", "author": "Zak", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "%(?<flags>[-+#0])?(?<width>\\d+|\\*)?(?:\\.(?<precision>\\d+|\\*))?(?<length>[hljztL]|hh|ll)?(?<specifier>[diuoxXfFeEgGaAcspn])", "permalinkFragment": "rV5bO9", "isFavorite": false, "isStarred": false}, {"title": "catch TXT record DNS", "description": "", "dateCreated": "2016-07-07T08:48:21.000Z", "dateModified": "2016-07-07T08:48:21.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\"[^\"]+\"", "permalinkFragment": "uE9tD0", "isFavorite": false, "isStarred": false}, {"title": "Single percent symbols, that NOT corresponds to C++ printf format", "description": "", "dateCreated": "2016-07-07T08:50:49.000Z", "dateModified": "2016-07-07T08:50:49.000Z", "author": "Zak", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:[^%]|%%)+(%)(?!%|(?<flags>[-+#0])?(?<width>\\d+|\\*)?(?:\\.(?<precision>\\d+|\\*))?(?:(?<specifier>[diuoxXfFeEgGaAcspn]))|(?<length>[hljztL]|hh|ll)(?P=specifier))", "permalinkFragment": "gF2dM2", "isFavorite": false, "isStarred": false}, {"title": "Paswword with min a upper case, a lower case, a digit without accent", "description": "Paswword with min a upper case, a lower case, a digit without accent and special case (.@-_)", "dateCreated": "2016-07-07T09:32:20.000Z", "dateModified": "2016-07-07T09:32:20.000Z", "author": "JY", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.+\\d)(?=.+[a-z])(?=.+[A-Z])(?=.+[_\\.@\\-])[0-9a-zA-Z_\\.@\\-]{6,12}$", "permalinkFragment": "hD5nW5", "isFavorite": false, "isStarred": false}, {"title": "comma separated emails #1", "description": "", "dateCreated": "2016-07-07T14:00:11.000Z", "dateModified": "2016-07-07T14:00:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[\\-_A-Z0-9\\,\\.\\@]*$", "permalinkFragment": "uK5bL2", "isFavorite": false, "isStarred": false}, {"title": "DNI - NIE", "description": "Detecta si el formato introducido es un DNI o NIE correcto. No comprueba si la letra es correcta, solo si el formato es correcto.", "dateCreated": "2016-07-07T14:59:28.000Z", "dateModified": "2016-07-07T14:59:28.000Z", "author": "Krato", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[XYZ]?([0-9]{7,8})([A-Z])$", "permalinkFragment": "qR0tQ9", "isFavorite": false, "isStarred": false}, {"title": "Only Multilingual and spaces", "description": "", "dateCreated": "2016-07-07T15:13:08.000Z", "dateModified": "2016-07-07T15:13:08.000Z", "author": "Krato", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-z_\u00c0\u00c1\u00c2\u00c3\u00c4\u00c5\u00c6\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d0\u00d1\u00d2\u00d3\u00d4\u00d5\u00d6\u00d8\u00d9\u00da\u00db\u00dc\u00dd\u00de\u00df\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u00ec\u00ed\u00ee\u00ef\u00f0\u00f1\u00f2\u00f3\u00f4\u00f5\u00f6\u00f9\u00fa\u00fb\u00fc\u00fd\u00f8\u00fe\u00ff\u00d0d\u0152\\s])+$", "permalinkFragment": "tL6gQ6", "isFavorite": false, "isStarred": false}, {"title": "nginx_stuff_adamols", "description": "", "dateCreated": "2016-07-07T15:20:12.000Z", "dateModified": "2016-07-07T15:20:12.000Z", "author": "talmobi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^\\/[a-zA-Z-]+[^\\/^?^-^=^\\.])$", "permalinkFragment": "kA5hR6", "isFavorite": false, "isStarred": false}, {"title": "burberry 1", "description": "", "dateCreated": "2016-07-07T15:35:13.000Z", "dateModified": "2016-07-07T15:35:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(Adults_Classic\\?)(.*)&(?:\\$initials=www)&(.*)&(\\$44h)", "permalinkFragment": "wG0bV6", "isFavorite": false, "isStarred": false}, {"title": "Ad Size List", "description": "separated by commas and/or spaces", "dateCreated": "2016-07-07T15:41:40.000Z", "dateModified": "2016-07-07T15:41:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?i)((\\d+)(x)(\\d+)(\\s*)(,*)(\\s*))*", "permalinkFragment": "rC2wA3", "isFavorite": false, "isStarred": false}, {"title": "nginx jenkins routing fix", "description": "jenkins url rewrites form paths ending without a '/' character removed the port part of the url - this fixed that.\n\nalso paths with an uppercase letter are required to NOT have '/' at the end so those cases are ignored\n\n", "dateCreated": "2016-07-07T15:42:55.000Z", "dateModified": "2016-07-07T15:42:55.000Z", "author": "talmobi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\/[a-z-_\\d\\/]+[^\\/^?^-^=^\\.])$", "permalinkFragment": "mP4xY8", "isFavorite": false, "isStarred": false}, {"title": "Match exact only in group", "description": "", "dateCreated": "2016-07-07T18:44:32.000Z", "dateModified": "2016-07-07T18:44:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(zip|state)$", "permalinkFragment": "wX1sB4", "isFavorite": false, "isStarred": false}, {"title": "perfect match", "description": "", "dateCreated": "2016-07-07T19:28:37.000Z", "dateModified": "2016-07-07T19:28:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^testpass$", "permalinkFragment": "rO0yE6", "isFavorite": false, "isStarred": false}, {"title": "CSS Selector", "description": "", "dateCreated": "2016-07-07T23:04:14.000Z", "dateModified": "2016-07-07T23:04:14.000Z", "author": "Hans Otto Wirtz", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=(?:[A-Za-z\\.#\\*]))((?<=(?:[\\s])|(?<=^)))[a-z-\\[\\]:{1,2}#\\.\\*]+(\\s+)?{", "permalinkFragment": "gD1zN8", "isFavorite": false, "isStarred": false}, {"title": ".NET Json DateTime", "description": ".NET Json serializer DateTime pattern.", "dateCreated": "2016-07-08T01:04:36.000Z", "dateModified": "2016-07-08T01:04:36.000Z", "author": "Joma Espinoza Bone", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/Date\\((\\-?\\d*?)([\\+\\-]\\d*)?\\)\\/", "permalinkFragment": "cU8dR6", "isFavorite": false, "isStarred": false}, {"title": "Swedish PIN ", "description": "A simple regex for matching the format of swedish personal identifier numbers. \n\nThey can be in the format of:\nyymmdd-nnnn\nyymmdd+nnnn\nyyyymmdd-nnnn\nyyyymmdd+nnnn\n\nThis does not check ", "dateCreated": "2016-07-08T09:07:14.000Z", "dateModified": "2016-07-08T09:07:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{6}(\\d{2})?[-+]\\d{4}$", "permalinkFragment": "cD6yB3", "isFavorite": false, "isStarred": false}, {"title": "C\u00f3digo Postal", "description": "C\u00f3digo Postal Espa\u00f1ol en PHP", "dateCreated": "2016-07-08T10:18:38.000Z", "dateModified": "2016-07-08T10:18:38.000Z", "author": "Krato", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(0[1-9]|5[0-2]|[0-4][0-9])[0-9]{3}", "permalinkFragment": "kH6hW6", "isFavorite": false, "isStarred": false}, {"title": "Tel\u00e9fono Espa\u00f1ol - Spanish Phone", "description": "Con posibilidad de poner el c\u00f3digo de pa\u00eds antes. Valida n\u00fameros de 9 cifras que empiecen con 9,6 o 7.", "dateCreated": "2016-07-08T10:28:30.000Z", "dateModified": "2016-07-08T10:28:30.000Z", "author": "Krato", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([+]?\\d{1,2}[-\\s]?|)[9|6|7][0-9]{8}$", "permalinkFragment": "vO9bU2", "isFavorite": false, "isStarred": false}, {"title": "Full human names", "description": "Case sensitive full human names including `Latin-1 Supplement` characters.", "dateCreated": "2016-07-08T12:19:17.000Z", "dateModified": "2016-07-08T12:19:17.000Z", "author": "Almino Melo", "flavor": "javascript", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE])([a-z\\u00DF-\\u00F6\\u00F8-\\u00FF '&-]+) ([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00DE\\u00DF-\\u00F6\\u00F8-\\u00FF '&-]+)$", "permalinkFragment": "eW1hN5", "isFavorite": false, "isStarred": false}, {"title": "V2", "description": "", "dateCreated": "2016-07-08T15:10:57.000Z", "dateModified": "2016-07-08T15:10:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(xml:|\\s)lang\\s*=\\s*\".*?\"", "permalinkFragment": "pI4zX2", "isFavorite": false, "isStarred": false}, {"title": "iso8610 extended", "description": "match ISO 8610 formatted dates", "dateCreated": "2016-07-08T16:34:15.000Z", "dateModified": "2016-07-08T16:34:15.000Z", "author": "marco benuzzi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((19\\d\\d|20\\d\\d)-(0\\d|1[0-2])-([0-2]\\d|30|31))T((\\d{2}):(\\d{2}):(\\d{2}))(?:\\.(\\d{3,6}))?(?:((?:([+-])(?:(0\\d|1[012]))):?([0-5]\\d))|Z?)", "permalinkFragment": "cA8qX8", "isFavorite": false, "isStarred": false}, {"title": "ng2interpolation to handlebars", "description": "", "dateCreated": "2016-07-08T16:39:54.000Z", "dateModified": "2016-07-08T16:39:54.000Z", "author": "jskrzypek", "flavor": "pcre", "delimiter": "/", "flags": "x", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?(DEFINE)(?<namepart>\\w+))(?(DEFINE)(?<name>(?&namepart)(\\.(?&namepart))*))(?(DEFINE)(?<helper>(?<hexpr>(?&sexpr))\\|(?<hname>(?&namepart))))(?(DEFINE)(?<sexpr>(?&name)|\\((?&expr)\\)))(?(DEFINE)(?<expr>((?&or)|(?&helper))))(?(DEFINE)(?<or>(?<or1>(?&name))\\|\\|(?<or2>(?&expr))?))(?&or)", "permalinkFragment": "cQ6wW5", "isFavorite": false, "isStarred": false}, {"title": "Find location of Open Search Description XML file", "description": "Find the location (HREF value) of the Open Search Description link tag.", "dateCreated": "2016-07-08T21:34:43.000Z", "dateModified": "2016-07-08T21:34:43.000Z", "author": "Evander Consus", "flavor": "pcre", "delimiter": "/", "flags": "igmx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<link(?=[^<>]*?opensearch)(?:[^h]+|h(?!ref))*+href=[\"']?\\K([^<>'\"\\s]+(?:\\/(?!>)|\\b))(?=[^<>]*>)", "permalinkFragment": "yV8mQ6", "isFavorite": false, "isStarred": false}, {"title": "Find location of Open Search Description XML file", "description": "Find the location (HREF value) of the Open Search Description link tag.", "dateCreated": "2016-07-08T21:34:43.000Z", "dateModified": "2016-07-08T21:34:43.000Z", "author": "Evander Consus", "flavor": "pcre", "delimiter": "/", "flags": "igmx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<link(?=[^<>]*?opensearch)(?:[^h]+|h(?!ref))*+href=[\"']?\\K([^<>'\"\\s]+(?:\\/(?!>)|\\b))(?=[^<>]*>)", "permalinkFragment": "qP7jQ2", "isFavorite": false, "isStarred": false}, {"title": "Test match", "description": "xxxxx", "dateCreated": "2016-07-09T14:15:31.000Z", "dateModified": "2016-07-09T14:15:31.000Z", "author": "WeAthFolD", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "'ABCD':('[^`]*')", "permalinkFragment": "jR6aC3", "isFavorite": false, "isStarred": false}, {"title": "Remove user id from shortcode", "description": "", "dateCreated": "2016-07-09T21:05:05.000Z", "dateModified": "2016-07-09T21:05:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:\\[member=)([0-9]+)](?:.+?\\[\\/member])", "permalinkFragment": "eS8zB5", "isFavorite": false, "isStarred": false}, {"title": "GET formated URLs", "description": "", "dateCreated": "2016-07-10T19:49:24.000Z", "dateModified": "2016-07-10T19:49:24.000Z", "author": "rleonard", "flavor": "pcre", "delimiter": "/", "flags": "xmg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?(DEFINE)\n(?<WebAddress> (?&Protocol){0,}(?&Host)(?:\\:(?&Port)){0,1}(?&Path){0,1})(?=\\s|$)\n(?<Protocol> \\w{2,}\\:\\/\\/)\n(?<Host> (?&NameParts)(?&Suffix))\n(?<NameParts> (\\w{2,}\\.){1,})\n(?<Suffix> (\\w{2,}))\n(?<Port> (\\d{1,5}))\n(?<Path> (\\/\\S{1,}))\n)\n((?&WebAddress))", "permalinkFragment": "bB3dB3", "isFavorite": false, "isStarred": false}, {"title": "parser cron", "description": "* * * * * app.php\n59 23 31 12 5 app.php\n59 23 31 dec fri app.php\n1,2,3,5,20-25,30-35,59 23 31 12 * app.php\n*/15 */6 1,15,31 * 1-5 app.php", "dateCreated": "2016-07-10T22:31:46.000Z", "dateModified": "2016-07-10T22:31:46.000Z", "author": "Dmitry Mamontov", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\*(\\/\\d+)?|([0-5]?\\d)(-([0-5]?\\d)(\\/\\d+)?)?(,([0-5]?\\d)(-([0-5]?\\d)(\\/\\d+)?)?)*)\\s(\\*(\\/\\d+)?|([01]?\\d|2[0-3])(-([01]?\\d|2[0-3])(\\/\\d+)?)?(,([01]?\\d|2[0-3])(-([01]?\\d|2[0-3])(\\/\\d+)?)?)*)\\s(\\*(\\/\\d+)?|(0?[1-9]|[12]\\d|3[01])(-(0?[1-9]|[12]\\d|3[01])(\\/\\d+)?)?(,(0?[1-9]|[12]\\d|3[01])(-(0?[1-9]|[12]\\d|3[01])(\\/\\d+)?)?)*)\\s(\\*(\\/\\d+)?|([1-9]|1[012])(-([1-9]|1[012])(\\/\\d+)?)?(,([1-9]|1[012])(-([1-9]|1[012])(\\/\\d+)?)?)*|jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\s(\\*(\\/\\d+)?|([0-7])(-([0-7])(\\/\\d+)?)?(,([0-7])(-([0-7])(\\/\\d+)?)?)*|mon|tue|wed|thu|fri|sat|sun)\\s(.*)$", "permalinkFragment": "bH8bP8", "isFavorite": false, "isStarred": false}, {"title": "simple email validator", "description": "shows entire email address group and partials. contains literals", "dateCreated": "2016-07-11T06:17:14.000Z", "dateModified": "2016-07-11T06:17:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<email>(?<before>[\\p{L}0-9.-@#$%!_]+)@(?<after>gmail|hotmail|yahoo)(.com|.nl|.info))$", "permalinkFragment": "rT1eM8", "isFavorite": false, "isStarred": false}, {"title": "Capture URL without query string parameters", "description": "", "dateCreated": "2016-07-11T09:27:32.000Z", "dateModified": "2016-07-11T09:27:32.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([^?#]+).*", "permalinkFragment": "jZ7nE3", "isFavorite": false, "isStarred": false}, {"title": "Match Class Name", "description": "Matching all the proper class names", "dateCreated": "2016-07-11T13:30:28.000Z", "dateModified": "2016-07-11T13:30:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[a-zA-Z-]+$)|(^[a-z_]+$)", "permalinkFragment": "fT7bL3", "isFavorite": false, "isStarred": false}, {"title": "Remove Anchor Links", "description": "", "dateCreated": "2016-07-11T15:01:13.000Z", "dateModified": "2016-07-11T15:01:13.000Z", "author": "Meesh", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": " <a id=\"(.*?)<\\/a>", "permalinkFragment": "gN9qU9", "isFavorite": false, "isStarred": false}, {"title": "Anchor ID Remove", "description": "", "dateCreated": "2016-07-11T15:06:00.000Z", "dateModified": "2016-07-11T15:06:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": " <a id=\"(.*?)<\\/a>", "permalinkFragment": "qK1tT4", "isFavorite": false, "isStarred": false}, {"title": "Extract Headings", "description": "", "dateCreated": "2016-07-11T15:15:04.000Z", "dateModified": "2016-07-11T15:15:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=## )(.*?)(?= #)", "permalinkFragment": "wQ9uV3", "isFavorite": false, "isStarred": false}, {"title": "watched_movie", "description": "Grab multiple events with various fields from plex media logs to see who watched what and when from where. Using for splunk dashboard.", "dateCreated": "2016-07-11T17:46:58.000Z", "dateModified": "2016-07-11T17:46:58.000Z", "author": "sydvishus", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*Request.*\\[(?P<req_ip>.*)\\:.*\\].*GZIP)\\n(.*)\\n(.*)\\n(.*Play.*\\'(?P<watched>.*)\\'.*)\\n(.*User is\\s(?P<who>.*)\\s\\(.*)\\n(.*Device is(?P<device>.*)\\.)\\n(.*)\\n(.*Completed.*\\=(?P<movie_time>\\d+)\\&k.*\\&time\\=(?P<played_time>\\d+)\\s\\(.*)", "permalinkFragment": "aG5hT4", "isFavorite": false, "isStarred": false}, {"title": "VTT Timecodes", "description": "Get timecodes from a line of text in a VTT file", "dateCreated": "2016-07-11T20:22:37.000Z", "dateModified": "2016-07-11T20:22:37.000Z", "author": "Wubbajack", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?(DEFINE)(?<hours>[0-2]\\d{1})(?<minutes>[0-5]\\d{1})(?<seconds>(?&minutes))(?<milliseconds>\\d{3})(?<separator>\\-\\-\\>)(?<timecode>((?&hours):)?(?&minutes):(?&seconds)\\.(?&milliseconds)))^(?<start>(?&timecode))\\ {1,}-->\\ {1,}(?<end>(?&timecode))(.*)$", "permalinkFragment": "fF5wY9", "isFavorite": false, "isStarred": false}, {"title": "Find MD Headings", "description": "", "dateCreated": "2016-07-11T20:23:49.000Z", "dateModified": "2016-07-11T20:23:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=## )(.*?)(?= ##)", "permalinkFragment": "fU7nW9", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "", "dateCreated": "2016-07-11T21:41:22.000Z", "dateModified": "2016-07-11T21:41:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<!\\s{1}Jr[.!?]|\\s{1}Mr[.!?]|\\s{1}Mrs[.!?]|\\s{1}Ms[.!?]|\\s{1}Dr[.!?]|\\s{1}Prof[.!?]|\\s{1}Sr[.!?]|\\s{1}vs[.!?]|\\s{1}etc[.!?]|\\s{1}no[.!?])(?<=[.?!])\\s+(?=[a-z])", "permalinkFragment": "cF1mY0", "isFavorite": false, "isStarred": false}, {"title": "arwe", "description": "rwe", "dateCreated": "2016-07-12T02:04:41.000Z", "dateModified": "2016-07-12T02:04:41.000Z", "author": "wree", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\"(.+)T.+\"\\s.+q=(.+)", "permalinkFragment": "tF9oX6", "isFavorite": false, "isStarred": false}, {"title": "AMEX - FXD command", "description": "", "dateCreated": "2016-07-12T05:45:57.000Z", "dateModified": "2016-07-12T05:45:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(AN|AA|AD|AE).*?(Jan|Feb|Mar|Apr|May|Jun|JUL|Aug|Sep|Oct|Nov|Dec)*([a-z]{3})([a-z]{3})|^FXD.*?([a-z]{3})([ ]*\\/[ ]*[d,D]\\d\\d\\w\\w\\w|[ ]*\\/[ ]*[t,T][d,D]\\d\\d\\d\\d)*([a-z]{3})*([ ]*\\/[ ]*[d,D]\\d\\d\\w\\w\\w|[ ]*\\/[ ]*[t,T][d,D]\\d\\d\\d\\d)*([a-z]{3})*", "permalinkFragment": "yJ4sK1", "isFavorite": false, "isStarred": false}, {"title": "TCIL - IQC Check error msg", "description": "", "dateCreated": "2016-07-12T05:46:48.000Z", "dateModified": "2016-07-12T05:46:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((\\(1A\\))*[\\r\\n]*ITINERARY OK|NEEDS AIR SEGMENT|CHECK SEGMENT - NO CONNECTION)", "permalinkFragment": "nN8dP6", "isFavorite": false, "isStarred": false}, {"title": "GEN - Improved Air segment", "description": "", "dateCreated": "2016-07-12T05:47:31.000Z", "dateModified": "2016-07-12T05:47:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b([1-9][0-9]*)[.]([A-Z ]+)[\\/]?([A-Z ]*[^(INF)])", "permalinkFragment": "hH1xC6", "isFavorite": false, "isStarred": false}, {"title": "Find games titles in roms files", "description": "Useful to find only the game title without the tags if you have thousands of files to sort\nFor example : Walt Disney World Quest - Magical Racing Tour (E) (M3) [C][!] -> Match only the title", "dateCreated": "2016-07-12T12:34:21.000Z", "dateModified": "2016-07-12T12:34:21.000Z", "author": "Alex", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([A-Za-z0-9]*[- ])*", "permalinkFragment": "nS2cV0", "isFavorite": false, "isStarred": false}, {"title": "python-unicode-hashtags", "description": "Because 're' module in python do not support \\p{L} unicode class need to use simplistic regex with \\w instead \\p{L}. But such regexp also match digits like #123, #003 and so on. So it need to further filter out digit-only tags.", "dateCreated": "2016-07-12T13:44:58.000Z", "dateModified": "2016-07-12T13:44:58.000Z", "author": "Stanislav Otovchits", "flavor": "python", "delimiter": "\"", "flags": "gui", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:^|_|[^\\w&/]+)(?:#|\uff03)([\\w\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u00ff]+)", "permalinkFragment": "pX9qN9", "isFavorite": false, "isStarred": false}, {"title": "Number 2...999", "description": "Find a number with a value in the range of 2 through 999.", "dateCreated": "2016-07-12T14:08:54.000Z", "dateModified": "2016-07-12T14:08:54.000Z", "author": "byronjones@outlook.com", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([2-9]|[0-9][0-9]|[0-9][0-9][0-9])$", "permalinkFragment": "lZ2bP4", "isFavorite": false, "isStarred": false}, {"title": "parse apache access.log", "description": "", "dateCreated": "2016-07-12T14:25:20.000Z", "dateModified": "2016-07-12T14:25:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([0-9.]+)\\s(.)\\s(.)\\s\\[(.*)\\s(\\+[0-9]*)\\]\\s\\\"GET|POST\\\"", "permalinkFragment": "cJ7fQ7", "isFavorite": false, "isStarred": false}, {"title": "Get image urls from Google Speed test", "description": "Get image urls from Google Speed test", "dateCreated": "2016-07-13T10:35:20.000Z", "dateModified": "2016-07-13T10:35:20.000Z", "author": "Ken", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "data-title=\\\"(.*?)\\\"", "permalinkFragment": "dL5nT3", "isFavorite": false, "isStarred": false}, {"title": "Rec Stand and Hall", "description": "Extrat hall and stand numbers out of a mail subject.", "dateCreated": "2016-07-13T10:56:11.000Z", "dateModified": "2016-07-13T10:56:11.000Z", "author": "kiro7shiro", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(fg\\w+)?(\\s)?(\\d+|\\w+)([\\/\\._]+\\w+)([\\/\\._ ]?)(\\d+)(\\w?)", "permalinkFragment": "uY1sM5", "isFavorite": false, "isStarred": false}, {"title": "\u00f6jh", "description": "", "dateCreated": "2016-07-13T12:45:49.000Z", "dateModified": "2016-07-13T12:45:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "gljkg", "permalinkFragment": "qL7pZ3", "isFavorite": false, "isStarred": false}, {"title": "email general regex", "description": "to catch all valid emails", "dateCreated": "2016-07-13T14:03:09.000Z", "dateModified": "2016-07-13T14:03:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:[A-Za-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*)\\@[a-z0-9]+\\.+([a-z0-9])", "permalinkFragment": "gA1zS6", "isFavorite": false, "isStarred": false}, {"title": "Overlap Code", "description": "", "dateCreated": "2016-07-13T15:57:34.000Z", "dateModified": "2016-07-13T15:57:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "G0[ ]X\\d+[.]\\d+[ ]Y\\d+[.]\\d+\\n;mod", "permalinkFragment": "dV7zR2", "isFavorite": false, "isStarred": false}, {"title": "atomId", "description": "used for assignment elements in the study plan api", "dateCreated": "2016-07-13T17:11:11.000Z", "dateModified": "2016-07-13T17:11:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(.*)\\/[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "permalinkFragment": "yO3iY2", "isFavorite": false, "isStarred": false}, {"title": "DCMS_MatchRegexWhiteSpaceMatcher", "description": "Matches", "dateCreated": "2016-07-13T18:38:07.000Z", "dateModified": "2016-07-13T18:38:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\\\s(\\*|\\+)?", "permalinkFragment": "kA7yL2", "isFavorite": false, "isStarred": false}, {"title": "IP Address", "description": "Has group match to match 2nd third and fourth octets preceded by \".\"", "dateCreated": "2016-07-13T19:15:12.000Z", "dateModified": "2016-07-13T19:15:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3})$", "permalinkFragment": "sT8mC2", "isFavorite": false, "isStarred": false}, {"title": "TV Show", "description": "Regex for parsing tv torrent", "dateCreated": "2016-07-13T19:42:26.000Z", "dateModified": "2016-07-13T19:42:26.000Z", "author": "naingenieu", "flavor": "python", "delimiter": "\"", "flags": "mgx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\n    (?P<show>[a-zA-Z1-9\\.\\-]+[^\\.])\n    \\.[Ss]?(?P<season>\\d{1,2})[EeXx](?P<episode>\\d{1,2})\n    (\\.(?P<title>[a-zA-Z1-9\\.]+[^\\.]))?\n    \\.(?P<resolution>\\d{3,4}p)\n    \\.(?P<quality>[a-zA-Z\\-]{1,6})\n    \\.(?P<codec>[a-zA-Z0-9\\.]+\\d)\n    ([\\.\\-](?P<team>.+))?\n$", "permalinkFragment": "wM8qY6", "isFavorite": false, "isStarred": false}, {"title": "Validate html end tags with single quotes", "description": "validate html tags should have end tags, closing single, double quotes", "dateCreated": "2016-07-13T19:57:02.000Z", "dateModified": "2016-07-13T19:57:02.000Z", "author": "Remo", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<(\\\"[^\\\"]*\\\"|'[^']*'|[^'\\\">])*>", "permalinkFragment": "dI3rE0", "isFavorite": false, "isStarred": false}, {"title": "g", "description": "", "dateCreated": "2016-07-13T21:04:26.000Z", "dateModified": "2016-07-13T21:04:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?<=[\\w+](?<!n)))", "permalinkFragment": "oZ3hB5", "isFavorite": false, "isStarred": false}, {"title": "domain url", "description": "asc", "dateCreated": "2016-07-13T21:50:43.000Z", "dateModified": "2016-07-13T21:50:43.000Z", "author": "xiali", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^:]*:\\/\\/)?([^\\/]*\\.)*([^\\/\\.]+\\.[^\\/]+)(\\/[^\\/]+)*", "permalinkFragment": "bJ8fQ4", "isFavorite": false, "isStarred": false}, {"title": "Grab value inside round brackets without brackets", "description": "", "dateCreated": "2016-07-13T22:34:44.000Z", "dateModified": "2016-07-13T22:34:44.000Z", "author": "Dmitry Shmidt", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\()[^\\(\\]]+(?=\\))", "permalinkFragment": "bN0dL1", "isFavorite": false, "isStarred": false}, {"title": "lottery", "description": "", "dateCreated": "2016-07-14T01:08:22.000Z", "dateModified": "2016-07-14T01:08:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gms", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "201\\d\\.(?<Month>\\w*)\\d\\d\\-", "permalinkFragment": "tF9fT5", "isFavorite": false, "isStarred": false}, {"title": "Create a 3 letter acronym", "description": "The meaning of the Regexp is create a 3 letters acronym from a given string.\n\ni.e. \nRuby on Rails = RoR\nHyperText Markup Languague = HTML", "dateCreated": "2016-07-14T03:09:36.000Z", "dateModified": "2016-07-14T03:09:36.000Z", "author": "Juan Mesa <linuxven@gmail.com>", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[A-Za-z]|(?<=[^\\w])[A-Za-z]|(?<![A-Z])[A-Z])", "permalinkFragment": "xM3yZ9", "isFavorite": false, "isStarred": false}, {"title": "Tipping Point Testing McAfee", "description": "Tipping Point Log McAfee Testing", "dateCreated": "2016-07-14T03:24:56.000Z", "dateModified": "2016-07-14T03:24:56.000Z", "author": "Billy", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{4}\\x2f\\d{2}\\x2f\\d{2}\\s+\\d{2}\\x3a\\d{2}\\x3a\\d{2})\\x2e\\d+\\s+(\\w+\\x2b\\d+\\x3a\\d+)\\s+(\\d{2}\\x2e\\d{3}\\x2e\\d{2}\\x2e\\d{3})\\s+(\\w{3}\\s+\\d+\\s+\\d{2}\\x3a\\d{2}\\x3a\\d{2})\\s+(\\w+\\x2e\\w+\\x2e\\w+\\x2e\\w+\\x2e\\w+)\\s+(\\d\\x3b\\d\\x3b\\w+\\x2d\\w+\\x2d\\w+\\x2d\\w+\\x2d\\w+)\\x3b(\\d+\\x2d\\d+\\x2d\\d+\\x2d\\d+\\x2d\\d+)\\x3b\\x22\\d+\\x3a\\s+(\\w+)\\x3a\\s+(\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+)\\x22\\x3b(\\d+)\\x3b\\x22(\\w+)\\x22\\x3b(\\d{2}\\x2e\\d{3}\\x2e\\d{3}\\x2e\\d{3})\\x3b(\\d+)\\x3b(\\d{3}\\x2e\\d{3}\\x2e\\d{2}\\x2e\\d{3})\\x3b(\\d+)\\x3b\\d\\x3b\\d\\w\\x3b\\d\\w\\x3b\\d\\x3b\\d+\\x3b\\x22(\\w+)\\x22\\x3b\\d+\\x3b\\d+\\x3b\\s+\\x3b\\d+", "permalinkFragment": "tR9jR6", "isFavorite": false, "isStarred": false}, {"title": "Simba - ordonare nr rata", "description": "", "dateCreated": "2016-07-14T09:57:11.000Z", "dateModified": "2016-07-14T09:57:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:rs_[0-9]+)?([0-9]*)(?:-.*)?", "permalinkFragment": "tN1fE7", "isFavorite": false, "isStarred": false}, {"title": "TNS - resourcecenter/ ... .aspx/.htm/.html", "description": "catches 3 files extensions for pages in /resourcecenter", "dateCreated": "2016-07-14T13:48:32.000Z", "dateModified": "2016-07-14T13:48:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "resourcecenter\\/\\w+\\.(aspx|htm|html)", "permalinkFragment": "kB4nA0", "isFavorite": false, "isStarred": false}, {"title": "Hall Stand extraction 1", "description": "Level one extraction of a hall and stand number in a email subject.", "dateCreated": "2016-07-14T14:29:07.000Z", "dateModified": "2016-07-14T14:29:07.000Z", "author": "kiro", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([hale]*\\w*\\.?\\d*)([\\.\\/\\-_\\s]?)([stand]*)(\\d+)([a-z]*)", "permalinkFragment": "wY7rP3", "isFavorite": false, "isStarred": false}, {"title": "scala selector", "description": "", "dateCreated": "2016-07-14T14:55:34.000Z", "dateModified": "2016-07-14T14:55:34.000Z", "author": "andrew kaiser", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ",.*?,.*?'(.*?)'", "permalinkFragment": "xL1eU7", "isFavorite": false, "isStarred": false}, {"title": "HbbtV USER AGENT", "description": "", "dateCreated": "2016-07-14T16:24:59.000Z", "dateModified": "2016-07-14T16:24:59.000Z", "author": "snovak", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "HbbTV\\/\\d+\\.\\d+\\.\\d+\\s\\((.*);\\s(.*);\\s(.*);\\s(.*);\\s(.*);\\)", "permalinkFragment": "vF9qH5", "isFavorite": false, "isStarred": false}, {"title": "End of line ", "description": "", "dateCreated": "2016-07-14T17:34:23.000Z", "dateModified": "2016-07-14T17:34:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.)$", "permalinkFragment": "dB0lO7", "isFavorite": false, "isStarred": false}, {"title": "List of one or more email, comma-separated", "description": "", "dateCreated": "2016-07-14T18:19:46.000Z", "dateModified": "2016-07-14T18:19:46.000Z", "author": "igorsantos07", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[\\w\\d\\.]+@[\\w\\d\\.]+\\s*,\\s*)*(?:[\\w\\d\\.]+@[\\w\\d\\.]+)?$", "permalinkFragment": "mF9lO5", "isFavorite": false, "isStarred": false}, {"title": "Extract XML node value", "description": "This regexp extracts a value from any XML node string ", "dateCreated": "2016-07-14T18:46:29.000Z", "dateModified": "2016-07-14T18:46:29.000Z", "author": "Andrew Kovalenko", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<\\S*>([\\s\\S]*?)<\\/\\S*>", "permalinkFragment": "bD2rI6", "isFavorite": false, "isStarred": false}, {"title": "gamename", "description": "", "dateCreated": "2016-07-14T20:44:34.000Z", "dateModified": "2016-07-14T20:44:34.000Z", "author": "", "flavor": "pcre", "delimiter": "`", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^/mobile/games/(.*)/", "permalinkFragment": "xQ0hF1", "isFavorite": false, "isStarred": false}, {"title": "Youtube iframe regex last", "description": "Youtube iframe regex last", "dateCreated": "2016-07-15T02:59:02.000Z", "dateModified": "2016-07-15T02:59:02.000Z", "author": "onigetoc", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<iframe.*?(width=\"[0-9]*\")?\\.?(height=\"[0-9]*\")?\\.*?src=\".*?youtube\\.com\\/embed\\/(\\w*\\-?\\w*).*?(width=\"[0-9]*\")?\\.?(height=\"[0-9]*\")?\\.*?><\\/iframe>", "permalinkFragment": "hI0iE5", "isFavorite": false, "isStarred": false}, {"title": "Match url parameters", "description": "", "dateCreated": "2016-07-15T09:08:48.000Z", "dateModified": "2016-07-15T09:08:48.000Z", "author": "Ollie Pelling", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\?.*)?$", "permalinkFragment": "xP6vP1", "isFavorite": false, "isStarred": false}, {"title": "Function ' to \"", "description": "Translate ' to \" in function.", "dateCreated": "2016-07-15T13:04:20.000Z", "dateModified": "2016-07-15T13:04:20.000Z", "author": "Sam Grew", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "throw new UserException\\('(.*)'\\)", "permalinkFragment": "rK5uM6", "isFavorite": false, "isStarred": false}, {"title": "first 2 parts of URL", "description": "", "dateCreated": "2016-07-15T17:56:01.000Z", "dateModified": "2016-07-15T17:56:01.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^/]*[/][^/]*)[/]", "permalinkFragment": "rJ6iF1", "isFavorite": false, "isStarred": false}, {"title": "Personas Juridicas", "description": "Indentifica los tipos de personas jurididacas en las razones sociales (no sera elegante, pero de apoco se aprende)", "dateCreated": "2016-07-15T18:15:20.000Z", "dateModified": "2016-07-15T18:15:20.000Z", "author": "Eduardo G\u00f3mez Catalan", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s(SOCIEDAD ANONIMA|LIMITADA|L.?T.?D.?A.?|E.?I.?R.?L.?|S.?P.?A.?)|(LIMIT[DA]*?)|(S[\\.\\s]{0,2}?A\\.?)$", "permalinkFragment": "tO0bL4", "isFavorite": false, "isStarred": false}, {"title": "Label + input", "description": "", "dateCreated": "2016-07-15T20:28:38.000Z", "dateModified": "2016-07-15T20:28:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<div class=\"form-group\">\\s*<label for=\"(\\S*)\">(.*)<\\/label>\\s*<input type=\"text\" class=\"form-control\" id=\"(.*)\" placeholder=\"(.*)\" ng-model=\"(.*)\">\\s*<\\/div>", "permalinkFragment": "pB8qT4", "isFavorite": false, "isStarred": false}, {"title": "valida formato rut Chile", "description": "valida formato rut Chile 16.475.594-0 O 16475594-0", "dateCreated": "2016-07-15T21:45:02.000Z", "dateModified": "2016-07-15T21:45:02.000Z", "author": "Eduardo G\u00f3mez Catalan", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b[0-9|.]{1,10}\\-[K|k|0-9]", "permalinkFragment": "uF6fS5", "isFavorite": false, "isStarred": false}, {"title": "Find Codepen ID from url", "description": "Find Codepen ID from url", "dateCreated": "2016-07-16T13:40:12.000Z", "dateModified": "2016-07-16T13:40:12.000Z", "author": "onigetoc", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https?.*codepen.io.*pen\\/(.*)", "permalinkFragment": "rM8xV1", "isFavorite": false, "isStarred": false}, {"title": "String Regex", "description": "For retrieving Quoted Strings\n", "dateCreated": "2016-07-17T09:32:53.000Z", "dateModified": "2016-07-17T09:32:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")", "permalinkFragment": "bG1mE0", "isFavorite": false, "isStarred": false}, {"title": "Skype/IRC log syntax highlighting", "description": "Matches date/time/name in several different formats, accounting for brackets, etc\n\n<11:54 PM> Sirenfal: Asdf\n[11:54] <Sirenfal> Asdf\n11:54 Sirenfal: Asdf\n[1/1/06 11:54 AM] Sirenfal: asdf\n<11:54> Asdf", "dateCreated": "2016-07-17T09:33:26.000Z", "dateModified": "2016-07-17T09:33:26.000Z", "author": "Sirenfal", "flavor": "python", "delimiter": "\"", "flags": "gxm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\s*\n(?:\n  (?P<date>\n    (?:[\\[<\\(]\\s*)? # opening bracket\n    (?:\n      # date time\n      (?:\n        # date\n        (?:\n          (?: # matches mm-dd-yyyy mm-dd-yy mm-dd\n            \\d{1,2}-\\d{1,2}\n            (?:\n              -\n              (?:\\d{4}|\\d{2})\n            )?\n          )\n          |\n          (?: # matches mm/dd/yyyy mm/dd/yy mm/dd\n            \\d{1,2}\\/\\d{1,2}\n            (?:\n              \\/\n              (?:\\d{4}|\\d{2})\n            )?\n          )\n        )\n        \\s+\n        # time\n        \\d{1,2}:\\d{2}\n        (?::\\d{2})?\n        (?:\n          \\s*\n          (?:AM|PM)\n        )?\n      )\n      |\n      # time date\n      (?:\n        # time\n        \\d{1,2}:\\d{2}\n        (?::\\d{2})?\n        (?:\n          \\s*\n          (?:AM|PM)\n        )?\n        \\s+\n        # date\n        (?:\n          (?: # matches mm-dd-yyyy mm-dd-yy mm-dd\n            \\d{1,2}-\\d{1,2}\n            (?:\n              -\n              (?:\\d{4}|\\d{2})\n            )?\n          )\n          |\n          (?: # matches mm/dd/yyyy mm/dd/yy mm/dd\n            \\d{1,2}\\/\\d{1,2}\n            (?:\n              \\/\n              (?:\\d{4}|\\d{2})\n            )?\n          )\n        )\n      )\n      |\n      # time only\n      (?:\n        \\d{1,2}:\\d{2}\n        (?::\\d{2})?\n        (?:\n          \\s*\n          (?:AM|PM)\n        )?\n      )\n    )\n    (?:\\s*[\\)>\\]])? # closing bracket\n  )\n  \\s+\n)?\n(?P<name>\n  (?:\n    (?:<\\s*[^\\s:>]+\\s*>) # match <Username>\n    |\n    (?:[^\\s:]+:) # match Username:\n  )\n)\n\\s+\n(?P<message>.*)\n$", "permalinkFragment": "wY2tU8", "isFavorite": false, "isStarred": false}, {"title": "regeg test", "description": "", "dateCreated": "2016-07-17T13:05:09.000Z", "dateModified": "2016-07-17T13:05:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "B(?<StartByte>[0-9])(?:.(?<StartBit>[0-7]))?(?:<<(?<LeftShift>[0-9]))?\\|?", "permalinkFragment": "wQ9oD5", "isFavorite": false, "isStarred": false}, {"title": "Extract ip, url from aws log", "description": "", "dateCreated": "2016-07-17T17:33:38.000Z", "dateModified": "2016-07-17T17:33:38.000Z", "author": "vishnu prathish", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\S*) (\\S*) (\\S*):(\\d)* (\\S*) (\\S*) (\\S*) (\\S*) (\\S*) (\\S*) (\\S*) (\\S*) (\\S*) (\\S*) (.*)$", "permalinkFragment": "xW5pR3", "isFavorite": false, "isStarred": false}, {"title": "LaTeX command", "description": "", "dateCreated": "2016-07-17T19:18:21.000Z", "dateModified": "2016-07-17T19:18:21.000Z", "author": "Mattia Penati", "flavor": "python", "delimiter": "\"", "flags": "u", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\\\(?P<command>(re)?newcommand)\\{(?P<name>\\\\\\w+)\\}(\\[(?P<num>\\d+)\\])?\\{(?P<definition>.+)\\}", "permalinkFragment": "zY3yR7", "isFavorite": false, "isStarred": false}, {"title": "test1", "description": "", "dateCreated": "2016-07-18T14:10:47.000Z", "dateModified": "2016-07-18T14:10:47.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?P<_sec>.*)(\\.)(?P<_mil>.*)", "permalinkFragment": "sN6bE2", "isFavorite": false, "isStarred": false}, {"title": "Date validation mm/dd/yyyy", "description": "Date validation mm/dd/yyyy", "dateCreated": "2016-07-19T07:48:01.000Z", "dateModified": "2016-07-19T07:48:01.000Z", "author": "Girish", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(0[1-9]|1[012])[\\/](0[1-9]|[12][0-9]|3[01])[\\/](19|20)\\d{2}", "permalinkFragment": "jT2tS4", "isFavorite": false, "isStarred": false}, {"title": "postfix log", "description": "", "dateCreated": "2016-07-19T16:00:03.000Z", "dateModified": "2016-07-19T16:00:03.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([A-z]{3} \\d{1,2} \\d{2}:\\d{2}:\\d{2}) (.+) (.+)\\[(\\d+)\\]:(.*)$", "permalinkFragment": "qN7lB8", "isFavorite": false, "isStarred": false}, {"title": "Parse KVP (lhs=rhs)", "description": "Parse a statement like 'TEST = \"math\"' or 'TEST = math' or 'TEST = \"math is \\'good\\'' to retrieve the rhs.\n", "dateCreated": "2016-07-19T22:32:23.000Z", "dateModified": "2016-07-19T22:32:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(Primary Page Category\\s*=\\s*([\"'])?((?:(?!\\2).)*)\\2?)", "permalinkFragment": "iC8mP4", "isFavorite": false, "isStarred": false}, {"title": "Excel extract cell col and row index", "description": "extract col index and row index from an Excel coordinate cell", "dateCreated": "2016-07-20T08:40:41.000Z", "dateModified": "2016-07-20T08:40:41.000Z", "author": "Julien Tissier", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<column>[A-Z]+)(?<row>[1-9]\\d*)$", "permalinkFragment": "gD5uS6", "isFavorite": false, "isStarred": false}, {"title": "IDN domains and subdomains", "description": "Match IDN domains puny code encoded, or in human readable mode.", "dateCreated": "2016-07-20T09:42:23.000Z", "dateModified": "2016-07-20T09:42:23.000Z", "author": "Maslosoft", "flavor": "pcre", "delimiter": "/", "flags": "gmu", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9\\p{L}][a-zA-Z0-9\\p{L}-\\.]{1,61}[a-zA-Z0-9\\p{L}]\\.[a-zA-Z\\p{L}]{2,}$", "permalinkFragment": "aN0bN7", "isFavorite": false, "isStarred": false}, {"title": "sha256", "description": "", "dateCreated": "2016-07-20T12:16:27.000Z", "dateModified": "2016-07-20T12:16:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Fa-f{64}]", "permalinkFragment": "iB8nZ2", "isFavorite": false, "isStarred": false}, {"title": "Redshift Create Table", "description": "", "dateCreated": "2016-07-20T14:21:20.000Z", "dateModified": "2016-07-20T14:21:20.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "CREATE( (LOCAL )?(?P<temporal>TEMPORARY|TEMP))? TABLE( IF NOT EXISTS)? (?P<schema_name>[{ }\\w_]+).(?P<table_name>[{ }\\w_]+) ?\\((?P<columns>([\\w _](\\(\\d+\\))?,?)+)\\)( DISTSTYLE (?P<dist_style>(EVEN|KEY|ALL)))?( DISTKEY \\((?P<dist_key>[\\w_]+)\\))?( (?P<sort_key_type>(COMPOUND|INTERLEAVED) )?SORTKEY \\((?P<sort_keys>([\\w _,]+))\\))?", "permalinkFragment": "xA7gV8", "isFavorite": false, "isStarred": false}, {"title": "Orchestria", "description": "Orchestria, DataMinder, CA DLP", "dateCreated": "2016-07-20T14:55:45.000Z", "dateModified": "2016-07-20T14:55:45.000Z", "author": "Martin Lawrence", "flavor": "python", "delimiter": "\"", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\"(?<=/countsfrom=)(.*)(?=&instrument=1&levels=1&levels=2&levels=3&to=)(.*)\"", "permalinkFragment": "xM1xS6", "isFavorite": false, "isStarred": false}, {"title": "North America phone number", "description": "Relatively flexible pattern, intended to accept and parse North American phone numbers. Country code can be changed to accept any country phone number as long as it's of the general form ### ### #### (i.e. 10 digits, seperated into 3 digit area, 3 digit fisrt group, and 4 digit second group) This regex is ignorant of spaces. Also supports extensions.", "dateCreated": "2016-07-20T16:28:20.000Z", "dateModified": "2016-07-20T16:28:20.000Z", "author": "Roman P", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?'countryCode'\\+?1)?[-.\\s]?\\(?(?'areaCode'\\d{3,3})[)-.\\s]{0,2}(?'phone1'\\d{3,3})[-.\\s]?(?'phone2'\\d{4,4})\\s*(?'extension'(?:x|ex|ext|extension|\\s)\\s*\\d+)?$", "permalinkFragment": "fS4mQ0", "isFavorite": false, "isStarred": false}, {"title": "Password", "description": "First letter capitalized, well within the first four characters has a number and the minimum length is 8", "dateCreated": "2016-07-20T21:25:30.000Z", "dateModified": "2016-07-20T21:25:30.000Z", "author": "Caleb Lopez", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=^[A-Z])(?=.{1,4}\\d)(?=.*[A-Za-z])[A-Za-z\\d]{8,}", "permalinkFragment": "jG4nT3", "isFavorite": false, "isStarred": false}, {"title": "email", "description": "", "dateCreated": "2016-07-21T06:38:38.000Z", "dateModified": "2016-07-21T06:38:38.000Z", "author": "kaihang", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-z0-9]([a-z0-9]*[-_]*[a-z0-9]+)*@([a-z0-9]*[-_\\.]?[a-z0-9]+)+[\\.][a-z]{2,3}([\\.][a-z]{2})?$", "permalinkFragment": "vK2yQ4", "isFavorite": false, "isStarred": false}, {"title": "match escaped end tag", "description": "", "dateCreated": "2016-07-21T07:10:38.000Z", "dateModified": "2016-07-21T07:10:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<\\\\\\/.*>", "permalinkFragment": "sZ4qY6", "isFavorite": false, "isStarred": false}, {"title": "Remove whitespace character at start and end of string", "description": "", "dateCreated": "2016-07-21T09:03:19.000Z", "dateModified": "2016-07-21T09:03:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[\\s].+\\s$", "permalinkFragment": "lB9wY2", "isFavorite": false, "isStarred": false}, {"title": "dsadas", "description": "dsadsadas", "dateCreated": "2016-07-21T11:24:56.000Z", "dateModified": "2016-07-21T11:24:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(([\\+]90?)|([0]?))([ ]?)((\\([0-9]{3}\\))|([0-9]{3}))([ ]?)([0-9]{3})(\\s*[\\-]?)([0-9]{2})(\\s*[\\-]?)([0-9]{2}|)", "permalinkFragment": "jM6rY8", "isFavorite": false, "isStarred": false}, {"title": "ICAO MRZ TD1", "description": "The Seventh Edition of Doc 9303 represents a restructuring of the ICAO specifications for Machine Readable Travel Documents. Without incorporating substantial modifications to the specifications, in this new edition Doc 9303 has been reformatted into a set of specifications for Size 1 Machine Readable Official Travel Documents (TD1)", "dateCreated": "2016-07-21T12:45:13.000Z", "dateModified": "2016-07-21T12:45:13.000Z", "author": "Igor Ferreira", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<type>[A-Za-z]{1})(?<subtype>[A-Za-z<]{1})(?<expcountry>[A-Za-z]{3})(?<docnumber>[0-9A-Za-z<]{9})(?<docnumbercheck>[0-9]{1})(?<complement>[0-9a-zA-Z<]{15})\\n(?<birthdate>[0-9]{6})(?<birthcheck>[0-9]{1})(?<sex>[mfMF]{1})(?<expiredate>[0-9]{6})(?<expirecheck>[0-9]{1})(?<nacionality>[A-Za-z]{3})(?<optional>[a-zA-Z0-9<]{11})(?<linecheck>[0-9]{1})\\n(?<lname>[A-Z]+)(?<lname2><[A-Z]+){0,}<<(?<spacing>[<]{0,})(?<fname>[A-Z]+)(?<mname1><[A-Z]+){0,}(?<namecomplement>[a-zA-Z<]+){0,}", "permalinkFragment": "jX4yC1", "isFavorite": false, "isStarred": false}, {"title": "ops435", "description": "", "dateCreated": "2016-07-21T13:46:07.000Z", "dateModified": "2016-07-21T13:46:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-z])|([A-Z])|([0-9])|([@ #  $  %  &  *  +  -  =])", "permalinkFragment": "hQ9tD3", "isFavorite": false, "isStarred": false}, {"title": "P-value", "description": "grabs p-values", "dateCreated": "2016-07-21T14:33:46.000Z", "dateModified": "2016-07-21T14:33:46.000Z", "author": "Sternlicht", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[P]\\W", "permalinkFragment": "sB2uM3", "isFavorite": false, "isStarred": false}, {"title": "aa", "description": "aa", "dateCreated": "2016-07-21T16:34:00.000Z", "dateModified": "2016-07-21T16:34:00.000Z", "author": "aa", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(www.)?santamonicayouthtech.net$", "permalinkFragment": "hN8iB5", "isFavorite": false, "isStarred": false}, {"title": "emoji", "description": "", "dateCreated": "2016-07-21T21:44:09.000Z", "dateModified": "2016-07-21T21:44:09.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(::?|\\b)(\\w{2,})$", "permalinkFragment": "vZ9eX9", "isFavorite": false, "isStarred": false}, {"title": "Arch Pacman Name Extractor", "description": "Extracts package names from a list of name-version strings", "dateCreated": "2016-07-22T00:20:58.000Z", "dateModified": "2016-07-22T00:20:58.000Z", "author": "Glen H", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(lib32-[a-zA-Z0-9\\.\\-]*?)\\-[0-9\\.]*\\-[0-9\\.]$", "permalinkFragment": "tI5mO3", "isFavorite": false, "isStarred": false}, {"title": "csrf", "description": "csrf: '(.*?)'", "dateCreated": "2016-07-22T02:24:19.000Z", "dateModified": "2016-07-22T02:24:19.000Z", "author": "David", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "csrf: '(.*?)'", "permalinkFragment": "gE5cJ8", "isFavorite": false, "isStarred": false}, {"title": "Consecutive Numbers", "description": "Check for 3 or more single digit consecutive numbers in the string.", "dateCreated": "2016-07-22T05:27:49.000Z", "dateModified": "2016-07-22T05:27:49.000Z", "author": "Pradeep Patil", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.)(?:(?:0(?=1|\\b)|1(?=2|\\b)|2(?=3|\\b)|3(?=4|\\b)|4(?=5|\\b)|5(?=6|\\b)|6(?=7|\\b)|7(?=8|\\b)|8(?=9|\\b)|9(?=0|\\b)){3,})", "permalinkFragment": "gM4jL0", "isFavorite": false, "isStarred": false}, {"title": "XML regex ADK", "description": "", "dateCreated": "2016-07-22T06:27:29.000Z", "dateModified": "2016-07-22T06:27:29.000Z", "author": "Arjen", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d+)([a-zA-Z]{2})([a-zA-Z]+)(\\d{2})_(.*?)-metadata.xml", "permalinkFragment": "bE2aJ3", "isFavorite": false, "isStarred": false}, {"title": "SIP", "description": "", "dateCreated": "2016-07-22T09:30:50.000Z", "dateModified": "2016-07-22T09:30:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z0-9&\\s]+)(Januar|Februar|March|April|May|June|July|August|September|November|December)?", "permalinkFragment": "iD1aN5", "isFavorite": false, "isStarred": false}, {"title": "Long regex", "description": "", "dateCreated": "2016-07-22T09:51:56.000Z", "dateModified": "2016-07-22T09:51:56.000Z", "author": "Ric", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(AA|AB|AE|AH|AK|AL|AM|AP|AR|AS|AT|AW|AX|AY|AZ|BA|BB|BE|BH|BK|BL|BM|BT|CA|CB|CE|CH|CK|CL|CR|EA|EB|EE|EH|EK|EL|EM|EP|ER|ES|ET|EW|EX|EY|EZ|GY|HA|HB|HE|HH|HK|HL|HM|HP|HR|HS|HT|HW|HX|HY|HZ|JA|JB|JC|JE|JG|JH|JJ|JK|JL|JM|JN|JP|JR|JS|JT|JW|JX|JY|JZ|KA|KB|KE|KH|KK|KL|KM|KP|KR|KS|KT|KW|KX|KY|KZ|LA|LB|LE|LH|LK|LL|LM|LP|LR|LS|LT|LW|LX|LY|LZ|MA|MW|MX|NA|NB|NE|NH|NL|NM|NP|NR|NS|NW|NX|NY|NZ|OA|OB|OE|OH|OK|OL|OM|OP|OR|OS|OX|PA|PB|PC|PE|PG|PH|PJ|PK|PL|PM|PN|PP|PR|PS|PT|PW|PX|PY|RA|RB|RE|RH|RK|RM|RP|RR|RS|RT|RW|RX|RY|RZ|SA|SB|SC|SE|SG|SH|SJ|SK|SL|SM|SN|SP|SR|SS|ST|SW|SX|SY|SZ|TA|TB|TE|TH|TK|TL|TM|TP|TR|TS|TT|TW|TX|TY|TZ|WA|WB|WE|WK|WL|WM|WP|YA|YB|YE|YH|YK|YL|YM|YP|YR|YS|YT|YW|YX|YY|YZ|ZA|ZB|ZE|ZH|ZK|ZL|ZM|ZP|ZR|ZS|ZT|ZW|ZX|ZY)[0-9]{6}$", "permalinkFragment": "bT7rL1", "isFavorite": false, "isStarred": false}, {"title": "Short regex", "description": "", "dateCreated": "2016-07-22T09:52:38.000Z", "dateModified": "2016-07-22T09:52:38.000Z", "author": "Ric", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(A[ABEHKLMPRSTWXY]|B[ABEHKLMT]|C[ABCEHKLR])[0-9]{6}$", "permalinkFragment": "qA0vW4", "isFavorite": false, "isStarred": false}, {"title": "Regex for a name", "description": "This javascript reqular Expression will match any name.", "dateCreated": "2016-07-22T10:48:10.000Z", "dateModified": "2016-07-22T10:48:10.000Z", "author": "noby nirmjal ", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-z]*(\\s[A-z]*)*", "permalinkFragment": "rT2hM6", "isFavorite": false, "isStarred": false}, {"title": "Match Any name", "description": "This regular expression will match name", "dateCreated": "2016-07-22T10:52:20.000Z", "dateModified": "2016-07-22T10:52:20.000Z", "author": "noby nirmal", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-z]*(\\s[A-z]*)*", "permalinkFragment": "tX3lC9", "isFavorite": false, "isStarred": false}, {"title": "jquery", "description": "jquery", "dateCreated": "2016-07-22T12:28:23.000Z", "dateModified": "2016-07-22T12:28:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "JQuery", "permalinkFragment": "vZ8rY3", "isFavorite": false, "isStarred": false}, {"title": "mciCardDescription", "description": "", "dateCreated": "2016-07-22T12:42:21.000Z", "dateModified": "2016-07-22T12:42:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\n\u2014]*)(\u2014?([^\\n\\d(]*)((.*\\/)(.*))?(\\(Loyalty: (\\d)\\))?)?", "permalinkFragment": "dA5aX1", "isFavorite": false, "isStarred": false}, {"title": "Firefox 47 Test", "description": "for Issue #517 on Regex101 Github", "dateCreated": "2016-07-22T14:39:23.000Z", "dateModified": "2016-07-22T14:39:23.000Z", "author": "rambouillet", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "abc", "permalinkFragment": "pU9iT6", "isFavorite": false, "isStarred": false}, {"title": "How to capture Pokemon", "description": "", "dateCreated": "2016-07-22T16:01:24.000Z", "dateModified": "2016-07-22T16:01:24.000Z", "author": "Liam", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(pokemon|pok\u00e9mon)", "permalinkFragment": "wO0rY2", "isFavorite": false, "isStarred": false}, {"title": "q", "description": "q", "dateCreated": "2016-07-23T22:26:33.000Z", "dateModified": "2016-07-23T22:26:33.000Z", "author": "q", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "w+", "permalinkFragment": "aN7tR8", "isFavorite": false, "isStarred": false}, {"title": "phone", "description": "", "dateCreated": "2016-07-24T07:06:12.000Z", "dateModified": "2016-07-24T07:06:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:\\+)?\\(?([0-9]*)\\)?[-. ]?([0-9]*)[-. ]?([0-9]{0,24})$", "permalinkFragment": "rC7aD8", "isFavorite": false, "isStarred": false}, {"title": "Find Factfinder Numeric Groups", "description": "", "dateCreated": "2016-07-24T17:06:05.000Z", "dateModified": "2016-07-24T17:06:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(< [\\d.]{1,5})|([\\d.]{1,5} - [\\d.]{1,5})|(>= [\\d.]{1,5})", "permalinkFragment": "zR2qP7", "isFavorite": false, "isStarred": false}, {"title": "Obtain src content from iframe", "description": "", "dateCreated": "2016-07-24T21:42:18.000Z", "dateModified": "2016-07-24T21:42:18.000Z", "author": "Cmedina", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<iframe.*src=[\"\\']([^ ^\"^\\']*)[\"\\']", "permalinkFragment": "jB1lP6", "isFavorite": false, "isStarred": false}, {"title": "decimal with slash", "description": "", "dateCreated": "2016-07-25T03:37:09.000Z", "dateModified": "2016-07-25T03:37:09.000Z", "author": "arctikon", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[0-9]+(\\.[0-9]?)\\/[0-9]+(\\.[0-9]?)", "permalinkFragment": "qB2hF3", "isFavorite": false, "isStarred": false}, {"title": "Regex", "description": "", "dateCreated": "2016-07-25T11:50:00.000Z", "dateModified": "2016-07-25T11:50:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\p{L}\\p{N}]", "permalinkFragment": "zM5wN9", "isFavorite": false, "isStarred": false}, {"title": "Video URL", "description": "Checks weather a url points to a HTML5 supported video.", "dateCreated": "2016-07-25T12:56:40.000Z", "dateModified": "2016-07-25T12:56:40.000Z", "author": "Pwed", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((http|https):\\/\\/[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+~#?&//=]*(.webm|.mp4|.ogg)))", "permalinkFragment": "vA5pI9", "isFavorite": false, "isStarred": false}, {"title": "OpenSSL CRT Issuer/Subject parse", "description": "regex to capture fields from the output of `openssl x509 -in yout_crt_file.crt -issuer -noout`", "dateCreated": "2016-07-25T15:01:34.000Z", "dateModified": "2016-07-25T15:01:34.000Z", "author": "Florian Sievers", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:\\/(C|ST|L|O|OU|CN|emailAddress)=([^\\/]+))?", "permalinkFragment": "zR1mA9", "isFavorite": false, "isStarred": false}, {"title": "cproSongSection span wrapper", "description": "", "dateCreated": "2016-07-25T19:52:22.000Z", "dateModified": "2016-07-25T19:52:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<span class=\"cproComment\">((.*)\\s)*?(?=<span class=\"cproComment\">))", "permalinkFragment": "cL5jS9", "isFavorite": false, "isStarred": false}, {"title": "pattern1", "description": "Patter1 - first iteration", "dateCreated": "2016-07-25T23:29:04.000Z", "dateModified": "2016-07-25T23:29:04.000Z", "author": "Ali Momeni", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<Author>[A-Za-z,\\s]+?)(?:\\set al)?:(?<Title>[A-Za-z0-9\\/,\\s]+)\\.\\s(?<Publisher>[A-Za-z\\s]+)\\s(?<Volume>\\d+)(?<Issue>\\([A-Z]?\\d+[A-Z]?\\))?:\\s?(?<StartPage>[A-Za-z]?\\d+)-(?<EndPage>[A-Z]?\\d+[A-Z]?)[,.\\s]\\s?(?<Year>\\d{4})", "permalinkFragment": "mH0wU3", "isFavorite": false, "isStarred": false}, {"title": "Regex repeated group", "description": "regex repeated group", "dateCreated": "2016-07-25T23:38:23.000Z", "dateModified": "2016-07-25T23:38:23.000Z", "author": "anonymous", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z]\\d)\\|(~?id\\d+-(name\\d+))(~?id\\d+-(name\\d+))?", "permalinkFragment": "kR9iC8", "isFavorite": false, "isStarred": false}, {"title": "Realview phone Reg", "description": "", "dateCreated": "2016-07-26T04:47:20.000Z", "dateModified": "2016-07-26T04:47:20.000Z", "author": "Payal", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(\\+)?\\d{1,3}[-\\040.])?\\(?\\d{1,4}\\)?[-\\040.]?\\d{1,4}[-\\040.]?\\d{1,4}[-\\040.]{1}\\d{1,4}", "permalinkFragment": "nB1hV3", "isFavorite": false, "isStarred": false}, {"title": "Match partial classes", "description": "Matches partial class name delimited by whitespace, the string boundaries or a dash.", "dateCreated": "2016-07-26T07:53:16.000Z", "dateModified": "2016-07-26T07:53:16.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?:^|-|\\s)(large)(?:-|$|\\s))", "permalinkFragment": "nN2tF7", "isFavorite": false, "isStarred": false}, {"title": "MS Excel CSV", "description": "Parse a generated MS Excel CSV (also works with the exported format \"CSV for MS Excel\" from phpmyadmin)", "dateCreated": "2016-07-26T10:13:08.000Z", "dateModified": "2016-07-26T10:13:08.000Z", "author": "fbailly_", "flavor": "pcre", "delimiter": "/", "flags": "xmg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?(?=\")\"\n  ((?:\"\"|[^\"])*?)\" (?:;|$)\n |\n  (?:\n    ((?<=;)$)\n    |\n    (.+?)(?:;|$)\n  )\n)", "permalinkFragment": "uV3yY8", "isFavorite": false, "isStarred": false}, {"title": "FOR PAN and TAN number checking", "description": "This will help in validating TAN as well as PAN card number", "dateCreated": "2016-07-26T11:49:32.000Z", "dateModified": "2016-07-26T11:49:32.000Z", "author": "Keyur", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(?=(^[a-zA-Z]{5}\\d{4}[a-zA-Z]{1}$))|(?=(^[a-zA-Z]{4}[0-9]{5}[a-zA-Z]{1}?$)))", "permalinkFragment": "oF3kL5", "isFavorite": false, "isStarred": false}, {"title": "query parser", "description": "", "dateCreated": "2016-07-26T15:02:58.000Z", "dateModified": "2016-07-26T15:02:58.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\s]+:)?\"([^\"]*)\"|([^\\s]+:)?[^\\s\"]+", "permalinkFragment": "sF3hT7", "isFavorite": false, "isStarred": false}, {"title": "Capture example", "description": "", "dateCreated": "2016-07-26T15:08:25.000Z", "dateModified": "2016-07-26T15:08:25.000Z", "author": "Darkoeur", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\[[\\.\\-\\w]+\\])", "permalinkFragment": "dB5eE5", "isFavorite": false, "isStarred": false}, {"title": "MDS Testing - first regex", "description": "", "dateCreated": "2016-07-26T19:35:54.000Z", "dateModified": "2016-07-26T19:35:54.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "MDS\\s*\\d+\\s+([^\\r\\n\\s]+)[^\\r\\n]*\\s+Chassis", "permalinkFragment": "aP8aT6", "isFavorite": false, "isStarred": false}, {"title": "cm_mmc & -_-", "description": "exactly 3 -_- after cm_mmc", "dateCreated": "2016-07-27T00:40:55.000Z", "dateModified": "2016-07-27T00:40:55.000Z", "author": "Sasha", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(cm_mmc).*(-_-).*(-_-).*(-_-)", "permalinkFragment": "hW1lF6", "isFavorite": false, "isStarred": false}, {"title": "prima", "description": "", "dateCreated": "2016-07-27T14:30:11.000Z", "dateModified": "2016-07-27T14:30:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/PrimoLivello(\\/|$)[a-zA-Z]*", "permalinkFragment": "uH7fN5", "isFavorite": false, "isStarred": false}, {"title": "\\/PrimoLivello(\\/|$)[a-zA-Z]*", "description": "\\/PrimoLivello(\\/|$)[a-zA-Z]*", "dateCreated": "2016-07-27T14:30:29.000Z", "dateModified": "2016-07-27T14:30:29.000Z", "author": "\\/PrimoLivello(\\/|$)[a-zA-Z]*", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/PrimoLivello(\\/|$)[a-zA-Z]*", "permalinkFragment": "iC8cT2", "isFavorite": false, "isStarred": false}, {"title": "firstname and lastname", "description": "Passed for all the names below:\nfirstname  middlename M\u00fcller\nBoromir Stark\nAmy Senn\nJames Murphy\nPeter Bauman\nTivon Moffitt\nJohn Paul Mulhern\nBob Pounds\nTim Prinsen\nSteven L. Timmel\nJeffrey E. Johnston\nChristopher B. Pro...\nAnthony Lunceford\nJoe Massa\nMathias d'Arras\nMartin Luther King Jr.\nHector Sausage-Hausen\nMartin king, Jr.\nANDA IVANOVA-KRIVONOGOVA\nClooney George Timothy\nWilliam Pitt Bradley\nSTEVE SMITH\nStev3 Smith\nSTeve Smith\nSteve SMith\nSteve Sm1th\nd'Are to Beaware\nJo Blow\nHyoung Kyoung Wu\nMike O'Neal\nSteve Johnson-Smith\nJozef-Schmozev Hiemdel\nO Henry Smith\nMathais d'Arras\nMartin Luther King Jr\nDowntown-James Brown\nDarren McCarty\nGeorge De FunkMaster\nKurtis B-Ball Basketball\nAhmad el Jeffe\nRonan Ram\u00f3n O'Gara", "dateCreated": "2016-07-27T14:55:37.000Z", "dateModified": "2016-07-27T14:55:37.000Z", "author": "Ellen Higashi", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*?)\\s([\\w\u00e1\u00e2\u00e0\u00e3\u00e7\u00e9\u00ea\u00ed\u00f3\u00f4\u00f5\u00fa\u00fc\u00c1\u00c2\u00c0\u00c3\u00c7\u00c9\u00ca\u00cd\u00d3\u00d4\u00d5\u00da\u00dc]+\\-?\\'?\\w+\\.*?$)", "permalinkFragment": "qZ9uL9", "isFavorite": false, "isStarred": false}, {"title": "AND", "description": "", "dateCreated": "2016-07-27T15:51:27.000Z", "dateModified": "2016-07-27T15:51:27.000Z", "author": "Marco", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<(\\w+\\b)[^>]*>([\\S\\s]*?)<\\/\\1>", "permalinkFragment": "bT1nR5", "isFavorite": false, "isStarred": false}, {"title": "song to html", "description": "", "dateCreated": "2016-07-27T18:57:53.000Z", "dateModified": "2016-07-27T18:57:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?s)^(Verse \\d|Chorus |Interlude|Ending|Pre-Chorus|Bridge|Chorus \\d)$(.*?)(?:(?:\\r*\\n){2})", "permalinkFragment": "lY1vO3", "isFavorite": false, "isStarred": false}, {"title": "c#", "description": "c#", "dateCreated": "2016-07-27T19:46:42.000Z", "dateModified": "2016-07-27T19:46:42.000Z", "author": "cj", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Za-z\\u00C0-\\u017F]+", "permalinkFragment": "lK6bL3", "isFavorite": false, "isStarred": false}, {"title": "Google Analytics UI URLs Extraction", "description": "Inline Report Filter Conditions Extraction", "dateCreated": "2016-07-27T23:51:36.000Z", "dateModified": "2016-07-27T23:51:36.000Z", "author": "Brian", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "table\\.advFilter=\\[(\\[.+\\])\\]", "permalinkFragment": "tI1dI8", "isFavorite": false, "isStarred": false}, {"title": "Eclipse coords numbers", "description": "", "dateCreated": "2016-07-28T03:17:51.000Z", "dateModified": "2016-07-28T03:17:51.000Z", "author": "Rashmin Dandekar", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([-a-z0-9.]+)+", "permalinkFragment": "sT3bU1", "isFavorite": false, "isStarred": false}, {"title": "Match everything before first vowel for pig latin conversion", "description": "matches all the consonants (including qu as a consonant, since for these purposes it is) up to the first vowel and splits it on that", "dateCreated": "2016-07-28T03:56:16.000Z", "dateModified": "2016-07-28T03:56:16.000Z", "author": "Todd Nestor", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b([^a,e,i,o,u]{0,}qu|[^a,e,i,o,u]+)([a,e,i,o,u][a-z]+)?", "permalinkFragment": "eA0iJ7", "isFavorite": false, "isStarred": false}, {"title": "AU EMPDUPE file format", "description": "", "dateCreated": "2016-07-28T05:30:29.000Z", "dateModified": "2016-07-28T05:30:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.{628})", "permalinkFragment": "tR9zH3", "isFavorite": false, "isStarred": false}, {"title": "Allow only one space after a word", "description": "This will allow only one space after a word.And also do not start with a space.", "dateCreated": "2016-07-28T08:48:58.000Z", "dateModified": "2023-07-23T21:13:37.000Z", "author": "Rama Krishna", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 2, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[A-Za-z]( ?[A-Za-z] ?)*$", "permalinkFragment": "mU7lA6", "isFavorite": false, "isStarred": false}, {"title": "Number", "description": "", "dateCreated": "2016-07-28T09:08:08.000Z", "dateModified": "2016-07-28T09:08:08.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([+-]?((\\d+(\\.\\d*)?)|(\\.\\d+)))", "permalinkFragment": "wR0yX6", "isFavorite": false, "isStarred": false}, {"title": "Search a keyword NOT in html tags", "description": "", "dateCreated": "2016-07-28T09:43:29.000Z", "dateModified": "2016-07-28T09:43:29.000Z", "author": "White Dragon", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(trekking)(?![\\w\\s\\t]*=?[\\s\\t]*\"{1}[^\"]*\"{1}[^<>\"]*>{1})(?![^>\"]*\"{1}[\\s\\t]*>{1})(?!<\\/strong>)", "permalinkFragment": "nD8jN5", "isFavorite": false, "isStarred": false}, {"title": "UUID4 Validator", "description": "Validates UUID version 4", "dateCreated": "2016-07-28T09:58:22.000Z", "dateModified": "2016-07-28T09:58:22.000Z", "author": "Agust\u00edn Bouillet", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-fA-F\\d]{8}(?:\\-[a-fA-F\\d]{4}){3}\\-[a-fA-F\\d]{12}$", "permalinkFragment": "cC1yI5", "isFavorite": false, "isStarred": false}, {"title": "Demo", "description": "", "dateCreated": "2016-07-28T11:33:15.000Z", "dateModified": "2016-07-28T11:33:15.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "age\\s[a-z]+:\\s*\\d+\\s*(-\\s*\\d+\\s*(years?|months?|yrs)/\\d+\\s*)+years and up", "permalinkFragment": "sI3sO4", "isFavorite": false, "isStarred": false}, {"title": "Demo2", "description": "", "dateCreated": "2016-07-28T11:35:33.000Z", "dateModified": "2016-07-28T11:35:33.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "age\\s[a-z]+:\\s*\\d+\\s*(-\\s*\\d+\\s*(years?|months?|yrs)/\\d+\\s*)+years and up", "permalinkFragment": "nQ2mR4", "isFavorite": false, "isStarred": false}, {"title": "Replace DEFINER in MySQL", "description": "", "dateCreated": "2016-07-28T12:43:30.000Z", "dateModified": "2016-07-28T12:43:30.000Z", "author": "https://gist.github.com/NareshMaharzan", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "DEFINER=`(.*?)`@`(.*?)`", "permalinkFragment": "dE5tT4", "isFavorite": false, "isStarred": false}, {"title": "prova delete", "description": "", "dateCreated": "2016-07-28T14:33:12.000Z", "dateModified": "2016-07-28T14:33:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<DIV\\s*class=\"[^\"]*lesson.*><[aA][^>]*class=large-text[^>]*href\\s*=[\\*\"|'](.*?)[\\*\"|']>((.|\\n)*?)<\\/[aA]>[.|\\n]*<\\/DIV|div>", "permalinkFragment": "uO4sI2", "isFavorite": false, "isStarred": false}, {"title": "Endpoint Monitor Summary Regex", "description": "", "dateCreated": "2016-07-28T15:11:51.000Z", "dateModified": "2016-07-28T15:11:51.000Z", "author": "Palomba", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".* behavior: (?<NumActive>\\d+) active, (?<NumLoading>\\d+) loading, \\d+ loaded, (?<NumFailed>\\d+) failed, \\d+ idle, (?<NumTotal>\\d+) total", "permalinkFragment": "jT3pS0", "isFavorite": false, "isStarred": false}, {"title": "Match YouTube URL", "description": "Match YouTube URLs", "dateCreated": "2016-07-28T15:15:08.000Z", "dateModified": "2016-07-28T15:15:08.000Z", "author": "Xaotic", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https?:\\/{2}(m\\.|www\\.)?(youtube\\.com|youtu\\.be)(\\/[a-z0-9?=/]*)?", "permalinkFragment": "wB5oY3", "isFavorite": false, "isStarred": false}, {"title": "Email validate", "description": "Validation of email with no allow to only special char before and after @ symbol, generic validation for domain", "dateCreated": "2016-07-28T16:26:27.000Z", "dateModified": "2016-07-28T16:26:27.000Z", "author": "Kamil Popis", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*[^~@#\\^\\$&\\*\\(\\)\\-_\\+=\\[\\]\\{\\}\\|\\\\,\\.\\?\\s]@[^~@#\\^\\$&\\*\\(\\)\\-_\\+=\\[\\]\\{\\}\\|\\\\,\\.\\?\\s]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$", "permalinkFragment": "jE6pX9", "isFavorite": false, "isStarred": false}, {"title": "ipreo table parser", "description": "", "dateCreated": "2016-07-28T20:06:11.000Z", "dateModified": "2016-07-28T20:06:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=[\\r\\n]+)\\s*([0-9]+[\\/][^\\r\\n\\s])+\\s*[0-9][^\\r\\n]*[\\r\\n]+", "permalinkFragment": "dW5rL2", "isFavorite": false, "isStarred": false}, {"title": "Troca de nome do componente", "description": "Troca de nome do componente", "dateCreated": "2016-07-28T20:07:38.000Z", "dateModified": "2016-07-28T20:07:38.000Z", "author": "Alair", "flavor": "pcre", "delimiter": "/", "flags": "gism", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(inherited )(MgSpeedButton1)(:[ ]TMgSpeedButton)", "permalinkFragment": "pA9wX6", "isFavorite": false, "isStarred": false}, {"title": "demo", "description": "", "dateCreated": "2016-07-28T22:26:12.000Z", "dateModified": "2016-07-28T22:26:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(!(?!~))|((?<!!)~)", "permalinkFragment": "wW3gT7", "isFavorite": false, "isStarred": false}, {"title": "Catch before trailing dots", "description": "", "dateCreated": "2016-07-28T23:53:29.000Z", "dateModified": "2016-07-28T23:53:29.000Z", "author": "Mehrad", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".+}(?=[.]{2,})", "permalinkFragment": "tC5jU8", "isFavorite": false, "isStarred": false}, {"title": "pronouceable strings v2", "description": "", "dateCreated": "2016-07-29T04:22:57.000Z", "dateModified": "2016-07-29T04:22:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(([b-df-hj-np-tv-xz][aeiou])|q(?=u)){5}|((([B-DF-HJ-NP-TV-XZ][AEIOU])|Q(?=U)){5})", "permalinkFragment": "aG2yH3", "isFavorite": false, "isStarred": false}, {"title": "Gyproc", "description": "", "dateCreated": "2016-07-29T07:38:36.000Z", "dateModified": "2016-07-29T07:38:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(%(.[^%]*)%)", "permalinkFragment": "mS8oZ1", "isFavorite": false, "isStarred": false}, {"title": "Top Domain", "description": "", "dateCreated": "2016-07-29T14:06:11.000Z", "dateModified": "2016-07-29T14:06:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<dns_domain>\\w+)$", "permalinkFragment": "hQ8cN2", "isFavorite": false, "isStarred": false}, {"title": "tags", "description": "", "dateCreated": "2016-07-29T14:16:28.000Z", "dateModified": "2016-07-29T14:16:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<abbr>(\\S.*?)<\\/abbr>", "permalinkFragment": "xO8oY9", "isFavorite": false, "isStarred": false}, {"title": "Date Match", "description": "", "dateCreated": "2016-07-29T15:45:48.000Z", "dateModified": "2016-07-29T15:45:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(201[6-9])-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])", "permalinkFragment": "iM1yK0", "isFavorite": false, "isStarred": false}, {"title": "Strip domain part from subdomain", "description": "Strip domain part from subdomain of any lengt. May not catch some of rarely used CC TLDs with long 2nd level domain part like:\n.dnepropetrovsk.ua\n.poznan.pl \n.museum.mw", "dateCreated": "2016-07-30T12:53:34.000Z", "dateModified": "2016-07-30T12:53:34.000Z", "author": "diffore", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z0-9-]+)(\\.[a-zA-Z]{2,5})?(\\.[a-zA-Z]+$)", "permalinkFragment": "sJ7uU4", "isFavorite": false, "isStarred": false}, {"title": "List open to close", "description": "List total tag", "dateCreated": "2016-07-30T13:08:46.000Z", "dateModified": "2016-07-30T13:08:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<p class=\"outline\">&lt;outline&gt;<\\/p>)(.*)(<p class=\"outline-end\">&lt;outline-end&gt;<\\/p>)", "permalinkFragment": "mB6uQ3", "isFavorite": false, "isStarred": false}, {"title": "zero", "description": "", "dateCreated": "2016-07-30T16:36:32.000Z", "dateModified": "2016-07-30T16:36:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([^|]*)(\\|())\\|0\\|?(\\d[^|]*)\\|([^|]*)\\|([^|]*)\\|([^|]*)$", "permalinkFragment": "jN1vC9", "isFavorite": false, "isStarred": false}, {"title": "zero", "description": "", "dateCreated": "2016-07-30T16:37:25.000Z", "dateModified": "2016-07-30T16:37:25.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([^|]*)\\|0\\|?(\\d[^|]*)\\|([^|]*)\\|([^|]*)\\|([^|]*)$", "permalinkFragment": "iB5zY3", "isFavorite": false, "isStarred": false}, {"title": "num", "description": "", "dateCreated": "2016-07-30T16:37:38.000Z", "dateModified": "2016-07-30T16:37:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([^|]*)\\|\\d+\\|?(\\d[^|]*)\\|([^|]*)\\|([^|]*)\\|([^|]*)$", "permalinkFragment": "pT1oM5", "isFavorite": false, "isStarred": false}, {"title": "Is Italiy mobile number", "description": "Check if it is an Italy legit mobile number", "dateCreated": "2016-07-31T13:22:05.000Z", "dateModified": "2016-07-31T13:22:05.000Z", "author": "Nicolas Rafalowski", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([+]?39)?(3)(\\d{8,9})$", "permalinkFragment": "oD0pX3", "isFavorite": false, "isStarred": false}, {"title": "\u90ae\u7bb1", "description": "\u9a8c\u8bc1\u90ae\u7bb1", "dateCreated": "2016-08-01T00:10:07.000Z", "dateModified": "2016-08-01T00:10:07.000Z", "author": "\u5218\u6ce2", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\w[-\\w.+]*@([A-Za-z0-9][-A-Za-z0-9]+\\.)+[A-Za-z]{2,14}", "permalinkFragment": "pI5eI7", "isFavorite": false, "isStarred": false}, {"title": "a", "description": "a", "dateCreated": "2016-08-01T09:36:43.000Z", "dateModified": "2016-08-01T09:36:43.000Z", "author": "a", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[0-9]{2})+$", "permalinkFragment": "lG0zT5", "isFavorite": false, "isStarred": false}, {"title": "Onclick events detector", "description": "Cut events from tags", "dateCreated": "2016-08-01T10:42:14.000Z", "dateModified": "2016-08-01T10:42:14.000Z", "author": "Romario5", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "on\\w+\\s?=\\s?+(\"|')?[^\"'>]*(\"|')?(?=>)", "permalinkFragment": "iX8hE7", "isFavorite": false, "isStarred": false}, {"title": "Polls General", "description": "", "dateCreated": "2016-08-01T15:47:57.000Z", "dateModified": "2016-08-01T15:47:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([^0-9,\\-]+\\s*)(\\-{2}?\\s+|\\d{0,5}\\.?\\d{0,3}?\\s+)(\\-{1,2}?\\s+|\\d{0,5}\\.?\\d{0,3}?\\s+)(\\-{1,2}?\\s+|\\d{0,5}\\.?\\d{0,3}?\\s+)(\\-{1,2}?\\s+|\\d{0,5}\\.?\\d{0,3}?\\s+)(\\-{1,2}?\\s+|\\d{0,5}\\.?\\d{0,3}?\\s+)(\\-{1,2}?\\s+|\\d{0,5}\\.?\\d{0,3}?\\s+)(\\-{1,2}?\\s+|\\d{0,5}\\.?\\d{0,3}?\\s+)(\\-{1,2}?\\s+|\\d{0,5}\\.?\\d{0,3}?\\s+)(\\-{1,2}?\\s+|\\d{0,5}\\.?\\d{0,3}?\\s+)(\\-{1,2}?\\s+|\\d{0,5}\\.?\\d{0,3}?\\s+)", "permalinkFragment": "yB9yW4", "isFavorite": false, "isStarred": false}, {"title": "TE - Array", "description": "", "dateCreated": "2016-08-01T18:13:07.000Z", "dateModified": "2016-08-01T18:13:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\{\\$\\w+(?:\\.\\w+)+\\}", "permalinkFragment": "aJ6vD0", "isFavorite": false, "isStarred": false}, {"title": "date", "description": "", "dateCreated": "2016-08-01T19:31:52.000Z", "dateModified": "2016-08-01T19:31:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(10|11|12|[0]{1}[1-9]{1})\\/[0][1-9]|[10-31]?", "permalinkFragment": "aR6yL0", "isFavorite": false, "isStarred": false}, {"title": "Font Awesome Parser", "description": "", "dateCreated": "2016-08-01T19:40:27.000Z", "dateModified": "2016-08-01T19:40:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\.(fa-(?:\\w+(?:-)?)+):before\\s+{\\s*content:\\s*\"(.+)\";\\s+}", "permalinkFragment": "fZ6qK1", "isFavorite": false, "isStarred": false}, {"title": "Font Awesome Parser", "description": "", "dateCreated": "2016-08-01T19:41:11.000Z", "dateModified": "2016-08-01T19:41:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\.(fa-(?:\\w+(?:-)?)+):before\\s+{\\s*content:\\s*\"(.+)\";\\s+}", "permalinkFragment": "bH1iI9", "isFavorite": false, "isStarred": false}, {"title": "font-awesome", "description": "", "dateCreated": "2016-08-01T19:58:58.000Z", "dateModified": "2016-08-01T19:58:58.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\.(fa-(?:\\w+(?:-)?)+):before\\s+{\\s*content:\\s*\"(.+)\";\\s+}", "permalinkFragment": "zD2qZ6", "isFavorite": false, "isStarred": false}, {"title": "membership persons url", "description": "", "dateCreated": "2016-08-02T06:57:39.000Z", "dateModified": "2016-08-02T06:57:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/api\\/v1\\/memberships\\/(?<membershipId>[^\\?\\/$]+)\\/persons(?<queryparams>\\?.*|$)", "permalinkFragment": "dI3mE7", "isFavorite": false, "isStarred": false}, {"title": "test name furniture", "description": "", "dateCreated": "2016-08-02T11:16:10.000Z", "dateModified": "2016-08-02T11:16:10.000Z", "author": "Valmaks", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d*)( )(\\D*)( )(\\w{1,2}-\\d{3} \\d{3})(.*)(\\(.*)", "permalinkFragment": "gF0aA9", "isFavorite": false, "isStarred": false}, {"title": "000000000000000001", "description": "", "dateCreated": "2016-08-02T11:36:55.000Z", "dateModified": "2016-08-02T11:36:55.000Z", "author": "", "flavor": "pcre", "delimiter": "`", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "/~/media/McKinsey/", "permalinkFragment": "xJ3yW1", "isFavorite": false, "isStarred": false}, {"title": "Grep string with forward slashes", "description": "", "dateCreated": "2016-08-02T14:10:56.000Z", "dateModified": "2016-08-02T14:10:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-z0-9+]*\\/[a-z0-9_+]*\\/[a-z0-9_+]*|[0-9+]*\\/[a-z0-9*]*", "permalinkFragment": "fT9mG0", "isFavorite": false, "isStarred": false}, {"title": "test1", "description": "", "dateCreated": "2016-08-02T16:26:46.000Z", "dateModified": "2016-08-02T16:26:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".*\"(?:GET|HEAD|OPTIONS|TRACE|CONNECT|PATCH)\\s+[^\"]*\"\\s+(?:-)?(\\d+)?\\s+(\\d+).*", "permalinkFragment": "yD6iK9", "isFavorite": false, "isStarred": false}, {"title": "URL find inside text", "description": "Search url/link inside text, with/without schema, and with/without path/query", "dateCreated": "2016-08-02T17:03:40.000Z", "dateModified": "2016-08-02T17:03:40.000Z", "author": "ZeCompadre", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:[a-z]{3,9}:\\/\\/?[\\-;:&=\\+\\$,\\w]+?[a-z0-9\\.\\-]+|[\\/a-z0-9]+\\.|[\\-;:&=\\+\\$,\\w]+@)[a-z0-9\\.\\-]+(?:(?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??[\\-\\+=&;%@\\.\\w_]*#?[\\.\\!\\/\\\\\\w]*)?", "permalinkFragment": "aC1zZ0", "isFavorite": false, "isStarred": false}, {"title": "Uno o pi\u00f9 caratteri di parola seguiti da opz punto o spazio, +", "description": "", "dateCreated": "2016-08-02T17:50:34.000Z", "dateModified": "2016-08-02T17:50:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\w{1,}[. ]?)+$", "permalinkFragment": "oX6xP1", "isFavorite": false, "isStarred": false}, {"title": "Youtube Regex", "description": "Get Youtube Link", "dateCreated": "2016-08-02T20:48:34.000Z", "dateModified": "2016-08-02T20:48:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(https?\\:\\/\\/)?((www\\.)?youtube\\.com|youtu\\.?be|youtube\\.com\\.br)\\/.+$", "permalinkFragment": "fY3kC3", "isFavorite": false, "isStarred": false}, {"title": "Youtube Regex", "description": "Get Youtube Link", "dateCreated": "2016-08-02T20:48:35.000Z", "dateModified": "2016-08-02T20:48:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(https?\\:\\/\\/)?((www\\.)?youtube\\.com|youtu\\.?be|youtube\\.com\\.br)\\/.+$", "permalinkFragment": "qB3cV7", "isFavorite": false, "isStarred": false}, {"title": "match string", "description": "", "dateCreated": "2016-08-03T02:13:47.000Z", "dateModified": "2016-08-03T02:13:47.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "viewInstanceKey:\\'\\w+", "permalinkFragment": "uN3kK7", "isFavorite": false, "isStarred": false}, {"title": "Get params from function source", "description": "", "dateCreated": "2016-08-03T04:36:49.000Z", "dateModified": "2016-08-03T04:36:49.000Z", "author": "Mike Nahmias", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=params\\.).*?(?=\\])", "permalinkFragment": "yJ5vX2", "isFavorite": false, "isStarred": false}, {"title": "simple regex", "description": "The password entered is not in correct format (minimum eight characters, at least one uppercase, one lowercase, one number, and one special character)", "dateCreated": "2016-08-03T07:44:44.000Z", "dateModified": "2016-08-03T07:44:44.000Z", "author": "Nguyen Pham", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.{8,})(?=.*\\d)(?![.\\n])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=_-]).*$", "permalinkFragment": "fZ5eP6", "isFavorite": false, "isStarred": false}, {"title": "Restrict white space & # tag", "description": "", "dateCreated": "2016-08-03T09:10:39.000Z", "dateModified": "2016-08-03T09:10:39.000Z", "author": "sanju", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[^\\s#]+$", "permalinkFragment": "cM1iQ0", "isFavorite": false, "isStarred": false}, {"title": "abap comment", "description": "", "dateCreated": "2016-08-03T10:07:29.000Z", "dateModified": "2016-08-03T10:07:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?m:((?<=\").*?$)|((?i:\\*)([\\t ].*?)?$))", "permalinkFragment": "dA2eL4", "isFavorite": false, "isStarred": false}, {"title": "ABAP method", "description": "", "dateCreated": "2016-08-03T10:08:54.000Z", "dateModified": "2016-08-03T10:08:54.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=method ).+?(?=\\.)", "permalinkFragment": "aW7cU6", "isFavorite": false, "isStarred": false}, {"title": "ins tag with dcmads class", "description": "", "dateCreated": "2016-08-03T10:35:48.000Z", "dateModified": "2016-08-03T10:35:48.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\n\\s\\'\\\"](<ins[^<]+class=[\\\"'\\\\'\\\\\"][^<]*\\s*dcmads\\s*[^<]*[\\\"'\\\\'\\\\\"][^<]+>)", "permalinkFragment": "xS6oO0", "isFavorite": false, "isStarred": false}, {"title": "phones russian", "description": "", "dateCreated": "2016-08-03T11:50:30.000Z", "dateModified": "2016-08-03T11:50:30.000Z", "author": "ConConovaloff", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((8|\\+7?)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?([\\d\\- ]{7,10})", "permalinkFragment": "cF3kM8", "isFavorite": false, "isStarred": false}, {"title": "c extract", "description": "", "dateCreated": "2016-08-03T14:04:57.000Z", "dateModified": "2016-08-03T14:04:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(c\\.)\\d+[\\+,\\-]\\d+", "permalinkFragment": "aQ5vF4", "isFavorite": false, "isStarred": false}, {"title": "Anything but Mr./Dr./Ms./Mrs. ", "description": "", "dateCreated": "2016-08-03T17:42:38.000Z", "dateModified": "2016-08-03T17:42:38.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!([MDS]r|Ms|Mrs)\\.).*$\n", "permalinkFragment": "sT2oI3", "isFavorite": false, "isStarred": false}, {"title": "Rew", "description": "", "dateCreated": "2016-08-03T18:47:32.000Z", "dateModified": "2016-08-03T18:47:32.000Z", "author": "SLD", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "123", "permalinkFragment": "eU4fF0", "isFavorite": false, "isStarred": false}, {"title": "PaySafeCard (PSC) Code", "description": "Matches codes with and without minus (-)\nPrevents fake codes like \"1234-1234-1234-1234\"", "dateCreated": "2016-08-03T19:11:56.000Z", "dateModified": "2016-08-03T19:11:56.000Z", "author": "timmyrs", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(0[0-9]{3}(\\-|)[0-9]{4}(\\-|)[0-9]{4}(\\-|)[0-9]{4})", "permalinkFragment": "wN7xK3", "isFavorite": false, "isStarred": false}, {"title": "US Format Short Date String", "description": "Matches any short date string between 1/1/2000 - 12/31/2199 in the formats: d/m/yyyy, dd/m/yyyy, d/mm/yyyy, or dd/mm/yyyy", "dateCreated": "2016-08-03T19:33:24.000Z", "dateModified": "2016-08-03T19:33:24.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(1[0-2]|0{0,1}[1-9])\\/(3[0-1]|2[0-9]|1[0-9]|0{0,1}[1-9])\\/(2[0-1][0-9]{2})$", "permalinkFragment": "gS3wS2", "isFavorite": false, "isStarred": false}, {"title": "Regex 13", "description": "Reference Citation parser 13", "dateCreated": "2016-08-03T21:59:34.000Z", "dateModified": "2016-08-03T21:59:34.000Z", "author": "Ali Momeni", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<ChapterAuthors>[A-Z'a-z,\\s]+?)(?: et al)?:(?<ChapterTitle>[A-Za-z,#\\(\\)\\/0-9\"\u2019'&\\s\u00f6]+)\\.\\s?In\\s?(?<BookAuthors>[A-Za-z,\\s]+?)(?: et al)?:(?<BookTitle>[A-Za-z,#\\(\\)0-9\"\u2019'&\\s]+)\\.\\s?(?<Edition>\\d+(?:rd|nd|st|th)\\s(?:[eE]d|[eE]dition|))\\.(?<Location>[-A-Za-z,.\\s]+):(?<Publisher>[-A-Za-z,\\(\\)\\/&\\s]+)[\\.]\\s?(?<StartPage>\\w?\\d+\\w?)-\\s?(?<EndPage>\\w?\\d+\\w?)[,\\.;]\\s?(?<Year>\\d{4})", "permalinkFragment": "xY2wB8", "isFavorite": false, "isStarred": false}, {"title": "Eclipse Keyword SPECGRID", "description": "Retrieve the first numeric parameters of the SPECGRID keyword", "dateCreated": "2016-08-04T08:35:41.000Z", "dateModified": "2016-08-04T08:35:41.000Z", "author": "Rashmin Dandekar", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "SPECGRID.*?\\n([ \\d]+)[\\s\\S]*?\\/", "permalinkFragment": "pO3dU5", "isFavorite": false, "isStarred": false}, {"title": "Pass", "description": "", "dateCreated": "2016-08-04T09:31:09.000Z", "dateModified": "2016-08-04T09:31:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,20}$", "permalinkFragment": "xC9gT9", "isFavorite": false, "isStarred": false}, {"title": "\u96fb\u5b50\u767c\u7968", "description": "\u96fb\u5b50\u767c\u7968", "dateCreated": "2016-08-04T10:47:33.000Z", "dateModified": "2016-08-04T10:47:33.000Z", "author": "RJpolar", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Z]{2}\\d{8}", "permalinkFragment": "nZ2zH4", "isFavorite": false, "isStarred": false}, {"title": "Remove Script Tags", "description": "", "dateCreated": "2016-08-04T14:51:49.000Z", "dateModified": "2016-08-04T14:51:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ius", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<script.*?\\/script>", "permalinkFragment": "uZ5gM2", "isFavorite": false, "isStarred": false}, {"title": "Find ToCs", "description": "", "dateCreated": "2016-08-04T16:39:52.000Z", "dateModified": "2016-08-04T16:39:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "1\\.\\s\\[(.*?)(?s).+?(?=^$)", "permalinkFragment": "lQ3qR3", "isFavorite": false, "isStarred": false}, {"title": "Vimeo video links", "description": "Matches vimeo links with and without #t=xxs at the end", "dateCreated": "2016-08-04T16:57:09.000Z", "dateModified": "2016-08-04T16:57:09.000Z", "author": "Jurij", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https:\\/\\/(?:www.)?vimeo.com\\/([0-9]{9})(?:\\#t=(\\d+)s)?", "permalinkFragment": "yA2yI7", "isFavorite": false, "isStarred": false}, {"title": "Liveleak videos", "description": "Match liveleak videos", "dateCreated": "2016-08-04T17:03:03.000Z", "dateModified": "2016-08-04T17:03:03.000Z", "author": "Jurij", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:http:\\/\\/)?www.liveleak.com\\/view\\?i=(\\w{14})", "permalinkFragment": "oV8mR5", "isFavorite": false, "isStarred": false}, {"title": "Validate npm libraries", "description": "Validate npm libraries in the format library-name@version", "dateCreated": "2016-08-04T19:38:45.000Z", "dateModified": "2016-08-04T19:38:45.000Z", "author": "Mateo Guzman", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?![\\.-])([\\w-\\.]+(@\\d+(\\.\\d+){0,2})?(-\\w+(\\.\\d+){0,3})?)$", "permalinkFragment": "pY8wL0", "isFavorite": false, "isStarred": false}, {"title": "Canadian Zip code - Optional space or hyphen seperator", "description": "Match a string that's completely made up of a Canadian Zip code that can contain a space or hyphen as a seperator.", "dateCreated": "2016-08-04T19:53:07.000Z", "dateModified": "2016-08-04T19:53:07.000Z", "author": "Mike Bald", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[ABCEGHJKLMNPRSTVXY][0-9][ABCEGHJKLMNPRSTVWXYZ][ -]?[0-9][ABCEGHJKLMNPRSTVWXYZ][0-9]$", "permalinkFragment": "zD8mM8", "isFavorite": false, "isStarred": false}, {"title": "Only Numbers from CPF", "description": "", "dateCreated": "2016-08-04T21:16:47.000Z", "dateModified": "2016-08-04T21:16:47.000Z", "author": "Thiago Mata", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9]*)[]\\.|_|-]*([0-9]*)[]\\.|_|-]*([0-9]*)[]\\.|_|-]*([0-9]*)[]\\.|_|-]*([0-9]*)[]\\.|_|-]*", "permalinkFragment": "pE2bP5", "isFavorite": false, "isStarred": false}, {"title": "zz", "description": "xx", "dateCreated": "2016-08-04T21:35:46.000Z", "dateModified": "2016-08-04T21:35:46.000Z", "author": "x", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "v", "permalinkFragment": "tH0dK6", "isFavorite": false, "isStarred": false}, {"title": "Puush", "description": "Regex that matches puu.sh links", "dateCreated": "2016-08-04T21:39:39.000Z", "dateModified": "2016-08-04T21:39:39.000Z", "author": "Jurij", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(http|https):\\/\\/(?:www\\.)?puu\\.sh\\/(\\w{5})\\/(\\w{10})\\.(\\w{3})", "permalinkFragment": "mV7gI5", "isFavorite": false, "isStarred": false}, {"title": "SoundCloud", "description": "Matches links to songs, playlists and links when clicked from a playlist.", "dateCreated": "2016-08-04T23:09:17.000Z", "dateModified": "2016-08-04T23:09:17.000Z", "author": "Jurij", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(http|https):\\/\\/(?:www\\.)?soundcloud.com\\/((?:[^\\W_]|-)){3,255}\\/(sets|((?:[^\\W_]|-){3,255}))(\\/((?:[^\\W_]|-){3,255})|(\\?in=((?:[^\\W_]|-){3,255})\\/((?:[^\\W_]|-){3,255})\\/((?:[^\\W_]{3,255}|-))|))", "permalinkFragment": "jA3uD4", "isFavorite": false, "isStarred": false}, {"title": "Extract image from string / plain text", "description": "If you have a string with a image URL", "dateCreated": "2016-08-04T23:29:29.000Z", "dateModified": "2016-08-04T23:29:29.000Z", "author": "Cavla", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(https?:\\/\\/.*\\.(?:png|jpg))", "permalinkFragment": "dL3vW9", "isFavorite": false, "isStarred": false}, {"title": "state district", "description": "", "dateCreated": "2016-08-05T01:26:47.000Z", "dateModified": "2016-08-05T01:26:47.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\s?(?P<state>\\d\\d?)\\s?(?P<district>\\d\\d?)", "permalinkFragment": "bR1yP5", "isFavorite": false, "isStarred": false}, {"title": "ProceedingList", "description": "", "dateCreated": "2016-08-05T14:09:55.000Z", "dateModified": "2016-08-05T14:09:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s{4}([A-Z\\s]{10})\\s([A-Z\\s]{8})\\s{1,2}([A-Z\\s]{7})\\s{1,2}([\\d\\s]{9})\\s{1,2}([\\d\\s]{5})\\s{1,2}([\\d\\s]{7})\\s{1,2}([A-Z0-9]{5})\\s([A-Z0-9\\s]{1,17})", "permalinkFragment": "yT9pF7", "isFavorite": false, "isStarred": false}, {"title": "Check for underscore", "description": "", "dateCreated": "2016-08-05T15:16:48.000Z", "dateModified": "2016-08-05T15:16:48.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^a-zA-Z0-1000]", "permalinkFragment": "zR1rT9", "isFavorite": false, "isStarred": false}, {"title": "email", "description": "email validation", "dateCreated": "2016-08-06T11:10:32.000Z", "dateModified": "2016-08-06T11:10:32.000Z", "author": "Chandan", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\w+([!$%&'()*+\\.-]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$", "permalinkFragment": "sK0vG3", "isFavorite": false, "isStarred": false}, {"title": "Season Rename -- Naruto Shippuuden Season Rename", "description": "Season Rename -- Naruto Shippuuden Season Rename\nWill grab that regex and use the same Episode number to rename it with the same file extention as well", "dateCreated": "2016-08-07T07:52:59.000Z", "dateModified": "2016-08-07T07:52:59.000Z", "author": "_tak", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*)_(\\d+\\-\\d+|\\d+)_(.*)\\.(.*)", "permalinkFragment": "jX8gD1", "isFavorite": false, "isStarred": false}, {"title": "complex number", "description": "complex number", "dateCreated": "2016-08-07T13:25:59.000Z", "dateModified": "2016-08-07T13:25:59.000Z", "author": "Yao Xiao", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([-+]?\\d*\\.?\\d*)?([-+]\\d*\\.?\\d*)[ijJ]", "permalinkFragment": "zE3kL9", "isFavorite": false, "isStarred": false}, {"title": "get html tag attributes (name/value)", "description": "", "dateCreated": "2016-08-08T01:42:57.000Z", "dateModified": "2016-08-08T01:42:57.000Z", "author": "mekroth", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-z]+)(?:=\"([\\s\\S]+?)\"(?:\\/>|\\s))?", "permalinkFragment": "yA2uF8", "isFavorite": false, "isStarred": false}, {"title": "C#", "description": "", "dateCreated": "2016-08-08T07:40:04.000Z", "dateModified": "2016-08-08T07:40:04.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:10\\.31\\.(?:6|7)\\.\\d{1,3}|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})", "permalinkFragment": "rH8rW3", "isFavorite": false, "isStarred": false}, {"title": "test1 php", "description": "", "dateCreated": "2016-08-08T11:24:04.000Z", "dateModified": "2016-08-08T11:24:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^\\p{L}\\p{M}\\'\\s\\.\\-]+", "permalinkFragment": "yC9cU9", "isFavorite": false, "isStarred": false}, {"title": "pdfbrev cu spargere la 96", "description": "", "dateCreated": "2016-08-08T12:25:43.000Z", "dateModified": "2016-08-08T12:25:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gUs", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(11\\)(.*)(?:\\(\\d+\\).*)?\\(96\\)(EP\\d{8}\\.\\d)\\s+(\\d{2}.\\d{2}.\\d{4})(?:\\(\\d+\\).*)?\\(97\\)(.*)(?:\\(\\d+\\).*)?\\(80\\).*\\(73\\)(.*)(?:\\(\\d+\\).*)?\\(72\\).*\\(74\\)(.*)(?:\\(\\d+\\).*)?\\(54\\)", "permalinkFragment": "zO8tJ4", "isFavorite": false, "isStarred": false}, {"title": "selects all but first and last", "description": "selects all but the firs tand last charcter (excluding punctuation) of words in a string of words", "dateCreated": "2016-08-08T21:06:17.000Z", "dateModified": "2016-08-08T21:06:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\B[^\\s]+[a-z](?![\\W]|$)", "permalinkFragment": "dN7uR4", "isFavorite": false, "isStarred": false}, {"title": "SMS_TRIGGERS count", "description": "", "dateCreated": "2016-08-08T22:06:04.000Z", "dateModified": "2016-08-08T22:06:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "SMS_TRIGGER:\\s([a-zA-Z0-9\\-]+).*SOURCE:\\s?([a-zA-Z]+).*", "permalinkFragment": "nL8gE4", "isFavorite": false, "isStarred": false}, {"title": "Parse E-Mail Template", "description": "", "dateCreated": "2016-08-08T23:35:44.000Z", "dateModified": "2016-08-08T23:35:44.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\n\\r\\s]*#{ListStart:ExtDocuments}[\\n\\r]([\\w\\n\\r\\s\\<\\>\\#\\{\\}\\/\\-]*)#{ListEnd:ExtDocuments}[\\n\\r\\s]*", "permalinkFragment": "sV2oA2", "isFavorite": false, "isStarred": false}, {"title": "\u641c\u7d22", "description": "", "dateCreated": "2016-08-09T05:31:36.000Z", "dateModified": "2016-08-09T05:31:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<a[.*]href=['\\\"](http[s]?:\\/\\/my\\.hupu\\.com\\/search.*?)['\\\"]>(.*?)<\\/a>", "permalinkFragment": "xK0aV6", "isFavorite": false, "isStarred": false}, {"title": "Admin Activity", "description": "", "dateCreated": "2016-08-09T05:48:29.000Z", "dateModified": "2016-08-09T05:48:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<\\d+>\\S+\\s(\\d{4}-\\d{2}-\\d{2})\\s(\\d{2}\\x3a\\d{2}\\x3a\\d{2}),\\d+\\s\\x5b\\d+\\x5d\\s+\\S+\\s+\\S+\\s\\S+\\s+\\S+\\s+\\S+\\s\\S+\\s\\ServerIPAddress\\x3a\\s\\S+\\s((?:\\d{1,3}\\x2e){3}\\d{1,3})\\s+ClientIPAddress\\x3a\\s(\\S+)\\s\\S+\\s\\S+\\s\\S+\\s\\S+\\s+\\S+\\s\\S+\\s+\\S+\\s\\S+\\s+\\S+\\s\\S+\\s+\\S+\\s+\\S+\\s+MessageText\\x3a\\s(Admin\\sActivity)\\s+UserId\\x3a\\s(\\d+)\\s+UserName\\x3a\\s(\\S+)\\s+Action\\sDate\\/Time\\x3a\\s+\\S+\\s\\S+\\s\\S+\\s+Portal\\sGroup\\sId\\x3a\\s(\\d+)\\s+Portal Group Name\\x3a\\s([a-zA-Z\\s]+)\\s+Action\\sType\\x3a\\s([a-zA-Z\\s]+)\\sAction\\sDetail\\x3a([a-zA-Z0-9\\.\\;\\s\\:]+)\\sArea\\sOf\\sAdministration\\x3a\\s(\\S+)\\s+Portal\\sId\\x3a\\s(\\d+)\\s+Portal\\sName\\x3a\\s([a-zA-Z0-9\\s]+)\\s+Enterprise\\sUser\\x3a\\s(\\S+)", "permalinkFragment": "vD3zN3", "isFavorite": false, "isStarred": false}, {"title": "Inverse Regex", "description": "Matches all strings that *don't* match a given pattern.", "dateCreated": "2016-08-09T09:15:09.000Z", "dateModified": "2016-08-09T09:15:09.000Z", "author": "Paul Buonopane @ NamePros", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!Andrea)(?:[\\S\\s](?!Andrea))*+$", "permalinkFragment": "mP0mE7", "isFavorite": false, "isStarred": false}, {"title": "google play and apple store", "description": "", "dateCreated": "2016-08-09T12:32:05.000Z", "dateModified": "2016-08-09T12:32:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:http(?:s)?:\\/\\/)?(?:www\\.)?(?:play\\.google\\.com\\/|itunes\\.apple\\.com\\/)(?:.+\\/)?", "permalinkFragment": "kY1bR1", "isFavorite": false, "isStarred": false}, {"title": "MDY Date in Slash Form", "description": "MM/DD/YYYY", "dateCreated": "2016-08-09T13:12:45.000Z", "dateModified": "2016-08-09T13:12:45.000Z", "author": "jonnyt", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((0?[1-9])|(1[0-2]))\\/((0?[1-9])|((1|2)[1-9])|(3[0,1]))\\/[1,2][0-9][0-9][0-9]$", "permalinkFragment": "pF2dW5", "isFavorite": false, "isStarred": false}, {"title": "get appid in google and apple store", "description": "get appid in google and apple store", "dateCreated": "2016-08-09T13:40:16.000Z", "dateModified": "2016-08-09T13:40:16.000Z", "author": "pah-an", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:http(?:s)?:\\/\\/)?(?:www\\.)?(?:play\\.google\\.com\\/|itunes\\.apple\\.com\\/)(?:.+\\/)(?:.+)(?:id(\\d+)|(?:\\?id=(.*?)(?:&|$)))", "permalinkFragment": "zO7iD4", "isFavorite": false, "isStarred": false}, {"title": "Digital", "description": "", "dateCreated": "2016-08-09T17:07:51.000Z", "dateModified": "2016-08-09T17:07:51.000Z", "author": "Giuseppe", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\bsia\\b", "permalinkFragment": "lZ0zY0", "isFavorite": false, "isStarred": false}, {"title": "Digital", "description": "", "dateCreated": "2016-08-09T17:10:18.000Z", "dateModified": "2016-08-09T17:10:18.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "aa", "permalinkFragment": "cG5oI7", "isFavorite": false, "isStarred": false}, {"title": "Split words", "description": "Splits all words. Equivelent to String.prototype.split() but doesn't include space characters in the split.\n@see [String.prototype.split](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)", "dateCreated": "2016-08-09T17:52:20.000Z", "dateModified": "2016-08-09T17:52:20.000Z", "author": "JaGretz", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\S+", "permalinkFragment": "pP0nK6", "isFavorite": false, "isStarred": false}, {"title": "Remove Non-Alphanumeric Characters", "description": "Removes all number and letter characters.", "dateCreated": "2016-08-09T17:59:13.000Z", "dateModified": "2016-08-09T17:59:13.000Z", "author": "JaGretz", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^A-Za-z0-9]", "permalinkFragment": "jI5hK6", "isFavorite": false, "isStarred": false}, {"title": "Validate Steam Game Keys", "description": "Like SSD32-SDAV2-DS112", "dateCreated": "2016-08-09T21:09:18.000Z", "dateModified": "2016-08-09T21:09:18.000Z", "author": "chikaldirick", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[A-Z\\d]{5}-[A-Z\\d]{5}-[A-Z\\d]{5}$", "permalinkFragment": "mR7bR7", "isFavorite": false, "isStarred": false}, {"title": "bits to true in mssql", "description": "", "dateCreated": "2016-08-09T23:57:38.000Z", "dateModified": "2016-08-09T23:57:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^\\$]\\s1([,|)])", "permalinkFragment": "aD5hR1", "isFavorite": false, "isStarred": false}, {"title": "comments in file", "description": "detect common one line comments in file", "dateCreated": "2016-08-10T06:36:10.000Z", "dateModified": "2016-08-10T06:36:10.000Z", "author": "ralph", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/\\/.*", "permalinkFragment": "mY2xT6", "isFavorite": false, "isStarred": false}, {"title": "Sql where in list", "description": "", "dateCreated": "2016-08-10T06:46:19.000Z", "dateModified": "2016-08-10T06:46:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^.*$)", "permalinkFragment": "sZ1zH9", "isFavorite": false, "isStarred": false}, {"title": "iOS Retain Cycles", "description": "", "dateCreated": "2016-08-10T08:11:09.000Z", "dateModified": "2016-08-10T08:11:09.000Z", "author": "Iulian Onofrei", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "strong((?!ViewController).)+ViewController \\*", "permalinkFragment": "fO3qQ7", "isFavorite": false, "isStarred": false}, {"title": "privatmarket b2c", "description": "Detect b2c", "dateCreated": "2016-08-10T08:37:24.000Z", "dateModified": "2016-08-10T08:37:24.000Z", "author": "waSRull", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "privatmarket\\.ua\\/(?!business|\\d+)", "permalinkFragment": "jQ6xB5", "isFavorite": false, "isStarred": false}, {"title": "right operand of parametirezed sql like expressions for sybase", "description": "", "dateCreated": "2016-08-10T12:01:11.000Z", "dateModified": "2016-08-10T12:01:11.000Z", "author": "robessog", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\s|\\()like(\\s|\\))\\s*\\(('((\\w|%|'{2})]*)')\\s*\\+\\s?@p\\d+\\s*\\+('%')\\)", "permalinkFragment": "uR3zH1", "isFavorite": false, "isStarred": false}, {"title": "Validate phones", "description": "", "dateCreated": "2016-08-10T12:22:02.000Z", "dateModified": "2016-08-10T12:22:02.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\+\\d+(-*\\d*)*\\d\\/\\ ?\\d+(\\ *\\d*)*(\\;.+)*)", "permalinkFragment": "jX5gR0", "isFavorite": false, "isStarred": false}, {"title": "FR to Email message file", "description": "change FR to fit email message file template", "dateCreated": "2016-08-10T15:10:37.000Z", "dateModified": "2016-08-10T15:10:37.000Z", "author": "M", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.+:)\\s*\\[(.+)\\]\\s*\\n", "permalinkFragment": "yH0dF1", "isFavorite": false, "isStarred": false}, {"title": "MDD_w_ShipTo_&DocumentNo", "description": "", "dateCreated": "2016-08-10T15:52:19.000Z", "dateModified": "2016-08-10T15:52:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<a1>\\d{10})_(?<a2>\\d{10})_(?<a3>\\d{10})_(?<a43>\\d{10})_(?<a5>\\D{4})_(?<a6>\\d{2}).(?<a7>\\d{2}).(?<a8>\\d{4})_(?<a9>\\D{2})_(?<a10>\\d{2}).(?<a11>\\d{2}).(?<a12>\\d{4})_(?<a13>\\d+).(?<a14>\\D{3})", "permalinkFragment": "gI5xB4", "isFavorite": false, "isStarred": false}, {"title": "Email Validation", "description": "Allow TLDs with 2 or more characters", "dateCreated": "2016-08-10T18:23:57.000Z", "dateModified": "2016-08-10T18:23:57.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[_A-Za-z0-9-]+(?:\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(?:\\.[A-Za-z0-9-]+)*(?:\\.[A-Za-z]{2,})$", "permalinkFragment": "gZ0aQ7", "isFavorite": false, "isStarred": false}, {"title": "w/ NTSTatus: NT_STATUS_ACCESS_DENIED", "description": "", "dateCreated": "2016-08-10T18:38:11.000Z", "dateModified": "2016-08-10T18:38:11.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "w/ NTSTatus: NT_STATUS_ACCESS_DENIED", "permalinkFragment": "uK6rF3", "isFavorite": false, "isStarred": false}, {"title": "Or regex field", "description": "", "dateCreated": "2016-08-10T19:47:09.000Z", "dateModified": "2016-08-10T19:47:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\"([^\"]*)\"|(?<=,|^)([^,]*)(?=,|$)", "permalinkFragment": "dH3gZ6", "isFavorite": false, "isStarred": false}, {"title": "Parse action", "description": "", "dateCreated": "2016-08-10T19:48:36.000Z", "dateModified": "2016-08-10T19:48:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<imei>[^,]*),(?<gaid>[^,]*),(?<session>[^,]*),(?<action_time>[^,]*),(?<action>[^,]*),'(?<attrs>\\{[^']*\\})','(?<impressions>[^']*)'", "permalinkFragment": "lJ4lQ4", "isFavorite": false, "isStarred": false}, {"title": "Priority Levels (Agile Method/ Scrum Workflows)", "description": "This is to detect priorty levels for Agile Method/ Scrum workflows.\n\n(!1) = Priority: Low\n(!2) = Priority: Medium\n(!3) = Priority: High\n(!4) = Priority: Critical", "dateCreated": "2016-08-10T21:41:53.000Z", "dateModified": "2016-08-10T21:41:53.000Z", "author": "oneezy", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(![1-4]\\)", "permalinkFragment": "kJ1kY3", "isFavorite": false, "isStarred": false}, {"title": "MDD_new_regex", "description": "", "dateCreated": "2016-08-10T21:52:33.000Z", "dateModified": "2016-08-10T21:52:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<a1>\\d{10})_(?<a2>\\d{10})_(?<a3>\\D{4})_(?<a4>\\d{2}).(?<a5>\\d{2}).(?<a6>\\d{4})_(?<a7>\\D{2})_(?<a8>\\d{2}).(?<a9>\\d{2}).(?<a10>\\d{4})_(?<a11>\\d{3})_(?<a12>\\d+).(?<a13>\\D{3})", "permalinkFragment": "fA9dD4", "isFavorite": false, "isStarred": false}, {"title": "Selects multi-line C comments", "description": "", "dateCreated": "2016-08-10T23:39:01.000Z", "dateModified": "2016-08-10T23:39:01.000Z", "author": "BumbleBritches57", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/\\*(.*)\\*\\/", "permalinkFragment": "zL6qD3", "isFavorite": false, "isStarred": false}, {"title": "mobile_number", "description": "this regex test string for match mobile phone numbers", "dateCreated": "2016-08-11T04:54:36.000Z", "dateModified": "2016-08-11T04:54:36.000Z", "author": "hamid javadi - javadi.business@yahoo.com", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^09\\d{10}", "permalinkFragment": "dR6dQ6", "isFavorite": false, "isStarred": false}, {"title": "regex to match html attribute with/without equal to and values", "description": "", "dateCreated": "2016-08-11T07:16:17.000Z", "dateModified": "2016-08-11T07:16:17.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s*data-dcm-click-tracker[=|\\s]([\\\\'\"a-zA-Z0-9-]*)", "permalinkFragment": "kY3qW6", "isFavorite": false, "isStarred": false}, {"title": "REGEX TO MATCH HTML ATTRIBUTE WITH/WITHOUT EQUAL TO AND VALUES", "description": "", "dateCreated": "2016-08-11T07:27:29.000Z", "dateModified": "2016-08-11T07:27:29.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\s\\n]*data-dcm-click-tracker[=|\\s]([\\\\'\"a-zA-Z0-9-%]*)", "permalinkFragment": "iL8uG1", "isFavorite": false, "isStarred": false}, {"title": "regext match string in quotes", "description": "", "dateCreated": "2016-08-11T08:58:24.000Z", "dateModified": "2016-08-11T08:58:24.000Z", "author": "Purnadi (PK)", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\"[^\"]+\"", "permalinkFragment": "iX5rH9", "isFavorite": false, "isStarred": false}, {"title": "STR_DELIVERY", "description": "js match until first name occurrence", "dateCreated": "2016-08-11T10:27:48.000Z", "dateModified": "2016-08-11T10:27:48.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^STR_[^_]*", "permalinkFragment": "uU9hG3", "isFavorite": false, "isStarred": false}, {"title": "123231", "description": "", "dateCreated": "2016-08-11T13:06:00.000Z", "dateModified": "2016-08-11T13:06:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\_\\/\\\\\\'\\\"\\&]+)+", "permalinkFragment": "kX5zX8", "isFavorite": false, "isStarred": false}, {"title": "french zip code", "description": "code postal de taille 2 ou 5", "dateCreated": "2016-08-11T13:15:05.000Z", "dateModified": "2016-08-11T13:15:05.000Z", "author": "NIGGGA", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((0[1-9])|([1-8][0-9])|(9[0-8])|(2A)|(2B)) *([0-9]{3})?$", "permalinkFragment": "bU0kD8", "isFavorite": false, "isStarred": false}, {"title": "jsDoc parser", "description": "", "dateCreated": "2016-08-11T14:57:07.000Z", "dateModified": "2016-08-11T14:57:07.000Z", "author": "me", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/\\*\\*((.|\\n)*?)\\*\\/\\n(.*)", "permalinkFragment": "nX6tZ6", "isFavorite": false, "isStarred": false}, {"title": "Find all classes and ids in html", "description": "", "dateCreated": "2016-08-11T22:32:16.000Z", "dateModified": "2016-08-11T22:32:16.000Z", "author": "Kris", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:.*(?:(?:id=\"(?'id'\\w+)\")|(?:class=\"(?'class'\\w+)\")))", "permalinkFragment": "dB8jF1", "isFavorite": false, "isStarred": false}, {"title": "D-Link MAC Notification Trap", "description": "A regex that matches Object ID of D-Link MAC Notification traps", "dateCreated": "2016-08-12T06:53:46.000Z", "dateModified": "2016-08-12T06:53:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".171(\\.\\d+){3}(?:.2.1(?:00|6).1.2.0.1|.5.2.20.0.2)", "permalinkFragment": "cC0rQ6", "isFavorite": false, "isStarred": false}, {"title": "luaSplit", "description": "", "dateCreated": "2016-08-12T12:09:07.000Z", "dateModified": "2016-08-12T12:09:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "if*(((?!then).)*)", "permalinkFragment": "mZ0aD9", "isFavorite": false, "isStarred": false}, {"title": "WebVTT group detection", "description": "", "dateCreated": "2016-08-12T15:04:38.000Z", "dateModified": "2016-08-12T15:04:38.000Z", "author": "CAmax", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?m)(^[0-9]+)([\\s\\S]*?)(?=\\n\\n)", "permalinkFragment": "lD1vQ7", "isFavorite": false, "isStarred": false}, {"title": "Human name (European)", "description": "Match most European human names.", "dateCreated": "2016-08-12T15:43:27.000Z", "dateModified": "2016-08-12T15:43:27.000Z", "author": "Alexander Stepanov", "flavor": "pcre", "delimiter": "/", "flags": "gmui", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[[:alpha:]]|[ \\-\\'])+$", "permalinkFragment": "uA0gL9", "isFavorite": false, "isStarred": false}, {"title": "NOT STREET", "description": "", "dateCreated": "2016-08-12T21:43:53.000Z", "dateModified": "2016-08-12T21:43:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "POST OFFICE(?!( (STREET|ST|ROAD|RD|WAY|WY|LANE|LN|BOULEVARD|BLVD|TERRACE|TER)))", "permalinkFragment": "kF6jG9", "isFavorite": false, "isStarred": false}, {"title": "Minecraft Username Matcher", "description": "A regex that matches valid Minecraft usernames", "dateCreated": "2016-08-12T23:49:13.000Z", "dateModified": "2016-08-12T23:49:13.000Z", "author": "glen3b", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9_]{1,16}$", "permalinkFragment": "xA4cW8", "isFavorite": false, "isStarred": false}, {"title": "validate text message", "description": "", "dateCreated": "2016-08-13T16:08:44.000Z", "dateModified": "2016-08-13T16:08:44.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9!@#$%^&*()\\[\\]{};'\u2019`\\-\\\\:,.\\/<>?| ]{60,150}$", "permalinkFragment": "bW8zN9", "isFavorite": false, "isStarred": false}, {"title": "BASH comments with space preceeding", "description": "", "dateCreated": "2016-08-13T22:10:30.000Z", "dateModified": "2016-08-13T22:10:30.000Z", "author": "Brendan", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\s*[^#]", "permalinkFragment": "eQ5bG5", "isFavorite": false, "isStarred": false}, {"title": "IPv4 Addresess", "description": "", "dateCreated": "2016-08-14T11:06:57.000Z", "dateModified": "2016-08-14T11:06:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b", "permalinkFragment": "uZ4tU7", "isFavorite": false, "isStarred": false}, {"title": "select all chars after a certain char", "description": "Want to find and select all text to the end of each line that occures after a certain char (eg after \"##\").", "dateCreated": "2016-08-14T13:08:09.000Z", "dateModified": "2016-08-14T13:08:09.000Z", "author": "luker", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\##(.*)", "permalinkFragment": "yG8oZ6", "isFavorite": false, "isStarred": false}, {"title": "123", "description": "", "dateCreated": "2016-08-14T14:18:45.000Z", "dateModified": "2016-08-14T14:18:45.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<div class=\"group_row_labeled\"><a href=\")http:\\/\\/vk\\.com\\/.*?>", "permalinkFragment": "fK3zM5", "isFavorite": false, "isStarred": false}, {"title": "Test", "description": "", "dateCreated": "2016-08-14T17:05:50.000Z", "dateModified": "2016-08-14T17:05:50.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z0-9]*):\\s*\\(([a-zA-Z0-9.]*)\\)\\s*\\{(.*?)\\}", "permalinkFragment": "tM6hN8", "isFavorite": false, "isStarred": false}, {"title": "Minecraft Username Matcher", "description": "Matches valid minecraft usernames, one per line", "dateCreated": "2016-08-14T17:19:17.000Z", "dateModified": "2016-08-14T17:19:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9_]{2,16}$", "permalinkFragment": "jM0zH5", "isFavorite": false, "isStarred": false}, {"title": "Todos n\u00fameros de 4 digitos (como palabras)", "description": "", "dateCreated": "2016-08-14T20:58:22.000Z", "dateModified": "2016-08-14T20:58:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gims", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\W|^)[0123456789]{4}(\\W|$)", "permalinkFragment": "vW4eB0", "isFavorite": false, "isStarred": false}, {"title": "Div", "description": "", "dateCreated": "2016-08-15T10:07:39.000Z", "dateModified": "2016-08-15T10:07:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=<div)(\\s*.*\\s*)(?=<\\/div>)", "permalinkFragment": "tT7bE7", "isFavorite": false, "isStarred": false}, {"title": "Match arbitary metadata in WordPress export XML", "description": "Allows for easy removal of metadata in WP export file", "dateCreated": "2016-08-15T12:46:01.000Z", "dateModified": "2016-08-15T12:46:01.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<(wp:postmeta)>\\s*<(wp:meta_key)>\\s*wpcf-lookbook-front-image\\s*<\\/\\2>\\s*<(wp:meta_value)>[\\s\\S]*?<\\/\\3>\\s*<\\/\\1>\\s*", "permalinkFragment": "lM2hW1", "isFavorite": false, "isStarred": false}, {"title": "3123123", "description": "", "dateCreated": "2016-08-15T13:50:30.000Z", "dateModified": "2016-08-15T13:50:30.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:\\b\\s*?\\:\\s*)((?:[^;]*\\\".*?\\\"|[^;]*\\'.*?\\'|[^;]*)[^;]*)", "permalinkFragment": "rS6mH7", "isFavorite": false, "isStarred": false}, {"title": "JDBC Oracle syntax for EZCONNECT", "description": "", "dateCreated": "2016-08-16T07:13:36.000Z", "dateModified": "2016-08-16T07:13:36.000Z", "author": "Alexander.Iljushkin", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^jdbc:oracle:thin:((?P<username>[a-zA-Z0-9]{1,})([\\/](?P<password>[a-zA-Z0-9]{1,})){0,1}){0,1}@(?P<ezdb_name>((\\/\\/){0,1}(?P<hostname>[a-zA-Z0-9\\.\\-]{1,})(\\:(?P<port>\\d+)){0,1})(\\/(?P<service_name>[a-zA-Z\\.\\-0-9]{1,}(\\:(?P<server_type>[a-zA-Z]{1,})){0,1}){0,1}(\\/(?P<instance_name>[a-zA-Z0-9]{1,})){0,1}){0,1})$", "permalinkFragment": "zC8xV8", "isFavorite": false, "isStarred": false}, {"title": "EclipseKeywordDataMatches", "description": "matches keyword data", "dateCreated": "2016-08-16T08:23:14.000Z", "dateModified": "2016-08-16T08:23:14.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s+([\\d]+[*]*[\\.]*[\\d]*[\\.]*[\\d]*)", "permalinkFragment": "yU9gJ5", "isFavorite": false, "isStarred": false}, {"title": "URL Validator", "description": "It validates almost all URL.", "dateCreated": "2016-08-16T12:18:04.000Z", "dateModified": "2016-08-16T12:18:04.000Z", "author": "Anil Goswami", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((\\b(f|F)(t|T)(p|P)\\b|\\b(h|H)(t|T)(t|T)(p|P)\\b|\\b(h|H)(t|T)(t|T)(p|P)(s|S)\\b)+(:\\/\\/[0-9a-zA-Z])|[0-9a-zA-Z])+\\.+[0-9a-zA-Z]+(\\.([0-9a-zA-z])+)+$", "permalinkFragment": "yX1fV7", "isFavorite": false, "isStarred": false}, {"title": "inline to external css", "description": "code for selection of specific classes.", "dateCreated": "2016-08-16T13:18:15.000Z", "dateModified": "2016-08-16T13:18:15.000Z", "author": "junaid ahmad", "flavor": "pcre", "delimiter": "/", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".getval{(.*?)}", "permalinkFragment": "hE2rE3", "isFavorite": false, "isStarred": false}, {"title": "Cottage Type + Parc", "description": "", "dateCreated": "2016-08-16T16:31:23.000Z", "dateModified": "2016-08-16T16:31:23.000Z", "author": "Nowon", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(([a-z]{2})[\\d]{3})", "permalinkFragment": "sW8cL8", "isFavorite": false, "isStarred": false}, {"title": "test email", "description": "", "dateCreated": "2016-08-16T19:01:12.000Z", "dateModified": "2016-08-16T19:01:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([\\w-\\.]+)@(([?:[\\w]+\\.)+)[a-zA-Z]{2,4}$", "permalinkFragment": "pA0qE0", "isFavorite": false, "isStarred": false}, {"title": "CSS clas contains", "description": "", "dateCreated": "2016-08-17T06:38:36.000Z", "dateModified": "2016-08-17T06:38:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "class=([^=]*)([^(a-z|A-Z|0-9|\\-|_)])btn(\"|([^(a-z|A-Z|0-9|\\-|_)]).*\")", "permalinkFragment": "vQ2qC6", "isFavorite": false, "isStarred": false}, {"title": "Valid Schufa Strings", "description": "All strings(name, surname, street..) which are exeptepted by the Schufa SLIM-2 API (German identity check system)", "dateCreated": "2016-08-17T08:23:41.000Z", "dateModified": "2016-08-17T08:23:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9a-z\u00e4\u00f6\u00fc\u00c4\u00dc\u00d6\u00df \\/:\\(\\),'\\.-]*$", "permalinkFragment": "vC4kO3", "isFavorite": false, "isStarred": false}, {"title": "french firstname", "description": "find good french firstname single or composed", "dateCreated": "2016-08-17T08:43:07.000Z", "dateModified": "2016-08-17T08:43:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-z\u00e9\u00e8\u00e7\u00e0]{2,50}(-| )?([a-z\u00e9\u00e8\u00e7\u00e0]{2,50})?$", "permalinkFragment": "fG9fR2", "isFavorite": false, "isStarred": false}, {"title": "Teena is here AND you are der (why u said) OR I ll come NOT you say", "description": "", "dateCreated": "2016-08-17T09:37:56.000Z", "dateModified": "2016-08-17T09:37:56.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^a-zA-Z0-9])", "permalinkFragment": "jN5mR6", "isFavorite": false, "isStarred": false}, {"title": "basic date recognition", "description": "", "dateCreated": "2016-08-17T10:20:28.000Z", "dateModified": "2016-08-17T10:20:28.000Z", "author": "hanefi", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<day>0[1-9]|[12]\\d|3[01])(?P<seperator>[\\/-])(?P<month>0[1-9]|1[012])(?P=seperator)(?P<year>\\d\\d\\d\\d)", "permalinkFragment": "iJ8mF3", "isFavorite": false, "isStarred": false}, {"title": "Moscow Phones Pattern", "description": "Here is a pattern for all kind of Moscow and Moscow Region phones with or without additional number.", "dateCreated": "2016-08-17T10:26:46.000Z", "dateModified": "2016-08-17T10:26:46.000Z", "author": "cvvvlad", "flavor": "pcre", "delimiter": "/", "flags": "sgm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:8|\\+7|7)?[-\\s\\(]*(?<kod>\\d{3,4})?[-\\s\\)]*(?<phone>[\\d-]{7,10})(?:[\\D]+(?<dob>\\d+))?\\D*$", "permalinkFragment": "wY1cW4", "isFavorite": false, "isStarred": false}, {"title": "APH - Product FriendlyUrl", "description": "", "dateCreated": "2016-08-17T10:30:32.000Z", "dateModified": "2016-08-17T10:30:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(.*)(\\/[0-9]+\\/[a-z]+\\-[a-z]+\\/?.*)\\/?$", "permalinkFragment": "tD4fL2", "isFavorite": false, "isStarred": false}, {"title": "Swedish postnumber", "description": "This regexp will check for valid swedish postnumber", "dateCreated": "2016-08-17T11:02:42.000Z", "dateModified": "2016-08-17T11:02:42.000Z", "author": "JKD", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9]{3}\\s?[0-9]{2}$", "permalinkFragment": "oP0cX2", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "", "dateCreated": "2016-08-17T11:11:40.000Z", "dateModified": "2016-08-17T11:11:40.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^5[1-5][0-9]{14}|5[0-9][0-9]{14}$", "permalinkFragment": "nU2vO3", "isFavorite": false, "isStarred": false}, {"title": "CPE reboots reasons level 1", "description": "CPE reboots reasons: parsing level 1", "dateCreated": "2016-08-17T13:02:11.000Z", "dateModified": "2016-08-17T13:02:11.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d{4}\\d{2}\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{3})\\s{1}-Fatal\\s{1}(.*?)(-\\s{1})*proce:\\s{1}(.*?)\\s{1}-\\s{1}pid\\s{1}(\\d{1,10})!!!$", "permalinkFragment": "iO1bS8", "isFavorite": false, "isStarred": false}, {"title": "CPE reboots reasons level1", "description": "CPE reboots reasons level1", "dateCreated": "2016-08-17T13:05:21.000Z", "dateModified": "2016-08-17T13:05:21.000Z", "author": "nshushkin", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d{4}\\d{2}\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{3})\\s{1}-Fatal\\s{1}(.*?)(-\\s{1})*proce:\\s{1}(.*?)\\s{1}-\\s{1}pid\\s{1}(\\d{1,10})!!!$", "permalinkFragment": "xE6sY2", "isFavorite": false, "isStarred": false}, {"title": "Remove unnecessary spaces after and before parentheses", "description": "", "dateCreated": "2016-08-17T15:26:03.000Z", "dateModified": "2016-08-17T15:26:03.000Z", "author": "Tenaz", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\()\\s+|\\s+(?=\\))", "permalinkFragment": "mA2fZ2", "isFavorite": false, "isStarred": false}, {"title": "6 digit client number", "description": "6 digit client number", "dateCreated": "2016-08-17T16:34:31.000Z", "dateModified": "2016-08-17T16:34:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([1-9]{0,1}[0-9]{1,6})", "permalinkFragment": "mR8eT3", "isFavorite": false, "isStarred": false}, {"title": "expression 1", "description": "grab phase/chem formula/chem name/CAS", "dateCreated": "2016-08-17T17:44:55.000Z", "dateModified": "2016-08-17T17:44:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d+)\\s+((?:[A-Za-zA-Z0-9]{0,3})+)\\s+((?:[A-Za-z0-9\\)\\(\\]\\:\\/<>\\[\\\"\\.\\,\\+\\'\\-]{2,} ?)+)\\s+(\\d{2,7}-\\d{2}-\\d)", "permalinkFragment": "tH3iM7", "isFavorite": false, "isStarred": false}, {"title": "Search all terms", "description": "Match the sentence if ALL the mentioned keywords are present", "dateCreated": "2016-08-17T19:41:19.000Z", "dateModified": "2016-08-17T19:41:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*\\bmeat\\b)(?=.*\\bpasta\\b)(?=.*\\bdinner\\b).+", "permalinkFragment": "sD6lS9", "isFavorite": false, "isStarred": false}, {"title": "And/Or search of terms in sentences", "description": "", "dateCreated": "2016-08-17T19:44:16.000Z", "dateModified": "2016-08-17T19:44:16.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*\\broll\\b)(?=.*\\bover\\b).+|^(?=.*\\brollover\\b).+", "permalinkFragment": "eD8gV3", "isFavorite": false, "isStarred": false}, {"title": "match ", "description": "", "dateCreated": "2016-08-17T20:03:44.000Z", "dateModified": "2016-08-17T20:03:44.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(([\\d\\w]+)\\)", "permalinkFragment": "aS1iM2", "isFavorite": false, "isStarred": false}, {"title": "Regex to Match Valid Hex Color Values in CSS", "description": "", "dateCreated": "2016-08-17T20:17:07.000Z", "dateModified": "2016-08-17T20:17:07.000Z", "author": "Prayash Mohapatra", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\w :,]+(#(?:[a-fA-F0-9]{3}|[a-fA-F0-9]{6}))\\b", "permalinkFragment": "rE4zT4", "isFavorite": false, "isStarred": false}, {"title": "Float", "description": "\u0410\u043d\u0430\u043b\u0438\u0437 ", "dateCreated": "2016-08-18T06:01:25.000Z", "dateModified": "2016-08-18T06:01:25.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[+-]?[\\d]+($|[\\.][\\d]|([\\.][\\d][Ee]|[Ee])[+-]?\\d+)$", "permalinkFragment": "rW1sI9", "isFavorite": false, "isStarred": false}, {"title": "ddd", "description": "", "dateCreated": "2016-08-18T06:23:21.000Z", "dateModified": "2016-08-18T06:23:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^@\\s]+@[^@\\s]+\\.+[^@\\s;,]+)", "permalinkFragment": "dB8pV9", "isFavorite": false, "isStarred": false}, {"title": "id", "description": "", "dateCreated": "2016-08-18T07:27:30.000Z", "dateModified": "2016-08-18T07:27:30.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\n", "permalinkFragment": "qN3lL0", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "", "dateCreated": "2016-08-18T09:58:41.000Z", "dateModified": "2016-08-18T09:58:41.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{7,7})*", "permalinkFragment": "yJ2sF3", "isFavorite": false, "isStarred": false}, {"title": "search YYYY-MM-DD", "description": "", "dateCreated": "2016-08-18T11:39:06.000Z", "dateModified": "2016-08-18T11:39:06.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{4})-(\\d{2})-(\\d{2})", "permalinkFragment": "pM7vJ0", "isFavorite": false, "isStarred": false}, {"title": "video tag", "description": "classic custom video tag cleaner", "dateCreated": "2016-08-18T14:09:56.000Z", "dateModified": "2016-08-18T14:09:56.000Z", "author": "ogan keskiner", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\DVide[[a-zA-Z]:{\\d*}]", "permalinkFragment": "fF1fN1", "isFavorite": false, "isStarred": false}, {"title": "Tag Detection", "description": "Matches items displayed in tag format (CSV with spaces, basically).", "dateCreated": "2016-08-19T03:01:40.000Z", "dateModified": "2016-08-19T03:01:40.000Z", "author": "Guy Waldman", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\s,]+.(?!\\s)\\w*[^,]\\b)", "permalinkFragment": "hU6oZ4", "isFavorite": false, "isStarred": false}, {"title": "match quotes inside tags", "description": "doesn't work yet", "dateCreated": "2016-08-19T09:27:42.000Z", "dateModified": "2016-08-19T09:27:42.000Z", "author": "mihai2u", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<[^>\"]*)(\")([^>]*>)", "permalinkFragment": "rU2qO1", "isFavorite": false, "isStarred": false}, {"title": "Get Numbers from an x of z sentence", "description": "If you have a sentence in a log file like \"2 of 4 pictures converted successfully\" and you need to know the numbers you can use this regex and use the group variable.", "dateCreated": "2016-08-19T10:15:31.000Z", "dateModified": "2016-08-19T10:15:31.000Z", "author": "Kai", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([1-9]+) of ([0-9]+)", "permalinkFragment": "mJ3wH9", "isFavorite": false, "isStarred": false}, {"title": "Find link-first pages", "description": "Finds a page where a bracket is the first char on a line not preceeded by a newline", "dateCreated": "2016-08-19T17:18:31.000Z", "dateModified": "2016-08-19T17:18:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<!\\n)(\\[)", "permalinkFragment": "zY7wA9", "isFavorite": false, "isStarred": false}, {"title": "Find link-only pages", "description": "", "dateCreated": "2016-08-19T17:19:57.000Z", "dateModified": "2016-08-19T17:19:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<!\\n)(^\\[)", "permalinkFragment": "xP6pJ4", "isFavorite": false, "isStarred": false}, {"title": "MonoCameraTester", "description": "", "dateCreated": "2016-08-19T19:45:51.000Z", "dateModified": "2016-08-19T19:45:51.000Z", "author": "Pascal", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d+M$", "permalinkFragment": "gS9nW6", "isFavorite": false, "isStarred": false}, {"title": "parse epm logs", "description": "Searches for specific MMM ~ yyyy", "dateCreated": "2016-08-19T19:46:26.000Z", "dateModified": "2016-08-19T19:46:26.000Z", "author": "jon h williams", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\<Aug ?)([0-9]+)(, 2016)", "permalinkFragment": "vA4dC8", "isFavorite": false, "isStarred": false}, {"title": "lua moudle", "description": "", "dateCreated": "2016-08-20T02:28:57.000Z", "dateModified": "2016-08-20T02:28:57.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "package\\.preload\\[\\s*(?P<qute>['\\\"])(\\w+(?:\\.\\w+)*)(?P=qute)\\s*\\]\\s*=\\s*\\(\\s*function\\s*\\(\\s*\\.{3}\\s*\\)", "permalinkFragment": "jG4oH4", "isFavorite": false, "isStarred": false}, {"title": "UUID v4 with or without dashes", "description": "Matches either\n01234567-89ab-4def-0123-456789abcdef\nor\n0123456789ab4def0123456789abcdef", "dateCreated": "2016-08-20T15:28:14.000Z", "dateModified": "2016-08-20T15:28:14.000Z", "author": "Semx11", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}|[0-9a-f]{12}4[0-9a-f]{19}", "permalinkFragment": "wL7uN1", "isFavorite": false, "isStarred": false}, {"title": "bv ", "description": "", "dateCreated": "2016-08-20T22:10:31.000Z", "dateModified": "2016-08-20T22:10:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "bb|[^b]{2}\n", "permalinkFragment": "wF9vH5", "isFavorite": false, "isStarred": false}, {"title": "Console arguments handling", "description": "Splitting string on parts. Able quoted strings and escaped chars.\nWithout optimizations.\n\ncommand arg1 \"string arg \\\"qoute\\\" demo\" arg3", "dateCreated": "2016-08-20T22:57:57.000Z", "dateModified": "2016-08-20T22:57:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\"(?:\\\\.|[^\"\\\\])*\")|([^\\s]+)", "permalinkFragment": "uL2fR0", "isFavorite": false, "isStarred": false}, {"title": "date", "description": "", "dateCreated": "2016-08-20T23:48:27.000Z", "dateModified": "2016-08-20T23:48:27.000Z", "author": "aliteam", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9]{4}-[0-9]{2}-[0-9]{1,2}$", "permalinkFragment": "uN5vD0", "isFavorite": false, "isStarred": false}, {"title": "Software Title + Version", "description": "get software title + version", "dateCreated": "2016-08-21T01:26:12.000Z", "dateModified": "2016-08-21T01:26:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^.*?v)(?: +)(\\.|\\d)+$", "permalinkFragment": "eI4sR8", "isFavorite": false, "isStarred": false}, {"title": "# Validar contrase\u00f1as.", "description": "# Comprueba que la contrase\u00f1a tiene m\u00e1s de 6 caracteres.\n# Comprueba que la contrase\u00f1a tiene como m\u00ednimo 2 n\u00fameros.\n# Comprueba que la contrase\u00f1a tiene un caracter en mayuscula.", "dateCreated": "2016-08-21T04:33:58.000Z", "dateModified": "2016-08-21T04:33:58.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.{6,20})(?=(?:.*\\d){2,})(?=.*[A-Z]+).*$", "permalinkFragment": "zH3mI5", "isFavorite": false, "isStarred": false}, {"title": "No", "description": "", "dateCreated": "2016-08-21T15:12:46.000Z", "dateModified": "2016-08-21T15:12:46.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "No", "permalinkFragment": "fQ5jU1", "isFavorite": false, "isStarred": false}, {"title": "anysex", "description": "categorias", "dateCreated": "2016-08-22T09:14:06.000Z", "dateModified": "2016-08-22T09:14:06.000Z", "author": "yul", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<li class=\"item\">[\\w\\W\\s]{0,68}(.*?)\\\" title=\"(.*?)\"", "permalinkFragment": "uQ8eA4", "isFavorite": false, "isStarred": false}, {"title": "matching url parts", "description": "", "dateCreated": "2016-08-22T09:25:38.000Z", "dateModified": "2016-08-22T09:25:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https?:\\/\\/(?'host'\\S*)\\/(?'target'\\S*)\\/(?'command'\\S*)$", "permalinkFragment": "bE2pL1", "isFavorite": false, "isStarred": false}, {"title": "Domain RegExp", "description": "Test the URL or domain", "dateCreated": "2016-08-22T09:46:31.000Z", "dateModified": "2016-08-22T09:46:31.000Z", "author": "maxm krupkin", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([\\w-]+\\.)+[a-z]{2,}$", "permalinkFragment": "rL4oX0", "isFavorite": false, "isStarred": false}, {"title": "avreg", "description": "", "dateCreated": "2016-08-22T11:15:17.000Z", "dateModified": "2016-08-22T11:15:17.000Z", "author": "2xe.ru", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([0-9A-Fa-f]{2}[:-]?){5}[0-9A-Fa-f]{2})-(([0-9A-Fa-f]{2}:?){4})$", "permalinkFragment": "eL1jL3", "isFavorite": false, "isStarred": false}, {"title": "Starts and Ends with 3 digits", "description": "String begins with 3 digits + whitespace character + any length of characters + white space + 3 digits", "dateCreated": "2016-08-22T13:14:19.000Z", "dateModified": "2016-08-22T13:14:19.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d{3}\\s.*?\\s\\d{3}", "permalinkFragment": "tJ6bO5", "isFavorite": false, "isStarred": false}, {"title": "Phone", "description": "Start with 0 - 10 number", "dateCreated": "2016-08-22T13:41:03.000Z", "dateModified": "2016-08-22T13:41:03.000Z", "author": "alinquant lonny", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((0))[0-9]{9}$", "permalinkFragment": "kM3tV5", "isFavorite": false, "isStarred": false}, {"title": "Mail", "description": "", "dateCreated": "2016-08-22T13:41:36.000Z", "dateModified": "2016-08-22T13:41:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9]+[a-zA-Z0-9\\._]+@[a-z]+\\.[a-z\\.]{2,5}$", "permalinkFragment": "zY7cT3", "isFavorite": false, "isStarred": false}, {"title": "Password", "description": "1 letter - 1 number - 1 special character", "dateCreated": "2016-08-22T13:43:32.000Z", "dateModified": "2016-08-22T13:43:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.{8,})(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[\u00a7'\\\"|;\u00a5\u00a8<>?,`\u20ac!\u00a3\u00b0@#:$%{}\\-_~^&+=*\\/()\\[\\]]).*$", "permalinkFragment": "oV4rS9", "isFavorite": false, "isStarred": false}, {"title": "maps.google lat and lng", "description": "q=27.622063,-80.388802\n                         <br>\nhttps://maps.google.com/maps?q=27.622063,-80.388802&hl=es&z=12&output=embed\n                          <br>\nhttps://maps.google.com/maps?q=33.5805955,-112.23737790000001&hl=es&z=12&output=embed\n                         <br>\nhttps://maps.google.com/maps?q=36.23961479999999,-75.8754505&hl=es&z=12&output=embed\n                         <br>\nhttps://maps.google.com/maps?q=38.9671035,-78.1911207&hl=es&z=12&output=embed\n                         <br>", "dateCreated": "2016-08-22T17:32:28.000Z", "dateModified": "2016-08-22T17:32:28.000Z", "author": "Ellen Higashi", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([-+]?\\d\\d+[.]\\d+)\\s?,?([-+]?\\d+[.]\\d+)", "permalinkFragment": "bA0mZ1", "isFavorite": false, "isStarred": false}, {"title": "Replace Spaces in href and src attributes", "description": "", "dateCreated": "2016-08-22T20:24:27.000Z", "dateModified": "2016-08-22T20:24:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(src|href)\\s*=\\s*\"[^\" ]*\\K\\h|(?!^)\\G[^\" ]*\\K\\h", "permalinkFragment": "vX1qJ0", "isFavorite": false, "isStarred": false}, {"title": "splay", "description": "splay js_data", "dateCreated": "2016-08-22T20:57:13.000Z", "dateModified": "2016-08-22T20:57:13.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ",\\s*file\\s*:\\s*\"?\\'?([^\"\\']*)", "permalinkFragment": "aY4aE8", "isFavorite": false, "isStarred": false}, {"title": "Phone number dutch", "description": "Mobile, home and international.\nIncluding the regional prefix numbers", "dateCreated": "2016-08-23T06:45:55.000Z", "dateModified": "2016-08-23T06:45:55.000Z", "author": "Manoe Driessen", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0031]{4}[0-9]{8}[^a-z]|^[\\+][0-9]{10}[^a-z]|^[06]{2}[\\-][0-9]{7}[^a-z]|^[0-9]{3}[\\-][0-9]{6}[^a-z]|^[0]{1}[0-9]{8}[^a-z]", "permalinkFragment": "yY7gN8", "isFavorite": false, "isStarred": false}, {"title": "Postcode", "description": "Postcode hoofdletter ongevoelig. Inclusief eventuele spatie.", "dateCreated": "2016-08-23T06:55:36.000Z", "dateModified": "2016-08-23T06:55:36.000Z", "author": "Manoe Driessen", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[1-9][0-9]{3}\\s?[A-Z]{2}$", "permalinkFragment": "vV1xP9", "isFavorite": false, "isStarred": false}, {"title": "decoupe_gid", "description": "decoupe un gid", "dateCreated": "2016-08-23T07:40:18.000Z", "dateModified": "2016-08-23T07:40:18.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<![\\|\\d|])(?P<gidnumber>\\d+)\\|(?P<rang>\\d+)\\|(?P<fonction>[A-Z]+)", "permalinkFragment": "kZ9bU6", "isFavorite": false, "isStarred": false}, {"title": "port match", "description": "", "dateCreated": "2016-08-23T10:29:41.000Z", "dateModified": "2016-08-23T10:29:41.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ":[0-9]{2,5}$", "permalinkFragment": "dP5uK8", "isFavorite": false, "isStarred": false}, {"title": "subst space with underscore", "description": "", "dateCreated": "2016-08-23T10:35:44.000Z", "dateModified": "2016-08-23T10:35:44.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gU", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "videor\\.monument\\.type\\.(\\w+)[ ](\\w+)\\=", "permalinkFragment": "qO7kN5", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "", "dateCreated": "2016-08-23T11:19:15.000Z", "dateModified": "2016-08-23T11:19:15.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9]+)\\s+([-.a-zA-Z0-9]+)\\s+(\\(([-.a-zA-Z0-9]+)\\))?(.*)$", "permalinkFragment": "cM6cD3", "isFavorite": false, "isStarred": false}, {"title": "prvs email thingy", "description": "email thingy", "dateCreated": "2016-08-23T15:10:40.000Z", "dateModified": "2016-08-23T15:10:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "prvs\\=[\\w\\d]+\\=", "permalinkFragment": "rV5lY7", "isFavorite": false, "isStarred": false}, {"title": "url regex", "description": "url regex for http(s) and redirects", "dateCreated": "2016-08-23T15:12:20.000Z", "dateModified": "2016-08-23T15:12:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "'\\(?(https?\\:\\/\\/|redir\\.aspx\\?)([\\w\\d\\.\\=\\/\\?\\-]+)\\)?'", "permalinkFragment": "gN9wI0", "isFavorite": false, "isStarred": false}, {"title": "MM/DD/YYYY", "description": "", "dateCreated": "2016-08-23T17:51:33.000Z", "dateModified": "2016-08-23T17:51:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Date (MM DD YYYY)", "permalinkFragment": "zY4vN8", "isFavorite": false, "isStarred": false}, {"title": "querystring", "description": "", "dateCreated": "2016-08-23T18:40:38.000Z", "dateModified": "2016-08-23T18:40:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^&=]+)=([^&]*)", "permalinkFragment": "tY8rA3", "isFavorite": false, "isStarred": false}, {"title": "Macro Opcional TPSQL", "description": "", "dateCreated": "2016-08-23T20:13:06.000Z", "dateModified": "2016-08-23T20:13:06.000Z", "author": "Theodozio", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "AND[ ]+(\\([ ]*\\[\\[[A-Z0-1_]+\\]\\][ ]+=[ ]+'[ ]*'[ ]+OR[ ]+[A-Z0-1_]+[ ]+=[ ]+\\[\\[[A-Z0-1_]+\\]\\][ ]*\\)|\\([ ]*[A-Z0-1_]+[ ]+=[ ]+\\[\\[[A-Z0-1_]+\\]\\][ ]+OR[ ]+\\[\\[[A-Z0-1_]+\\]\\][ ]+=[ ]+'[ ]*'[ ]*\\))", "permalinkFragment": "dB0gX3", "isFavorite": false, "isStarred": false}, {"title": "Email address validation", "description": "", "dateCreated": "2016-08-23T21:22:00.000Z", "dateModified": "2016-08-23T21:22:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$", "permalinkFragment": "lQ7jI7", "isFavorite": false, "isStarred": false}, {"title": "Log", "description": "", "dateCreated": "2016-08-23T21:30:43.000Z", "dateModified": "2016-08-23T21:30:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?<file_name>(?<id_hx>\\d{10})(?<date>\\d{8})_(?<hour>\\d{6})_(?<ms>\\d{6}).*\\.LOG\\n)(?<hash>\\d{0,10}\\n)(?<entry>(?:(?:(?:.*),(?:\\d{0,3}.){0,})\\n){0,})(?<md5>\\w{0,33})$", "permalinkFragment": "dN0vJ7", "isFavorite": false, "isStarred": false}, {"title": "Regex URLs", "description": "", "dateCreated": "2016-08-23T23:53:01.000Z", "dateModified": "2016-08-23T23:53:01.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((amazonaws)*\\/)([\\w-\\.]+[^#?\\s]+)", "permalinkFragment": "sZ4jL2", "isFavorite": false, "isStarred": false}, {"title": "Extract name and subdomain from a domain name", "description": "takes www.yourdomain.com and return and array of three parts\nwww\nyourdomain.com\nyourdomain\n\nin javascript I use it like this:\n  var reDomainName = /^(.*?)\\.?(([^.]*)(?:(?:\\..{2,3})|(?:(?:\\..{2,3})(?:\\..{2}))))$/;\n\t        var aDomainName = sDomain.match( reDomainName ) || [\"\",\"\",\"\"];", "dateCreated": "2016-08-24T03:53:04.000Z", "dateModified": "2016-08-24T03:53:04.000Z", "author": "Quincy Acklen", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(.*?)\\.?(([^.]*)(?:(?:\\..{2,3})|(?:(?:\\..{2,3})(?:\\..{2}))))$", "permalinkFragment": "xA8bM2", "isFavorite": false, "isStarred": false}, {"title": "pATH vALIDATION", "description": "EBS/FSW/VehISp/VehISp_generic/TCY/Src/tcy_main.c", "dateCreated": "2016-08-24T05:16:14.000Z", "dateModified": "2016-08-24T05:16:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(.*)?(?:$|(.+?)(?:(\\.[^.]*$)|$))", "permalinkFragment": "tI0qF6", "isFavorite": false, "isStarred": false}, {"title": "catch string", "description": "", "dateCreated": "2016-08-24T07:59:43.000Z", "dateModified": "2016-08-24T07:59:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "{li.+id='year'}(?<content>\\d+?){\\/li}", "permalinkFragment": "iY1kZ6", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "test", "dateCreated": "2016-08-24T09:02:32.000Z", "dateModified": "2016-08-24T09:02:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\w+", "permalinkFragment": "rP6tN3", "isFavorite": false, "isStarred": false}, {"title": "Email", "description": "Email WIP", "dateCreated": "2016-08-24T11:35:05.000Z", "dateModified": "2016-08-24T11:35:05.000Z", "author": "Aliteam", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[A-Za-z!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\u00e5\u00e4\u00f6\u00c5\u00c4\u00d6]+[A-Za-z!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\u00e5\u00e4\u00f6\u00c5\u00c4\u00d6\\.]*[A-Za-z!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\u00e5\u00e4\u00f6\u00c5\u00c4\u00d6]+@[A-Za-z\u00c5\u00c4\u00d6\u00e5\u00e4\u00f6]+\\.[A-Za-z]*$", "permalinkFragment": "aH3yC8", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "", "dateCreated": "2016-08-24T13:22:20.000Z", "dateModified": "2016-08-24T13:22:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s*(\\d+)\\s+((([0-9a-zA-Z-.]+)\\s*(\\([0-9.]+\\))?((\\s*(([0-9.]+\\s+ms+|[*])\\s?))+))*)$", "permalinkFragment": "eT4yX1", "isFavorite": false, "isStarred": false}, {"title": "e", "description": "", "dateCreated": "2016-08-24T20:23:28.000Z", "dateModified": "2016-08-24T20:23:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "a(ba)*", "permalinkFragment": "aV0oK8", "isFavorite": false, "isStarred": false}, {"title": "test2", "description": "by sachin", "dateCreated": "2016-08-25T02:33:56.000Z", "dateModified": "2016-08-25T02:33:56.000Z", "author": "me", "flavor": "pcre", "delimiter": "/", "flags": "im", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:^[ \\t]{0,50}\\r?\\n){3}[ \\t]{0,10}(http:\\/\\/(?!www\\.)[^\\s\\/]{3,30})\\/([ucv])\\/([^\\s\\.]{3,60}\\.html?)\\S{0,10}[ \\t]{0,10}\\r?\\n(?:^[ \\t]{0,50}\\r?\\n){5,50}[^\\/]{1,100}\\b\\1\\/(?!\\2)[ucv]\\/\\3", "permalinkFragment": "bQ5tL9", "isFavorite": false, "isStarred": false}, {"title": "privite_ip", "description": "filter privite ip from sting", "dateCreated": "2016-08-25T03:41:30.000Z", "dateModified": "2016-08-25T03:41:30.000Z", "author": "harrison zhu", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:(?:\\w{1,4}:)|,)?((?:10|127|172\\.(?:1[6-9]|2[0-9]|3[01])|192\\.168)\\.(?:(?:(?:\\d{1,3}\\.){2}\\d{1,3})|(?:\\d{1,3}\\.\\d{1,3})))", "permalinkFragment": "iW2yN4", "isFavorite": false, "isStarred": false}, {"title": "UK Student UPN Validation", "description": "Performs basic validation of a UK school student UPN.\n\nNOTE: this is not a guarantee that the UPN is valid, as further calculations must be done to verify the control character at the start of the UPN. See the official guidance for more details: https://www.gov.uk/government/publications/unique-pupil-numbers", "dateCreated": "2016-08-25T08:13:33.000Z", "dateModified": "2016-08-25T08:13:33.000Z", "author": "GeekJosh", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([A-HJ-NP-RT-Z])(\\d{11})(\\d|[A-HJ-NP-RT-Z])$", "permalinkFragment": "oN6jI2", "isFavorite": false, "isStarred": false}, {"title": "Sonus", "description": "", "dateCreated": "2016-08-25T10:28:18.000Z", "dateModified": "2016-08-25T10:28:18.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": " \\+49651686(?:10|\\d{4});ext=(\\d{7}) ", "permalinkFragment": "fB9gO4", "isFavorite": false, "isStarred": false}, {"title": "greetings with all adj regex", "description": "", "dateCreated": "2016-08-25T10:36:13.000Z", "dateModified": "2016-08-25T10:36:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([m|M]it)?\\s(\\w+[en|em|]|\\w+[e])\\s([g|G]r[\u00fc|u][\u00df|s]s?e?n?|[D|d]ank(?!en))", "permalinkFragment": "gM1kJ5", "isFavorite": false, "isStarred": false}, {"title": "Lines which have not an exact nr of entries separated by 1 Space", "description": "In the example i search for all lines which have less or more than 5 spaces as seperator. \n\n---------------------------------\nmodify the valid nr of spaces:\n---------------------------------\n\nthere are 3 (of 4) arbitrary groups wich have an specified nr of copies of an regEx in it: \nin the example the valid nr of entires is 5 :\n-> that means 4 spaces are valid in-between the entries\n\n1. Group with specifed nrs: <REGEX> {1,3} :\n  - gets alle invalid Entires with 1 to 3 spaces in-between\n\n2. Group with specifed nrs: <REGEX> {5,} :\n  - gets alle invalid Entires with more than 4 spaces in-between\n\n3. Group with specifed nrs: <REGEX> {4}:\n  - gets alle invalid Entires with have the right nr of  spaces in between, but they hava invalid spaces at the start and end of line\n\nThe 4. Group matches every entry with has no spaces in between \n\nIf you want to change the nr of valid entries to e.g. to 10:\n--> 9 spaces are valid in-beteween\n1. Group with specifed nrs: {1,9} \n2. Group with specifed nrs: {10} \n3. Group with specifed nrs: {9} \n\n\n---------------------------------\nExample for Using:\n---------------------------------\nI\u00b4ve used this regEx for checking if names are valid to  (own created) name-convention. These convention consists always of 5 entries with non-white-Spaces, and this entries are separated wiht 1 space in between.", "dateCreated": "2016-08-25T11:26:52.000Z", "dateModified": "2016-08-25T11:26:52.000Z", "author": "Mike", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^ *\\S+ *$)|(^ *(\\S+ ){1,3}\\S+ *$)|(^ *(\\S+ ){5,}\\S+ *$)|(^ +(\\S+ ){4}\\S+ +$)", "permalinkFragment": "kD3gP0", "isFavorite": false, "isStarred": false}, {"title": "dutch + danish + icelandic greeings", "description": "", "dateCreated": "2016-08-25T11:53:46.000Z", "dateModified": "2016-08-25T11:53:46.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "med venlig hilsen| hilsn?e?r?n?|groten|met (vriendelijke|hartelijke) groten| groeten| groet| \nterveisin| h[\u00e4|a]lsninga?r?| kve\u00f0ja", "permalinkFragment": "qY4pC2", "isFavorite": false, "isStarred": false}, {"title": "foreign email closers", "description": "", "dateCreated": "2016-08-25T12:18:15.000Z", "dateModified": "2016-08-25T12:18:15.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "med venlig hilsen| hilsn?e?r?n?|(met)? (vriendelijke|hartelijke)? groe?te?n?|terveisin| h[\u00e4|a]lsninga?r?| kve\u00f0ja", "permalinkFragment": "pM9kC3", "isFavorite": false, "isStarred": false}, {"title": "auto generated closers", "description": "", "dateCreated": "2016-08-25T13:06:17.000Z", "dateModified": "2016-08-25T13:06:17.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "sent\\sfrom\\s(my|a)? (samsung\\sgalaxy|sony\\sxperia\u2122)? (smartphone|mobile|iphone|windows) (phone|device)?", "permalinkFragment": "zK8zS9", "isFavorite": false, "isStarred": false}, {"title": "wsolast350", "description": "", "dateCreated": "2016-08-25T20:21:29.000Z", "dateModified": "2016-08-25T20:21:29.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<ul\\sclass='listEpisodes'>((.|\\s)*?)</ul></p>", "permalinkFragment": "cD3vW2", "isFavorite": false, "isStarred": false}, {"title": "Find goals on recipe pages", "description": "", "dateCreated": "2016-08-25T22:27:00.000Z", "dateModified": "2016-08-25T22:27:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(category: sailrecipe\\n\\---)(\\n\\n\\#\\#\\# Goal \\#\\#\\#\\n)(.*?)(\\n\\n)", "permalinkFragment": "vR3kY8", "isFavorite": false, "isStarred": false}, {"title": "NPI", "description": "National Provider Id (either facility or person)", "dateCreated": "2016-08-26T04:24:10.000Z", "dateModified": "2016-08-26T04:24:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{10}$", "permalinkFragment": "tO4aQ4", "isFavorite": false, "isStarred": false}, {"title": "EclipseSPECGRIDKeywordForJavaScript", "description": "Eclipse SPECGRID Keyword for Javascrip", "dateCreated": "2016-08-26T06:10:44.000Z", "dateModified": "2016-08-26T06:10:44.000Z", "author": "Rashmin Dandekar", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "SPECGRID.*?\\n([ \\d]+)[\\s\\S]*?\\/", "permalinkFragment": "mG5sM2", "isFavorite": false, "isStarred": false}, {"title": "camelCase to spaced words", "description": "", "dateCreated": "2016-08-26T09:14:01.000Z", "dateModified": "2016-08-26T09:14:01.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=[A-Z])(?=[A-Z][a-z])|(?<=[^A-Z])(?=[A-Z])|(?<=[A-Za-z])(?=[^A-Za-z])", "permalinkFragment": "tU9hP6", "isFavorite": false, "isStarred": false}, {"title": "user strategy", "description": "", "dateCreated": "2016-08-26T10:10:28.000Z", "dateModified": "2016-08-26T10:10:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^.()]+)(?:\\(([^.()]+)\\))?(?:\\.(gt|ge|lt|le|eq|bt|in|ct|no)(.*))?", "permalinkFragment": "qO3kH9", "isFavorite": false, "isStarred": false}, {"title": "NOTSPACE", "description": "", "dateCreated": "2016-08-26T12:01:38.000Z", "dateModified": "2016-08-26T12:01:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\S+", "permalinkFragment": "bR2oC9", "isFavorite": false, "isStarred": false}, {"title": "NOTSPACE", "description": "", "dateCreated": "2016-08-26T12:04:08.000Z", "dateModified": "2016-08-26T12:04:08.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\S+", "permalinkFragment": "xM0wR3", "isFavorite": false, "isStarred": false}, {"title": "Jade file, change input type and add class", "description": "It change type='date' to type='text' and add the class .datepicker before the opening '('", "dateCreated": "2016-08-26T13:25:04.000Z", "dateModified": "2016-08-26T13:25:04.000Z", "author": "Eoifirst", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\()(.*)(type=\\'date\\')(.*)", "permalinkFragment": "eM8mU8", "isFavorite": false, "isStarred": false}, {"title": "RegEx for validating array of comma seperated email-ids", "description": "", "dateCreated": "2016-08-26T16:35:20.000Z", "dateModified": "2016-08-26T16:35:20.000Z", "author": "Harshit Gupta", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^( *)[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?( *)(,( *)[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?( *))*$", "permalinkFragment": "tD2qH1", "isFavorite": false, "isStarred": false}, {"title": "Find spaces in a column aligned text file", "description": "", "dateCreated": "2016-08-26T17:26:47.000Z", "dateModified": "2016-08-26T17:26:47.000Z", "author": "ilich R.", "flavor": "pcre", "delimiter": "/", "flags": "gmiU", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[ ^\\s]([ ]{1,})[ ^\\s]", "permalinkFragment": "eK1zF1", "isFavorite": false, "isStarred": false}, {"title": "identifier", "description": "", "dateCreated": "2016-08-26T17:46:03.000Z", "dateModified": "2016-08-26T17:46:03.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-zA-Z]([a-zA-Z]|[0-9])+", "permalinkFragment": "bZ9aT7", "isFavorite": false, "isStarred": false}, {"title": "Recursive", "description": "", "dateCreated": "2016-08-26T18:06:04.000Z", "dateModified": "2016-08-26T18:06:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?:\\d,)+?)\\1", "permalinkFragment": "pV2hM3", "isFavorite": false, "isStarred": false}, {"title": "Non-recursive", "description": "", "dateCreated": "2016-08-26T18:06:20.000Z", "dateModified": "2016-08-26T18:06:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?:\\d,)+?)\\1+$|((?:\\d,)+)((?:\\d,)*?)\\2+|((?:\\d,)+)", "permalinkFragment": "aQ2bF7", "isFavorite": false, "isStarred": false}, {"title": "digit,space,dot,character,one line only", "description": "It matches any one line of string that does not have only digit, space and dot(\\x2e). If it has any character beside the aformentioned ones there is a match.", "dateCreated": "2016-08-26T18:12:10.000Z", "dateModified": "2016-08-26T18:12:10.000Z", "author": "Moein", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(?:[^\\s\\d\\x2e]+[\\s\\d\\x2e]*)|(?:[\\x2e\\s\\d]*[^\\s\\x2e\\d]+))[\\r\\n]", "permalinkFragment": "zQ1yY6", "isFavorite": false, "isStarred": false}, {"title": "ALI PArce", "description": "", "dateCreated": "2016-08-26T20:01:06.000Z", "dateModified": "2016-08-26T20:01:06.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "({type}[12359])({sequence}\\d{2})([\\r\\n])({payload}({number}\\(\\d{3}\\)\\s\\d{3}-\\d{4})(\\s{3})(.{14})([\\r\\n])({houseNumber}[\\s\\d\\w/-]{12})(\\s)({street}.{51})({city}.{18})({state}\\w\\w)(\\s)({esn}.{3})(\\s)({serviceClass}VOIP)([\\r\\n])({name}.{32})({address2}.{20})(\\sP#\\s)({locationInfo}.{8})([\\r\\n])(ALT# )({mainNumber}.{15})(\\s)(\\QLEC:\\E)({telco}[\\w\\s]{5})([\\r\\n]+)({esnText}[\\s\\w/\\']+.*[\\s\\w/\\']+)([\\r\\n])({x}[\\+\\-]?\\d{0,3}[\\.]?\\d{0,6})(\\s)({y}[\\+\\-]?\\d{0,2}[\\.]?\\d{0,6}))", "permalinkFragment": "iM5qQ5", "isFavorite": false, "isStarred": false}, {"title": "mix of number, dot and characters in one line", "description": "This regex capture only one of string that is a combination of number, dot and characters. It can also not have any number or dot, but must have at least one character", "dateCreated": "2016-08-26T21:01:34.000Z", "dateModified": "2016-08-26T21:01:34.000Z", "author": "Moein", "flavor": "pcre", "delimiter": "/", "flags": "iU", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:([\\s\\d\\x2e]*[^\\s\\d\\x2e\\x3a]+[\\x2e\\s\\d]*)|(?:[^\\s\\d\\x2e\\x3a]+[\\s\\d\\x2e]*)[^\\s\\d\\x2e\\x3a]+)[\\r\\n]", "permalinkFragment": "uI0rA8", "isFavorite": false, "isStarred": false}, {"title": "bundel.js regex", "description": "cat txt | sed 's/client_secret=\"[]\"/client_secret=\"HEREHERE\"/", "dateCreated": "2016-08-26T23:36:06.000Z", "dateModified": "2016-08-26T23:36:06.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "password\",t\\.client_id=\"([a-zA-Z0-9_\\-\\+]+)\",t\\.client_secret=\"", "permalinkFragment": "hW7fD0", "isFavorite": false, "isStarred": false}, {"title": "Validate US numbers", "description": "Works for: \n555-555-5555\n(555)555-5555\n(555) 555-5555\n555 555 5555\n5555555555\n1 555 555 5555", "dateCreated": "2016-08-27T19:50:43.000Z", "dateModified": "2016-08-27T19:50:43.000Z", "author": "Antsa R", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^1? ?-?(\\(\\d{3}\\) ?|\\d{3}) ?-?\\d{3} ?-?\\d{4}$", "permalinkFragment": "wD5wW1", "isFavorite": false, "isStarred": false}, {"title": "Find and Highlight word (Arabic)", "description": "Find Arabic letters and highlight the whole words.", "dateCreated": "2016-08-28T07:11:20.000Z", "dateModified": "2016-08-28T07:11:20.000Z", "author": "M.Nizam", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?:[\\u0600-\\u06ff])*(?:\\u0639\\u0645|\\u0636)(?:[\\u0600-\\u06ff])*)", "permalinkFragment": "eI4uW3", "isFavorite": false, "isStarred": false}, {"title": "FA12-BSE-008", "description": "", "dateCreated": "2016-08-28T14:57:52.000Z", "dateModified": "2016-08-28T14:57:52.000Z", "author": "fb.com/ahsanulhaq007", "flavor": "python", "delimiter": "\"", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[A-Z,a-z]{3}-[A-Z,a-z]{2}\\d{2}-[A-Z,a-z]{3}-\\d{3}|^[A-Z,a-z]{2}\\d{2}-[A-Z,a-z]{3}-\\d{3}$", "permalinkFragment": "cN7wV8", "isFavorite": false, "isStarred": false}, {"title": "US and Canadian Zip Code Validator", "description": "Possible Formats:\nN8X 3T7\nN8X\n80021\n80021-1234", "dateCreated": "2016-08-29T20:20:08.000Z", "dateModified": "2016-08-29T20:20:08.000Z", "author": "Abdul Nasir", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d{5}(-\\d{4})?|[A-CEGHJ-NPRSTVXY]\\d[A-CEGHJ-NPRSTV-Z] \n?\\d[A-CEGHJ-NPRSTV-Z]\\d|[A-CEGHJ-NPRSTVXY]\\d[A-CEGHJ-NPRSTV-Z])$", "permalinkFragment": "vO9cU5", "isFavorite": false, "isStarred": false}, {"title": "US Canada Zip Validator", "description": "Formats can be like :\n\nUS:\n80021\n80021-4325\n\nCanada:\nN8X 3T7\nN8X", "dateCreated": "2016-08-29T20:31:01.000Z", "dateModified": "2016-08-29T20:31:01.000Z", "author": "Abdul Nasir", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d{5}-\\d{4}|\\d{5}|\\d{9})$|^([a-zA-Z]\\d[a-zA-Z]( )?\\d[a-zA-Z]\\d|[a-zA-Z]\\d[a-zA-Z])$", "permalinkFragment": "gU0sC7", "isFavorite": false, "isStarred": false}, {"title": "derp", "description": "", "dateCreated": "2016-08-29T20:47:57.000Z", "dateModified": "2016-08-29T20:47:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(.*[\\/])[^\\/]*$", "permalinkFragment": "rG0oF7", "isFavorite": false, "isStarred": false}, {"title": "all spaces preceeding numbers", "description": "", "dateCreated": "2016-08-29T20:49:31.000Z", "dateModified": "2016-08-29T20:49:31.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": " *(?=\\d)", "permalinkFragment": "dE6wE4", "isFavorite": false, "isStarred": false}, {"title": "two url paths", "description": "", "dateCreated": "2016-08-30T05:33:21.000Z", "dateModified": "2016-08-30T05:33:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/tripadvisor\\/api\\/internal\\/[.0-9]+(\\/[a-zA-Z_]+\\/?[a-zA-Z_]*).*\\?[^|]*", "permalinkFragment": "zN8qA7", "isFavorite": false, "isStarred": false}, {"title": "qfdqf", "description": "", "dateCreated": "2016-08-30T09:25:30.000Z", "dateModified": "2016-08-30T09:25:30.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=(F\\H)).*[\\t\\n\\s\\/]*", "permalinkFragment": "oQ6gU4", "isFavorite": false, "isStarred": false}, {"title": "fqsfq", "description": "", "dateCreated": "2016-08-30T09:26:05.000Z", "dateModified": "2016-08-30T09:26:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=(F\\H)).*[\\t\\n\\s\\/]*", "permalinkFragment": "iH4wQ3", "isFavorite": false, "isStarred": false}, {"title": "find sentance with certain phrase", "description": "", "dateCreated": "2016-08-30T14:23:57.000Z", "dateModified": "2016-08-30T14:23:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^.?!]*(?<=[.?\\s!])was exactly(?=[\\s.?!])[^.?!]*[.?!]", "permalinkFragment": "dJ7zR4", "isFavorite": false, "isStarred": false}, {"title": "extract file in content string", "description": "", "dateCreated": "2016-08-30T14:47:33.000Z", "dateModified": "2016-08-30T14:47:33.000Z", "author": "Dang Khoa", "flavor": "javascript", "delimiter": "/", "flags": "mig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "['\"]([^'\"]*\\.(css|js|less|sass|txt|csv|jpeg|jpg|bmp|png|gif|json))['\"]", "permalinkFragment": "fM0tM9", "isFavorite": false, "isStarred": false}, {"title": "Email list to TestRail multi-user add", "description": "", "dateCreated": "2016-08-30T18:34:25.000Z", "dateModified": "2016-08-30T18:34:25.000Z", "author": "Jon Robinson", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<lname>(?<=^)(?:.*?)(?=, )).*(?P<fname>(?<=, )(?:.*?)(?= \\<)).*(?P<email>(?<=\\<)(?:.*?)(?=\\>))", "permalinkFragment": "fK5hW9", "isFavorite": false, "isStarred": false}, {"title": "Regular Expression For Decimal Validation | Taha", "description": "regular expression for positive decimal numbers,decimal regular expression validation,regular expression non negative decimal,regex for number with 2 decimal places,regex decimal number c#,regular expression for decimal number with 2 precision,regex to check decimal values,regular expression decimal 2 digits", "dateCreated": "2016-08-30T19:43:07.000Z", "dateModified": "2016-08-30T19:43:07.000Z", "author": "Taha Bhutta", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d*\\.)?\\d+$", "permalinkFragment": "nT8lF7", "isFavorite": false, "isStarred": false}, {"title": "Regex For Currency Validation | Taha", "description": "Simple Currency Validation Regular Expression", "dateCreated": "2016-08-30T19:55:22.000Z", "dateModified": "2016-08-30T19:55:22.000Z", "author": "Taha Bhutta", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\$|\u00a3|\u20ac)(\\d*\\.)?\\d+$", "permalinkFragment": "rM1pC3", "isFavorite": false, "isStarred": false}, {"title": "Accept AlphaNumeric and .'_- and middle spaces", "description": "", "dateCreated": "2016-08-30T19:59:50.000Z", "dateModified": "2016-08-30T19:59:50.000Z", "author": "Uba", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[-_a-zA-Z0-9.']+(\\s+[-_a-zA-Z0-9.'_-]+)*$", "permalinkFragment": "eL0vY0", "isFavorite": false, "isStarred": false}, {"title": "fix windows", "description": "", "dateCreated": "2016-08-30T20:49:47.000Z", "dateModified": "2016-08-30T20:49:47.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "U", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\\\)billing((\\\\).*).*", "permalinkFragment": "nP0hT7", "isFavorite": false, "isStarred": false}, {"title": "JS Plugin Macro Pattern", "description": "", "dateCreated": "2016-08-31T02:28:16.000Z", "dateModified": "2016-08-31T02:28:16.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\{(([a-z]{1,10}|\\d+)+)(\\:([a-z]{1,2}|\\-?\\d+|\\d+\\-\\d+)*)*\\}", "permalinkFragment": "bV6dR1", "isFavorite": false, "isStarred": false}, {"title": "restore protocol", "description": "", "dateCreated": "2016-08-31T03:31:08.000Z", "dateModified": "2016-08-31T03:31:08.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^:]\\/\\/\\w{1,}\\.", "permalinkFragment": "lX9vM3", "isFavorite": false, "isStarred": false}, {"title": "John Eggen Query", "description": "On comment in http://requestly.in/documentation/replace-rule/", "dateCreated": "2016-08-31T05:09:20.000Z", "dateModified": "2016-08-31T05:09:20.000Z", "author": "Sachin Jain", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.+)subfolder(.+)id=(.+)", "permalinkFragment": "mJ1xN1", "isFavorite": false, "isStarred": false}, {"title": "String entre parentesis dentro de comillas", "description": "Recoge el ultimo parentesis dentro de un campo entrecomillado", "dateCreated": "2016-08-31T06:29:21.000Z", "dateModified": "2016-08-31T06:29:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "flavor=\\\"[^\\\"]+\\(([^\\)]+)", "permalinkFragment": "xW7hA0", "isFavorite": false, "isStarred": false}, {"title": "C Style block comment", "description": "", "dateCreated": "2016-08-31T06:40:03.000Z", "dateModified": "2016-08-31T06:40:03.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "/\\*/?(\\n|[^/]|[^*]/)*\\*/", "permalinkFragment": "zO5jO3", "isFavorite": false, "isStarred": false}, {"title": "UK Unique Candiate Identifier (UCI)", "description": "Basic validation of UK student UCI numbers. Please note that further validation must be done to confirm the final character ( the 'control character') is correct: http://www.wjec.co.uk/exam-officers/entries/unique-candidate-identifiers.html", "dateCreated": "2016-08-31T08:08:48.000Z", "dateModified": "2016-08-31T08:08:48.000Z", "author": "GeekJosh", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d{12})([A-HK-MRT-Y]{1})$", "permalinkFragment": "lZ7uT3", "isFavorite": false, "isStarred": false}, {"title": "This regex checks to see if any lowercase letter is found after ", "description": "1) First rememeber to escape .?! with a \\\n2) Square brackets mean \"any of the characters inside us\"\n3) \\s* mean \"0 or more spaces after the previous characters\"\n4) [a-z] mean \"any character in the set from a to z that is in lowercase\"", "dateCreated": "2016-08-31T12:53:18.000Z", "dateModified": "2016-08-31T12:53:18.000Z", "author": "Giuseppe Tavella", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\.\\?\\!]\\s*[a-z]", "permalinkFragment": "yN7uG2", "isFavorite": false, "isStarred": false}, {"title": "Image from URL (Tamarin)", "description": "", "dateCreated": "2016-08-31T15:43:54.000Z", "dateModified": "2016-08-31T15:43:54.000Z", "author": "Michael Degli-Angeli", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/\\/[a-z]+\\.(?:[a-z]+\\:?[0-9]+?|[a-z0-9]+\\.[a-z]+)\\/\\bassets\\b\\/\\bread\\b\\/((\\w)+\\.png)", "permalinkFragment": "cR3mX5", "isFavorite": false, "isStarred": false}, {"title": "lint function", "description": "", "dateCreated": "2016-08-31T15:57:33.000Z", "dateModified": "2016-08-31T15:57:33.000Z", "author": "Thomas O Daem", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "function\\s([a-zA-Z]*)\\((.*)\\)\\{", "permalinkFragment": "uF8mP0", "isFavorite": false, "isStarred": false}, {"title": "Regular expression for IP Address Validation | Taha", "description": "ip address regex java,ip address regex c#,grep ip address regex,ip address regex python,ip address regex javascript,perl ip address regex,regex ip address range,whitespace in regex\n\nFeel Free To IMPROVE", "dateCreated": "2016-08-31T15:58:16.000Z", "dateModified": "2016-08-31T15:58:16.000Z", "author": "Taha Bhutta", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*[^\\.]$)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.?){4}$", "permalinkFragment": "sC2mQ2", "isFavorite": false, "isStarred": false}, {"title": "lsyh-aem_log_entry_split", "description": "lsyh", "dateCreated": "2016-08-31T17:18:48.000Z", "dateModified": "2016-08-31T17:18:48.000Z", "author": "hunagyp", "flavor": "pcre", "delimiter": "/", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{2}.\\d{2}.\\d{4}).*?(\\d{2}:\\d{2}:\\d{2}).\\d{0,3}.*?\\*(ERROR)\\*.*?(\\[.*?\\]).(.*?\\..*?)\\s+?(.+)\\n", "permalinkFragment": "pP4fJ1", "isFavorite": false, "isStarred": false}, {"title": "Regex to validate date format yyyy/mm/dd | Taha", "description": "Regex to validate date format yyyy/mm/dd", "dateCreated": "2016-08-31T17:28:23.000Z", "dateModified": "2016-08-31T17:28:23.000Z", "author": "Taha Bhutta", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(19[5-9][0-9]|20[0-4][0-9]|2050)[-\\/](0?[1-9]|1[0-2])[-\\/](0?[1-9]|[12][0-9]|3[01])$", "permalinkFragment": "sQ3pY8", "isFavorite": false, "isStarred": false}, {"title": "del email", "description": "", "dateCreated": "2016-09-01T06:25:09.000Z", "dateModified": "2016-09-01T06:25:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "recipients failed: ([a-zA-Z0-9\\._-]+@[a-zA-Z0-9\\._-]+\\.[a-zA-Z]{2,4})", "permalinkFragment": "wS0yU1", "isFavorite": false, "isStarred": false}, {"title": "Capture Anchor Tag urls (http/https)", "description": "Capture all anchor tags url with http and https, excluding ftp links", "dateCreated": "2016-09-01T11:30:22.000Z", "dateModified": "2016-09-01T11:30:22.000Z", "author": "koder5", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "href=[\"'](https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s\"']{2,}|(?!ftp:\\/\\/)[^\\s]+\\.[^\\s'\"]{2,})", "permalinkFragment": "nY7xP5", "isFavorite": false, "isStarred": false}, {"title": "figata", "description": "", "dateCreated": "2016-09-01T12:12:49.000Z", "dateModified": "2016-09-01T12:12:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(commit [0-9a-f]{40})(\\sMerge:\\s[0-9a-f]{7}\\s[0-9a-f]{7})?\\sAuthor:\\s(\\w*)\\sDate:\\s[a-zA-Z]{3}\\s[a-zA-z]{3}\\s\\d\\d\\s\\d\\d:\\d\\d:\\d\\d\\s[\\d]{4}\\s\\+0200\\s+(?<message>(?:(?!commit .{40}).)+)", "permalinkFragment": "gL0gX4", "isFavorite": false, "isStarred": false}, {"title": "bjss email", "description": "", "dateCreated": "2016-09-01T14:05:27.000Z", "dateModified": "2016-09-01T14:05:27.000Z", "author": "Charlie Marcus", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z]+)(\\.)([a-zA-Z\\-\\']+)(@)(bjss\\.com)", "permalinkFragment": "vX4vA6", "isFavorite": false, "isStarred": false}, {"title": "Capture Comments on SQL followed by SELECT", "description": "Shag Maister is the best", "dateCreated": "2016-09-01T14:07:22.000Z", "dateModified": "2016-09-01T14:07:22.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?i)(((--.*)|(((/\\*)+?[\\w\\W]+?(\\*/)+)))\\s+(select))|^(\\w*)\\s*(select)", "permalinkFragment": "hK0vZ5", "isFavorite": false, "isStarred": false}, {"title": "TODO regex", "description": "various types of todo annotations for meeting notes", "dateCreated": "2016-09-01T14:29:25.000Z", "dateModified": "2016-09-01T14:29:25.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\B(\\?\\?|\\?)|\\B(\\!\\!|\\!)|\\B(\\[\\])|\\b(RWC)|\\b(TODO))[:;.,-]?\\d*($|\\s.*$|\\(.*$)", "permalinkFragment": "gM2kU0", "isFavorite": false, "isStarred": false}, {"title": "Port Number", "description": "Matches port numbers (or simply numbers between 0 - 65535)", "dateCreated": "2016-09-01T14:56:37.000Z", "dateModified": "2016-09-01T14:56:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9][0-9])|(6[0-4][0-9][0-9][0-9])|([1-5][0-9][0-9][0-9][0-9])|(\\d{1,4}))$", "permalinkFragment": "aQ7aT0", "isFavorite": false, "isStarred": false}, {"title": "Split into phrases", "description": "Split a sentence into phrases.", "dateCreated": "2016-09-01T17:06:10.000Z", "dateModified": "2016-09-01T17:06:10.000Z", "author": "Bill Bostock", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[:;)(?!]|(<!\\d)[,.]|[,.](?!\\d)", "permalinkFragment": "kO2qS3", "isFavorite": false, "isStarred": false}, {"title": "Image Class Test", "description": "Finds images that have a certain class (in this case, \"foo\")", "dateCreated": "2016-09-01T17:12:28.000Z", "dateModified": "2016-09-01T17:12:28.000Z", "author": "Todd Dukart", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<img[^>]*class=\\\"[^>]*\\bfoo\\b[^>]*\\\"[^>]*>)", "permalinkFragment": "mM3aZ4", "isFavorite": false, "isStarred": false}, {"title": "Match ip address @ bla.com", "description": "", "dateCreated": "2016-09-01T21:59:21.000Z", "dateModified": "2016-09-01T21:59:21.000Z", "author": "Marius Nilsen", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))(@bla\\.com)?$", "permalinkFragment": "vZ5pS4", "isFavorite": false, "isStarred": false}, {"title": "Prompt/command/output matcher", "description": "", "dateCreated": "2016-09-01T23:53:56.000Z", "dateModified": "2016-09-01T23:53:56.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\(\\s*([0-9]+)\\)\\[([a-zA-Z0-9\\s*:]*)\\|\\s*([0-9]{1,5}\\:[0-9]{3})\\s*(?:\\[([0-9]{1,3})\\:[0-9]{1,3}\\])?\\]\\{([0-9]{1,4})\\}([a-zA-Z0-9]+)\\@([a-zA-Z0-9]+)\\:(.+)\\((?:.+)\\)([\\$|#])\\s{1}(.+)(\\n(.+))+", "permalinkFragment": "kG6eH3", "isFavorite": false, "isStarred": false}, {"title": "Parenthesis Non-Breaking Spaces", "description": "Find spaces between parenthesis and replace them with non-breaking spaces", "dateCreated": "2016-09-01T23:56:08.000Z", "dateModified": "2016-09-01T23:56:08.000Z", "author": "Aartro", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\u201c|\u2019|\u2018|\u201d)\\s(?!\\w)", "permalinkFragment": "pC5lB4", "isFavorite": false, "isStarred": false}, {"title": "Match PS1 & Cmd - Extract Cmd", "description": "", "dateCreated": "2016-09-01T23:57:46.000Z", "dateModified": "2016-09-01T23:57:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\(\\s*[0-9]+\\)\\[[a-zA-Z0-9\\s:]*\\|\\s*[0-9]{1,5}\\:[0-9]{3}\\s*(?:\\[[0-9]{1,3}\\:[0-9]{1,3}\\])?\\]\\{[0-9]{1,4}\\}[a-zA-Z0-9\\s:@\\/~]+\\(?:.+\\)[\\$|#]\\s{1}(?<!\\n)(.+)$", "permalinkFragment": "kV4nR3", "isFavorite": false, "isStarred": false}, {"title": "comment", "description": "", "dateCreated": "2016-09-02T05:51:29.000Z", "dateModified": "2016-09-02T05:51:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/\\*(.*?)\\*\\/", "permalinkFragment": "wT8fM4", "isFavorite": false, "isStarred": false}, {"title": "COMMENT", "description": "", "dateCreated": "2016-09-02T05:59:01.000Z", "dateModified": "2016-09-02T05:59:01.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/\\*(.*?)\\*\\/", "permalinkFragment": "kN7fR4", "isFavorite": false, "isStarred": false}, {"title": "perl", "description": "", "dateCreated": "2016-09-02T06:10:13.000Z", "dateModified": "2016-09-02T06:10:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\w+)\\s+(\\w+)\\s([\\w-:]+)\\s+([\\w-]+)\\s+(?P<process>[\\w-]+)(\\[.*\\]:|:)", "permalinkFragment": "zK1qV7", "isFavorite": false, "isStarred": false}, {"title": "Name Validation", "description": "Regex that matches any kind of letter from any language\n\\p{L}  Unicode letter\n\\s  whitespace\n'.-\n", "dateCreated": "2016-09-02T08:09:12.000Z", "dateModified": "2016-09-02T08:09:12.000Z", "author": "Haroun SMIDA", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[\\\\p{L} .'-]+$", "permalinkFragment": "zS3xF5", "isFavorite": false, "isStarred": false}, {"title": "find lat longs", "description": "find lat longs", "dateCreated": "2016-09-02T11:54:13.000Z", "dateModified": "2016-09-02T11:54:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "-*[0-9]+[.]*[0-9]*", "permalinkFragment": "pQ9xS4", "isFavorite": false, "isStarred": false}, {"title": "video id", "description": "", "dateCreated": "2016-09-02T13:25:02.000Z", "dateModified": "2016-09-02T13:25:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(youtu(be\\.com\\/(watch\\?v=(([a-zA-Z0-9]{0,11})|(&.*))|v\\/(([a-zA-Z0-9]{0,11})(\\?.*))|embed\\/(([a-zA-Z0-9]{0,11})(\\?.*)))|\\.be\\/(([a-zA-Z0-9]{0,11})(\\?*))))|(vine\\.co\\/v\\/(.*))|(vimeo\\.com\\/(m\\/#\\/(.*)|(groups\\/.*\\/videos\\/(.*))|(.*)))", "permalinkFragment": "dX3bH0", "isFavorite": false, "isStarred": false}, {"title": "extract images from google image results", "description": "", "dateCreated": "2016-09-02T16:39:41.000Z", "dateModified": "2016-09-02T16:39:41.000Z", "author": "ibrahim", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\\"ou\\\"\\:\\\"(https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif))", "permalinkFragment": "bO4oI0", "isFavorite": false, "isStarred": false}, {"title": "SC Extra tokens", "description": "In Documents", "dateCreated": "2016-09-02T20:02:15.000Z", "dateModified": "2016-09-02T20:02:15.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "SC:(Replace\\(\"(.*)\",\"(.*)\"\\))\\s", "permalinkFragment": "iL1bE6", "isFavorite": false, "isStarred": false}, {"title": "Quizlet Bolding to HTML", "description": "", "dateCreated": "2016-09-02T23:32:28.000Z", "dateModified": "2016-09-02T23:32:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "@((?:(?!@).)*)@((?:(?!@).)*)", "permalinkFragment": "eI4yL3", "isFavorite": false, "isStarred": false}, {"title": "Guid for MSSQL", "description": "Unique identifier guid generated by mssql databases", "dateCreated": "2016-09-03T00:16:48.000Z", "dateModified": "2016-09-03T00:16:48.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", "permalinkFragment": "oO9zI5", "isFavorite": false, "isStarred": false}, {"title": "Overwhelming Azure light", "description": "you're dead dude.", "dateCreated": "2016-09-03T03:36:25.000Z", "dateModified": "2016-09-03T03:36:25.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "You have failed to properly remove the Overwhelming Azure Light spell in time (?<Player>\\w+)", "permalinkFragment": "iK3kF2", "isFavorite": false, "isStarred": false}, {"title": "ex. 2", "description": "", "dateCreated": "2016-09-03T17:37:12.000Z", "dateModified": "2016-09-03T17:37:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b(mini|super|hiper)?mercado\\b", "permalinkFragment": "sS5bB1", "isFavorite": false, "isStarred": false}, {"title": "Mercado", "description": "Somente as primeiras palavras.", "dateCreated": "2016-09-03T17:42:12.000Z", "dateModified": "2016-09-03T17:42:12.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(mini|super|hiper)?mercado$", "permalinkFragment": "xJ9bZ9", "isFavorite": false, "isStarred": false}, {"title": "Telefonski broj EastEurope", "description": "Format broja za Balkan", "dateCreated": "2016-09-04T08:01:12.000Z", "dateModified": "2016-09-04T08:01:12.000Z", "author": "Ja", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9]\\d{2}\\/\\d{3}-\\d{3}", "permalinkFragment": "yH3nE5", "isFavorite": false, "isStarred": false}, {"title": "Count Query", "description": "This query will match count query", "dateCreated": "2016-09-04T15:44:55.000Z", "dateModified": "2016-09-04T15:44:55.000Z", "author": "Akshat jain", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\s*(count)\\s+\"[^\"]+\"\\s*((tsr|sum)\\s+(<|<<)\\s+(\"[^\"]+\"|[-+]?[0-9]*\\.?[0-9]+))?\\s*$", "permalinkFragment": "yP2bD9", "isFavorite": false, "isStarred": false}, {"title": "lista1", "description": "identificadores", "dateCreated": "2016-09-04T17:47:47.000Z", "dateModified": "2016-09-04T17:47:47.000Z", "author": "LucasFranson_WesleyBernardo", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Za-z].[A-Za-z0-9]*", "permalinkFragment": "vQ4xU6", "isFavorite": false, "isStarred": false}, {"title": "regex", "description": "", "dateCreated": "2016-09-05T01:05:17.000Z", "dateModified": "2016-09-05T01:05:17.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(is [a-zA-Z]+)", "permalinkFragment": "nG4bI7", "isFavorite": false, "isStarred": false}, {"title": "Time Zone", "description": "Time zone in either +01:54 format, or Australia/Sydney format", "dateCreated": "2016-09-05T07:56:49.000Z", "dateModified": "2016-09-05T07:56:49.000Z", "author": "DT", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(((\\+|-)((0[0-9])|(1[0-2])):([0-5][0-9]))|([A-Za-z]+\\/[A-Za-z]+))$", "permalinkFragment": "dD3iI2", "isFavorite": false, "isStarred": false}, {"title": "Email validation - Click Dimensions", "description": "Little bit specific. Created to comply with ClickDimensions email  validation which does not follow the rules...", "dateCreated": "2016-09-05T08:37:38.000Z", "dateModified": "2016-09-05T08:37:38.000Z", "author": "Aleksandar Perc", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([^@]|[a-zA-Z\\d.+ -]*)(?=@)@([a-zA-Z\\d-]*)\\.[a-zA-Z]+)$", "permalinkFragment": "oC4mD7", "isFavorite": false, "isStarred": false}, {"title": "double", "description": "", "dateCreated": "2016-09-05T09:07:36.000Z", "dateModified": "2016-09-05T09:07:36.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{1,}.\\d{1,2}$", "permalinkFragment": "qC1qQ9", "isFavorite": false, "isStarred": false}, {"title": "Kadastr number", "description": "", "dateCreated": "2016-09-05T09:09:25.000Z", "dateModified": "2016-09-05T09:09:25.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{2}:\\d{2}:\\d{7}:\\d{3}$", "permalinkFragment": "pJ6bG6", "isFavorite": false, "isStarred": false}, {"title": "SQL placeholder match", "description": "", "dateCreated": "2016-09-05T09:21:29.000Z", "dateModified": "2016-09-05T09:21:29.000Z", "author": "Andy Chentsov", "flavor": "pcre", "delimiter": "/", "flags": "gmix", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\?                   # match the literal characters 'text'\n(?=                  # start lookahead\n   [^\"']*            # match any number of non-quote characters\n   (?:               # start non-capturing group, repeated zero or more times\n      (\"|')[^\\1]*\\1  # one quoted portion of text\n      [^\"']*         # any number of non-quote characters\n   )*                # end non-capturing group\n   $                 # match end of the string\n)                    # end lookahead", "permalinkFragment": "fQ7kC5", "isFavorite": false, "isStarred": false}, {"title": "DOI REGEX", "description": "hey", "dateCreated": "2016-09-05T11:22:17.000Z", "dateModified": "2016-09-05T11:22:17.000Z", "author": "Aadi", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(10[.][0-9]{4,}[^\\s\"\\/<>]*\\/[^\\s\"<>]+)", "permalinkFragment": "iZ3vO6", "isFavorite": false, "isStarred": false}, {"title": "Credit regex", "description": "", "dateCreated": "2016-09-05T11:31:01.000Z", "dateModified": "2016-09-05T11:31:01.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(10[.][0-9]{4,}[^\\s\"\\/<>]*\\/[^\\s\"<>]+)", "permalinkFragment": "mM8rT5", "isFavorite": false, "isStarred": false}, {"title": "nla", "description": "", "dateCreated": "2016-09-05T12:24:35.000Z", "dateModified": "2016-09-05T12:24:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:[NV]|GH)?([0-9-]+(?:[SF]|[A-Z])?)+(?:[A-Za-z]{1,3}[0-9]+|DV|D)?", "permalinkFragment": "nE2zQ6", "isFavorite": false, "isStarred": false}, {"title": "slack command", "description": "", "dateCreated": "2016-09-05T14:56:11.000Z", "dateModified": "2016-09-05T14:56:11.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:<.*>)|{(.*)}|([a-z0-9]+)", "permalinkFragment": "kR0pY8", "isFavorite": false, "isStarred": false}, {"title": "Windows Machine Name", "description": "Implements https://support.microsoft.com/en-us/kb/909264", "dateCreated": "2016-09-05T15:26:13.000Z", "dateModified": "2016-09-05T15:26:13.000Z", "author": "Daniel Fisher (lennybacon)", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[^.\\\\\\u002F:\\u002A\\u003F\\u0022\\u003C\\u003E|]{1}[^\\\\\\u002F:\\u002A\\u003F\\u0022\\u003C\\u003E|]{0,14}$", "permalinkFragment": "qS8hW7", "isFavorite": false, "isStarred": false}, {"title": "1", "description": "", "dateCreated": "2016-09-05T17:36:12.000Z", "dateModified": "2016-09-05T17:36:12.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((\\s*-?\\s*\\d+\\s*(d(ays?)?|h((ou)?rs?)?|m(in(ute)?s?)?|s(ec(ond)?s?)?)\\s*,?\\s*(and)?)*).*", "permalinkFragment": "pS9sC9", "isFavorite": false, "isStarred": false}, {"title": "select between square bracket also the bracket", "description": "", "dateCreated": "2016-09-05T22:51:05.000Z", "dateModified": "2016-09-05T22:51:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "U", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\[.*?\\])", "permalinkFragment": "uG3dN7", "isFavorite": false, "isStarred": false}, {"title": "DBPedia-highest-level-entry", "description": "", "dateCreated": "2016-09-06T05:12:14.000Z", "dateModified": "2016-09-06T05:12:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<(\\S+)>\\s*<(\\S+)>\\s*(?:\"(.+)\"|<(\\S+)>).*.", "permalinkFragment": "tD5xZ3", "isFavorite": false, "isStarred": false}, {"title": "^0*[1-9][0-9]*(\\.[0-9]+)?|0+\\.[0-9]*[1-9][0-9]*$", "description": "", "dateCreated": "2016-09-06T06:19:47.000Z", "dateModified": "2016-09-06T06:19:47.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{0,6}(\\.\\d{1,2})?$", "permalinkFragment": "tE0yN5", "isFavorite": false, "isStarred": false}, {"title": "Extract anything between double $$ chars", "description": "", "dateCreated": "2016-09-06T09:20:37.000Z", "dateModified": "2016-09-06T09:20:37.000Z", "author": "ecabo", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\$\\$(.*?)\\$\\$", "permalinkFragment": "nR7tO1", "isFavorite": false, "isStarred": false}, {"title": "Email validation", "description": "", "dateCreated": "2016-09-06T10:27:01.000Z", "dateModified": "2016-09-06T10:27:01.000Z", "author": "phatnguyen.tit", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$", "permalinkFragment": "tE0kT7", "isFavorite": false, "isStarred": false}, {"title": "tag not containing", "description": "get all tags not containing a given string", "dateCreated": "2016-09-06T12:00:12.000Z", "dateModified": "2016-09-06T12:00:12.000Z", "author": "pan4ever", "flavor": "pcre", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<tagname((.|\\n)(?!string))*?<\\/tagname>", "permalinkFragment": "tK2uX9", "isFavorite": false, "isStarred": false}, {"title": "html-strip", "description": "", "dateCreated": "2016-09-06T13:34:54.000Z", "dateModified": "2016-09-06T13:34:54.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<\\/?[^>]*>", "permalinkFragment": "pR7gG4", "isFavorite": false, "isStarred": false}, {"title": "Get all accessibility attributes", "description": "Get all aria- attributes from html string.", "dateCreated": "2016-09-06T17:56:24.000Z", "dateModified": "2016-09-06T17:56:24.000Z", "author": "David Aguilar", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "aria-(\\w+?)(?:\\s*)=(?:\\s*)[\"'](.*?)[\"']", "permalinkFragment": "eW6uG2", "isFavorite": false, "isStarred": false}, {"title": "BR Phone", "description": "get all attempts to write brazilian phone numbers", "dateCreated": "2016-09-06T21:50:57.000Z", "dateModified": "2016-09-06T21:50:57.000Z", "author": "rafaelverger", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(?<=^)|(?<=\\D))((00|\\+)?55(\\s|\\.|-)*)?((\\()?0?\\d{2}(?(5)\\)|)(\\s|\\.|-)*)?(9(\\s|\\.|-)*)?\\d{4}(\\s|\\.|-)*\\d{4}(?=\\D|$)", "permalinkFragment": "lK1tD6", "isFavorite": false, "isStarred": false}, {"title": "email catcher", "description": "", "dateCreated": "2016-09-06T21:59:17.000Z", "dateModified": "2016-09-06T21:59:17.000Z", "author": "rafaelverger", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\b)\\w([\\w\\.\\-_0-9])*(@| at )[\\w0-9][\\w\\-_0-9]*((\\.| DOT )[\\w\\-_0-9]+)+(?=\\b)", "permalinkFragment": "xC0tI1", "isFavorite": false, "isStarred": false}, {"title": "Quizlet Bold to HTML", "description": "", "dateCreated": "2016-09-07T04:45:36.000Z", "dateModified": "2016-09-07T04:45:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "@((?:(?!@).)*)@((?:(?!@).)*)", "permalinkFragment": "bH0hX9", "isFavorite": false, "isStarred": false}, {"title": "Chercher un Pr\u00e9nom ou un Nom", "description": "", "dateCreated": "2016-09-07T06:13:39.000Z", "dateModified": "2023-07-20T05:13:18.000Z", "author": "", "flavor": "dotnet", "delimiter": "\"", "flags": "gm", "version": 2, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([A-Za-z-\u00e9\u00e8\u00eb]+) (\\b[A-Z][A-Z\u00c9\\s]+\\b)", "permalinkFragment": "fD9gY1", "isFavorite": false, "isStarred": false}, {"title": "4444", "description": "", "dateCreated": "2016-09-07T06:15:58.000Z", "dateModified": "2016-09-07T06:15:58.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([^\\s\\-]*)([a-zA-Z\\-\\d]+)", "permalinkFragment": "qU2eY0", "isFavorite": false, "isStarred": false}, {"title": "phone number italy", "description": "phone number with country prefix (+ or 00) and phone number with spaces and special characters allowed", "dateCreated": "2016-09-07T07:53:54.000Z", "dateModified": "2016-09-07T07:53:54.000Z", "author": "bux", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([+]?\\d{1,4}[-\\s]?|)\\d{3}[-\\s]?\\d{3}[-\\s]?\\d{4}$", "permalinkFragment": "jN8kS1", "isFavorite": false, "isStarred": false}, {"title": "log tif", "description": "log aktifitas tif", "dateCreated": "2016-09-07T08:20:10.000Z", "dateModified": "2016-09-07T08:20:10.000Z", "author": "irwan", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "tif log", "permalinkFragment": "eO4mZ7", "isFavorite": false, "isStarred": false}, {"title": "authproc1_auth01_2", "description": "", "dateCreated": "2016-09-07T10:02:37.000Z", "dateModified": "2016-09-07T10:02:37.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[^\\-]*)\\W([^\\s]*)\\s+([^\\s]*)\\s+([^\\s]*)\\s+([^\\s]*)\\s+(.*$)", "permalinkFragment": "lZ5fS7", "isFavorite": false, "isStarred": false}, {"title": "EMail - RFC Compliant", "description": "", "dateCreated": "2016-09-07T13:49:49.000Z", "dateModified": "2016-09-07T13:49:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*(\\.((?![^\\.]$)[^\\.]*)$)|.*@(?:(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$))(?=^.{6,320}$)(?:[a-zA-Z0-9\u00e1\u00e0\u00e2\u00e4\u00e3\u00e5\u00e7\u00e9\u00e8\u00ea\u00eb\u00ed\u00ec\u00ee\u00ef\u00f1\u00f3\u00f2\u00f4\u00f6\u00f5\u00fa\u00f9\u00fb\u00fc\u00fd\u00ff\u00e6\u0153\u00c1\u00c0\u00c2\u00c4\u00c3\u00c5\u00c7\u00c9\u00c8\u00ca\u00cb\u00cd\u00cc\u00ce\u00cf\u00d1\u00d3\u00d2\u00d4\u00d6\u00d5\u00da\u00d9\u00db\u00dc\u00dd\u0178\u00c6\u0152!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9\u00e1\u00e0\u00e2\u00e4\u00e3\u00e5\u00e7\u00e9\u00e8\u00ea\u00eb\u00ed\u00ec\u00ee\u00ef\u00f1\u00f3\u00f2\u00f4\u00f6\u00f5\u00fa\u00f9\u00fb\u00fc\u00fd\u00ff\u00e6\u0153\u00c1\u00c0\u00c2\u00c4\u00c3\u00c5\u00c7\u00c9\u00c8\u00ca\u00cb\u00cd\u00cc\u00ce\u00cf\u00d1\u00d3\u00d2\u00d4\u00d6\u00d5\u00da\u00d9\u00db\u00dc\u00dd\u0178\u00c6\u0152!#$%&'*+\\/=?^_`{|}~-]+)*|\"(?:[\\xE1\\xE0\\xE2\\xE4\\xE3\\xE5\\xE7\\xE9\\xE8\\xEA\\xEB\\xED\\xEC\\xEE\\xEF\\xF1\\xF3\\xF2\\xF4\\xF6\\xF5\\xFA\\xF9\\xFB\\xFC\\xFD\\xFF\\xE6\\xC1\\xC0\\xC2\\xC4\\xC3\\xC5\\xC7\\xC9\\xC8\\xCA\\xCB\\xCD\\xCC\\xCE\\xCF\\xD1\\xD3\\xD2\\xD4\\xD6\\xD5\\xDA\\xD9\\xDB\\xDC\\xDD\\xC6\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f\\s]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")(?:(?=@(?:[0-9]{1,3}.){3}[0-9]{1,3})@(?:(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$|(?!@(?:[0-9]{1,3}.){4,}$)@(?:(?:[a-zA-Z0-9\u00e1\u00e0\u00e2\u00e4\u00e3\u00e5\u00e7\u00e9\u00e8\u00ea\u00eb\u00ed\u00ec\u00ee\u00ef\u00f1\u00f3\u00f2\u00f4\u00f6\u00f5\u00fa\u00f9\u00fb\u00fc\u00fd\u00ff\u00e6\u0153\u00c1\u00c0\u00c2\u00c4\u00c3\u00c5\u00c7\u00c9\u00c8\u00ca\u00cb\u00cd\u00cc\u00ce\u00cf\u00d1\u00d3\u00d2\u00d4\u00d6\u00d5\u00da\u00d9\u00db\u00dc\u00dd\u0178\u00c6\u0152](?:[a-zA-Z0-9\u00e1\u00e0\u00e2\u00e4\u00e3\u00e5\u00e7\u00e9\u00e8\u00ea\u00eb\u00ed\u00ec\u00ee\u00ef\u00f1\u00f3\u00f2\u00f4\u00f6\u00f5\u00fa\u00f9\u00fb\u00fc\u00fd\u00ff\u00e6\u0153\u00c1\u00c0\u00c2\u00c4\u00c3\u00c5\u00c7\u00c9\u00c8\u00ca\u00cb\u00cd\u00cc\u00ce\u00cf\u00d1\u00d3\u00d2\u00d4\u00d6\u00d5\u00da\u00d9\u00db\u00dc\u00dd\u0178\u00c6\u0152-]*[a-zA-Z0-9\u00e1\u00e0\u00e2\u00e4\u00e3\u00e5\u00e7\u00e9\u00e8\u00ea\u00eb\u00ed\u00ec\u00ee\u00ef\u00f1\u00f3\u00f2\u00f4\u00f6\u00f5\u00fa\u00f9\u00fb\u00fc\u00fd\u00ff\u00e6\u0153\u00c1\u00c0\u00c2\u00c4\u00c3\u00c5\u00c7\u00c9\u00c8\u00ca\u00cb\u00cd\u00cc\u00ce\u00cf\u00d1\u00d3\u00d2\u00d4\u00d6\u00d5\u00da\u00d9\u00db\u00dc\u00dd\u0178\u00c6\u0152])?\\.)+[a-zA-Z0-9\u00e1\u00e0\u00e2\u00e4\u00e3\u00e5\u00e7\u00e9\u00e8\u00ea\u00eb\u00ed\u00ec\u00ee\u00ef\u00f1\u00f3\u00f2\u00f4\u00f6\u00f5\u00fa\u00f9\u00fb\u00fc\u00fd\u00ff\u00e6\u0153\u00c1\u00c0\u00c2\u00c4\u00c3\u00c5\u00c7\u00c9\u00c8\u00ca\u00cb\u00cd\u00cc\u00ce\u00cf\u00d1\u00d3\u00d2\u00d4\u00d6\u00d5\u00da\u00d9\u00db\u00dc\u00dd\u0178\u00c6\u0152](?:[a-zA-Z0-9\u00e1\u00e0\u00e2\u00e4\u00e3\u00e5\u00e7\u00e9\u00e8\u00ea\u00eb\u00ed\u00ec\u00ee\u00ef\u00f1\u00f3\u00f2\u00f4\u00f6\u00f5\u00fa\u00f9\u00fb\u00fc\u00fd\u00ff\u00e6\u0153\u00c1\u00c0\u00c2\u00c4\u00c3\u00c5\u00c7\u00c9\u00c8\u00ca\u00cb\u00cd\u00cc\u00ce\u00cf\u00d1\u00d3\u00d2\u00d4\u00d6\u00d5\u00da\u00d9\u00db\u00dc\u00dd\u0178\u00c6\u0152-]*[a-zA-Z0-9\u00e1\u00e0\u00e2\u00e4\u00e3\u00e5\u00e7\u00e9\u00e8\u00ea\u00eb\u00ed\u00ec\u00ee\u00ef\u00f1\u00f3\u00f2\u00f4\u00f6\u00f5\u00fa\u00f9\u00fb\u00fc\u00fd\u00ff\u00e6\u0153\u00c1\u00c0\u00c2\u00c4\u00c3\u00c5\u00c7\u00c9\u00c8\u00ca\u00cb\u00cd\u00cc\u00ce\u00cf\u00d1\u00d3\u00d2\u00d4\u00d6\u00d5\u00da\u00d9\u00db\u00dc\u00dd\u0178\u00c6\u0152])?)$)", "permalinkFragment": "gJ8wP5", "isFavorite": false, "isStarred": false}, {"title": "Test", "description": "", "dateCreated": "2016-09-07T15:00:43.000Z", "dateModified": "2016-09-07T15:00:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s*No further distribution of this document is allowed without approval by the CEO or CFO MMR Policy Test\\s*", "permalinkFragment": "lR7nV6", "isFavorite": false, "isStarred": false}, {"title": "Footnote Regex for SFM", "description": "", "dateCreated": "2016-09-07T15:48:42.000Z", "dateModified": "2016-09-07T15:48:42.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\\\f[ ](?P<modifier>[-,+,?])[ ])(?P<string>.+)(?=\\\\f\\*)", "permalinkFragment": "iQ4cZ7", "isFavorite": false, "isStarred": false}, {"title": "Cross Reference Regex for SFM", "description": "SFM 2.4", "dateCreated": "2016-09-07T15:49:02.000Z", "dateModified": "2016-09-07T15:49:02.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\\\x[ ](?P<modifier>[-,+,?])[ ])(?P<string>.+)(?=\\\\x\\*)", "permalinkFragment": "bM4zO1", "isFavorite": false, "isStarred": false}, {"title": "NetApp Controller", "description": "Regular Expressions for NetApp Controller", "dateCreated": "2016-09-07T18:10:36.000Z", "dateModified": "2016-09-07T18:10:36.000Z", "author": "Jerome Diggs", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([#:>$]){0,3}$", "permalinkFragment": "qN5nH2", "isFavorite": false, "isStarred": false}, {"title": "REMOVE INSIDE STRING OF BRACKET EXCEPT BRACKET INSIDE OF IT", "description": "REMOVE INSIDE STRING OF BRACKET EXCEPT BRACKET INSIDE OF IT", "dateCreated": "2016-09-07T20:32:31.000Z", "dateModified": "2016-09-07T20:32:31.000Z", "author": "Momar", "flavor": "pcre", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "({\\n\\s*)(?:[^}{]*)(\\n\\s*{)", "permalinkFragment": "aX3iR9", "isFavorite": false, "isStarred": false}, {"title": "password regex", "description": "Contr\u00f4ler si le mot de passe poss\u00e8de des lettres minuscules ou majuscules de a \u00e0 z, des chiffres de 0 \u00e0 9 et des caract\u00e8res sp\u00e9ciaux.", "dateCreated": "2016-09-08T02:57:45.000Z", "dateModified": "2016-09-08T02:57:45.000Z", "author": "Worldwide", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z0-9]*[[:punct:]]*)+", "permalinkFragment": "hE6zH7", "isFavorite": false, "isStarred": false}, {"title": "Port & Port rage regex", "description": "Matches port and port range max to 2^16.\nMatch:\n1\n2\n3\n99\n1001\n65535\n1-100\n80-90\n1-65535\n\nNot match:\n65536-75535\n1-65536", "dateCreated": "2016-09-08T06:09:36.000Z", "dateModified": "2016-09-08T06:09:36.000Z", "author": "Dan", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})$|^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})-(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})$", "permalinkFragment": "dP5xK0", "isFavorite": false, "isStarred": false}, {"title": "GettyImages links", "description": "capture image id from a variety of gettyimages links", "dateCreated": "2016-09-08T09:58:18.000Z", "dateModified": "2016-09-08T09:58:18.000Z", "author": "Ahmed Hassanein", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:https?:\\/\\/)?(?:www\\.)?(?:gettyimages|gty)\\.(?:\\w+)\\/(?:license|detail)\\/(\\d+).*", "permalinkFragment": "rR4zI3", "isFavorite": false, "isStarred": false}, {"title": "Only first name and last name", "description": "No numbers, no special characters,\nno triple (or more) repeating characters", "dateCreated": "2016-09-08T14:04:28.000Z", "dateModified": "2016-09-08T14:04:28.000Z", "author": "ranst", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=[a-zA-Z\\s]{2,25}$)(?=[a-zA-Z\\s])(?:([\\w\\s*?])\\1?(?!\\1))+$", "permalinkFragment": "cO4lF0", "isFavorite": false, "isStarred": false}, {"title": "Match @usernames", "description": "Match @usernames in text.", "dateCreated": "2016-09-08T14:38:59.000Z", "dateModified": "2016-09-08T14:38:59.000Z", "author": "rjstone", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(@[^ ]+)", "permalinkFragment": "xT5rT9", "isFavorite": false, "isStarred": false}, {"title": "MAC ADDRESS", "description": "", "dateCreated": "2016-09-08T15:11:42.000Z", "dateModified": "2016-09-08T15:11:42.000Z", "author": "abaumann", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})", "permalinkFragment": "eX5lT9", "isFavorite": false, "isStarred": false}, {"title": "Regex Library", "description": "I don't know", "dateCreated": "2016-09-08T15:42:32.000Z", "dateModified": "2016-09-08T15:42:32.000Z", "author": "Bruno", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^<iframe.+?src=\"https?:\\/\\/www\\.youtube\\.com\\/embed\\/([a-zA-Z0-9_-]{11})\"[^>]+?><\\/iframe>$", "permalinkFragment": "kF2iT3", "isFavorite": false, "isStarred": false}, {"title": "Validate PHP DateInterval Format", "description": "Checks if string is valid DateInterval format", "dateCreated": "2016-09-08T16:04:42.000Z", "dateModified": "2016-09-08T16:04:42.000Z", "author": "grambas", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(P([1-9]|[1-9][0-9])(W|D|M|H)|PT([1-9]|[1-9][0-9])H)", "permalinkFragment": "uW6nK6", "isFavorite": false, "isStarred": false}, {"title": "matching sql input", "description": "", "dateCreated": "2016-09-08T16:21:36.000Z", "dateModified": "2016-09-08T16:21:36.000Z", "author": "mee", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s*\\(\\s*(?:'[-\\/a-zA-Z 0-9]{1,40}')\\,\\s*\\s*(?:'[-\\/a-zA-Z 0-9]{1,40}')\\,\\s*(?:'[ifbIFB]{1}')\\,\\s*(?:'[0-9]{8}')\\,\\s*(?:'[0-9]{8}')\\)\\s*\\,\\s*\\n*", "permalinkFragment": "nG3iI4", "isFavorite": false, "isStarred": false}, {"title": "Primes", "description": "Find primes", "dateCreated": "2016-09-09T02:11:51.000Z", "dateModified": "2016-09-09T02:11:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.?$|^(..+?)\\1+$", "permalinkFragment": "iM1dM8", "isFavorite": false, "isStarred": false}, {"title": "URL matched", "description": "", "dateCreated": "2016-09-09T04:08:27.000Z", "dateModified": "2016-09-09T04:08:27.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "url\\(https://[0-9A-Za-z\\-\\.\\/_]*\\.jpg\\?oh=[0-9A-Za-z_\\.\\/\\&=]*", "permalinkFragment": "cM9gG6", "isFavorite": false, "isStarred": false}, {"title": "Expression for -1 to infinite", "description": "", "dateCreated": "2016-09-09T06:24:22.000Z", "dateModified": "2016-09-09T06:24:22.000Z", "author": "Nitin Zajam", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "-[1]|[0-9]+", "permalinkFragment": "cX6lX8", "isFavorite": false, "isStarred": false}, {"title": "german date without validation", "description": "checks the format but does not validate", "dateCreated": "2016-09-09T08:38:52.000Z", "dateModified": "2016-09-09T08:38:52.000Z", "author": "JvN", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{2}[.]\\d{2}[.]\\d{4})", "permalinkFragment": "tY7uI9", "isFavorite": false, "isStarred": false}, {"title": "Regex matching non-prime unary numbers", "description": "reg(sn) => boolean:\nreg('1111') => true\nreg('xxxxxxxxxxx') => false", "dateCreated": "2016-09-09T09:05:27.000Z", "dateModified": "2016-09-09T09:05:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.?$|^(..+?)\\1+$", "permalinkFragment": "gN5qO0", "isFavorite": false, "isStarred": false}, {"title": "U.S. Telephone Numbers (No 800 or 900#)", "description": "Block 800, 855, 866, 877, 888 as well as 900 numbers. ", "dateCreated": "2016-09-09T19:23:10.000Z", "dateModified": "2016-09-09T19:23:10.000Z", "author": "hammraido", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?!000)(?!900)(?!976)(?!800)(?!855)(?!866)(?!877)(?!888)^([0-9]( |-)?)?(\\(?[0-9]{3}\\)?|[0-9]{3})( |-)?([0-9]{3}( |-)?[0-9]{4}|[a-zA-Z0-9]{7})$", "permalinkFragment": "pD1rA3", "isFavorite": false, "isStarred": false}, {"title": "WIP", "description": "", "dateCreated": "2016-09-09T20:51:24.000Z", "dateModified": "2016-09-09T20:51:24.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z]+)\\(((?:[\\w-]+,?)+)(?::,?([\\w-,]+))?\\)", "permalinkFragment": "aX3iZ2", "isFavorite": false, "isStarred": false}, {"title": "Tag without content", "description": "Will detect a tag <XXXX yyy=\"zzz\"></XXXX>", "dateCreated": "2016-09-10T11:56:28.000Z", "dateModified": "2016-09-10T11:56:28.000Z", "author": "Marc Cl\u00e9ment", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<([^#].*)[ ]*.*><\\/\\1>", "permalinkFragment": "pH4iN8", "isFavorite": false, "isStarred": false}, {"title": "url regx validate", "description": "validate from url with good regx ", "dateCreated": "2016-09-10T19:51:58.000Z", "dateModified": "2016-09-10T19:51:58.000Z", "author": "mohamed nabil hussien", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(https?|ftp)\\:\\/\\/+([www]){3}\\.([a-z0-9.])+\\.([a-z]){2,3}$", "permalinkFragment": "cQ0iD7", "isFavorite": false, "isStarred": false}, {"title": "Takes a word with transcription from dictionary record", "description": "//Original word and its translation/transcription may be delimited with end-of-line,space and punctuations symblos\n        //There may or may not be a transcription (but we expect it always to be in square brackets)\n        //As well some dictionaries provide several transcriptions for the same word, delimited by punctuation symbols\nExample of dictionary article to extract the word with transcription:\n\nTRANSLATION\n\n[tr\u00e6nz'le\u026a\u0283(\u0259)n] , [tr\u0251\u02d0n-], [-(t)s-] \u0431\u0440\u0438\u0442.  / \u0430\u043c\u0435\u0440. \n\n\u0441\u0443\u0449.\n\n\u043f\u0435\u0440\u0435\u0432\u043e\u0434 (\u0441 \u043e\u0434\u043d\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430 \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0439, \u0438\u0437 \u043e\u0434\u043d\u0438\u0445 \u0435\u0434\u0438\u043d\u0438\u0446 \u0432 \u0434\u0440\u0443\u0433\u0438\u0435)\n\n\u0443\u0441\u0442. \u043f\u0435\u0440\u0435\u0434\u0432\u0438\u0436\u0435\u043d\u0438\u0435, \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435, \u0441\u0434\u0432\u0438\u0433, \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435\n\n\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435\n\n\u044e\u0440. \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430", "dateCreated": "2016-09-10T21:31:03.000Z", "dateModified": "2016-09-10T21:31:03.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "x", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([\\w]+)(?:[\\s]|[,.;]|\\n)*(?:\\[.+?\\](?:[\\s]|[,.;]|\\n)*)*", "permalinkFragment": "mY7nG0", "isFavorite": false, "isStarred": false}, {"title": "Medicare Number (HICN)", "description": "Medicare ID Number (HICN) RegEx Pattern", "dateCreated": "2016-09-11T06:33:26.000Z", "dateModified": "2016-09-11T06:33:26.000Z", "author": "Ace Therapy", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{3}-?\\d{2}-?\\d{4}-?[a-zA-Z]", "permalinkFragment": "lA9gH1", "isFavorite": false, "isStarred": false}, {"title": "asus firewall", "description": "", "dateCreated": "2016-09-11T07:43:18.000Z", "dateModified": "2016-09-11T07:43:18.000Z", "author": "gs", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s+(?P<tst_dvc>[^\\s]+)\\s+\\w{3}\\s+\\d{1,2}\\s+\\d{2}\\:\\d{2}\\:\\d{2}\\s(?P<tst_cmd>[^:]+):\\s+(?P<tst_action>[^\\s]+)\\s+<\\d>(?P<tst_action2>[^\\s]+)\\s+IN=(?P<tst_in_if>[^\\s]+)\\s+OUT=(?P<tst_out_if>[^\\s]+)\\s+<\\d>(?P<tst_src_ip>[^\\s]+)\\s+DST=(?P<tst_dest_ip>[^\\s]+)\\s+<\\d>LEN=(?P<tst_len>[^\\s]+)\\s+TOS=(?P<tst_tos>[^\\s]+)\\s+PREC=(?P<tst_prec>[^\\s]+)\\s+TTL=(?P<tst_ttl>[^\\s]+)\\s+ID=(?P<tst_id>[^\\s]+)\\s+(DF\\s+|\\s+)PROTO=(?P<tst_proto>[^\\s]+)\\s+<\\d>SPT=(?P<tst_src_port>[^\\s]+)\\s+DPT=(?P<tst_dest_port>[^\\s]+)\\s+", "permalinkFragment": "kZ2hR5", "isFavorite": false, "isStarred": false}, {"title": "regexp", "description": "", "dateCreated": "2016-09-11T10:44:07.000Z", "dateModified": "2016-09-11T10:44:07.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "u", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[\\p{L}\\d-.&*._()[\\] ]*$", "permalinkFragment": "qO7vX3", "isFavorite": false, "isStarred": false}, {"title": "pwl repo titles", "description": "", "dateCreated": "2016-09-12T00:02:12.000Z", "dateModified": "2016-09-12T00:02:12.000Z", "author": "Devin McGloin", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\[)(?!:scroll:)(?!\\d+)(?P<title>[A-Z][\\w\\s\\,\\-\\?\\:\\']+)(?=\\])", "permalinkFragment": "zY4wE2", "isFavorite": false, "isStarred": false}, {"title": "MCR_RegRex", "description": "reg ex for checking if command has an operator", "dateCreated": "2016-09-12T05:05:46.000Z", "dateModified": "2016-09-12T05:05:46.000Z", "author": "roots", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^\\s*\\w+\\s[^|<>])", "permalinkFragment": "mZ3pM7", "isFavorite": false, "isStarred": false}, {"title": "CSV record", "description": "Respects both \"double-double\" and \"escaped doublequote\" quotes in quotes.\nRespects newlines in quoted strings and as line-separators.\n\n(see also RFC-4180)", "dateCreated": "2016-09-12T09:17:31.000Z", "dateModified": "2016-09-12T09:17:31.000Z", "author": "aes", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:\\s*(?:\\\"((?:[^\\\"]|\\\"\\\"|\\\\\\\")*)\\\"|\\\"([^\\\"]*)\\\"|([^,\\r\\n]+))\\s*(?:,|[\\r\\n])?)+?", "permalinkFragment": "cH8gF7", "isFavorite": false, "isStarred": false}, {"title": "resourcepath regex", "description": "", "dateCreated": "2016-09-12T10:08:25.000Z", "dateModified": "2016-09-12T10:08:25.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<fromall>(?P<form>\\/[A-z]+)(?<formid>\\(.*?\\))|\\/[A-z]+)(?=.*\\?\\$select)", "permalinkFragment": "aI9qO2", "isFavorite": false, "isStarred": false}, {"title": "Search IP", "description": "This regex searches for an IP", "dateCreated": "2016-09-12T11:21:19.000Z", "dateModified": "2016-09-12T11:21:19.000Z", "author": "dkon", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\n", "permalinkFragment": "jZ9kX0", "isFavorite": false, "isStarred": false}, {"title": "SWIFT code", "description": "", "dateCreated": "2016-09-12T11:41:19.000Z", "dateModified": "2016-09-12T11:41:19.000Z", "author": "Mark Byers", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$", "permalinkFragment": "qP1sK3", "isFavorite": false, "isStarred": false}, {"title": "Guests Thomas Cook", "description": "", "dateCreated": "2016-09-12T11:58:30.000Z", "dateModified": "2016-09-12T11:58:30.000Z", "author": "Nowon5", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\w]+,[\\w]+\\s+[\\w]\\s+[\\d]{1,2}[\\S\\s\\.]+[\\d]{4})", "permalinkFragment": "aG9pL1", "isFavorite": false, "isStarred": false}, {"title": "GPS from Google Maps", "description": "Check if Coordinates from Google Maps are valid", "dateCreated": "2016-09-12T13:38:11.000Z", "dateModified": "2016-09-12T13:38:11.000Z", "author": "freMea", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(-?[1-8]?\\d(?:\\.\\d{1,18})?|90(?:\\.0{1,18})?),\\s+?(-?(?:1[0-7]|[1-9])?\\d(?:\\.\\d{1,18})?|180(?:\\.0{1,18})?)$", "permalinkFragment": "bA6tV4", "isFavorite": false, "isStarred": false}, {"title": "Export Apple device id list", "description": "", "dateCreated": "2016-09-12T16:14:25.000Z", "dateModified": "2016-09-12T16:14:25.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*)\\s(\\w+)$", "permalinkFragment": "wP5yS9", "isFavorite": false, "isStarred": false}, {"title": "Buscar o reemplazar 'texto entre caracateres especiales',", "description": "Buscar o reemplazar 'texto entre caracateres especiales',", "dateCreated": "2016-09-12T18:54:03.000Z", "dateModified": "2016-09-12T18:54:03.000Z", "author": "adansernas", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\')(.*?)(\\')", "permalinkFragment": "vS6fQ0", "isFavorite": false, "isStarred": false}, {"title": "windows match", "description": "", "dateCreated": "2016-09-12T19:24:39.000Z", "dateModified": "2016-09-12T19:24:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Microsoft-Windows-Security-Auditing", "permalinkFragment": "nP6jB8", "isFavorite": false, "isStarred": false}, {"title": "www.cbazaar.com/latest-arrivals.html#!page=1", "description": "", "dateCreated": "2016-09-13T06:54:28.000Z", "dateModified": "2016-09-13T06:54:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:www\\.|(?:https?|ftp|news|file):\\/\\/)[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|]", "permalinkFragment": "mL9uW8", "isFavorite": false, "isStarred": false}, {"title": "1", "description": "", "dateCreated": "2016-09-13T08:16:22.000Z", "dateModified": "2016-09-13T08:16:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Z][a-z]+:", "permalinkFragment": "vD7zO3", "isFavorite": false, "isStarred": false}, {"title": "\"IFB098E\" | \"IFB100E\" | \"IXC585E\"", "description": "", "dateCreated": "2016-09-13T11:54:02.000Z", "dateModified": "2016-09-13T11:54:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "R921|ESV005E|ESV004E|ESV003E", "permalinkFragment": "fF6aE6", "isFavorite": false, "isStarred": false}, {"title": "Two Numeric Digits from 1 to 99 excluding '00'", "description": "This regular expression matches are two numeric digits from till 99 excluding 00. Match starts from 01 to 99.", "dateCreated": "2016-09-13T12:21:30.000Z", "dateModified": "2016-09-13T12:21:30.000Z", "author": "Bhaskar Chaganti", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^([0-9][1-9])$|^([1-9][0-9])$)", "permalinkFragment": "eK6dE3", "isFavorite": false, "isStarred": false}, {"title": "bottle cleanup", "description": "find sizes different from standard", "dateCreated": "2016-09-13T14:18:19.000Z", "dateModified": "2016-09-13T14:18:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "jeroboam|magnum|([0-9]+[,.][0-9]{1,3})|([\\s?][0-9]{1,2}[\\s?])", "permalinkFragment": "cL4bL0", "isFavorite": false, "isStarred": false}, {"title": "not a string", "description": "", "dateCreated": "2016-09-13T15:25:25.000Z", "dateModified": "2016-09-13T15:25:25.000Z", "author": "cmolter", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "foo - (?!AggregateTopic)(.*) - coda", "permalinkFragment": "jL4eY0", "isFavorite": false, "isStarred": false}, {"title": "Remove HTML", "description": "", "dateCreated": "2016-09-13T17:46:50.000Z", "dateModified": "2016-09-13T17:46:50.000Z", "author": "https://github.com/Edux87", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<[^>]*>", "permalinkFragment": "hU0zM6", "isFavorite": false, "isStarred": false}, {"title": "Common EU Phonenumber Formats", "description": "*Optional Country code (+xxx|00xxx)\n*Zone code with optional parenthesis for leading zero.\n2-5 digit zone code, with different spacing.\n*Optional hyphen (optional spaces before and|or after)\n*Max service number 7 digits.\ndifferent groups with optional spaces, 2-5 digits per group", "dateCreated": "2016-09-13T18:58:17.000Z", "dateModified": "2016-09-13T18:58:17.000Z", "author": "Mattias", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(((\\+|0{2})\\s?[1-9]\\d{0,2})(\\s?(\\-\\s?)?)\\(?|0|\\()(0\\))?(0?[1-9](\\d{1,4}?|(\\d{1,2}\\s\\d{1,3})))(\\s?(\\-\\s?)?)(\\d{2,4}?\\s?(\\d{2,3}\\s)?\\d{2,5})$", "permalinkFragment": "eZ3eF8", "isFavorite": false, "isStarred": false}, {"title": "Localiza E-mail", "description": "Log de postfix, localiziando e-mail (from e to).", "dateCreated": "2016-09-13T22:51:21.000Z", "dateModified": "2016-09-13T22:51:21.000Z", "author": "Danilo Kishi", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(to|from)=?<([a-zA-Z0-9_.-]+)\\@([A-Za-z_-]+)\\.(([A-Za-z]{3})|([A-Za-z]{3})\\.([A-Za-z]{2}?))>", "permalinkFragment": "zC7vB4", "isFavorite": false, "isStarred": false}, {"title": "Qam Mega-bytes", "description": "", "dateCreated": "2016-09-14T04:33:25.000Z", "dateModified": "2016-09-14T04:33:25.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\<td\\>(.{2,5})\\<\\/td\\>", "permalinkFragment": "uJ9dC1", "isFavorite": false, "isStarred": false}, {"title": "Matching a URL", "description": "", "dateCreated": "2016-09-14T07:37:00.000Z", "dateModified": "2016-09-14T07:37:00.000Z", "author": "Vasili", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$", "permalinkFragment": "wP2nP6", "isFavorite": false, "isStarred": false}, {"title": "regular-expression", "description": "", "dateCreated": "2016-09-14T10:19:51.000Z", "dateModified": "2016-09-14T10:19:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(.*?)\\s(dk\\d+)\\s(.*?)\\s(\\d+)", "permalinkFragment": "wL4xR0", "isFavorite": false, "isStarred": false}, {"title": "RemoveItemNote", "description": "", "dateCreated": "2016-09-14T21:04:46.000Z", "dateModified": "2016-09-14T21:04:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\<ITEM_NOTE\\X*?\\<NOTE\\>\\<!\\[\\X*?]]><\\/NOTE>\\X*?<\\/ITEM_NOTE>)", "permalinkFragment": "sP0iQ2", "isFavorite": false, "isStarred": false}, {"title": "HTML <input> tags of type hidden but with the required attribute set", "description": "", "dateCreated": "2016-09-14T22:52:53.000Z", "dateModified": "2016-09-14T22:52:53.000Z", "author": "Paul Sturm", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<input\\s.*(?:type=['\"]?hidden['\"]?).*\"?required\"?.*\\s?\\/?>", "permalinkFragment": "eW5hD1", "isFavorite": false, "isStarred": false}, {"title": "Adding binary numbers", "description": "Verifies whether two binary numbers a and b are equal to their sum c; Input expected in form a + b = c", "dateCreated": "2016-09-15T02:03:51.000Z", "dateModified": "2016-09-15T02:03:51.000Z", "author": "Bob Weinand", "flavor": "pcre", "delimiter": "/", "flags": "xgJ", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?(DEFINE)\n(?<add> \\s*\\+\\s* )\n(?<eq> \\s*=\\s* )\n# Remove all zeroes except the last one if the number is 0\n(?<zero> (?:0(?=\\d))*+ )\n# cl: last digit of left operand being 1, cr: last digit of right operand being 1, \\d(?:0|\\b) check if last digit from result is 0\n# there will be carry if cl and cr are set, or cl or cr are set and the last digit from result is 0\n(?<carry> (?(cl)(?(cr)|\\d(?:0|\\b))|(?(cr)\\d(?:0|\\b)|(*F))) )\n# add carry with l1 (current digit of left operand being 1) and r1 (current digit of right operand being 1)\n# i.e. returns result of carry + l1 + r1 in Z/2Z\n(?<digitadd> (?(?= (?(?=(?(l1)(?(r1)|(*F))|(?(r1)(*F))))(?&carry)|(?!(?&carry))) )1|0) )\n# check for a single digit at the current offset whether the result is correct\n# ro: right operand out of bounds (i.e. the current digit is at a higher offset than the size of the left operand)\n# if we're out of bounds of the right operand, cr is just not set (i.e. handled as if there were leading zeroes)\n(?<recursedigit>\n# now, with the r and f, we can figure out r1 and cr at the current offset and also perform binary carry addition at that offset in the result\n  (?&add) (?&zero) (?:\\d*(?:0|1(?<r1>)))? (?(ro)|(?=(?<cr>1)?))\\k<r> (?&eq) \\d*(?&digitadd)\\k<f>\\b\n# iterate through the whole left operand to find the sequences (for right operand and result) of the same length as the offset of the current digit\n| (?=\\d* (?&add) (?&zero) (?:\\k<r>(?<ro>)|\\d*(?<r>\\d\\k<r>)) (?&eq) \\d*(?<f>\\d\\k<f>)\\b) \\d(?&recursedigit)\n)\n# run the check, sets l1 and cl accordingly and initializes the r (right operand) and f (final result) groups to be empty\n(?<checkdigit> (?:0|1(?<l1>)) (?=(?<cl>1)?) (?<r>) (?<f>) (?&recursedigit) )\n# \"trivial\" increment of a binary number, i.e. a +1 is applied to the part of the right operand which exceeds the length of the left operand\n(?<carryoverflow>\n# number contains a zero, just update the part after the last zero\n  (?<x>\\d+) 0 (?<y> \\k<r> (?&eq) 0*\\k<x>1 | 1(?&y)0 )\n# number contains only ones, add a leading 1 and replace all the ones by zeroes\n| (?<z> 1\\k<r> (?&eq) 0*10 | 1(?&z)0 )\n)\n# ensure correct lengths of the final operand and handle right operands being longer than the left operand\n(?<recurseoverflow>\n# the left operand is longer than or as long as the right one. In the latter case, the final result will always be exactly one digit longer than the operands\n# in the former case, if the first non-leading zero (from the left) of the left operand is at a higher or equal offset to the length of the right operand, the final result will be one digit longer than the left operand\n  (?&add) 0*+ (?(rlast) \\k<r> (?&eq) 0*(?(ro)(?(addone)1)|1)\\k<f>\\b\n# the right operand has a zero at the offset equal to the length of the left operand. Then just copy the leading digits to the final result\n                | (?:(?<remaining>\\d+)(?=0\\d* (?&eq) \\d*(?=1)\\k<f>\\b)\\k<r> (?&eq) (*PRUNE) 0*\\k<remaining>\\k<f>\\b\n# otherwise there will be some carry which needs to be applied before copying the leading digits to the final result\n                   | (?&carryoverflow)\\k<f>\\b))\n# iterate through the whole left operand to find the sequences (for right operand and result) of the same length as the left operand\n| (?=\\d* (?&add) 0*+ (?:\\k<r>(?<ro>)|(?=(?:\\d\\k<r>(?&eq)(?<rlast>))?)\\d*(?<r>\\d\\k<r>)) (?&eq) \\d*(?<f>\\d\\k<f>)\\b)\n# check - only at the first non-leading zero - whether the right operand is longer than the current offset of the iteration, or just as long and having a carry (i.e. the digit at that offset in the final result is 0)\n  (?(nullchecked)|(?=(?<addone>(?=0)(?=(?:\\d(?=\\d*(?&add)\\d*(?&eq)\\d*(?<c>\\d\\k<c>)\\b))+(?&add))(?<longer>(?&add)0*|\\d(?&longer)\\d)(\\d+(?&eq)|(?&eq)\\d*(?=0)\\k<c>))?)(?=(?<nullchecked>0)?))\n  \\d(?&recurseoverflow)\n)\n(?<s>\n  (?=\\d) 0*? (?<arg>[01]+)? (?&add) (?=\\d) 0*? (?<arg>(?(arg)(*F))[01]+)? (?&eq) (*PRUNE) \\k<arg>\n| (?&zero)\n# traverse the digits one by one and verify the correctness of each offset individually\n  (?=(?<iteratedigits> (?=(?&checkdigit))\\d (?:\\b|(?&iteratedigits)) ))\n# assert exact format here\n  (?=[01]+ (?&add) [01]+ (?&eq) [01]+ \\b)\n# remove leading zeroes and force an additional digit on the final result in case the left operand is only ones and the right operand not longer than the left\n  0*? (?<r>) (?<f>) (?<c>) (?=(?<addone>1+(?&add))?) (?&recurseoverflow)\n# Handle 0 + x or x + 0 separately to avoid messing around in the big subpatterns\n)\n)\n\\b(?&s)\\b", "permalinkFragment": "gE6qF4", "isFavorite": false, "isStarred": false}, {"title": "IBAN", "description": "The regex of IBAN of the Zend Framework validator", "dateCreated": "2016-09-15T11:11:57.000Z", "dateModified": "2016-09-15T11:11:57.000Z", "author": "Zeyckler", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^AD[0-9]{2}[0-9]{4}[0-9]{4}[A-Z0-9]{12}$|^AE[0-9]{2}[0-9]{3}[0-9]{16}|AL[0-9]{2}[0-9]{8}[A-Z0-9]{16}$|^AT[0-9]{2}[0-9]{5}[0-9]{11}$|^AZ[0-9]{2}[A-Z]{4}[A-Z0-9]{20}$|^BA[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{8}[0-9]{2}$|^BE[0-9]{2}[0-9]{3}[0-9]{7}[0-9]{2}$|^BG[0-9]{2}[A-Z]{4}[0-9]{4}[0-9]{2}[A-Z0-9]{8}$|^BH[0-9]{2}[A-Z]{4}[A-Z0-9]{14}$|^BR[0-9]{2}[0-9]{8}[0-9]{5}[0-9]{10}[A-Z][A-Z0-9]$|^CH[0-9]{2}[0-9]{5}[A-Z0-9]{12}$|^CR[0-9]{2}[0-9]{3}[0-9]{14}$|^CY[0-9]{2}[0-9]{3}[0-9]{5}[A-Z0-9]{16}$|^CZ[0-9]{2}[0-9]{20}$|^DE[0-9]{2}[0-9]{8}[0-9]{10}$|^DO[0-9]{2}[A-Z0-9]{4}[0-9]{20}$|^DK[0-9]{2}[0-9]{14}$|^EE[0-9]{2}[0-9]{2}[0-9]{2}[0-9]{11}[0-9]{1}$|^ES[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{1}[0-9]{1}[0-9]{10}$|^FI[0-9]{2}[0-9]{6}[0-9]{7}[0-9]{1}$|^FO[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}$|^FR[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}$|^GB[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}$|^GE[0-9]{2}[A-Z]{2}[0-9]{16}$|^GI[0-9]{2}[A-Z]{4}[A-Z0-9]{15}$|^GL[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}$|^GR[0-9]{2}[0-9]{3}[0-9]{4}[A-Z0-9]{16}$|^GT[0-9]{2}[A-Z0-9]{4}[A-Z0-9]{20}$|^HR[0-9]{2}[0-9]{7}[0-9]{10}$|^HU[0-9]{2}[0-9]{3}[0-9]{4}[0-9]{1}[0-9]{15}[0-9]{1}$|^IE[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}$|^IL[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{13}$|^IS[0-9]{2}[0-9]{4}[0-9]{2}[0-9]{6}[0-9]{10}$|^IT[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}$|^KW[0-9]{2}[A-Z]{4}[0-9]{22}$|^KZ[0-9]{2}[0-9]{3}[A-Z0-9]{13}$|^LB[0-9]{2}[0-9]{4}[A-Z0-9]{20}$|^LI[0-9]{2}[0-9]{5}[A-Z0-9]{12}$|^LT[0-9]{2}[0-9]{5}[0-9]{11}$|^LU[0-9]{2}[0-9]{3}[A-Z0-9]{13}$|^LV[0-9]{2}[A-Z]{4}[A-Z0-9]{13}$|^MC[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}$|^MD[0-9]{2}[A-Z0-9]{20}$|^ME[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}$|^MK[0-9]{2}[0-9]{3}[A-Z0-9]{10}[0-9]{2}$|^MR13[0-9]{5}[0-9]{5}[0-9]{11}[0-9]{2}$|^MT[0-9]{2}[A-Z]{4}[0-9]{5}[A-Z0-9]{18}$|^MU[0-9]{2}[A-Z]{4}[0-9]{2}[0-9]{2}[0-9]{12}[0-9]{3}[A-Z]{3}$|^NL[0-9]{2}[A-Z]{4}[0-9]{10}$|^NO[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{1}$|^PK[0-9]{2}[A-Z]{4}[A-Z0-9]{16}$|^PL[0-9]{2}[0-9]{8}[0-9]{16}$|^PS[0-9]{2}[A-Z]{4}[A-Z0-9]{21}$|^PT[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{11}[0-9]{2}$|^RO[0-9]{2}[A-Z]{4}[A-Z0-9]{16}$|^RS[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}$|^SA[0-9]{2}[0-9]{2}[A-Z0-9]{18}$|^SE[0-9]{2}[0-9]{3}[0-9]{16}[0-9]{1}$|^SI[0-9]{2}[0-9]{5}[0-9]{8}[0-9]{2}$|^SK[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{10}$|^SM[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}$|^TN59[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}$|^TR[0-9]{2}[0-9]{5}[A-Z0-9]{1}[A-Z0-9]{16}$|^VG[0-9]{2}[A-Z]{4}[0-9]{16}$", "permalinkFragment": "nL4rY4", "isFavorite": false, "isStarred": false}, {"title": "Names in America", "description": "Capitalized, with \"O'\",\"Mc\",\"Mc \" and \"0\" for some European names", "dateCreated": "2016-09-15T12:20:24.000Z", "dateModified": "2016-09-15T12:20:24.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?![\\!@#\\$%\\^&\\*\\(\\)\\:\\\"\\<\\>\\?\\/,] [a-z][1-9])^(([A-Z]{1}[a-z0.']+)+( ?[A-Z]{1}[a-z0.]+))*", "permalinkFragment": "dJ2oO0", "isFavorite": false, "isStarred": false}, {"title": "Rex: Domain name plus colon plus integer", "description": "Done while modifying Remote MX Wizard( Getting MX records from user input)", "dateCreated": "2016-09-15T14:43:21.000Z", "dateModified": "2016-09-15T14:43:21.000Z", "author": "Levyb", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!\\-)(?:[a-zA-Z\\d\\-]{0,62}[a-zA-Z\\d]\\.){1,126}(?!\\d+)[a-zA-Z\\d]{1,63}(:)\\d+$", "permalinkFragment": "vE9bP2", "isFavorite": false, "isStarred": false}, {"title": "Remove inside ()", "description": "", "dateCreated": "2016-09-15T14:59:50.000Z", "dateModified": "2016-09-15T14:59:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\(.*\\))", "permalinkFragment": "bN7wU9", "isFavorite": false, "isStarred": false}, {"title": "from word to word", "description": "", "dateCreated": "2016-09-15T15:29:49.000Z", "dateModified": "2016-09-15T15:29:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((\\\u0414\u043d\u0435\u0439.*\\:).*)", "permalinkFragment": "fC6nO1", "isFavorite": false, "isStarred": false}, {"title": "SegmentLoaderRegex", "description": "", "dateCreated": "2016-09-15T18:09:19.000Z", "dateModified": "2016-09-15T18:09:19.000Z", "author": "Sanoj", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<img.+\\/>", "permalinkFragment": "pL6gH9", "isFavorite": false, "isStarred": false}, {"title": "old", "description": "", "dateCreated": "2016-09-15T23:18:38.000Z", "dateModified": "2016-09-15T23:18:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\s*(?:(?:(?:[Rr][Ee].?)):?\\s*)*(.*)", "permalinkFragment": "iT4gK2", "isFavorite": false, "isStarred": false}, {"title": "Test", "description": "Test", "dateCreated": "2016-09-15T23:39:51.000Z", "dateModified": "2016-09-15T23:39:51.000Z", "author": "Test", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "02, 80, 10, 10, 00, 01, 03, 91", "permalinkFragment": "vG8wG6", "isFavorite": false, "isStarred": false}, {"title": "Regex Shortcode", "description": "Check shortcode", "dateCreated": "2016-09-16T01:44:47.000Z", "dateModified": "2016-09-16T01:44:47.000Z", "author": "khiconit", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[[^\\[]*[^\\]]*\\]", "permalinkFragment": "pZ5mA4", "isFavorite": false, "isStarred": false}, {"title": "(am|sg){0,1}(invoice){0,1}(\\d*){0,1}", "description": "(am|sg){0,1}(invoice){0,1}(\\d*){0,1}", "dateCreated": "2016-09-16T04:07:15.000Z", "dateModified": "2016-09-16T04:07:15.000Z", "author": "dat.dao", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(am|sg){0,1}(invoice){0,1}(\\d*){0,1}", "permalinkFragment": "oZ3cO7", "isFavorite": false, "isStarred": false}, {"title": "\"GP0|#8c3bbce0-620b-4e68-8567-28ff6fa42712;L0|#08c3bbce0-620b-4e68-856", "description": "", "dateCreated": "2016-09-16T08:34:42.000Z", "dateModified": "2016-09-16T08:34:42.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:GTSET|GP0|GPP|L0)\\|#0[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]*\\|(.*)", "permalinkFragment": "vY5pM7", "isFavorite": false, "isStarred": false}, {"title": "Shortcode Js", "description": "[shortcode attr=\"data\"]", "dateCreated": "2016-09-16T08:44:39.000Z", "dateModified": "2016-09-16T08:44:39.000Z", "author": "khiconit", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[[^\\[]*\\]", "permalinkFragment": "vF6xV1", "isFavorite": false, "isStarred": false}, {"title": "Number Validation", "description": "Number validation in Javascript. Abit too contrived", "dateCreated": "2016-09-16T10:01:37.000Z", "dateModified": "2016-09-16T10:01:37.000Z", "author": "b0tman", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[-+]??\\d+?[.]??\\d*?$)|(^[.]??\\d+?$)|(^[-+]??\\d+?[.]?\\d*?[eE][+-]?\\d+?$)", "permalinkFragment": "bC7aU6", "isFavorite": false, "isStarred": false}, {"title": "Posible regex para variables mailmarketing", "description": "", "dateCreated": "2016-09-16T11:00:40.000Z", "dateModified": "2016-09-16T11:00:40.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "{(\\$[a-z0-9]+\\.[a-z0-9]+)|(\\\".*\\\")}", "permalinkFragment": "nK4tP4", "isFavorite": false, "isStarred": false}, {"title": "Reg2", "description": "", "dateCreated": "2016-09-16T14:10:48.000Z", "dateModified": "2016-09-16T14:10:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(whore)|(masturbate)|(dildo)|(fuck)|(hooker)|(sex)|(blowjob)|(cock)|(anal\\s)|(pussy)|(jizz)|(twat)|(busty)|(slut)", "permalinkFragment": "aL0hQ3", "isFavorite": false, "isStarred": false}, {"title": "Reg1", "description": "", "dateCreated": "2016-09-16T14:12:07.000Z", "dateModified": "2016-09-16T14:12:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(dick)|(milf)|(squirt)|(teen)|(lingerie)|(turkey)|(dildo)|(porn)|(f..k)|(h..k.r)|(s.x)|(b...job)|(b.ng)|(c.ck)|(.nal)|(p.ssy)|(j.z.)|(tw.t)|(busty)|(facial)|(bikini)|(slut)", "permalinkFragment": "pI4yI6", "isFavorite": false, "isStarred": false}, {"title": "Only valid if uppercase words (letters + space), minimum 1, maximum 21", "description": "\"ASDF ASDF ASDF ASDF  A\" OK\n\"ASDF ASDF ASDF ASDF  AS\" NOK\n\"asfd ASDF ASDF ASDF\" NOK\n\"ASDF ASDF ASDF AsdF\" NOK\n\"ASDF ASDF ASDF A12F\" NOK", "dateCreated": "2016-09-16T15:36:48.000Z", "dateModified": "2016-09-16T15:36:48.000Z", "author": "Matthias G.", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[A-Z\\s?]{1,21}$)", "permalinkFragment": "fK3zC3", "isFavorite": false, "isStarred": false}, {"title": "X user Y response", "description": "grep logs with X username and Y response code", "dateCreated": "2016-09-16T19:52:17.000Z", "dateModified": "2016-09-16T19:52:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "hatfield\\s\\[.*200", "permalinkFragment": "tS4sK0", "isFavorite": false, "isStarred": false}, {"title": "Create directories", "description": "Regex to make sure directories have a \"real\" name and not code use for scripting/", "dateCreated": "2016-09-16T20:49:35.000Z", "dateModified": "2016-09-16T20:49:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])|(\\.|\\.\\.)$", "permalinkFragment": "kG1cV7", "isFavorite": false, "isStarred": false}, {"title": "CI-Bol", "description": "", "dateCreated": "2016-09-16T22:40:38.000Z", "dateModified": "2016-09-16T22:40:38.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{4,12}?(-(LP|SC|CB|OR|PT|BE|PA|TR|CH))$", "permalinkFragment": "gY6hL1", "isFavorite": false, "isStarred": false}, {"title": "fail2ban 0.8.13-1 Debian 8 Jessie Roundcube 1.1.5+dfsg.1-1~bpo8+1", "description": "Filter authentication fails from /var/log/roundcube/error", "dateCreated": "2016-09-17T08:26:29.000Z", "dateModified": "2016-09-17T08:26:29.000Z", "author": "Daniel Ba\u00f1obre Dopico el profe", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\[[0-9]{2}-[A-Z][a-z]{2}-[0-9]{4} (?:[0-9]{2}:){2}[0-9]{2} [+|-][0-9]{4}\\]: <.*> IMAP Error: Login failed for .* from (?P<host>(?:[0-9]{1,3}\\.){3}[0-9]{1,3})\\. AUTHENTICATE PLAIN: Authentication failed\\. in /usr/share/roundcube/program/lib/Roundcube/rcube_imap\\.php on line 197 \\(POST /\\?_task=login\\?_task=login&_action=login\\)$", "permalinkFragment": "oD2qF4", "isFavorite": false, "isStarred": false}, {"title": "Username", "description": "", "dateCreated": "2016-09-17T11:40:59.000Z", "dateModified": "2016-09-17T11:40:59.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "Username", "permalinkFragment": "kI1iK1", "isFavorite": false, "isStarred": false}, {"title": "^((?!^City$)[a-zA-Z '])+$", "description": "", "dateCreated": "2016-09-17T11:41:31.000Z", "dateModified": "2016-09-17T11:41:31.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((?!^City$)[a-zA-Z '])+$", "permalinkFragment": "fL7kR6", "isFavorite": false, "isStarred": false}, {"title": "Letters Only", "description": "It checks the string to be only letters with no spaces or any other char than a-z and A-z", "dateCreated": "2016-09-17T21:49:51.000Z", "dateModified": "2016-09-17T21:49:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*?[A-Za-z])[A-Za-z+]+$", "permalinkFragment": "uH9aA7", "isFavorite": false, "isStarred": false}, {"title": "Trim whitespaces regex", "description": "this is trim-like regex", "dateCreated": "2016-09-18T04:47:53.000Z", "dateModified": "2016-09-18T04:47:53.000Z", "author": "Giuseppe Tavella", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\s+).*?(\\s+)$", "permalinkFragment": "yV3oG6", "isFavorite": false, "isStarred": false}, {"title": "q", "description": "", "dateCreated": "2016-09-18T13:13:45.000Z", "dateModified": "2016-09-18T13:13:45.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "alt=\"(.+?)\"", "permalinkFragment": "tE0kO1", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "", "dateCreated": "2016-09-19T14:11:05.000Z", "dateModified": "2016-09-19T14:11:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^.!?\\s][^.!?]*(?:[.!?](?!['\"]?\\s|$)[^.!?]*)*[.!?]?['\"]?(?=\\s|$)", "permalinkFragment": "eV5sX1", "isFavorite": false, "isStarred": false}, {"title": "Search \"contains\" PHP conditions and replace", "description": "", "dateCreated": "2016-09-19T14:28:24.000Z", "dateModified": "2016-09-19T14:28:24.000Z", "author": "Jan Barasek", "flavor": "pcre", "delimiter": "@", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\$\\w*)\\s+=\\*\\s+(\\w*)", "permalinkFragment": "tI7qI4", "isFavorite": false, "isStarred": false}, {"title": "Cascade ID", "description": "", "dateCreated": "2016-09-19T15:24:09.000Z", "dateModified": "2016-09-19T15:24:09.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{3}$", "permalinkFragment": "dL8pI4", "isFavorite": false, "isStarred": false}, {"title": "anchor from within html tags", "description": "", "dateCreated": "2016-09-20T07:38:21.000Z", "dateModified": "2016-09-20T07:38:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\\"([\\w\\/\\/\\:\\.\\-]+)", "permalinkFragment": "gJ9rT2", "isFavorite": false, "isStarred": false}, {"title": "group german streetnames and streetnumbers", "description": "", "dateCreated": "2016-09-20T09:02:26.000Z", "dateModified": "2016-09-20T09:02:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\D\\.\\s\\-]{1,}[\\s]?)(([\\d]{1,3}[\\s\\-\\,]?[\\D]?+)+)", "permalinkFragment": "eB4mR7", "isFavorite": false, "isStarred": false}, {"title": "hjkkk", "description": "", "dateCreated": "2016-09-20T12:13:12.000Z", "dateModified": "2016-09-20T12:13:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-z,a-z]", "permalinkFragment": "lP7sE1", "isFavorite": false, "isStarred": false}, {"title": "Parse DocBlock tags", "description": "Parse DocBlock tags to name & value", "dateCreated": "2016-09-20T13:03:34.000Z", "dateModified": "2016-09-20T13:03:34.000Z", "author": "Jaanus Heeringson", "flavor": "pcre", "delimiter": "%", "flags": "gsxmu", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[*\\s]*@(?P<name>[\\w\\\\]+)\\s*\\(?(?P<value>(?:[^@]*[^*\\s/)]))?(?:\\s|$|\\))", "permalinkFragment": "jU2bL6", "isFavorite": false, "isStarred": false}, {"title": "strct_separate_cart discount", "description": "Searching for instances of strct_separate_cart with discount as a member", "dateCreated": "2016-09-20T15:32:28.000Z", "dateModified": "2016-09-20T15:32:28.000Z", "author": "Carlos Vazquez", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "struct_separate_cart\\.cart[a-zA-Z0-9\\[\\.\\]\\_]+\\.shipping\\.discount", "permalinkFragment": "eM9pW5", "isFavorite": false, "isStarred": false}, {"title": "End with digits", "description": "Checks if a string ends with digits", "dateCreated": "2016-09-20T16:02:35.000Z", "dateModified": "2016-09-20T16:02:35.000Z", "author": "Peter Krau\u00df", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".*?([0-9]+)$", "permalinkFragment": "bK3hO5", "isFavorite": false, "isStarred": false}, {"title": "CohhCarnage giveaway started", "description": "", "dateCreated": "2016-09-20T20:53:05.000Z", "dateModified": "2016-09-20T20:53:05.000Z", "author": "Me", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\*\\*\\* NEW GIVEAWAY OPENED: \\((.+?)\\): Sponsored by ([a-zA-Z0-9_]{4,25})! \\((\\d+) Tokens - REGULAR Giveaway\\) This is a promotion from CohhCarnage. Twitch does not sponsor or endorse broadcaster promotions and is not responsible for them. \\*\\*\\*$", "permalinkFragment": "tJ8pP5", "isFavorite": false, "isStarred": false}, {"title": "Citations", "description": "", "dateCreated": "2016-09-21T05:52:27.000Z", "dateModified": "2016-09-21T05:52:27.000Z", "author": "Saranya", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((\\d+) (C\\.F\\.R|U\\.S\\.C). (\u00a7) ((\\d+\\.?\\d+)(\\(\\w+\\))?(\\(\\d+\\))?(\\(\\w+\\))?( \\w+ )(\\(\\w+\\))?(;)))|(\\d+) (U\\.S\\.C)\\. (\u00a7) (\\d+)(\\W+)(\\w+)(\\W+)(\\d+)(\\W+)(\\w+)(\\W+)|((\\d+) (C\\.F\\.R|U\\.S\\.C). (\u00a7) (\\d+.\\.?\\d+))", "permalinkFragment": "gX3cS2", "isFavorite": false, "isStarred": false}, {"title": "A", "description": "Aa\n", "dateCreated": "2016-09-21T07:52:03.000Z", "dateModified": "2016-09-21T07:52:03.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<Cert>[\\s\\S]*?777[\\s\\S]*?<\\/Cert>", "permalinkFragment": "oG0aN5", "isFavorite": false, "isStarred": false}, {"title": "SQL Limit Clause", "description": "checks for valid limit clause of an sql statement", "dateCreated": "2016-09-21T10:23:10.000Z", "dateModified": "2016-09-21T10:23:10.000Z", "author": "Magesh Kumaar", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.+\\slimit\\s\\d{1,},\\d{1,3}$", "permalinkFragment": "dV0pL6", "isFavorite": false, "isStarred": false}, {"title": "VK Video URL Parser", "description": "", "dateCreated": "2016-09-21T12:02:25.000Z", "dateModified": "2016-09-21T12:02:25.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "video(([0-9]){9}?)\\_(([0-9]){9}?)", "permalinkFragment": "lE4jJ2", "isFavorite": false, "isStarred": false}, {"title": "Lib", "description": "", "dateCreated": "2016-09-21T12:20:21.000Z", "dateModified": "2016-09-21T12:20:21.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(http|ftp|https):\\/\\/([\\w\\-_]+(?:(?:\\.[\\w\\-_]+)+))([\\w\\-\\.,@?^=%&amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;/~\\+#])?", "permalinkFragment": "wN0vE5", "isFavorite": false, "isStarred": false}, {"title": "Outher {} brackets", "description": "", "dateCreated": "2016-09-21T13:05:56.000Z", "dateModified": "2016-09-21T13:05:56.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\{(?:[^}{]+|\\{(?:[^}{]+|\\{[^}{]*\\})*\\})*\\})", "permalinkFragment": "eN2kX5", "isFavorite": false, "isStarred": false}, {"title": "css_dark", "description": "css\u6837\u5f0f\u6392\u9664github\u7684\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f", "dateCreated": "2016-09-21T14:10:37.000Z", "dateModified": "2016-09-21T14:10:37.000Z", "author": "amy", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?!^https?:\\/\\/((gist|guides|help|raw|status|developer)\\.)?github\\.com)https?:\\/\\/.*", "permalinkFragment": "fX9rG3", "isFavorite": false, "isStarred": false}, {"title": "XML Double Tag", "description": "", "dateCreated": "2016-09-21T14:45:33.000Z", "dateModified": "2016-09-21T14:45:33.000Z", "author": "Donovan", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<([\\w\\:\\-]+)(.+?)<\\/\\2>)", "permalinkFragment": "cU7bJ0", "isFavorite": false, "isStarred": false}, {"title": "Basic Achaea Full Prompt", "description": "matches a simple full prompt", "dateCreated": "2016-09-21T19:34:44.000Z", "dateModified": "2016-09-21T19:34:44.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d+)h, (\\d+)m, (\\d+)e, (\\d+)w [e\\-][x\\-][\\-\\s]", "permalinkFragment": "vD6vU5", "isFavorite": false, "isStarred": false}, {"title": "RipNameFromEmail", "description": "handles quotes, non-quotes, angle bracket, parans, and trips extra white spaces", "dateCreated": "2016-09-22T00:38:44.000Z", "dateModified": "2016-09-22T00:38:44.000Z", "author": "dano", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\s+|\\s*\"\\s*|\\s*<.*|\\S+@\\S+|\\s*\\(\\s*|\\s*\\)\\s*", "permalinkFragment": "mW1pG3", "isFavorite": false, "isStarred": false}, {"title": "rxPhones", "description": "rips all phones out of memo/text block\nstores by", "dateCreated": "2016-09-22T01:24:48.000Z", "dateModified": "2016-09-22T01:24:48.000Z", "author": "dano", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(?\\b([2-9]{1}[0-9]{2})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})\\b", "permalinkFragment": "mC8uJ5", "isFavorite": false, "isStarred": false}, {"title": "Facebook Regex", "description": "Facebok", "dateCreated": "2016-09-22T07:12:34.000Z", "dateModified": "2016-09-22T07:12:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "facebook\\.com\\/\n[^\\s?]+\n(?:\n  \\.(\\d+)\\/(\\d+)\n  \\S*\n|\n  \\?\n  # Look for 'story_fbid' and 'id' in any order\n  (?=(?:[^\\s&]*?&)*?\\bstory_fbid=(\\d+))\n  (?=(?:[^\\s&]*?&)*?\\bid=(\\d+))\n  \\S*\n)", "permalinkFragment": "sI4wI2", "isFavorite": false, "isStarred": false}, {"title": "Template Parsing", "description": "matches everything enclosed by double curly brackets.", "dateCreated": "2016-09-22T08:33:02.000Z", "dateModified": "2016-09-22T08:33:02.000Z", "author": "Luca Zampetti", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\{\\{(.*?)\\}\\}", "permalinkFragment": "uV7cK2", "isFavorite": false, "isStarred": false}, {"title": "renaming movies", "description": "", "dateCreated": "2016-09-22T08:50:02.000Z", "dateModified": "2016-09-22T08:50:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.+)", "permalinkFragment": "aS8pI7", "isFavorite": false, "isStarred": false}, {"title": "|", "description": "", "dateCreated": "2016-09-22T09:36:16.000Z", "dateModified": "2016-09-22T09:36:16.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\n", "permalinkFragment": "eC1eN4", "isFavorite": false, "isStarred": false}, {"title": "uk phone numbers", "description": "uk phone numbers", "dateCreated": "2016-09-22T10:15:23.000Z", "dateModified": "2016-09-22T10:15:23.000Z", "author": "p4lhip", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^\\+[0-9]{2}|^\\+[0-9]{2}\\(0\\)|^\\(\\+[0-9]{2}\\)\\(0\\)|^00[0-9]{2}|^0)([0-9]{9}$|[0-9\\-\\s]{10}$)", "permalinkFragment": "yF3qB4", "isFavorite": false, "isStarred": false}, {"title": " ~ m|\\:\\/\\/([^\\/ ]+)|", "description": "", "dateCreated": "2016-09-22T11:55:21.000Z", "dateModified": "2016-09-22T11:55:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "~ m|\\:\\/\\/([^\\/ ]+)|", "permalinkFragment": "iJ4wH6", "isFavorite": false, "isStarred": false}, {"title": "PTN Ply Matching", "description": "PTN (Portable Tak Notation) is a format to transport the history of a played game of Tak. The body of PTN files consists of ordered lines of moves, each consisting of one or two plies. This pattern parses PTN move lines and groups interesting information in useful groups.", "dateCreated": "2016-09-22T14:36:07.000Z", "dateModified": "2016-09-22T14:36:07.000Z", "author": "TreffnonX (Janis Sch\u00f6ck)", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=^|\\n)(?P<spacer>[[:blank:]]*(?:\\{[^{]*(?&spacer)[^}]*\\}[[:blank:]]*)[[:blank:]]*|[[:blank:]]+)(\\d+)\\.(?&spacer)(?:([1-8])?([a-h])([1-8])([+-<>])([1-8]*)|([FSC])?([a-h])([1-8]))(?:(?&spacer)(?:([1-8])?([a-h])([1-8])([+-<>])([1-8]*)|([FSC])?([a-h])([1-8])))?(?&spacer)?(?=$|\\n)", "permalinkFragment": "zX7wR7", "isFavorite": false, "isStarred": false}, {"title": "fail2ban roundcube debian8 jessie /var/log/roundcube/errors", "description": "", "dateCreated": "2016-09-22T17:26:02.000Z", "dateModified": "2016-09-22T17:26:02.000Z", "author": "Daniel Ba\u00f1obre", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.*IMAP Error: Login failed for .* from (?P<host>.*)\\. AUTHENTICATE PLAIN: Authentication failed\\. in .* \\(POST .*\\)$", "permalinkFragment": "dT6zK4", "isFavorite": false, "isStarred": false}, {"title": "For regex replace: Removes last part of directory/filename", "description": "For example: \n\n/foldera/folderb/filename.txt?value=abc\n\nSelects: /foldera/folderb", "dateCreated": "2016-09-23T07:26:16.000Z", "dateModified": "2016-09-23T07:26:16.000Z", "author": "RAussi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/[^\\/]+$", "permalinkFragment": "qS7dU2", "isFavorite": false, "isStarred": false}, {"title": "Selects fist directory path", "description": "For example: \n\n/foldera/folderb/filename.txt\n\nResult: foldera", "dateCreated": "2016-09-23T07:27:34.000Z", "dateModified": "2016-09-23T07:27:34.000Z", "author": "RAussi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([.\\w]+)", "permalinkFragment": "jE1sB1", "isFavorite": false, "isStarred": false}, {"title": "Selects full path without filename or query parameter", "description": "For example:\n/foldera/folderb/filename.txt?query=abc\n\nResult:\n/foldera/folderb/", "dateCreated": "2016-09-23T07:28:51.000Z", "dateModified": "2016-09-23T07:28:51.000Z", "author": "RAussi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-z]:|\\/[a-z0-9_.$\u25cf-]+\\/[a-z0-9_.$\u25cf-]+)?((?:\\/|^)(?:[^\\/:*?\"<>|\\r\\n]+\\/)+)", "permalinkFragment": "kW2dW7", "isFavorite": false, "isStarred": false}, {"title": "small version of path select", "description": "Selects: /foldera/folderb/", "dateCreated": "2016-09-23T07:29:34.000Z", "dateModified": "2016-09-23T07:29:34.000Z", "author": "RAussi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(.*[\\/])", "permalinkFragment": "nR7wA0", "isFavorite": false, "isStarred": false}, {"title": "phone", "description": "", "dateCreated": "2016-09-23T08:03:29.000Z", "dateModified": "2016-09-23T08:03:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\+380 ?((\\d{2})|(\\(\\d{2}\\))) ?\\d{3} ?\\d{4}$", "permalinkFragment": "rI5wE8", "isFavorite": false, "isStarred": false}, {"title": "capital of", "description": "", "dateCreated": "2016-09-23T09:16:49.000Z", "dateModified": "2016-09-23T09:16:49.000Z", "author": "Shebin", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".*capital of .+", "permalinkFragment": "jN3uT5", "isFavorite": false, "isStarred": false}, {"title": "MML", "description": "", "dateCreated": "2016-09-23T10:00:52.000Z", "dateModified": "2016-09-23T10:00:52.000Z", "author": "Aron", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "TIMING ADVANCE.+(\\d+)", "permalinkFragment": "kH6xB0", "isFavorite": false, "isStarred": false}, {"title": "Ticketnummer", "description": "", "dateCreated": "2016-09-23T10:02:14.000Z", "dateModified": "2016-09-23T10:02:14.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[[a-z]{1,3}?-(\\d{1,15}?)\\]", "permalinkFragment": "nP5cQ7", "isFavorite": false, "isStarred": false}, {"title": "Check for GUID/UUID", "description": "This pattern search case insensitive for a valid GUID: a combination of A-Z and 9-0 in four groups delimited by a dash: [8]-[4]-[4]-[4]-[12].", "dateCreated": "2016-09-23T12:02:33.000Z", "dateModified": "2016-09-23T12:02:33.000Z", "author": "Fallon Turner", "flavor": "pcre", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^\\{?[A-Z0-9]{8}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{12}\\}?)$", "permalinkFragment": "iZ3pN0", "isFavorite": false, "isStarred": false}, {"title": "checks for valid filename", "description": "filename.txt\n\nNot: .filename.txt", "dateCreated": "2016-09-23T13:24:27.000Z", "dateModified": "2016-09-23T13:24:27.000Z", "author": "RAussi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!\\\\.)(?!com[0-9]$)(?!con$)(?!lpt[0-9]$)(?!nul$)(?!prn$)[^\\\\|\\\\*\\?\\\\:<>\\/$\"]*[^\\\\.\\\\|\\\\*\\\\?\\\\\\:<>\\/$\"]+$", "permalinkFragment": "jC2bJ8", "isFavorite": false, "isStarred": false}, {"title": "date time stamps ", "description": "", "dateCreated": "2016-09-23T13:36:58.000Z", "dateModified": "2016-09-23T13:36:58.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\w]{2}\\s[\\d]{2}\\.\\s[\\w]+\\s[\\d]{4}\\s[\\d]{2}\\:[\\d]{2}\\s[\\w]+", "permalinkFragment": "rC0wJ1", "isFavorite": false, "isStarred": false}, {"title": "time stamp english", "description": "", "dateCreated": "2016-09-23T13:43:55.000Z", "dateModified": "2016-09-23T13:43:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "On [\\w]+,\\s[\\w]+\\s\\d{1,2},\\s\\d{4}\\sat \\d\\:48\\s[P|A]M", "permalinkFragment": "aX3cL7", "isFavorite": false, "isStarred": false}, {"title": "Regex HTML", "description": "Trying to get in between >< ", "dateCreated": "2016-09-23T17:16:30.000Z", "dateModified": "2016-09-23T17:16:30.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\>(.*?)\\<", "permalinkFragment": "eQ8nK0", "isFavorite": false, "isStarred": false}, {"title": "JS terminal stuff", "description": "", "dateCreated": "2016-09-23T20:16:48.000Z", "dateModified": "2016-09-23T20:16:48.000Z", "author": "b3nsn0w", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\033\\[(?:\\d+;\\d+[Hf]|\\d+[A-D]|[suK]|2J|\\d+(?:;\\d+)*m)", "permalinkFragment": "fI7xW6", "isFavorite": false, "isStarred": false}, {"title": "Convert an LDIF from DS A into LDIF in DS B in one Regex", "description": "If you need to convert an LDIF exported from one directory to an LDIF in another directory, replacing the DN and attr names from one to the other", "dateCreated": "2016-09-23T21:38:40.000Z", "dateModified": "2016-09-23T21:38:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "dn: \\t\"CN=(.*?),OU=(.*?),DC=(PACRIM1|global|honeywell|namerica1|namerica2|namerica3|namerica4),.*\\t\\tdescription:\\t\\t(.*)\\tdisplayName: \\t\\t(.*)\\t\\thwObjectGUID: \\t\\t(.*)\\t\\textensionAttribute7: \\t\\t(.*)\\t\\tmail: \\t\\t(.*)\\t\\tobjectClass: \\t\\t(.*)", "permalinkFragment": "cZ9wC6", "isFavorite": false, "isStarred": false}, {"title": "Regex for Instance name validation", "description": "", "dateCreated": "2016-09-24T02:36:48.000Z", "dateModified": "2016-09-24T02:36:48.000Z", "author": "Sanoj Antony", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([.\\$\\\"\\/\\\\\\:|]+)", "permalinkFragment": "iZ1hJ4", "isFavorite": false, "isStarred": false}, {"title": "vowels", "description": "", "dateCreated": "2016-09-24T08:07:53.000Z", "dateModified": "2016-09-24T08:07:53.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[AEIOUaeiou]", "permalinkFragment": "oJ1sW7", "isFavorite": false, "isStarred": false}, {"title": "gotcha", "description": "Ci\n", "dateCreated": "2016-09-24T09:52:52.000Z", "dateModified": "2016-09-24T09:52:52.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(((http|https):\\/\\/)+[www.])?\\s*\\S+\\s*(.com|.es|.net|.org|.co)$", "permalinkFragment": "hT6gB9", "isFavorite": false, "isStarred": false}, {"title": "Separate words in sentence", "description": "Separate words in sentence", "dateCreated": "2016-09-25T04:48:26.000Z", "dateModified": "2016-09-25T04:48:26.000Z", "author": "Elijah Mwangi", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b([\\w+\\']+)\\b", "permalinkFragment": "gH7xN8", "isFavorite": false, "isStarred": false}, {"title": "Select Specific text (Boulevard)", "description": "", "dateCreated": "2016-09-25T06:14:15.000Z", "dateModified": "2016-09-25T06:14:15.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Z][a-z]{2,3}\\s\\d*\\s(?:&amp; )\\d*\\s(?:\\(Fri &amp; Sat\\))\\n\\s*(?:<br \\/>)\\n[a-zA-Z0-9_ ]*(?:[a-zA-Z0-9])", "permalinkFragment": "gX6vW2", "isFavorite": false, "isStarred": false}, {"title": "justtesting<script>", "description": "justtesting<script>", "dateCreated": "2016-09-25T12:47:52.000Z", "dateModified": "2016-09-25T12:47:52.000Z", "author": "justtesting<script>", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<script>", "permalinkFragment": "yI5bD8", "isFavorite": false, "isStarred": false}, {"title": "PHP (variable, function, class, constant) naming convension", "description": "PHP Basic coding standard", "dateCreated": "2016-09-25T13:27:18.000Z", "dateModified": "2016-09-25T13:27:18.000Z", "author": "Najmuddeen Mohammed", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[\\pL_][\\pL_\\pNd]*$", "permalinkFragment": "tO1oV0", "isFavorite": false, "isStarred": false}, {"title": "WoW Screenshot", "description": "If you need to rename it", "dateCreated": "2016-09-25T14:20:44.000Z", "dateModified": "2016-09-25T14:20:44.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^WoWScrnShot_(?P<month>\\d{2})(?P<day>\\d{2})(?P<year>\\d{2})_(?P<hour>\\d{2})(?P<minute>\\d{2})(?P<second>\\d{2})\\.jpg$", "permalinkFragment": "sU7hL3", "isFavorite": false, "isStarred": false}, {"title": "Delete duplicated chars", "description": "Deletes all duplicated chars in a string", "dateCreated": "2016-09-25T18:04:39.000Z", "dateModified": "2016-09-25T18:04:39.000Z", "author": "Marcelo Fuentes", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.)(?=.*\\1)", "permalinkFragment": "dO5xA6", "isFavorite": false, "isStarred": false}, {"title": "Full mw php", "description": "", "dateCreated": "2016-09-25T19:19:55.000Z", "dateModified": "2016-09-25T19:19:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<\\?php\\s*eval\\(\\\"\\S*\\\"\\);\\s*\\?>", "permalinkFragment": "yP4bP4", "isFavorite": false, "isStarred": false}, {"title": "php-mw0", "description": "", "dateCreated": "2016-09-25T19:56:31.000Z", "dateModified": "2016-09-25T19:56:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<\\?php\\s*\\$GLOBALS\\[.*(exit\\(\\))*;}\\s*\\?><\\?", "permalinkFragment": "rJ6zE4", "isFavorite": false, "isStarred": false}, {"title": "Todo.txt line pattern (Custom)", "description": "I customized the todo.txt (see todotxt.com) normal formatting.\nHere is how mine works:\nPriority Due_Date Project#progressive_number Start_date^repeat_every Job Contexts Tags\nHere is an example:\n(A) 2016-05-24 +projectA#4 $2015-11-30^2M My todo job @context_foo @context_bar &WAIT &ANOTHER_TAG\nI wanted the items to be ordered by importance and due date (instead of start date). If you want to omit the due date you put a '?' sign instead. I added a progressive number for projects so you can order project-specific jobs in order of execution. I used a custom notation for start date that includes also an optional repeatition time (every day, every two months and so on) expressed like this ^2M,3D (D for days, W for weeks, M and Y). You can use more of them separated by commas and can omit the initial number (assuming one). Then there are, in this order, contexts and tags. The tags are preceded by '&' sign.", "dateCreated": "2016-09-25T21:25:09.000Z", "dateModified": "2016-09-25T21:25:09.000Z", "author": "Francesco Tosello", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:\\((?P<imp>[A-Z])\\)\\ )?(?P<dued>(?:2[0-1][0-9]{2}\\-(?:0[0-9]|1[0-2])\\-(?:[0-2][0-9]|3[0-1]))|\\?)\\ (?:\\+(?P<proname>[a-zA-Z0-9]+)(?:\\#(?P<pronum>[0-9]+))?\\ )?(?:\\$(?P<startd>2[0-1][0-9]{2}\\-(?:0[0-9]|1[0-2])\\-(?:[0-2][0-9]|3[0-1]))(?:\\^(?P<repeat>\\d*(?:D|W|M|Y)(?:\\,\\d*(?:D|W|M|Y)+)*))?\\ )?(?P<todo>.+?(?=(?:\\ (?:\\@|\\&))|$))(?P<contexts>(?:\\ \\@\\S+)*)(?P<tags>(?:\\ \\&\\S+)*)", "permalinkFragment": "rK4tO0", "isFavorite": false, "isStarred": false}, {"title": "Checks for file ending", "description": "I.e. /folder/folder/filename.txt", "dateCreated": "2016-09-26T08:33:15.000Z", "dateModified": "2016-09-26T08:33:15.000Z", "author": "RAussi", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.*\\.(txt|ZIP)$", "permalinkFragment": "jC7iA4", "isFavorite": false, "isStarred": false}, {"title": "ruby", "description": "fdsafdsa", "dateCreated": "2016-09-26T09:50:59.000Z", "dateModified": "2016-09-26T09:50:59.000Z", "author": "fdsafdsa", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s{1,2}1. \u76f4\u63a5\u56de\u590d\u6b64\u90ae\u4ef6\u4ee5\u56de\u590d.+\\s{1,2}2. \u6216\u5728\u7ebf\u56de\u590d", "permalinkFragment": "uL5aX8", "isFavorite": false, "isStarred": false}, {"title": "espre. ok", "description": "", "dateCreated": "2016-09-26T10:24:22.000Z", "dateModified": "2016-09-26T10:24:22.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[\\ \\s*[a-z#A-Z_]+\\s*-?\\d+([\\.]\\d+)*\\s*\\ ]", "permalinkFragment": "lN2yH9", "isFavorite": false, "isStarred": false}, {"title": "\u0648\u0628 \u0628\u0631\u062a\u0631", "description": "\u062f\u0631\u062c \u0622\u06af\u0647\u06cc \u0631\u0627\u06cc\u06af\u0627\u0646 \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\u06cc \u0628\u0627 \u0648\u0628 \u0628\u0631\u062a\u0631.", "dateCreated": "2016-09-26T10:39:07.000Z", "dateModified": "2016-09-26T10:39:07.000Z", "author": "pdsign", "flavor": "pcre", "delimiter": "~", "flags": "gix", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<\\s*meta\\s\n\n# using lookahead to capture type to $1\n(?=[^>]*?\n  \\b(?:name|property|http-equiv)\\s*=\\s*\n  (?|\"\\s*([^\"]*?)\\s*\"|'\\s*([^']*?)\\s*'|\n  ([^\"'>]*?)(?=\\s*/?\\s*>|\\s\\w+\\s*=))\n)\n\n# capture the content to $2\n[^>]*?\\bcontent\\s*=\\s*\n  (?|\"\\s*([^\"]*?)\\s*\"|'\\s*([^']*?)\\s*'|\n  ([^\"'>]*?)(?=\\s*/?\\s*>|\\s\\w+\\s*=))\n[^>]*>\n", "permalinkFragment": "eY9nO7", "isFavorite": false, "isStarred": false}, {"title": "\\[\\ \\s*[a-z#A-Z_]+\\s*-?\\d+([\\.]\\d+)*\\s*\\ ]/", "description": "", "dateCreated": "2016-09-26T10:56:42.000Z", "dateModified": "2016-09-26T10:56:42.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[\\ \\s*[a-z#A-Z_]+\\s*-?\\d+([\\.]\\d+)*\\s*\\ ]", "permalinkFragment": "yU0mX4", "isFavorite": false, "isStarred": false}, {"title": "SV.NET Service Bus Log", "description": "SV.NET Service Bus Log", "dateCreated": "2016-09-26T13:36:12.000Z", "dateModified": "2016-09-26T13:36:12.000Z", "author": "Garry West", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?'Date'\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3})\\s*\\[(?'Level'ERROR.|WARN|INFO|DEBUG).*\\]\\s*\\[(?'Thread'\\d*).*\\]\\s*(?'Message'.*)", "permalinkFragment": "cB2mZ4", "isFavorite": false, "isStarred": false}, {"title": "Letter followed up by to 7 numerical digits", "description": "This regex will match an input string of the letter B (or b) followed up by to 7 numerical digits. It will fail if any letter/number/symbol is used other than B (or b) and more than 7 numbers are entered after B (or b). This is simple and was useful for validating a Court Case ID number for users after being entered into a textbox.", "dateCreated": "2016-09-26T18:35:08.000Z", "dateModified": "2016-09-26T18:35:08.000Z", "author": "Alan Armbrust", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((B|b)([0-9]{7}|[0-9]{6}|[0-9]{5}|[0-9]{4}|[0-9]{3}|[0-9]{2}|[0-9]{1}))*$", "permalinkFragment": "dO2kV4", "isFavorite": false, "isStarred": false}, {"title": "Twitter tag regex", "description": "", "dateCreated": "2016-09-27T06:41:32.000Z", "dateModified": "2016-09-27T06:41:32.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(#((?:[A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u065f\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07ca-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0-\\u08b2\\u08e4-\\u0963\\u0971-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09f0\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a70-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0c00-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c81-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0cf1\\u0cf2\\u0d01-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u103f\\u1050-\\u108f\\u109a-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16f1-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u180b-\\u180d\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f\\u1aa7\\u1ab0-\\u1abe\\u1b00-\\u1b4b\\u1b6b-\\u1b73\\u1b80-\\u1baf\\u1bba-\\u1bf3\\u1c00-\\u1c37\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1cf8\\u1cf9\\u1d00-\\u1df5\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2183\\u2184\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005\\u3006\\u302a-\\u302f\\u3031-\\u3035\\u303b\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua672\\ua674-\\ua67d\\ua67f-\\ua69d\\ua69f-\\ua6e5\\ua6f0\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua7ad\\ua7b0\\ua7b1\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8e0-\\ua8f7\\ua8fb\\ua90a-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf\\ua9e0-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab5f\\uab64\\uab65\\uabc0-\\uabea\\uabec\\uabed\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf870-\\uf87f\\uf882\\uf884-\\uf89f\\uf8b8\\uf8c1-\\uf8d6\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2d\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0de6-\\u0def\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\ua9f0-\\ua9f9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19_\\u200c\\u200d\\ua67e\\u05be\\u05f3\\u05f4\\uff5e\\u301c\\u309b\\u309c\\u30a0\\u30fb\\u3003\\u0f0b\\u0f0c\\xb7]|(?=[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])(?:\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\uddfd\\ude80-\\ude9c\\udea0-\\uded0\\udee0\\udf00-\\udf1f\\udf30-\\udf40\\udf42-\\udf49\\udf50-\\udf7a\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf]|\\ud801[\\udc00-\\udc9d\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe\\uddbf\\ude00-\\ude03\\ude05\\ude06\\ude0c-\\ude13\\ude15-\\ude17\\ude19-\\ude33\\ude38-\\ude3a\\ude3f\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee6\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48]|\\ud804[\\udc00-\\udc46\\udc7f-\\udcba\\udcd0-\\udce8\\udd00-\\udd34\\udd50-\\udd73\\udd76\\udd80-\\uddc4\\uddda\\ude00-\\ude11\\ude13-\\ude37\\udeb0-\\udeea\\udf01-\\udf03\\udf05-\\udf0c\\udf0f\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32\\udf33\\udf35-\\udf39\\udf3c-\\udf44\\udf47\\udf48\\udf4b-\\udf4d\\udf57\\udf5d-\\udf63\\udf66-\\udf6c\\udf70-\\udf74]|\\ud805[\\udc80-\\udcc5\\udcc7\\udd80-\\uddb5\\uddb8-\\uddc0\\ude00-\\ude40\\ude44\\ude80-\\udeb7]|\\ud806[\\udca0-\\udcdf\\udcff\\udec0-\\udef8]|\\ud808[\\udc00-\\udf98]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\uded0-\\udeed\\udef0-\\udef4\\udf00-\\udf36\\udf40-\\udf43\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\udf00-\\udf44\\udf50-\\udf7e\\udf8f-\\udf9f]|\\ud82c[\\udc00\\udc01]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99\\udc9d\\udc9e]|\\ud834[\\udd65-\\udd69\\udd6d-\\udd72\\udd7b-\\udd82\\udd85-\\udd8b\\uddaa-\\uddad\\ude42-\\ude44]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e\\udc9f\\udca2\\udca5\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud83a[\\udc00-\\udcc4\\udcd0-\\udcd6]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d]|\\ud87e[\\udc00-\\ude1d]|\\udb40[\\udd00-\\uddef]|\\ud801[\\udca0-\\udca9]|\\ud804[\\udc66-\\udc6f\\udcf0-\\udcf9\\udd36-\\udd3f\\uddd0-\\uddd9\\udef0-\\udef9]|\\ud805[\\udcd0-\\udcd9\\ude50-\\ude59\\udec0-\\udec9]|\\ud806[\\udce0-\\udce9]|\\ud81a[\\ude60-\\ude69\\udf50-\\udf59]|\\ud835[\\udfce-\\udfff]))*(?:[A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u065f\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07ca-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0-\\u08b2\\u08e4-\\u0963\\u0971-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09f0\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a70-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0c00-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c81-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0cf1\\u0cf2\\u0d01-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u103f\\u1050-\\u108f\\u109a-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16f1-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u180b-\\u180d\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f\\u1aa7\\u1ab0-\\u1abe\\u1b00-\\u1b4b\\u1b6b-\\u1b73\\u1b80-\\u1baf\\u1bba-\\u1bf3\\u1c00-\\u1c37\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1cf8\\u1cf9\\u1d00-\\u1df5\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2183\\u2184\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005\\u3006\\u302a-\\u302f\\u3031-\\u3035\\u303b\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua672\\ua674-\\ua67d\\ua67f-\\ua69d\\ua69f-\\ua6e5\\ua6f0\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua7ad\\ua7b0\\ua7b1\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8e0-\\ua8f7\\ua8fb\\ua90a-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf\\ua9e0-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab5f\\uab64\\uab65\\uabc0-\\uabea\\uabec\\uabed\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf870-\\uf87f\\uf882\\uf884-\\uf89f\\uf8b8\\uf8c1-\\uf8d6\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2d\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|(?=[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])(?:\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\uddfd\\ude80-\\ude9c\\udea0-\\uded0\\udee0\\udf00-\\udf1f\\udf30-\\udf40\\udf42-\\udf49\\udf50-\\udf7a\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf]|\\ud801[\\udc00-\\udc9d\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe\\uddbf\\ude00-\\ude03\\ude05\\ude06\\ude0c-\\ude13\\ude15-\\ude17\\ude19-\\ude33\\ude38-\\ude3a\\ude3f\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee6\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48]|\\ud804[\\udc00-\\udc46\\udc7f-\\udcba\\udcd0-\\udce8\\udd00-\\udd34\\udd50-\\udd73\\udd76\\udd80-\\uddc4\\uddda\\ude00-\\ude11\\ude13-\\ude37\\udeb0-\\udeea\\udf01-\\udf03\\udf05-\\udf0c\\udf0f\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32\\udf33\\udf35-\\udf39\\udf3c-\\udf44\\udf47\\udf48\\udf4b-\\udf4d\\udf57\\udf5d-\\udf63\\udf66-\\udf6c\\udf70-\\udf74]|\\ud805[\\udc80-\\udcc5\\udcc7\\udd80-\\uddb5\\uddb8-\\uddc0\\ude00-\\ude40\\ude44\\ude80-\\udeb7]|\\ud806[\\udca0-\\udcdf\\udcff\\udec0-\\udef8]|\\ud808[\\udc00-\\udf98]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\uded0-\\udeed\\udef0-\\udef4\\udf00-\\udf36\\udf40-\\udf43\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\udf00-\\udf44\\udf50-\\udf7e\\udf8f-\\udf9f]|\\ud82c[\\udc00\\udc01]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99\\udc9d\\udc9e]|\\ud834[\\udd65-\\udd69\\udd6d-\\udd72\\udd7b-\\udd82\\udd85-\\udd8b\\uddaa-\\uddad\\ude42-\\ude44]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e\\udc9f\\udca2\\udca5\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud83a[\\udc00-\\udcc4\\udcd0-\\udcd6]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d]|\\ud87e[\\udc00-\\ude1d]|\\udb40[\\udd00-\\uddef]))(?:[A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u065f\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07ca-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0-\\u08b2\\u08e4-\\u0963\\u0971-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09f0\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a70-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0c00-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c81-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0cf1\\u0cf2\\u0d01-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u103f\\u1050-\\u108f\\u109a-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16f1-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u180b-\\u180d\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f\\u1aa7\\u1ab0-\\u1abe\\u1b00-\\u1b4b\\u1b6b-\\u1b73\\u1b80-\\u1baf\\u1bba-\\u1bf3\\u1c00-\\u1c37\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1cf8\\u1cf9\\u1d00-\\u1df5\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2183\\u2184\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005\\u3006\\u302a-\\u302f\\u3031-\\u3035\\u303b\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua672\\ua674-\\ua67d\\ua67f-\\ua69d\\ua69f-\\ua6e5\\ua6f0\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua7ad\\ua7b0\\ua7b1\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8e0-\\ua8f7\\ua8fb\\ua90a-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf\\ua9e0-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab5f\\uab64\\uab65\\uabc0-\\uabea\\uabec\\uabed\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf870-\\uf87f\\uf882\\uf884-\\uf89f\\uf8b8\\uf8c1-\\uf8d6\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2d\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0de6-\\u0def\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\ua9f0-\\ua9f9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19_\\u200c\\u200d\\ua67e\\u05be\\u05f3\\u05f4\\uff5e\\u301c\\u309b\\u309c\\u30a0\\u30fb\\u3003\\u0f0b\\u0f0c\\xb7]|(?=[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])(?:\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\uddfd\\ude80-\\ude9c\\udea0-\\uded0\\udee0\\udf00-\\udf1f\\udf30-\\udf40\\udf42-\\udf49\\udf50-\\udf7a\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf]|\\ud801[\\udc00-\\udc9d\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe\\uddbf\\ude00-\\ude03\\ude05\\ude06\\ude0c-\\ude13\\ude15-\\ude17\\ude19-\\ude33\\ude38-\\ude3a\\ude3f\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee6\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48]|\\ud804[\\udc00-\\udc46\\udc7f-\\udcba\\udcd0-\\udce8\\udd00-\\udd34\\udd50-\\udd73\\udd76\\udd80-\\uddc4\\uddda\\ude00-\\ude11\\ude13-\\ude37\\udeb0-\\udeea\\udf01-\\udf03\\udf05-\\udf0c\\udf0f\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32\\udf33\\udf35-\\udf39\\udf3c-\\udf44\\udf47\\udf48\\udf4b-\\udf4d\\udf57\\udf5d-\\udf63\\udf66-\\udf6c\\udf70-\\udf74]|\\ud805[\\udc80-\\udcc5\\udcc7\\udd80-\\uddb5\\uddb8-\\uddc0\\ude00-\\ude40\\ude44\\ude80-\\udeb7]|\\ud806[\\udca0-\\udcdf\\udcff\\udec0-\\udef8]|\\ud808[\\udc00-\\udf98]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\uded0-\\udeed\\udef0-\\udef4\\udf00-\\udf36\\udf40-\\udf43\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\udf00-\\udf44\\udf50-\\udf7e\\udf8f-\\udf9f]|\\ud82c[\\udc00\\udc01]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99\\udc9d\\udc9e]|\\ud834[\\udd65-\\udd69\\udd6d-\\udd72\\udd7b-\\udd82\\udd85-\\udd8b\\uddaa-\\uddad\\ude42-\\ude44]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e\\udc9f\\udca2\\udca5\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud83a[\\udc00-\\udcc4\\udcd0-\\udcd6]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d]|\\ud87e[\\udc00-\\ude1d]|\\udb40[\\udd00-\\uddef]|\\ud801[\\udca0-\\udca9]|\\ud804[\\udc66-\\udc6f\\udcf0-\\udcf9\\udd36-\\udd3f\\uddd0-\\uddd9\\udef0-\\udef9]|\\ud805[\\udcd0-\\udcd9\\ude50-\\ude59\\udec0-\\udec9]|\\ud806[\\udce0-\\udce9]|\\ud81a[\\ude60-\\ude69\\udf50-\\udf59]|\\ud835[\\udfce-\\udfff]))*))", "permalinkFragment": "bD4gY8", "isFavorite": false, "isStarred": false}, {"title": "SAIL Recipe Link Fix", "description": "Find the recipe anchor reference to be converted to a file reference. Replacement regex for sublime is:\n\n`\\L$3\\.md`", "dateCreated": "2016-09-27T18:41:23.000Z", "dateModified": "2016-09-27T18:41:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(SAIL_Recipes\\.md)(\\#)(.*?)(?=\\))", "permalinkFragment": "EtpgXo", "isFavorite": false, "isStarred": false}, {"title": "Youtube URL Regex", "description": "Youtube URL validator \nCredit to: [phuc77](http://stackoverflow.com/users/2542574/phuc77)\n\nThe captured groups are:\n\nprotocol\n- subdomain\n- domain\n- path\n- video code\n- query string\n\nWorks with the following URLs:\n\n    https://www.youtube.com/watch?v=DFYRQ_zQ-gk&feature=featured\n    https://www.youtube.com/watch?v=DFYRQ_zQ-gk\n    http://www.youtube.com/watch?v=DFYRQ_zQ-gk\n    //www.youtube.com/watch?v=DFYRQ_zQ-gk\n    www.youtube.com/watch?v=DFYRQ_zQ-gk\n    https://youtube.com/watch?v=DFYRQ_zQ-gk\n    http://youtube.com/watch?v=DFYRQ_zQ-gk\n    //youtube.com/watch?v=DFYRQ_zQ-gk\n    youtube.com/watch?v=DFYRQ_zQ-gk\n    \n    https://m.youtube.com/watch?v=DFYRQ_zQ-gk\n    http://m.youtube.com/watch?v=DFYRQ_zQ-gk\n    //m.youtube.com/watch?v=DFYRQ_zQ-gk\n    m.youtube.com/watch?v=DFYRQ_zQ-gk\n    \n    https://www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n    http://www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n    //www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n    www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n    youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n    \n    https://www.youtube.com/embed/DFYRQ_zQ-gk?autoplay=1\n    https://www.youtube.com/embed/DFYRQ_zQ-gk\n    http://www.youtube.com/embed/DFYRQ_zQ-gk\n    //www.youtube.com/embed/DFYRQ_zQ-gk\n    www.youtube.com/embed/DFYRQ_zQ-gk\n    https://youtube.com/embed/DFYRQ_zQ-gk\n    http://youtube.com/embed/DFYRQ_zQ-gk\n    //youtube.com/embed/DFYRQ_zQ-gk\n    youtube.com/embed/DFYRQ_zQ-gk\n    \n    https://youtu.be/DFYRQ_zQ-gk?t=120\n    https://youtu.be/DFYRQ_zQ-gk\n    http://youtu.be/DFYRQ_zQ-gk\n    //youtu.be/DFYRQ_zQ-gk\n    youtu.be/DFYRQ_zQ-gk\n    \n    https://www.youtube.com/HamdiKickProduction?v=DFYRQ_zQ-gk", "dateCreated": "2016-09-28T10:29:31.000Z", "dateModified": "2016-09-28T10:29:31.000Z", "author": "Haroun SMIDA", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?$", "permalinkFragment": "xhQAq8", "isFavorite": false, "isStarred": false}, {"title": "Match youtube id", "description": "Match any youtube id\n\nWorking with the following links :\n\n    https://www.youtube.com/watch?v=DFYRQ_zQ-gk&feature=featured\n    https://www.youtube.com/watch?v=DFYRQ_zQ-gk\n    http://www.youtube.com/watch?v=DFYRQ_zQ-gk\n    //www.youtube.com/watch?v=DFYRQ_zQ-gk\n    www.youtube.com/watch?v=DFYRQ_zQ-gk\n    https://youtube.com/watch?v=DFYRQ_zQ-gk\n    http://youtube.com/watch?v=DFYRQ_zQ-gk\n    //youtube.com/watch?v=DFYRQ_zQ-gk\n    youtube.com/watch?v=DFYRQ_zQ-gk\n    \n    https://m.youtube.com/watch?v=DFYRQ_zQ-gk\n    http://m.youtube.com/watch?v=DFYRQ_zQ-gk\n    //m.youtube.com/watch?v=DFYRQ_zQ-gk\n    m.youtube.com/watch?v=DFYRQ_zQ-gk\n    \n    https://www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n    http://www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n    //www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n    www.youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n    youtube.com/v/DFYRQ_zQ-gk?fs=1&hl=en_US\n    \n    https://www.youtube.com/embed/DFYRQ_zQ-gk?autoplay=1\n    https://www.youtube.com/embed/DFYRQ_zQ-gk\n    http://www.youtube.com/embed/DFYRQ_zQ-gk\n    //www.youtube.com/embed/DFYRQ_zQ-gk\n    www.youtube.com/embed/DFYRQ_zQ-gk\n    https://youtube.com/embed/DFYRQ_zQ-gk\n    http://youtube.com/embed/DFYRQ_zQ-gk\n    //youtube.com/embed/DFYRQ_zQ-gk\n    youtube.com/embed/DFYRQ_zQ-gk\n    \n    https://youtu.be/DFYRQ_zQ-gk?t=120\n    https://youtu.be/DFYRQ_zQ-gk\n    http://youtu.be/DFYRQ_zQ-gk\n    //youtu.be/DFYRQ_zQ-gk\n    youtu.be/DFYRQ_zQ-gk\n    \n    https://www.youtube.com/HamdiKickProduction?v=DFYRQ_zQ-gk", "dateCreated": "2016-09-29T11:06:01.000Z", "dateModified": "2016-09-29T11:06:01.000Z", "author": "Haroun SMIDA", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=v=|v\\/|embed\\/|be\\/)([^&?]+)", "permalinkFragment": "eVJ4kg", "isFavorite": false, "isStarred": false}, {"title": "Javascript Literal to JSON", "description": "Converts a javascript literal to json format", "dateCreated": "2016-09-29T15:52:10.000Z", "dateModified": "2016-09-29T15:52:10.000Z", "author": "Justin Echternach", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((([a-zA-Z]+)(\\s)*(:))){1}(\\s)*(((?:[\\[])?(?:[\"])?((.)*)(?:[\"])?(?:[\\]]?))?)?([,]?)", "permalinkFragment": "9VN4rd", "isFavorite": false, "isStarred": false}, {"title": "C# replace property declaration with source to destination mapping", "description": "Takes a set of property declarations to use for destination and source mapping using substitution.\n\nsubstition example: dst.$5 = src.$5;\n\nBasic productivity tool ... I used it for creating an automapper type converter", "dateCreated": "2016-10-02T17:27:39.000Z", "dateModified": "2016-10-02T17:27:39.000Z", "author": "Justin Echternach", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-zA-Z]+[\\s]+(?:((static|virtual)[\\s]+))?[a-zA-Z<>0-9]+[\\s]+)(([a-zA-Z<>0-9]+)[\\s]+(.+))", "permalinkFragment": "wt9YMw", "isFavorite": false, "isStarred": false}, {"title": "Vimeo id from swf url", "description": "", "dateCreated": "2016-10-06T13:34:50.000Z", "dateModified": "2016-10-06T13:34:50.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "vimeo.com\\/moogaloop\\.swf\\?clip_id=([0-9a-zA-Z]*)", "permalinkFragment": "LJonxl", "isFavorite": false, "isStarred": false}, {"title": "TRIM: Remove spaces at the begin and at the end of the string | Elimina espacios al inicio y final de la cadena de texto", "description": "**Removes leading and trailing spaces from the text\n**Example (do not consider quotes):\n\"   Lorem ipsum dolor sit \" returns  \"Lorem ipsum dolor sit\" ", "dateCreated": "2016-10-07T12:28:15.000Z", "dateModified": "2016-10-07T12:28:15.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^\\s+)|(\\s+$)", "permalinkFragment": "ofjt1K", "isFavorite": false, "isStarred": false}, {"title": "Fontawesome - Icon parser (hex + title)", "description": "## Page with [icons](http://fontawesome.io/cheatsheet/)\n\n### PHP example: Generate xml for android resources\n\n    header('Content-Description: File Transfer');\n    header(\"Content-Type: text/xml\");\n    header('Content-Disposition: attachment; filename=\"icons.xml\"');\n\n    $Url = \"http://fontawesome.io/cheatsheet/\";\n    $Page = file_get_contents($Url);\n    \n    $Pattern = '/>&(.*)<\\/i>[\\r\\n]\\s{6}(.*)/';\n    preg_match_all($Pattern, $Page, $IconArray, PREG_PATTERN_ORDER);\n    \n    $Count = count($IconArray[0]);\n    \n    echo \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\".\"\\r\\n\";\n    echo \"<resources>\".\"\\r\\n\";\n    for ($i = 0; $i < $Count; $i++) {\n      $IconHex = $IconArray[1][$i];\n      $IconTitle = $IconArray[2][$i];\n      $IconTitle = str_replace(\"-\", \"_\", $IconTitle);\n      echo \"    <string name=\\\"$IconTitle\\\">&$IconHex;</string>\".\"\\r\\n\";\n    }\n    echo \"</resources>\";", "dateCreated": "2016-10-11T06:01:29.000Z", "dateModified": "2016-10-11T06:01:29.000Z", "author": "IgorSkv", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ">&(.*)<\\/i>[\\r\\n]\\s{6}(.*)", "permalinkFragment": "J2F9IB", "isFavorite": false, "isStarred": false}, {"title": "Extract Sql Columns from the given query", "description": "Tries to find the column names from the given **SQL** query.", "dateCreated": "2016-10-17T06:54:03.000Z", "dateModified": "2016-10-17T06:54:03.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:\\s*(?=\\w+\\.|.*as\\s+|distinct\\s+|)(\\*|\\w+)(?=\\s*(?=,|from)))", "permalinkFragment": "Rcfvfs", "isFavorite": false, "isStarred": false}, {"title": "Extract all telephones in text", "description": "Find **all** telephones in text:\n968123123\n968 123 123\n968.123.123\n968 12 12 12", "dateCreated": "2016-10-21T08:02:42.000Z", "dateModified": "2016-10-21T08:02:42.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b[\\s(.)\\d-]{6,}\\d\\b", "permalinkFragment": "tQNE28", "isFavorite": false, "isStarred": false}, {"title": "Full URLs (by dpmontero.es)", "description": "Get all URLs: \nwww.lapagina.com\npagina.com\nhttp://www.lapagina.com\nhttp://pagina.com\nhttps://www.lapagina.es", "dateCreated": "2016-10-21T09:47:54.000Z", "dateModified": "2016-10-21T09:47:54.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)", "permalinkFragment": "Qtj4KW", "isFavorite": false, "isStarred": false}, {"title": "UTC Time Matcher", "description": "This expression verify an UTC time like UTC+02:00 or UTC-12:30", "dateCreated": "2016-10-22T08:50:59.000Z", "dateModified": "2016-10-22T08:50:59.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^UTC[+-]\\d{2}[:]\\d{2}$", "permalinkFragment": "UFKaMp", "isFavorite": false, "isStarred": false}, {"title": "SSN", "description": "", "dateCreated": "2016-10-28T15:47:36.000Z", "dateModified": "2016-10-28T15:47:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<area>\\d{3})[\\s-]*(?<group>\\d{2})[\\s-]*(?<serial>\\d{3})", "permalinkFragment": "0U4MXd", "isFavorite": false, "isStarred": false}, {"title": "Siebel Id", "description": "", "dateCreated": "2016-11-03T10:39:32.000Z", "dateModified": "2016-11-03T10:39:32.000Z", "author": "", "flavor": "golang", "delimiter": "`", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[A-Za-z0-9\\-]{5,30}$", "permalinkFragment": "hFx1Zj", "isFavorite": false, "isStarred": false}, {"title": "Find JSON strings in a string", "description": "[From StackOverflow](http://stackoverflow.com/questions/21994677/find-json-strings-in-a-string)", "dateCreated": "2016-11-17T10:39:50.000Z", "dateModified": "2023-07-20T20:06:49.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 2, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\n\\{              # { character\n    (?:         # non-capturing group\n        [^{}]   # anything that is not a { or }\n        |       # OR\n        (?R)    # recurses the entire pattern\n    )*          # previous group zero or more times\n\\}              # } character\n", "permalinkFragment": "sjOfeq", "isFavorite": false, "isStarred": false}, {"title": "STEAM GAME KEYS", "description": "", "dateCreated": "2016-11-18T11:58:04.000Z", "dateModified": "2016-11-18T11:58:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.*(([\\w\\d]{5}-?){3}).*$", "permalinkFragment": "e5Uuj8", "isFavorite": false, "isStarred": false}, {"title": "HTML5 or custom element tag", "description": "Matches a HTML5/custom element valid  tag format .", "dateCreated": "2016-11-19T22:57:32.000Z", "dateModified": "2016-11-19T22:57:32.000Z", "author": "Shadrack Ndacayisenga", "flavor": "javascript", "delimiter": "/", "flags": "iu", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^(([a-z]+)([-][a-z]+)*)$)", "permalinkFragment": "5wIP63", "isFavorite": false, "isStarred": false}, {"title": "Decimal numbers", "description": "Matches decimal numbers as accepted by e.g. Octave.", "dateCreated": "2016-12-14T14:10:28.000Z", "dateModified": "2016-12-14T14:10:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(-?(\\d*\\.?\\d+)|(\\d+\\.\\d*))$", "permalinkFragment": "YwS1Tj", "isFavorite": false, "isStarred": false}, {"title": "Piwik", "description": "", "dateCreated": "2016-12-19T17:34:54.000Z", "dateModified": "2016-12-19T17:34:54.000Z", "author": "Lennart Peeters", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<host>[^\\s]+) (?P<ip>\\d+\\.\\d+.\\d+\\.\\d+)?(?:\\s+\\[?)(?P<date>.*?)\\s+(?P<timezone>.*?)(?:\\]?) (?:[^\\s]+?) (?:[^\\s]+?) \\\"(?P<method>\\S+)\\s+(?P<path>.*?)\\s+\\S+\\s+(?P<status>\\S+)\\s+(?P<length>\\S+)(?:\\s+\\\"?)(?P<referrer>.*?)(?:\\\"?)(?:\\s+\\\"?)(?P<user_agent>[^\\\"]+)\\\"", "permalinkFragment": "ASzYcb", "isFavorite": false, "isStarred": false}, {"title": "BTPAPP", "description": "Filter search for candidate", "dateCreated": "2016-12-22T10:17:55.000Z", "dateModified": "2016-12-22T10:17:55.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\w+)(:|<|>)(.+?)(?:,)", "permalinkFragment": "tYq2b6", "isFavorite": false, "isStarred": false}, {"title": "lines with 2 consecutive chars", "description": "", "dateCreated": "2016-12-23T09:33:30.000Z", "dateModified": "2016-12-23T09:33:30.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.*(.)\\1.*$", "permalinkFragment": "xpXgfM", "isFavorite": false, "isStarred": false}, {"title": "Dailymotion videos ids ", "description": "find ids of video in dailymotion urls in text ", "dateCreated": "2017-01-03T17:45:55.000Z", "dateModified": "2017-01-03T17:45:55.000Z", "author": "", "flavor": "pcre", "delimiter": "~", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:https?:\\/\\/)?(?:www\\.)?dai\\.?ly(motion)?(?:\\.com)?\\/?.*(?:video|embed)?(?:.*v=|v\\/|\\/)([a-z0-9]+)", "permalinkFragment": "BkCY9t", "isFavorite": false, "isStarred": false}, {"title": "Strip Android Logs of Date/Time and process", "description": "Strip Android Logs of Date/Time and process. This helps if you want to diff 2 logs and remove the different date/time and process numbers", "dateCreated": "2017-01-04T19:15:57.000Z", "dateModified": "2017-01-04T19:15:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d+-\\d+.\\d{2}:\\d{2}:\\d{2}\\.\\d*\\s*\\d*\\s*\\d*\\s*[A-Z]", "permalinkFragment": "vTha04", "isFavorite": false, "isStarred": false}, {"title": "Amazon Resource Name (ARN) pattern with a named group for each component", "description": "A pattern to parse Amazon Web Services ARNs into their varying components:\n\n- Partition\n- Service\n- Region\n- AccountID\n- ResourceType (optional - empty string is missing)\n- Resource", "dateCreated": "2017-01-09T05:42:48.000Z", "dateModified": "2017-01-09T05:42:48.000Z", "author": "Arnoud", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^arn:(?P<Partition>[^:\\n]*):(?P<Service>[^:\\n]*):(?P<Region>[^:\\n]*):(?P<AccountID>[^:\\n]*):(?P<Ignore>(?P<ResourceType>[^:\\/\\n]*)[:\\/])?(?P<Resource>.*)$", "permalinkFragment": "pOfxYN", "isFavorite": false, "isStarred": false}, {"title": "Any word", "description": "", "dateCreated": "2017-01-10T18:28:56.000Z", "dateModified": "2017-01-10T18:28:56.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-zA-Z]+", "permalinkFragment": "VFg5yB", "isFavorite": false, "isStarred": false}, {"title": "Https", "description": "", "dateCreated": "2017-01-11T10:34:03.000Z", "dateModified": "2017-01-11T10:34:03.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=https://)(.*)(?=:8080)", "permalinkFragment": "QGQkQ2", "isFavorite": false, "isStarred": false}, {"title": "RegExp that accepts English, Arabic and numbers", "description": "", "dateCreated": "2017-01-12T10:19:09.000Z", "dateModified": "2017-01-12T10:19:09.000Z", "author": "Momen Zakaria", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z\\u0600-\\u06FF,-\\s\\d][\\s\\d\\a-zA-Z\\u0600-\\u06FF,-]*$", "permalinkFragment": "UiJXEB", "isFavorite": false, "isStarred": false}, {"title": "Match invalid percent-encoding", "description": "Match % signs of sequences that aren't valid \"percent-encoded\"", "dateCreated": "2017-01-14T00:44:05.000Z", "dateModified": "2017-01-14T00:44:05.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "%(?:(?![0-9a-fA-F]{2}))", "permalinkFragment": "5OeeUf", "isFavorite": false, "isStarred": false}, {"title": "Product Code Matcher", "description": "Regex to find product codes that are usually all upper case with numbers or all numbers with possible hyphens, slashes or dots as delimiters.\n\nAnything that matches the date format ##/##/##?? with various delimiters will not match.\n\nRequire that the code contains at least 1 number.\n\nThe code can optionally end in a lower case s. ", "dateCreated": "2017-01-14T16:32:35.000Z", "dateModified": "2017-01-14T16:32:35.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gax", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:[^-A-Z0-9\\.\\/\\\\\u00a3]|\\A)\n[\\.#]?\n(\n(?!\\d{2}[-\\\\/]\\d{2}[-\\\\/]\\d{2,4})\n(?=[A-Z\\.\\/\\\\]*?\\d)\n[-A-Z0-9\\.\\/\\\\]{3,10}[A-Z0-9]s?\n)\n(?:[^-A-Z0-9\\/\\\\]|\\Z)", "permalinkFragment": "OK8gIU", "isFavorite": false, "isStarred": false}, {"title": "Para la consulta departamento", "description": "Define los par\u00e1metros para la consulta de los datos del departamento.", "dateCreated": "2017-01-15T03:42:15.000Z", "dateModified": "2017-01-15T03:42:15.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^datos-departamento/(?P<year>\\d{4})/(?P<mes>[0-9]|1[0-2])/(?P<acumulado>0|1)/(?P<regiones>.+)/(?P<zonas>.+)/(?P<formatos>.+)/$", "permalinkFragment": "dLukLR", "isFavorite": false, "isStarred": false}, {"title": "form regex", "description": "", "dateCreated": "2017-01-17T15:43:52.000Z", "dateModified": "2017-01-17T15:43:52.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9 @#$^,:\\(\\)_+\\[\\]{}~]+$", "permalinkFragment": "iTptiL", "isFavorite": false, "isStarred": false}, {"title": "CS124_HW1:spamlord_email", "description": "Spamlord assignment: this regex detects email addresses in text. ", "dateCreated": "2017-01-17T12:35:57.000Z", "dateModified": "2017-01-17T12:35:57.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\w+)(?:(?:@)|(?:\\s+[Aa][Tt]\\s+))(.+)(?:(?:\\.edu)|(?:\\s+[dD][oO][Tt]\\s+edu))", "permalinkFragment": "ODw5K6", "isFavorite": false, "isStarred": false}, {"title": "CS124_HW1:spamlord_phone", "description": "Spamlord assignment: this regex detects phone numbers in text. ", "dateCreated": "2017-01-17T12:37:19.000Z", "dateModified": "2017-01-17T12:37:19.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(*(\\d{3})(?:(?:-*|\\s*|\\.*|\\)*|\\)\\s*))(\\d{3})(?:(?:-*|\\s*|\\.*|\\)*))(\\d{4})", "permalinkFragment": "vJHsui", "isFavorite": false, "isStarred": false}, {"title": "Regex for parsing Slack Urls", "description": "This regex is a duplicate of [another one](https://regex101.com/library/qO4zS9), but with a minor modification to support subdomains with one or more \"-\" in it.\n\nie: <https://sub-domain.example.com|Link to example.com>", "dateCreated": "2017-01-18T00:48:03.000Z", "dateModified": "2017-01-18T00:48:03.000Z", "author": "Dylan", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<(https?:\\/\\/[\\w-]+(?:\\.[\\w]+)+(?:\\/[\\w-?=%&@$#_.+]+)*\\/?)(?:\\|((?:[^>])+))?>", "permalinkFragment": "y09jwv", "isFavorite": false, "isStarred": false}, {"title": "Statful Entities Name", "description": "", "dateCreated": "2017-01-18T17:54:28.000Z", "dateModified": "2017-01-18T17:54:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z\u00e7\u00c70-9\\[\\]\\{\\}\\@\\#\\$\\%\\&\\)\\(\\_\\-\\/\\\\\\!\\?\\.]{1}[a-zA-Z\u00e7\u00c70-9\\[\\]\\{\\}\\@\\#\\$\\%\\&\\)\\(\\_\\-\\/\\\\\\!\\?\\.]*[a-zA-Z\u00e7\u00c70-9]{2,}[a-zA-Z\u00e7\u00c70-9\\[\\]\\{\\}\\@\\#\\$\\%\\&\\)\\(\\_\\-\\/\\\\\\!\\?\\.\\s]*$", "permalinkFragment": "LiIXT7", "isFavorite": false, "isStarred": false}, {"title": "Regex to replace width and height of mediatool image", "description": "", "dateCreated": "2017-01-19T13:49:07.000Z", "dateModified": "2017-01-19T13:49:07.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/w\\d*?\\/", "permalinkFragment": "zphKTp", "isFavorite": false, "isStarred": false}, {"title": "\u4e2d\u6587", "description": "Python \u6b63\u5219\u5339\u914d\u4e2d\u6587\u3001\u4e2d\u6587\u5168\u89d2\u9017\u53f7\u53e5\u53f7\u548c\u95ee\u53f7", "dateCreated": "2017-01-20T07:31:58.000Z", "dateModified": "2017-01-20T07:31:58.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\u4e00-\\u9fa5A-Za-z0-9\\u3001-\\u3003\\uff1f\\uff0c]+", "permalinkFragment": "1dsVQs", "isFavorite": false, "isStarred": false}, {"title": "Insert comma as thousands delimiter", "description": "The following regular expression can be used to insert commas as thousands delimiter.\nThe pattern was taken from the http://www.dlang.org web site.", "dateCreated": "2017-01-20T23:58:46.000Z", "dateModified": "2017-01-20T23:58:46.000Z", "author": "Unknown", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\d)(?=(\\d\\d\\d)+\\b)", "permalinkFragment": "P5wLbl", "isFavorite": false, "isStarred": false}, {"title": "test", "description": "learning regex in python", "dateCreated": "2017-01-21T09:46:42.000Z", "dateModified": "2017-01-21T09:46:42.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gs", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(http|ftp|https)://([^/\\r\\n]+)(/[^\\r\\n]*)?", "permalinkFragment": "sdDk0B", "isFavorite": false, "isStarred": false}, {"title": "Chord scanning", "description": "", "dateCreated": "2017-01-21T16:47:56.000Z", "dateModified": "2017-01-21T16:47:56.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?P<bar>\\|(?:{(?P<num>[0-9]+), *(?P<denom>[0-9]+)})?)? *(?P<chord>\\[[^\\]]+\\])?(?P<lyric>.*)$", "permalinkFragment": "jGZVbv", "isFavorite": false, "isStarred": false}, {"title": "decimal nr between 0-99999.99 with comma or dot with max. 2 decimal digits", "description": "decimal nr between 0-99999.99 with comma or dot with max. 2 decimal digits", "dateCreated": "2017-01-23T10:21:32.000Z", "dateModified": "2017-01-23T10:21:32.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([0-9]{1,5})(([,.]{1})([0-9]{1,2}))?$", "permalinkFragment": "pSABCP", "isFavorite": false, "isStarred": false}, {"title": "double number", "description": "", "dateCreated": "2017-01-23T13:06:09.000Z", "dateModified": "2017-01-23T13:06:09.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[ \\t]*(\\+|\\-)?[ \\t]*(\\d*\\.?\\d+(E[\\+|\\-|\\d]\\d*)?)", "permalinkFragment": "AtCkmx", "isFavorite": false, "isStarred": false}, {"title": "#define", "description": "", "dateCreated": "2017-01-25T14:49:40.000Z", "dateModified": "2017-01-25T14:49:40.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<WORD>\\w+)|(?P<ASSIGN>:=)|(?:\\s+)", "permalinkFragment": "uiNLsQ", "isFavorite": false, "isStarred": false}, {"title": "Define and detect custom tag with specific prefix & suffix", "description": "### Define and detect custom tag with specific prefix & suffix\n* Define custom tag : `<:tag_name:>` .\n* Regex is `/<:([^<:>\\s]+?):>/gm` .\n* Prefix is `<:` .\n* Suffix is `:>` .\n* `tag_name` can not contain prefix, suffix, space, tab or newline character .\n* `tag_name` can not be null .\n* You can get `tag_name` string use `$1` .\n* Prefix and suffix any unicode character ,  just use `\\uXXXX` in regex.", "dateCreated": "2017-01-26T17:04:37.000Z", "dateModified": "2017-01-26T17:04:37.000Z", "author": "ShenTengTu", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<:([^<:>\\s]+?):>", "permalinkFragment": "pNKIvK", "isFavorite": false, "isStarred": false}, {"title": "SharePoint file name validator - KB905231", "description": "", "dateCreated": "2017-01-27T04:41:25.000Z", "dateModified": "2017-01-27T04:41:25.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?!.+\\.\\..+)^(?![\\._]|.*(?:\\.|\\.files|_files|-Dateien|_fichiers|_bestanden|_file|_archivos|-filer|_tiedostot|_pliki|_soubory|_elemei|_ficheiros|_arquivos|_dosyalar|_datoteke|_fitxers|_failid|_fails|_bylos|_fajlovi|_fitxategiak)$)[^~#%&*{}\\\\:<>?\\/|\"]+$", "permalinkFragment": "BAw7i4", "isFavorite": false, "isStarred": false}, {"title": "Italian check codeline", "description": "Expression matches magnetic codeline of checks, in italian banking system.\n\ni.e.\n\n    >1234567890< 103014250# 66666666+ --> old layout check\n    >1234567890- 103014250# 66666666+ --> new layout check (notice the '-' check number terminator)\n\n**>1234567890<** : check number (10 digits plus terminators, _required_)\n**103014250#**: consists of bank code (4 digits: 1030) and branch code (5 digits: 14250) (both _required_)\n**66666666+**: account number (_optional_). Often used to identify different types of checks.", "dateCreated": "2017-01-27T13:58:26.000Z", "dateModified": "2017-01-27T13:58:26.000Z", "author": "Benny", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ">([0-9]{10})[-<;]\\s{1,2}([0-9]{4})([0-9]{5})#(\\s([0-9_\\?]{0,8}))?(\\+\\s([a-z0-9_\\?]{0,5}))?(\\-\\s([\\.,0-9_\\?]{0,10})>)?", "permalinkFragment": "UCU5WE", "isFavorite": false, "isStarred": false}, {"title": "/etc/passwd for most Linux distributions (e.g. Debian)", "description": "", "dateCreated": "2017-01-27T15:40:38.000Z", "dateModified": "2017-01-27T15:40:38.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-z_][a-z0-9_-]{0,30}[a-z0-9_$-]?:[^:]*:\\d+:\\d+:[^:]*:[^:]*:[^:]*$", "permalinkFragment": "3mw6Eu", "isFavorite": false, "isStarred": false}, {"title": "parsing objdump output", "description": "parsing objdump output", "dateCreated": "2017-01-29T08:47:59.000Z", "dateModified": "2017-01-29T08:47:59.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\s(\\w{1,}):\\s+((?:\\w\\w\\s)+)\\s+(\\w+)(.*)", "permalinkFragment": "Jeuou3", "isFavorite": false, "isStarred": false}, {"title": "dd-MM-yyyy validation", "description": "", "dateCreated": "2017-01-30T14:21:03.000Z", "dateModified": "2017-01-30T14:21:03.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$", "permalinkFragment": "u4THSc", "isFavorite": false, "isStarred": false}, {"title": "Trim leading zeroes in numbers 012.210 => 12.21 ", "description": "Trim leading zeroes \n\n012.210 => 12.21\n.002300 => .0023", "dateCreated": "2017-02-01T05:54:40.000Z", "dateModified": "2017-02-01T05:54:40.000Z", "author": "FAy", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\-{0,1})(?:(?:0*)(\\d+))?((?:\\.)(?:\\d*?))?0*$", "permalinkFragment": "CPhsKe", "isFavorite": false, "isStarred": false}, {"title": "number", "description": "", "dateCreated": "2017-02-01T07:39:27.000Z", "dateModified": "2017-02-01T07:39:27.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^-?\\d+(\\.\\d+)?$", "permalinkFragment": "S4qwrY", "isFavorite": false, "isStarred": false}, {"title": "Lockbox S\u00e4tze #2", "description": "", "dateCreated": "2017-02-01T09:59:58.000Z", "dateModified": "2017-02-01T09:59:58.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "igs", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*)((?<=[.!?]\\s|^).*?lockbox.*?)(?<=[.!?]|$)(.*)", "permalinkFragment": "H6Uj3O", "isFavorite": false, "isStarred": false}, {"title": "extract username from windows domain\\user", "description": "", "dateCreated": "2017-02-02T14:24:45.000Z", "dateModified": "2017-02-02T14:24:45.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\\\(.*)$", "permalinkFragment": "ukXnTN", "isFavorite": false, "isStarred": false}, {"title": "argsert", "description": "", "dateCreated": "2017-02-06T23:28:20.000Z", "dateModified": "2017-02-06T23:28:20.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\[(\\w+)(?:\\|+(\\w+))*\\]$", "permalinkFragment": "0J6WUE", "isFavorite": false, "isStarred": false}, {"title": "find field names", "description": "", "dateCreated": "2017-02-07T12:09:23.000Z", "dateModified": "2017-02-07T12:09:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "field: \"(.*?)\"", "permalinkFragment": "23Jr6p", "isFavorite": false, "isStarred": false}, {"title": "Replace sinon stub configuration with ts-mockito equivalent", "description": "Replaces [sinon.js](http://sinonjs.org/docs/#stubs) stubs configuration with similar behaviour achievied using the [ts-mockito](https://github.com/NagRock/ts-mockito) library", "dateCreated": "2017-02-08T06:13:05.000Z", "dateModified": "2017-02-08T06:13:05.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\w+\\.\\w+)(\\.withArgs\\((.+)\\))?\\.returns\\((.+)\\)", "permalinkFragment": "m9qlTi", "isFavorite": false, "isStarred": false}, {"title": "traceroute", "description": "", "dateCreated": "2017-02-09T09:31:26.000Z", "dateModified": "2017-02-09T09:31:26.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[[\\d\\.]+\\] (\\d{2,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})[\\,:\\s\\[\\]\\d{1,2}\\w]+([\\d\\.]{4,7})+[\\w\\s\\d\\(\\)\\.,%]+", "permalinkFragment": "eFIuGs", "isFavorite": false, "isStarred": false}, {"title": "import\u5339\u914d", "description": "", "dateCreated": "2017-02-09T15:15:56.000Z", "dateModified": "2017-02-09T15:15:56.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "({{.*?[D|d]ummy}}).*?from.+?['|\"](.+?)['|\"]", "permalinkFragment": "RzxcJU", "isFavorite": false, "isStarred": false}, {"title": "content", "description": "", "dateCreated": "2017-02-10T14:17:04.000Z", "dateModified": "2017-02-10T14:17:04.000Z", "author": "", "flavor": "pcre", "delimiter": "@", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<[^\"]*class=\"[^\"]*(?<=\"|\\s)marginRight(?=\"|\\s[^\"]*)\"[^\"]*href=\"(?<url>([^?][^\\d+]*(?<number>\\d+))[^\"]*)\"", "permalinkFragment": "rcHUQC", "isFavorite": false, "isStarred": false}, {"title": "images", "description": "", "dateCreated": "2017-02-10T14:53:07.000Z", "dateModified": "2017-02-10T14:53:07.000Z", "author": "", "flavor": "pcre", "delimiter": "@", "flags": "gmis", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<div[^>]*gallery-image-border\">[^>]*content=\"(?<url>[^\"]*)\"", "permalinkFragment": "BT96aq", "isFavorite": false, "isStarred": false}, {"title": "descr", "description": "", "dateCreated": "2017-02-10T15:17:25.000Z", "dateModified": "2017-02-10T15:17:25.000Z", "author": "", "flavor": "pcre", "delimiter": "@", "flags": "gmis", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "class=\"[^\"]*(?<=\"|\\s)description_quote(?=\"|\\s[^\"]*)\">[^>]*>(?<description>[^<]*)", "permalinkFragment": "u2REym", "isFavorite": false, "isStarred": false}, {"title": "My regex", "description": "", "dateCreated": "2017-02-10T23:11:10.000Z", "dateModified": "2017-02-10T23:11:10.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\`(?:.|\\`)*\\`", "permalinkFragment": "3ryNKl", "isFavorite": false, "isStarred": false}, {"title": "Asadasdsd", "description": "", "dateCreated": "2017-02-11T09:22:40.000Z", "dateModified": "2017-02-11T09:22:40.000Z", "author": "", "flavor": "pcre", "delimiter": "@", "flags": "x", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\n\n\t\t\\{\n\t\t\t(\n\t\t\t\t(?:[\\-#=\\@!%$*+?])?\n\t\t\t\t\\w\n\t\t\t\t[\\w\\-\\.\\d]*\n\t\t\t) (?#1 param name)\n\t\t\t(\n\t\t\t\t\\?\n\t\t\t)? (?#2 optional)\n\t\t\t(?:\n\n\t\t\t\t<(.*?)?\\|(.*?)?> (?#3 behind)(?#4 after)\n\t\t\t)?\n\t\t\t(?:\n\t\t\t\t:(\n\t\t\t\t\t[\\w&]\n\t\t\t\t\t[\\w\\.\\-\\d\\s]*\n\t\t\t\t\t(?:\\[\\])?\n\t\t\t\t) (?#5 type)\n\t\t\t\t(?:\n\t\t\t\t\t\\(\n\t\t\t\t\t\t([^{]+?) (?#6 type args)\n\t\t\t\t\t\\)\n\t\t\t\t\t(?:\n\t\t\t\t\t\t\\(\n\t\t\t\t\t\t\t([^\\}]) (?#7 type args separator)\n\t\t\t\t\t\t\\)\n\t\t\t\t\t)?\n\t\t\t\t)?\n\t\t\t)?\n\t\t\t(?:\n\t\t\t\t:\\(\n\t\t\t\t\t([^{]+) (?#8 pattern)\n\t\t\t\t\\)\n\t\t\t)?\n\t\t\t(?:\n\t\t\t\t=(\n\t\t\t\t\t[^}]*\n\t\t\t\t) (?#9 default value)\n\t\t\t)?\n\t\t\\} |\n\t\t(\n\t\t\t\\{?\n\t\t\t[^{]+\n\t\t) (?#10 plain text)\n\t\t", "permalinkFragment": "z8uhcU", "isFavorite": false, "isStarred": false}, {"title": "show inventory Partial)", "description": "", "dateCreated": "2017-02-11T21:23:45.000Z", "dateModified": "2017-02-11T21:23:45.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(NAME)((\\s)?:(\\s)?)([ |,| (|)|\\\\|\\.|\\\"|\\w|\\-|\\+]*)((\\s)*?,(\\s)*?)(DESCR)((\\s)?:(\\s)?)([ |,| (|)|\\\\|\\.|\\\"|\\w|\\-|\\+]*)(\\s)", "permalinkFragment": "2XbQVi", "isFavorite": false, "isStarred": false}, {"title": "show inv (not for complex)", "description": "", "dateCreated": "2017-02-11T21:24:20.000Z", "dateModified": "2017-02-11T21:24:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(NAME)((\\s)?:(\\s)?)([ |,| (|)|\\\\|\\.|\\\"|\\w|\\-|\\+]*)((\\s)*?,(\\s)*?)(DESCR)((\\s)?:(\\s)?)([ |,| (|)|\\\\|\\.|\\\"|\\w|\\-|\\+]*)(\\s)(PID)((\\s)?:(\\s)?)([\\w|\\-|\\+|=]+)((\\s)+,(\\s)+)(VID)((\\s)?:(\\s)?)([\\w| ]*)((\\s)+,(\\s)+)(SN)((\\s)?:(\\s)?)([\\w| ]*)", "permalinkFragment": "YWDJZL", "isFavorite": false, "isStarred": false}, {"title": "byline", "description": "", "dateCreated": "2017-02-12T19:18:27.000Z", "dateModified": "2017-02-12T19:18:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "iU", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(Av)(.*)(<br \\/>|<br\\/>){1,2}", "permalinkFragment": "5MgOkD", "isFavorite": false, "isStarred": false}, {"title": "Splunk - Masking data (SIM Card Example)", "description": "Splunk - Masking Data\n\nUses defensive logic to account for data changes & supports[ **Splunk Schema on Fly**](https://www.google.com/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=splunk+schema+on+the+fly)!", "dateCreated": "2017-02-13T00:15:37.000Z", "dateModified": "2017-02-13T00:15:37.000Z", "author": "Tony Nesavich", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?m)^.*SIM ICC Id .*:*\\w+(\\w{6}.*)$", "permalinkFragment": "apux6Q", "isFavorite": false, "isStarred": false}, {"title": "Find Days. Simple format", "description": "Given a string, finds the days spoken about within the string. (US Implementation)", "dateCreated": "2017-02-15T04:44:04.000Z", "dateModified": "2017-02-15T04:44:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([Mm]on|[Tt](?:hurs|ues)|[Ww]ednes|[Ff]ri|[Ss](?:un|atur))(?: |,|day(?: |,|(?:'|)s))|[Ee]veryday|[Ww]eekday|[Ww]eekend", "permalinkFragment": "XLmCCA", "isFavorite": false, "isStarred": false}, {"title": "TLO con multiples UPLOAD", "description": "", "dateCreated": "2017-02-13T08:43:15.000Z", "dateModified": "2017-02-13T08:43:15.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^http://pre.m2.(?:lacaixa|caixabank).es:80/HBK/WAP/INT(?:/UPLOAD)*/TLO.*", "permalinkFragment": "ps0pIR", "isFavorite": false, "isStarred": false}, {"title": "Perl search exclude tags", "description": "", "dateCreated": "2017-02-13T11:35:29.000Z", "dateModified": "2017-02-13T11:35:29.000Z", "author": "", "flavor": "pcre", "delimiter": "%", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?!<xref[^>]*>)(-)(?![^<]*</xref>)", "permalinkFragment": "TOtTgF", "isFavorite": false, "isStarred": false}, {"title": "SELLER", "description": "", "dateCreated": "2017-02-17T09:21:09.000Z", "dateModified": "2017-02-17T09:21:09.000Z", "author": "", "flavor": "pcre", "delimiter": "@", "flags": "gims", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^<]*<div[^>]*id=\"number-third-digit-space\"[^<]*<div[^>]*class=\"[^\"]*(?<=\"|\\s)contact-phone-prefix(?=\"|\\s[^>]*)\">(?<mobile>\\d+).*?(\\d+)", "permalinkFragment": "ITJvPM", "isFavorite": false, "isStarred": false}, {"title": "name", "description": "", "dateCreated": "2017-02-13T13:39:52.000Z", "dateModified": "2017-02-13T13:39:52.000Z", "author": "", "flavor": "pcre", "delimiter": "@", "flags": "gims", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "class=\"[^\"]*(?<=\"|\\s)col-xs-9(?=\"|\\s[^>]*)\">(?<name>[^<]*)", "permalinkFragment": "8zL2CL", "isFavorite": false, "isStarred": false}, {"title": "loose email address regex (\\S)", "description": "", "dateCreated": "2017-02-14T02:39:32.000Z", "dateModified": "2017-02-14T02:39:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\S+@\\S+\\.\\S+", "permalinkFragment": "jO0Ra4", "isFavorite": false, "isStarred": false}, {"title": "Find Apostrophe via Regex and JavaScript", "description": "This is function matching apostrophe via regex and JavaScript. Also find broken apostrophe and match whole word.", "dateCreated": "2017-02-14T08:06:17.000Z", "dateModified": "2017-02-14T08:06:17.000Z", "author": "Ivijan-Stefan Stipic <creativform@gmail.com>", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b(^|[a-z0-9\\-\\\u2014]+)(\\s?)(\\'|\\\u02bc|\\\u02bb|\\\u2019)(\\s?)((s|d|ll|nt|(t(is?|s?){1,2}){1,3}|((r|v){1}(e?){1}){1,2})\\b)", "permalinkFragment": "zPx5ig", "isFavorite": false, "isStarred": false}, {"title": "url - extrakce hostname", "description": "", "dateCreated": "2017-02-14T15:12:59.000Z", "dateModified": "2017-02-14T15:12:59.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^https?:\\/\\/(([^\\/\\?#\\.]+\\.|)([^\\/\\?#\\.]+)\\.([^\\/\\?#\\.]+))(|\\/.*|\\?.*|#.*)$", "permalinkFragment": "nE8y9i", "isFavorite": false, "isStarred": false}, {"title": "Tablename = schema.table", "description": "Tablename composed by schema.table", "dateCreated": "2017-02-14T18:36:58.000Z", "dateModified": "2017-02-14T18:36:58.000Z", "author": "Glauber Costa Vila Verde", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[/\\S+/]+[\\\\.][/\\S+/]+", "permalinkFragment": "5fTNqc", "isFavorite": false, "isStarred": false}, {"title": "get CN from LDAP directory entry", "description": "", "dateCreated": "2017-02-15T19:49:29.000Z", "dateModified": "2017-02-15T19:49:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^CN=([a-z0-9\\-]+),.*", "permalinkFragment": "lYOAPV", "isFavorite": false, "isStarred": false}, {"title": "Community Pageviews", "description": "", "dateCreated": "2017-02-16T00:25:29.000Z", "dateModified": "2017-02-16T00:25:29.000Z", "author": "Alfredo Hinojosa", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\/communities\\/service\\/html\\/community.*\\?)", "permalinkFragment": "WJAulI", "isFavorite": false, "isStarred": false}, {"title": "only letters and numbers", "description": "Match only with letters and numbers between x to y quantities", "dateCreated": "2017-02-16T03:59:59.000Z", "dateModified": "2017-02-16T03:59:59.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=(.*[0-9])+)(?=(.*[a-z])+)(?=(.*[A-Z])+)[0-9a-zA-Z]{8,12}$", "permalinkFragment": "2QxWuM", "isFavorite": false, "isStarred": false}, {"title": "Unuseful names", "description": "", "dateCreated": "2017-02-16T04:36:13.000Z", "dateModified": "2017-02-16T04:36:13.000Z", "author": "Moayad", "flavor": "javascript", "delimiter": "/", "flags": "gim", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\u0623\u0645\u064a|\u0627\u0645\u064a|\u0627\u0644\u0648\u0627\u0644\u062f\u0629|\u0645\u0627\u0645\u0627|\u0623\u0628\u064a|\u0623\u0628\u0648\u064a|\u0628\u0627\u0628\u0627|\u0646\u0628\u0639 \u0627\u0644\u062d\u0646\u0627\u0646|\u062a\u0627\u062c \u0627\u0644\u0631[\u0627\u0623]|\u062a\u0627\u062c \u0631[\u0627\u0623]\u0633\u064a)[ \\.\\r\\n\\-]?", "permalinkFragment": "PqJC2s", "isFavorite": false, "isStarred": false}, {"title": "Match any line that starts with '[' and ends with ']'", "description": "Match any line that starts with '[' and ends with ']'", "dateCreated": "2017-02-16T11:52:27.000Z", "dateModified": "2017-02-16T11:52:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\[.*\\]\\R", "permalinkFragment": "PVxPki", "isFavorite": false, "isStarred": false}, {"title": "Find particular punctuation", "description": "This regex find punctuation like \"!\", \"!!!\", \"?\", \"???\", \"!?\", \"!!!???\" and unlimited time repeated \"!\" and \"?\"", "dateCreated": "2017-02-23T20:13:08.000Z", "dateModified": "2017-02-23T20:13:08.000Z", "author": "Ivijan-Stefan Stipic", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\!{1,})(\\?{1,})?|(\\?{1,})(\\!{1,})?", "permalinkFragment": "AUFfmX", "isFavorite": false, "isStarred": false}, {"title": "Match Time in either 24Hr or 12Hr format", "description": "Matches a time in either 25Hr or 12Hr format. Seconds are optional for either format.", "dateCreated": "2017-02-28T13:45:16.000Z", "dateModified": "2017-02-28T13:45:16.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^([01][0-9]|2[0-3])[:][0-5][0-9]([:][0-5][0-9])?$)|(^(([0-9])|(1[0-2])):([0-5][0-9])(:([0-5][0-9]))?\\s?[ap]m$)", "permalinkFragment": "5h9xgD", "isFavorite": false, "isStarred": false}, {"title": "Version number validation", "description": "E.g.  android version name or ios bundle id validation", "dateCreated": "2017-03-07T15:40:27.000Z", "dateModified": "2017-03-07T15:40:27.000Z", "author": "Paldom", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d+\\.?)(\\d+\\.)?(\\S+)?$", "permalinkFragment": "RQDC9x", "isFavorite": false, "isStarred": false}, {"title": "dick detector", "description": "detect 8=D regex", "dateCreated": "2017-03-10T11:25:39.000Z", "dateModified": "2017-03-10T11:25:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "8=+D", "permalinkFragment": "HWHN7L", "isFavorite": false, "isStarred": false}, {"title": "RFC 3986 IPv4 Validation", "description": "IPv4 Validation to RFC 3986 found at [https://tools.ietf.org/html/rfc3986#section-1.1.1](https://tools.ietf.org/html/rfc3986#section-1.1.1).", "dateCreated": "2017-03-25T23:27:33.000Z", "dateModified": "2017-03-25T23:27:33.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?<IPv4_dec_octet>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3,3}(?<IPv4_dec_octet_end>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])", "permalinkFragment": "ydOwKG", "isFavorite": false, "isStarred": false}, {"title": "Android package name", "description": "Validation of android package names.\n[Read more](https://developer.android.com/studio/build/application-id.html)", "dateCreated": "2017-03-28T18:25:52.000Z", "dateModified": "2017-03-28T18:25:52.000Z", "author": "Paldom", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-zA-Z][a-zA-Z0-9_]*(\\.[a-zA-Z0-9_]+)*", "permalinkFragment": "OWqxFM", "isFavorite": false, "isStarred": false}, {"title": "Domain validation regex suitable for user input", "description": "This regexp can be used to validate domain names in Golang. While it cannot enforce the 253 character limit (with optional trailing period not included) that can be easily done by a simple len(domain) <= 253 check as well.\n\nThis can be used as-is in other languages, even with RE2 regex engine. If positive lookbehind assertions are available, the character limit can be used. \n\nNon-capturing groups are used.\n\nExample validated domains (some may be invalid per TLD rules):\n\nexample.com\n_25._tcp.SRV.example\npunycoded-idna.xn--zckzah\nunder_score.example\n\nExample invalid domains:\n\n192.0.2.1\nhas spaces.com\neasy,typo.example\ndomain\\.escapes.invalid\nno_trailing_.invalid\n-leading-or-trailing-.hyphens.invalid\n\nTLDs have more validation, the following will not validate:\n\nexample\ndigit.1example\nunderscore._example_com\n\nbut with a trailing period, the same rules as non-TLD are applied:\n\nexample.\n192.0.2.1.\ndigit.1example.\nunderscore._example_com.\n\n", "dateCreated": "2020-03-22T22:40:14.000Z", "dateModified": "2020-03-22T22:40:14.000Z", "author": "Alexander Dupuy", "flavor": "golang", "delimiter": "`", "flags": "igm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[_a-z0-9](?:[_a-z0-9-]{0,61}[a-z0-9])?\\.)+(?:[a-z](?:[a-z0-9-]{0,61}[a-z0-9])?)?$", "permalinkFragment": "SEg6KL", "isFavorite": false, "isStarred": false}, {"title": "Return XML tag where attribute value equals X", "description": "Return XML tag where attribute value equals X", "dateCreated": "2017-04-05T15:49:07.000Z", "dateModified": "2017-04-05T15:49:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<(?:Attendance)[^>]+\\sBookingReference\\=\\\"0317000067\\b[^>]*>", "permalinkFragment": "OjDqSx", "isFavorite": false, "isStarred": false}, {"title": "Get the name of the image", "description": "This regex will be getting the name of the image\n\nsource: **data/products/cocacola/logo_new_version.jpg**\nmatch: **logo_new_version**\n\nIt will be returned **logo_new_version** on **image** index\n", "dateCreated": "2017-04-11T11:34:57.000Z", "dateModified": "2017-04-11T11:34:57.000Z", "author": "strubloid", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?!.*?\\/)(?P<image>.*?)(?:\\.(?:jpg|png))", "permalinkFragment": "yO6pCQ", "isFavorite": false, "isStarred": false}, {"title": "Regrex email wiki", "description": "Length of email address is an industry standard, lady\n\"The format of email addresses is local-part@domain where the local part may be up to 64 characters long and the domain may have a maximum of 255 characters[2]\u2014but the maximum of 256-character length of a forward or reverse path restricts the entire email address to be no more than 254 characters long.[3] The formal definitions are in RFC 5322 (sections 3.2.3 and 3.4.1) and RFC 5321\u2014with a more readable form given in the informational RFC 3696[4] and the associated errata.\n\nLink: https://en.wikipedia.org/wiki/Email_address#Syntax", "dateCreated": "2017-04-19T08:49:20.000Z", "dateModified": "2017-04-19T08:49:20.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$", "permalinkFragment": "PEtM4r", "isFavorite": false, "isStarred": false}, {"title": "Extract URL, FTP, Mailto", "description": "extract url such as http, https:, ftp and mailto from a string", "dateCreated": "2017-04-28T09:36:52.000Z", "dateModified": "2017-04-28T09:36:52.000Z", "author": "Kumar Sundaram", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)|((mailto:)?[_.\\w-]+@([\\w][\\w\\-]+\\.)+[a-zA-Z]{2,3})", "permalinkFragment": "hZ1AqN", "isFavorite": false, "isStarred": false}, {"title": "Months Regex", "description": "For Month Verification\nWorks for\nJanuary / Jan / Jan.", "dateCreated": "2017-04-28T20:18:32.000Z", "dateModified": "2017-04-28T20:18:32.000Z", "author": "F0123X", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(J(an(uary|\\.?)|u(n(e|\\.?)|l(y|\\.?)))|Feb(ruary|\\.?)|Ma(r(ch|\\.?)|y)|A(pr(il|\\.?)|ug(ust|\\.?))|Sept|Nov|Dec(ember|\\.?)|Oct(ober|\\.?))", "permalinkFragment": "s4t7Xt", "isFavorite": false, "isStarred": false}, {"title": "Password minimum requirements", "description": "Password requirements (minimum length, character groups that must exist) can be easily validated AND extended using look-aheads.", "dateCreated": "2017-05-04T03:58:19.000Z", "dateModified": "2017-05-04T03:58:19.000Z", "author": "OnlineCop", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "# Adding password requirements are as easy as tacking on\n# another (?=...) group.\n^\n(?=(?:[^a-z]*[a-z]){1}) # At least {1} lowercase 'a-z' letter\n(?=(?:[^A-Z]*[A-Z]){2}) # At least {2} uppercase 'A-Z' letters\n(?=(?:[^0-9]*[0-9]){3}) # At least {3} digits\n(?=(?:[^\\s]*[\\s]){1})   # At least {1} whitespace\n(?=(?:[^[:punct:]]*[[:punct:]]){1}) # At least {1} special char\n(?=.{9})                # A minimum of 9 characters\n", "permalinkFragment": "fR8728", "isFavorite": false, "isStarred": false}, {"title": "Floating Point number verifier and extractor with scientific notation support", "description": "The regex verifies floating point numbers in decimal or scientific notation with extensive error checking - however, there may be edge cases which i haven't addressed, so feel free to put in more unit tests!", "dateCreated": "2017-05-10T17:00:23.000Z", "dateModified": "2017-05-10T17:00:23.000Z", "author": "Tamoghna Chowdhury", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([+-]?(?:\\d*(?:\\.(?=\\d))?\\d*))(?:(?:(?<=\\d)[Ee])?((?2)))(?<=\\d))?$", "permalinkFragment": "Jrf67Y", "isFavorite": false, "isStarred": false}, {"title": " RFC-1034- and RFC-2181-compliant FQDN extractor", "description": "The specification for this regex is based upon the extracts from RFC 1034 and RFC 2181 below.\n\nIt is also assumed that you are trying to extract the FQDN from a pipe-delimited string.\n\nIf this is not the case then you will need to adjust the regex as necessary by either removing\nthe pipe character or replacing it with a different delimiter e.g. comma.\n\n[RFC 1034](https://tools.ietf.org/html/rfc1034)\n\n>   3.5. Preferred name syntax\n> \n>   The labels must follow the rules for ARPANET host names.  They must\n>   start with a letter, end with a letter or digit, and have as interior\n>   characters only letters, digits, and hyphen.  There are also some\n>   restrictions on the length.  Labels must be 63 characters or less.\n\n[RFC 2181](https://tools.ietf.org/html/rfc2181)\n\n>    11. Name Syntax\n> \n>    The DNS itself places only one restriction on the particular labels\n>    that can be used to identify resource records.  That one restriction\n>    relates to the length of the label and the full name.  The length of\n>    any one label is limited to between 1 and 63 octets.  A full domain\n>    name is limited to 255 octets (including the separators).\n\n**Summary:**\n* Valid characters [a-zA-Z0-9-]\n* FQDN length = 1-253\n* FQDN must not end with a dot.\n\n* Label length = 1-63\n* Labels must start with a letter.\n* Labels must not end with a hyphen.\n* Labels must not contain a double hyphen.\n", "dateCreated": "2017-05-20T09:59:39.000Z", "dateModified": "2017-05-20T09:59:39.000Z", "author": "0jag", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\|\\K(?=.{1,253}\\|)(?!.*--.*)(?P<fqdn>(?:(?!-)(?![0-9])[a-zA-Z0-9-]{1,63}(?<!-)\\.){1,}(?:(?!-)[a-zA-Z0-9-]{1,63}(?<!-)))\\|", "permalinkFragment": "SuU6Iq", "isFavorite": false, "isStarred": false}, {"title": "Extract the only the Nth field from a delimited string", "description": "The aim of this regex is to extract only the Nth field from a delimited string.\n\nIn the example provided the delimited is the pipe character.\n\nYou will have to substitute the pipe character for whatever delimiter you are using. ", "dateCreated": "2017-05-20T09:31:48.000Z", "dateModified": "2017-05-20T09:31:48.000Z", "author": "0jag", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\A(?:[^\\|]+\\|){2}\\K(?P<foo>[^\\|]*)", "permalinkFragment": "CuBMra", "isFavorite": false, "isStarred": false}, {"title": "Remove Markdown Links", "description": "", "dateCreated": "2017-05-23T12:57:50.000Z", "dateModified": "2017-05-23T12:57:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[(.*?)\\]\\(.*?\\)", "permalinkFragment": "REIVvj", "isFavorite": false, "isStarred": false}, {"title": "Make PHP var_dump() output more compact", "description": "The PHP function `var_dump()` provides debugging output, but has more line-breaks than is needed for readability. This regex strips out the (in my eyes) unnecessary line-breaks. Good in a self written debugging method in combination with `ob_start()`and `ob_get_contents()`.", "dateCreated": "2017-05-31T20:07:07.000Z", "dateModified": "2017-05-31T20:07:07.000Z", "author": "Doqnach", "flavor": "pcre", "delimiter": "`", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?|(\\[[\\\"]?.+?[\\\"]?\\])(=>)\\R\\s*|(?<=\\(0\\) )(\\{)\\R\\s*(\\}))", "permalinkFragment": "EhUM47", "isFavorite": false, "isStarred": false}, {"title": "URL Slugs Optimized", "description": "This slug regex is optimized using strictly my own opinions.\n\nSlugs:\n\nShould be english, alphanumeric phrases separated with a single dash.\nShould not contain single alpha character between dashes. \nShould not be comprised of just numbers and dashes.\nShould not begin with a number or a dash.\nShould not end with a dash.\n\n__2+ alpha character lookup increases expression speed greatly over allowing 1+ alpha lookups, 3+ improves it more although marginally.)__", "dateCreated": "2017-06-01T17:10:19.000Z", "dateModified": "2017-06-01T17:10:19.000Z", "author": "Jordon Baade", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?![0-9-]+$)(?:[a-z]{2,}-?|[0-9]-?)+(?<!-)$", "permalinkFragment": "caXjPb", "isFavorite": false, "isStarred": false}, {"title": "A revised e-mail validation regular expression", "description": "This one allows to begin with a **digit**, however, sometimes e-mail should begin with an **English letter **", "dateCreated": "2017-06-03T04:44:03.000Z", "dateModified": "2017-06-03T04:44:03.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\w+(?:[\\.-]?\\w+)*)@(\\w+(?:[\\.-]?\\w+)*)(\\.[a-zA-Z]{2,})+$", "permalinkFragment": "D3VMD2", "isFavorite": false, "isStarred": false}, {"title": "Date checker for X values", "description": "Work in progress", "dateCreated": "2017-06-14T17:36:27.000Z", "dateModified": "2017-06-14T17:36:27.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((?! xxxx-xx-xx)((19|20|x)[0-9x][0-9x])\\-((02\\-(-[1-9]|[1-2]\\d|xx))|((04|06|09|11)\\-(0[1-9]|[1-2]\\d|30|xx))|((01|03|05|07|08|10|12|xx)\\-(0[1-9]|[1-2]\\d|30|31|xx)))((?! xx:xx:xx) ([0-1]\\d|2[0-3]|xx):([0-5]\\d|xx)(:([0-5]\\d|xx)|))?)$", "permalinkFragment": "SsMP2c", "isFavorite": false, "isStarred": false}, {"title": "Youtube ID Extractor", "description": "", "dateCreated": "2017-06-20T08:54:26.000Z", "dateModified": "2017-06-20T08:54:26.000Z", "author": "", "flavor": "pcre", "delimiter": "~", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(https?://)?(www\\.)?youtu(\\.be|be\\.com)/(watch\\?v=|embed/)?(?<id>[\\w-]{11,})", "permalinkFragment": "r3izVF", "isFavorite": false, "isStarred": false}, {"title": "Phone numbers and/or extensions(relaxed)", "description": "Useful for phone number extraction", "dateCreated": "2017-07-07T17:58:19.000Z", "dateModified": "2017-07-07T17:58:19.000Z", "author": "hslayer", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(([\\+]?[ 0-9]{1,6}([ \\.\\-])?)?([\\(]{1}[ +0-9]{2,6}[\\)])?([ 0-9A-Z\\.\\-]{1,32})([0-9]+))|((e|x|ex|ext|extension)(\\.|\\:)?([ ]{1})?[0-9]+)", "permalinkFragment": "ruuONX", "isFavorite": false, "isStarred": false}, {"title": "Localhost/private ip origin check", "description": "Used by CORS to check for localhost/private IP origins\nCheck out the unit tests at [/r/2Ofume/1/tests](https://regex101.com/r/2Ofume/1/tests)", "dateCreated": "2017-07-09T11:13:17.000Z", "dateModified": "2017-07-09T11:13:17.000Z", "author": "ngokimphu", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(https?:\\/\\/)?(localhost|lvh\\.me|::1?|fe80::1|((::f{4}:)?(1(0|27)\\.\\d{1,3}|172\\.(1[6-9]|2\\d|3[01])|192\\.168)\\.\\d{1,3}\\.\\d{1,3}))(:\\d{1,5})?", "permalinkFragment": "qwovz8", "isFavorite": false, "isStarred": false}, {"title": "Formatar CPF", "description": "Retorna um cpf no formato 123.456.789-11. Cpf de entrada deve conter apenas n\u00fameros", "dateCreated": "2017-07-12T18:43:13.000Z", "dateModified": "2017-07-12T18:43:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{3})(\\d{3})(\\d{3})(\\d{2})", "permalinkFragment": "kEPtvS", "isFavorite": false, "isStarred": false}, {"title": "Matching email addresses per RFC5322", "description": "The BNF rules from RFC 5322 transformed to PCRE by Nikita Popov and described in the post http://nikic.github.io/2012/06/15/The-true-power-of-regular-expressions.html.", "dateCreated": "2017-07-20T18:51:49.000Z", "dateModified": "2017-07-20T18:51:49.000Z", "author": "Michael Musson", "flavor": "pcre", "delimiter": "/", "flags": "xmg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?(DEFINE)\n    (?<addr_spec> (?&local_part) @ (?&domain) )\n    (?<local_part> (?&dot_atom) | (?&quoted_string) | (?&obs_local_part) )\n    (?<domain> (?&dot_atom) | (?&domain_literal) | (?&obs_domain) )\n    (?<domain_literal> (?&CFWS)? \\[ (?: (?&FWS)? (?&dtext) )* (?&FWS)? \\] (?&CFWS)? )\n    (?<dtext> [\\x21-\\x5a] | [\\x5e-\\x7e] | (?&obs_dtext) )\n    (?<quoted_pair> \\\\ (?: (?&VCHAR) | (?&WSP) ) | (?&obs_qp) )\n    (?<dot_atom> (?&CFWS)? (?&dot_atom_text) (?&CFWS)? )\n    (?<dot_atom_text> (?&atext) (?: \\. (?&atext) )* )\n    (?<atext> [a-zA-Z0-9!#$%&'*+\\/=?^_`{|}~-]+ )\n    (?<atom> (?&CFWS)? (?&atext) (?&CFWS)? )\n    (?<word> (?&atom) | (?&quoted_string) )\n    (?<quoted_string> (?&CFWS)? \" (?: (?&FWS)? (?&qcontent) )* (?&FWS)? \" (?&CFWS)? )\n    (?<qcontent> (?&qtext) | (?&quoted_pair) )\n    (?<qtext> \\x21 | [\\x23-\\x5b] | [\\x5d-\\x7e] | (?&obs_qtext) )\n    # comments and whitespace\n    (?<FWS> (?: (?&WSP)* \\r\\n )? (?&WSP)+ | (?&obs_FWS) )\n    (?<CFWS> (?: (?&FWS)? (?&comment) )+ (?&FWS)? | (?&FWS) )\n    (?<comment> \\( (?: (?&FWS)? (?&ccontent) )* (?&FWS)? \\) )\n    (?<ccontent> (?&ctext) | (?&quoted_pair) | (?&comment) )\n    (?<ctext> [\\x21-\\x27] | [\\x2a-\\x5b] | [\\x5d-\\x7e] | (?&obs_ctext) )\n    # obsolete tokens\n    (?<obs_domain> (?&atom) (?: \\. (?&atom) )* )\n    (?<obs_local_part> (?&word) (?: \\. (?&word) )* )\n    (?<obs_dtext> (?&obs_NO_WS_CTL) | (?&quoted_pair) )\n    (?<obs_qp> \\\\ (?: \\x00 | (?&obs_NO_WS_CTL) | \\n | \\r ) )\n    (?<obs_FWS> (?&WSP)+ (?: \\r\\n (?&WSP)+ )* )\n    (?<obs_ctext> (?&obs_NO_WS_CTL) )\n    (?<obs_qtext> (?&obs_NO_WS_CTL) )\n    (?<obs_NO_WS_CTL> [\\x01-\\x08] | \\x0b | \\x0c | [\\x0e-\\x1f] | \\x7f )\n    # character class definitions\n    (?<VCHAR> [\\x21-\\x7E] )\n    (?<WSP> [ \\t] )\n)\n^(?&addr_spec)$", "permalinkFragment": "uA74wT", "isFavorite": false, "isStarred": false}, {"title": "Word Wrap examples", "description": "Four examples of word wrapping at the 80 character mark, each one taking fewer steps than the last.\n\nComment and uncomment lines with `#` to see the difference between versions. Optimization discussions welcome!", "dateCreated": "2017-07-27T00:53:04.000Z", "dateModified": "2023-10-11T15:14:19.000Z", "author": "OnlineCop", "flavor": "pcre2", "delimiter": "/", "flags": "gmx", "version": 2, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[#].*\\n*(*SKIP)(*F)|\n\n# Version 1 (substitution: '$1$2\\n'):\n# Match 1-80 characters, backtracking as necessary until whitespace or\n#  EOL is reached. If words > 80 characters (w/o whitespace) are found,\n#  no wrapping is performed on that word.\n# [1353 steps]\n\n#(.{1,80})(?:\\s|$)|(\\S{81,})(?:\\s|$)\n\n# Version 2 (substitution: '$1$2\\n'):\n# Same as Version 1 but with a negative look-ahead at the front to skip\n#  to the alternate branch sooner.\n# [773 steps]\n\n#(?!\\S{81})(.{1,80})(?:\\s|$)|(\\S{81,})(?:\\s|$)\n\n# Version 3 (substitution: '$1$2\\n'):\n# Same as Version 1 but alternations swapped.\n# [749 steps]\n\n#(\\S{81,})(?:\\s|$)|(.{1,80})(?:\\s|$)\n\n# Version 4 (substitution: '$1\\n'):\n# Combine alternations into one group.\n# [712 steps]\n\n(\\S{79,}|.{1,80})(?:\\s|$)\n", "permalinkFragment": "ligWK6", "isFavorite": false, "isStarred": false}, {"title": "Matching an Saudi Postal Code", "description": "Saudi Postal Code has five digits, if you would to have more information check the below:\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nFirst Digit (Postal Regions):\n*\"The postal region number is represented by the first digit of the postal code\"*\n\nThe kingdom is divided into 8 postal regions. The division was based on the country's administrative regions. The numbering of the postal regions differs from that of the administrative regions in the kingdom. The Postal Division was based on the consideration of road connectivity network and other geographical factors. The below table shows the list of Postal Regions in the country:\n1\tArriyadh Region\n2\tMakkah Region\n3\tEastern Provience Region\n4\tMadinah and Tabuk\n5\tQassim and Ha'il\n6\tAsir, Najran, and Bahah\n7\tNorthern Borders, and Jawf\n8\tJizan\n________________________________________________________________________________________\n\nSecond Digit (Postal Sectors):\n*\"The postal sector number is represented by the second digit of the postal code\"*\n\nEach postal region is divided into postal sectors (each region consists of maximum 8 sectors). Sectors are numbered starting from 2 to 9; number (1) is excluded for government and exceptional services usage.\nSectors are divided according to the following basis:\nThe center of the region, which is usually its capital, is assigned the first number of sector numbers.\nSectors to the south of the center are assigned even numbers.\nSectors to the north of the center are assigned odd numbers.\nUpon dividing sectors, the following was taken into consideration:\nThe borders of provinces' domains within any postal region.\nTerrain and geographical factors, such as: mountains, plains, valleys between provinces.\nEconomic costs resulting from providing postal and logistic services.\nPopulation distribution and density inside the sectors.\n________________________________________________________________________________________\n\nThird Digit (Postal Branches):\n*\"The postal branch number is represented by the third digit of the postal code\"*\n\nEach postal sector is divided into many postal branches, with maximum of 8 branches for each sector. Number (1) is excluded for governmental and exceptional services usage. Upon dividing branches, it was taken into consideration that their borders should be highways or main roads as much as possible. There are 3 distinct strategies when dividing Postal branches.\n________________________________________________________________________________________\n\nFourth Digit (Postal Divisions):\n*\"The postal division number is represented by the fourth digit of the postal code\"*\n\nPostal branches are divided into many divisions, each branch consists of maximum number of nine divisions. Divisions are almost equally divided.\nAreas of divisions may differ due to the following reasons:\n\n1)Geographical and terrain factors between postal divisions.\n2)Density of population in a given division.\n3)Divisions of any branch are divided according to main roads and streets, and interconnecting streets, according to street categories.\n4)Coding of postal divisions is based upon the nearest division to the axis of the division, where smaller numbers are assigned to postal divisions which are the closest to the axis lines. The numbers increase as we move far from the axis.\n________________________________________________________________________________________\n\nFifth Digit (Postal Squares):\n*\"The postal square number is represented by the fifth digit of the postal code\"*\n\nEach postal section is divided into squares. The area of each square should not be more than 4x4 km\u00b2. Squares were divided according on the following basis:\n\n1)Considering that no square should exceed 4x4 km\u00b2.\n2)Squares within low-density urban zones should be about 2x2 km\u00b2.\n3)Squares within high-density and populated urbban zones should be about 1x1 km\u00b2.\n4)Squares divisions are based on the network of main and side roads and streets, according to the nearest to the branch axis. The smallest number is assigned to square that are nearest to the axis. Square numbers increase ascendingly as we move far from the axis.\n________________________________________________________________________________________", "dateCreated": "2017-08-01T12:16:51.000Z", "dateModified": "2017-08-01T12:16:51.000Z", "author": "Fares Alarabi", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[A](([A-Z]|[0-9])?([A-Z]|[0-9])?([A-Z]|[0-9]))\\s[0-9][A-Z][A-Z]$", "permalinkFragment": "gePCbM", "isFavorite": false, "isStarred": false}, {"title": "Email matching with a grain of salt", "description": "Inspired by [Micheal Musson entry](https://regex101.com/library/gJ7pU0) Wich was hard to use in regex flavours that don't support recursion (C# engine doesn't) i've build my own simpler version wich matches what i would accept as validation entry", "dateCreated": "2017-08-03T09:12:56.000Z", "dateModified": "2017-08-03T09:12:56.000Z", "author": "Luigi Trabacchin", "flavor": "pcre", "delimiter": "/", "flags": "gmx", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\n(?<username>\n    (?:[a-zA-Z0-9\\{\\}_+][a-zA-Z0-9+\\.\\\\\\/_\\-\\{\\}~=]+[a-zA-Z0-9\\{\\}_+]) |\n    (?:\\\"(?:[a-zA-Z0-9\\\\\\/\\[\\]\\{\\}\\(\\)\\.,;~#_=@&<>+\\- ] | \\\\\\\")+\\\") |\n    (?:[a-zA-Z]+)\n)\n@\n(?<domain>\n    (?:[a-zA-Z0-9]+\\.?)+\\.(?:[a-zA-Z0-9]+)\n)\n$", "permalinkFragment": "qnxQB4", "isFavorite": false, "isStarred": false}, {"title": "Basic DOI", "description": "", "dateCreated": "2017-08-04T11:06:16.000Z", "dateModified": "2017-08-04T11:06:16.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "i", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "doi.+(10\\.\\d{4,6}\\/[^\\\"'&<% \\t\\n\\r\\f\\v]+)", "permalinkFragment": "n5efDg", "isFavorite": false, "isStarred": false}, {"title": "Contrase\u00f1a Fuerte", "description": "Valida que la contrase\u00f1a deba estar compuesta por una may\u00fascula, min\u00fascula y n\u00fameros con un rango de caracteres desde 8 hasta 16 d\u00edgitos.\n\n##  Ejemplo\n\nAropd123\nArgpd 123", "dateCreated": "2017-08-15T14:56:03.000Z", "dateModified": "2017-08-15T14:56:03.000Z", "author": "Nelson Wandurraga", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])\\S{8,16}$", "permalinkFragment": "QgC79H", "isFavorite": false, "isStarred": false}, {"title": "Unix ANSI escape codes", "description": "## Unix ANSI escape codes\n\nHi , in my Terminal project in want a method to find (Unix ANSI escape codes) and run  its command.\n\n**For More information :**\n[https://en.wikipedia.org/wiki/ANSI_escape_code](url)\n\n##  Sample Unix ANSI escape codes : \n\n\\u001b7      \\u001b8    \\u001bH     \\u001b>\n\n\\u001b[K    \\u001b[0K   \\u001b[J    \\u001b[2J \n\\u001b[10A  \\u001b[10B  \\u001b[10C  \\u001b[10D  \\u001b[10E  \\u001b[10F\n\\u001b[10S  \\u001b[10T  \\u001b[10G  \\u001b[8C   \\u001b[s    \\u001b[u  \\u001b[1000D22\n\\u001b[999;999H   \\u001b[1;1H  \\u001b[1;1f  \\u001b[1;24r\n\n\\u001b[6n    \\u001b[5i    \\u001b[4i    \\u001b[3g\n\n\\u001b[?7h   \\u001b[?25h  \\u001b[?25l    \n\n\\u001b[0m\n\\u001b[31m         \\u001b[41m\n\\u001b[1m  \\u001b[4m   \\u001b[5m   \\u001b[7m    \\u001b[8m\n\\u001b[31;1m       \\u001b[41;1m\n\\u001b[38;5;255m   \\u001b[48;5;255m", "dateCreated": "2017-08-19T23:16:46.000Z", "dateModified": "2017-08-19T23:16:46.000Z", "author": "Shahin Pendar  ,   shahinpendar@gmail.com", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\\\u001b)(8|7|H|>|\\[(\\?\\d+(h|l)|[0-2]?(K|J)|\\d*(A|B|C|D\\D|E|F|G|g|i|m|n|S|s|T|u)|1000D\\d+|\\d*;\\d*(f|H|r|m)|\\d+;\\d+;\\d+m))", "permalinkFragment": "Yap6bJ", "isFavorite": false, "isStarred": false}, {"title": "Check list of integers numbers separated by comma ", "description": "Check list of integers numbers separated by comma \n\nEx:\n   \"1, 2, 4, 6\"   >> OK\n   \"99\"  >> OK\n   \"a, b, c\" >> WRONG\n   \"3.14, 4\" >> WRONG", "dateCreated": "2017-09-03T22:06:13.000Z", "dateModified": "2017-09-03T22:06:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s*[0-9]+(,\\s*[0-9])*$", "permalinkFragment": "AAWfJg", "isFavorite": false, "isStarred": false}, {"title": "French Phone Number Validation", "description": "Accept several kind of format, more or less usual. And refuse incorrect formats.\n - Prefix: 0033 / +33 / (0) / 0\n - Number:  collapsed / group by 2 / group by 3\n - Separator: space / dot / dash", "dateCreated": "2017-09-10T00:42:36.000Z", "dateModified": "2017-09-10T00:42:36.000Z", "author": "RonanKER", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:(?:\\+|00)33[\\s.-]{0,3}(?:\\(0\\)[\\s.-]{0,3})?|0)[1-9](?:(?:[\\s.-]?\\d{2}){4}|\\d{2}(?:[\\s.-]?\\d{3}){2})$", "permalinkFragment": "GmDIbg", "isFavorite": false, "isStarred": false}, {"title": "Validate and decompose email address (English alphabet compliant)", "description": "If you understand the regexp, you can adjust it to your need.\n- restrict special characters to .%_'- (localpart)\n- limit length of each part and the whole to reasonable size\n- supports 'XN' tld\nIf you need help, read http://www.regular-expressions.info/email.html\nSee also https://www.debuggex.com/r/9cdaawcFKf-j95on\n", "dateCreated": "2017-09-09T22:22:42.000Z", "dateModified": "2017-09-09T22:22:42.000Z", "author": "RonanKER", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?=[A-Z0-9][0-9a-z.%_'+@-]{2,253}$)(?'localpart'(?'mailbox'[0-9a-zA-Z.%_'-]{1,250})(?:\\+(?'tag'[0-9a-zA-Z._'-]{1,250}))?)@(?'networkpart'(?:(?'fqdn'(?'domain'(?:[0-9a-zA-Z-]{1,63}\\.){0,8}[0-9a-zA-Z-]{1,63})\\.(?'tld'(?:[a-zA-Z]{2,16}|[xX][nN]--[a-zA-Z]{4,18}(?:-[a-zA-Z]{3})?)))|(?'hostname'[0-9a-zA-Z_'-]{1,250})))$", "permalinkFragment": "nw3Qtd", "isFavorite": false, "isStarred": false}, {"title": "Capture the last space in a line of text with Negative Lookback", "description": "Looks for the last single space in a line of text.", "dateCreated": "2017-09-14T14:41:35.000Z", "dateModified": "2017-09-14T14:41:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<!\\s)(\\s)(?:\\S+?)(?:\\r\\n?|\\n|\\z)", "permalinkFragment": "wysOEY", "isFavorite": false, "isStarred": false}, {"title": "Acts", "description": "Extract Act names from statements", "dateCreated": "2017-09-15T06:20:13.000Z", "dateModified": "2017-09-15T06:20:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[[a-zA-Z,0-9()]+Act[a-zA-Z,0-9()]+\\]", "permalinkFragment": "10vAJX", "isFavorite": false, "isStarred": false}, {"title": "Euro prices with steps of 5000 (e.g 5.000, 10.000 - 255.000)", "description": "To validate a price of 5.000 and steps of 5.000 thereafter. (e.g 5.000, 10.000, 15.000 etc) including a euro sign.\n\nIf anyone has any improvements let me know, this is what i just came up with to solve a problem i have on WordPress Contact Form 7.", "dateCreated": "2017-09-18T14:14:20.000Z", "dateModified": "2017-09-18T14:14:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[\u20ac]\\s(1?[5]000|[1-9]{1}[5,0]{1,3}([0]{3,10}))$", "permalinkFragment": "PvqlES", "isFavorite": false, "isStarred": false}, {"title": "Ansible Rendered Configs from STDOUT", "description": "Ansible Rendered Configs from STDOUT", "dateCreated": "2017-09-20T15:06:25.000Z", "dateModified": "2017-09-20T15:06:25.000Z", "author": "gmaddock", "flavor": "pcre", "delimiter": "/", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(?:ok|changed|fatal): \\[)([A-Za-z0-9-.]+)(?:\\]) => {\\s+\"msg\": \\[(.*?)\\]\\s+}", "permalinkFragment": "T7NUhP", "isFavorite": false, "isStarred": false}, {"title": "email address", "description": "", "dateCreated": "2017-11-10T03:44:05.000Z", "dateModified": "2017-11-10T03:44:05.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,4})$)", "permalinkFragment": "6I3M8b", "isFavorite": false, "isStarred": false}, {"title": "RFC 3986 URI Validation", "description": "", "dateCreated": "2017-09-25T14:14:23.000Z", "dateModified": "2017-09-25T14:14:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "igmX", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?#URI)^(?#\n    Scheme  )(?<Scheme>[a-z][a-z0-9\\+\\-\\.]*):(?#\n    HeirPart)(?<HierPart>\\/\\/(?#\n        Authority)(?<Authority>(?#\n            UserInfo)((?<UserInfo>(\\%[0-9a-f][0-9a-f]|[a-z0-9\\-\\.\\_\\~]|[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]|\\:)*)\\@)?(?#\n            Host    )(?<Host>(?#\n                IP Literal)\\[((?#\n                    IPv6 Address     )(?<IPv6>((?<IPv6_1_R_H16>[0-9a-f]{1,4})\\:){6,6}(?<IPV6_1_R_LS32>((?<IPV6_1_R_LS32_IPV4_DEC_OCTET>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3,3}(?<IPV6_1_R_LS32_IPV4_DEC_OCTET_>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(?<IPV6_1_R_LS32_H16_1>[0-9a-f]{1,4})\\:(?<IPV6_1_R_LS32_H16_2>[0-9a-f]{1,4}))|\\:\\:((?<IPV6_2_R_H16>[0-9a-f]{1,4})\\:){5,5}(?<IPV6_2_R_LS32>((?<IPV6_2_R_LS32_IPV4_DEC_OCTET>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3,3}(?<IPV6_2_R_LS32_IPV4_DEC_OCTET_>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(?<IPV6_2_R_LS32_H16_1>[0-9a-f]{1,4})\\:(?<IPV6_2_R_LS32_H16_2>[0-9a-f]{1,4}))|(?<IPV6_3_L_H16>[0-9a-f]{1,4})?\\:\\:((?<IPV6_3_R_H16>[0-9a-f]{1,4})\\:){4,4}(?<IPV6_3_R_LS32>((?<IPV6_3_R_LS32_IPV4_DEC_OCTET>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3,3}(?<IPV6_3_R_LS32_IPV4_DEC_OCTET_>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(?<IPV6_3_R_LS32_H16_1>[0-9a-f]{1,4})\\:(?<IPV6_3_R_LS32_H16_2>[0-9a-f]{1,4}))|(((?<IPV6_4_L_H16_REPEAT>[0-9a-f]{1,4})\\:)?(?<IPV6_4_L_H16>[0-9a-f]{1,4}))?\\:\\:((?<IPV6_4_R_H16>[0-9a-f]{1,4})\\:){3,3}(?<IPV6_4_R_LS32>((?<IPV6_4_R_LS32_IPV4_DEC_OCTET>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3,3}(?<IPV6_4_R_LS32_IPV4_DEC_OCTET_>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(?<IPV6_4_R_LS32_H16_1>[0-9a-f]{1,4})\\:(?<IPV6_4_R_LS32_H16_2>[0-9a-f]{1,4}))|(((?<IPV6_5_L_H16_REPEAT>[0-9a-f]{1,4})\\:){0,2}(?<IPV6_5_L_H16>[0-9a-f]{1,4}))?\\:\\:((?<IPV6_5_R_H16>[0-9a-f]{1,4})\\:){2,2}(?<IPV6_5_R_LS32>((?<IPV6_5_R_LS32_IPV4_DEC_OCTET>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3,3}(?<IPV6_5_R_LS32_IPV4_DEC_OCTET_>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(?<IPV6_5_R_LS32_H16_1>[0-9a-f]{1,4})\\:(?<IPV6_5_R_LS32_H16_2>[0-9a-f]{1,4}))|(((?<IPV6_6_L_H16_REPEAT>[0-9a-f]{1,4})\\:){0,3}(?<IPV6_6_L_H16>[0-9a-f]{1,4}))?\\:\\:(?<IPV6_6_R_H16>[0-9a-f]{1,4})\\:(?<IPV6_6_R_LS32>((?<IPV6_6_R_LS32_IPV4_DEC_OCTET>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3,3}(?<IPV6_6_R_LS32_IPV4_DEC_OCTET_>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(?<IPV6_6_R_LS32_H16_1>[0-9a-f]{1,4})\\:(?<IPV6_6_R_LS32_H16_2>[0-9a-f]{1,4}))|(((?<IPV6_7_L_H16_REPEAT>[0-9a-f]{1,4})\\:){0,4}(?<IPV6_7_L_H16>[0-9a-f]{1,4}))?\\:\\:(?<IPV6_7_R_LS32>((?<IPV6_7_R_LS32_IPV4_DEC_OCTET>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3,3}(?<IPV6_7_R_LS32_IPV4_DEC_OCTET_>[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(?<IPV6_7_R_LS32_H16_1>[0-9a-f]{1,4})\\:(?<IPV6_7_R_LS32_H16_2>[0-9a-f]{1,4}))|(((?<IPV6_8_L_H16_REPEAT>[0-9a-f]{1,4})\\:){0,5}(?<IPV6_8_L_H16>[0-9a-f]{1,4}))?\\:\\:(?<IPV6_8_R_H16>[0-9a-f]{1,4})|(((?<IPV6_9_L_H16_REPEAT>[0-9a-f]{1,4})\\:){0,6}(?<IPV6_9_L_H16>[0-9a-f]{1,4}))?\\:\\:)|(?#\n                    IPvFuture Address)v[a-f0-9]+\\.([a-z0-9\\-\\.\\_\\~]|[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]|\\:)+(?#\n                ))\\]|(?#\n                IPv4 Address)(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3,3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(?#\n                RegName)([a-z0-9\\-\\.\\_\\~]|\\%[0-9a-f][0-9a-f]|[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=])*(?#\n            ))(?#\n            Port    )(:(?<Port>[0-9]+))?(?#\n        ))(?#\n        Path     )(?<Path>(\\/([a-z0-9\\-\\.\\_\\~\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\:\\@]|(%[a-f0-9]{2,2}))*)*)(?#\n    ))(?#\n    Query   )(?<Query>\\?([a-z0-9\\-\\.\\_\\~\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\:\\@\\/\\?]|(%[a-f0-9]{2,2}))*)?(?#\n    Fragment)(?<Fragment>#([a-z0-9\\-\\.\\_\\~\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\:\\@\\/\\?]|(%[a-f0-9]{2,2}))*)?(?#\n)$", "permalinkFragment": "BGxJ6n", "isFavorite": false, "isStarred": false}, {"title": "SVC Branch Naming", "description": "Branch naming regex that's suitable for Gitlab issues.\n\nGIT SVN MERCURIAL MG", "dateCreated": "2017-10-09T22:45:49.000Z", "dateModified": "2017-10-09T22:45:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^master$|^\\d+(?:(?:\\.\\d+)+|(?:\\-[A-z]+))+$", "permalinkFragment": "ONGafy", "isFavorite": false, "isStarred": false}, {"title": "Simple expression to create information groups", "description": "0 = not an authorized dealership for the respective brand\n1 = authorized dealership for the respective brand", "dateCreated": "2019-11-26T14:28:51.000Z", "dateModified": "2019-11-26T14:28:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<company>.+)\\Wzkx\\s(?P<address>.+)\\Wxkz\\s(?P<zip>.+\\D)\\W(?P<aprilia>\\d)\\W(?P<arcticcat>\\d)\t(?P<bmwmotos>\\d)\\W(?P<canam>\\d)\\W(?P<derbi>\\d)\\W(?P<ducati>\\d)\\W(?P<harleydavidson>\\d)\\W(?P<hondamotos>\\d)\\W(?P<husqvarna>\\d)\\W(?P<kawasaki>\\d)\\W(?P<keeway>\\d)\\W(?P<ktm>\\d)\\W(?P<kymco>\\d)\\W(?P<motoguzzi>\\d)\\W(?P<mvagusta>\\d)\\W(?P<peugeotmotos>\\d)\\W(?P<piaggio>\\d)\\W(?P<polaris>\\d)\\W(?P<suzukimotos>\\d)\\W(?P<sym>\\d)\\W(?P<triumph>\\d)\\W(?P<vespa>\\d)\\W(?P<victory>\\d)\\W(?P<yamaha>\\d)\\W(?P<othermotos>\\d)", "permalinkFragment": "mJsxh7", "isFavorite": false, "isStarred": false}, {"title": "No trailing spaces or extra spaces max char 200 min 2 and hyphen and & only allowed", "description": "No trailing spaces or extra spaces max char 200 min 2 and hyphen and & only allowed", "dateCreated": "2022-01-21T14:50:38.000Z", "dateModified": "2022-01-21T14:50:38.000Z", "author": "Natalia zolotareva", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?!.* {2})(?=\\S)(?=.*\\S$)[a-zA-Z0-9- &]{2,100}$", "permalinkFragment": "Wgdw4t", "isFavorite": false, "isStarred": false}, {"title": "NEW YAHOO ", "description": "This pattern will match everything directly below your yahoo REPLACE section and non of the good cases above:\n^yahoo\\.com?(?:(?!\\.[a-z]{2}).)*(?:.com?)?$\n\nIE you do not want to include yahoo.fr or yahoo.com.fr or yahoo.co.uk", "dateCreated": "2017-11-24T16:10:19.000Z", "dateModified": "2017-11-24T16:10:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^yahoo\\.com?(?:(?!\\.[a-z]{2}).)*(?:.com?)?$\n", "permalinkFragment": "3Ht96f", "isFavorite": false, "isStarred": false}, {"title": "Matches all subdomains excluding www", "description": "Matches all subdomains (specifically in group 2) excluding www", "dateCreated": "2017-12-06T06:54:40.000Z", "dateModified": "2017-12-06T06:54:40.000Z", "author": "AurielleP", "flavor": "javascript", "delimiter": "/", "flags": "ig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(www\\.))|(?:(?:^https:\\/\\/www\\.)|(?:^https:\\/\\/)?)([\\w]+){1}(?:\\.[\\w]+){2,}", "permalinkFragment": "cQOKCH", "isFavorite": false, "isStarred": false}, {"title": "Replace text between double curly braces", "description": "", "dateCreated": "2017-12-08T19:10:17.000Z", "dateModified": "2017-12-08T19:10:17.000Z", "author": "TonyM (g33ktony)", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^{\\}]+(?=})", "permalinkFragment": "41hsQz", "isFavorite": false, "isStarred": false}, {"title": "Require string of length Ignoring HTML", "description": "checks for a continuous string of characters (in this case 7) , but ignores HTML tags\n\nwe use it in a required feild validator that has auto generated formatting elements", "dateCreated": "2017-12-27T14:48:44.000Z", "dateModified": "2017-12-27T14:48:44.000Z", "author": "Doom87er", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?![^<]*?>)\\b[\\w\\h]{7,})", "permalinkFragment": "eGlQBs", "isFavorite": false, "isStarred": false}, {"title": "color-price-count", "description": "", "dateCreated": "2017-12-19T00:30:49.000Z", "dateModified": "2017-12-19T00:30:49.000Z", "author": "By me", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([a-z\\d\\#]+)-([\\d]+)-([\\d]+)", "permalinkFragment": "QCkCr5", "isFavorite": false, "isStarred": false}, {"title": "Match text inside of single/double quotes, mysql identifier tokens(`)(ignore escaped nested quotes)", "description": "Verbose, somewhat cryptic and very efficient pattern to match all text inside of quotes and MySQL identifier tokens. ", "dateCreated": "2018-01-08T23:29:39.000Z", "dateModified": "2018-01-08T23:29:39.000Z", "author": "Phillip Weber", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\"'`](?:(?<=\")[^\"\\\\]*(?s:\\\\.[^\"\\\\]*)*\"|(?<=')[^'\\\\]*(?s:\\\\.[^'\\\\]*)*'|[^`]*`)", "permalinkFragment": "H4xgxh", "isFavorite": false, "isStarred": false}, {"title": "Telephone numbers from Ireland", "description": "Validate phone numbers from Ireland", "dateCreated": "2018-01-10T12:50:53.000Z", "dateModified": "2018-01-10T12:50:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(0[124-9]\\d{0,2})\\d{7}$", "permalinkFragment": "7EivGQ", "isFavorite": false, "isStarred": false}, {"title": "Telephone numbers from Colombia", "description": "", "dateCreated": "2018-01-10T12:52:19.000Z", "dateModified": "2018-01-10T12:52:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "0?^((([4579]\\d{0,2})?[124-8][2-8])|(3\\d{3}))(\\d{6})$", "permalinkFragment": "0scpnx", "isFavorite": false, "isStarred": false}, {"title": "Telephone numbers from Spain", "description": "", "dateCreated": "2018-01-10T12:53:20.000Z", "dateModified": "2018-01-10T12:53:20.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[6-7][0-9]{8,8}$)|(^9(0{2}|([1-9][0-9]))[0-9]{6}$)|(^8[1-9][0-9]{7,7}$)", "permalinkFragment": "f7FCCk", "isFavorite": false, "isStarred": false}, {"title": "teysy", "description": "kljljljjlkjl", "dateCreated": "2018-01-12T10:24:20.000Z", "dateModified": "2018-01-12T10:24:20.000Z", "author": "nww", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "1", "permalinkFragment": "UWaP6w", "isFavorite": false, "isStarred": false}, {"title": "find widget.method name", "description": "", "dateCreated": "2018-02-06T06:39:27.000Z", "dateModified": "2018-02-06T06:39:27.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "widget\\.method[\\s]*\\([\\s]*[\\'\\\"]([\\w]*)[\\'\\\"]", "permalinkFragment": "oMFNjf", "isFavorite": false, "isStarred": false}, {"title": "No Tag in URL RegEx", "description": "", "dateCreated": "2018-02-09T12:23:51.000Z", "dateModified": "2018-02-09T12:23:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(.*)[<]+(?'start'.*)[>]+(.*)[<]+[\\/]+(\\k'start')[>]+(.*)$|^(.*)[<]+(.*)|[\\/]+[>]+(.*)$", "permalinkFragment": "SESng7", "isFavorite": false, "isStarred": false}, {"title": "Microsoft Forward Header Matcher", "description": "", "dateCreated": "2018-03-01T08:26:02.000Z", "dateModified": "2018-03-01T08:26:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(From:[^<\\n\\r]*<[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-.]+>)\\n(Sent:[\\r\\s](Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday),[\\r\\s\\S]*(AM|PM))\\n(To:[\\s]*[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-.]+)\\n(Cc:[^\\r\\n]*[\\r\\n])?(Subject:[\\s]*[^\\n\\r]*[\\n\\r])", "permalinkFragment": "txWzh3", "isFavorite": false, "isStarred": false}, {"title": "Quotes", "description": "Matches everything between *''* or *\"\"*, but not between  quotation marks of different types.\n\n# (?:\\\")(.*?)(?:\\\")|(?:')(.*?)(?:')", "dateCreated": "2018-02-28T14:13:15.000Z", "dateModified": "2018-02-28T14:13:15.000Z", "author": "maffei2443", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:\\\")(.*?)(?:\\\")|(?:')(.*?)(?:')", "permalinkFragment": "ylIUW9", "isFavorite": false, "isStarred": false}, {"title": "CBC-FixFlex-CisloZmluvy", "description": "", "dateCreated": "2018-02-28T23:36:27.000Z", "dateModified": "2018-02-28T23:36:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "F ?F?  ?\\d ?\\d ?\\d ?- ?\\d ?\\d ?- ?\\d ? ?\\d ?\\d", "permalinkFragment": "Ge7ZZE", "isFavorite": false, "isStarred": false}, {"title": "TeamAlert domenenavn", "description": "", "dateCreated": "2018-03-01T08:39:36.000Z", "dateModified": "2018-03-01T08:39:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-z0-9-]{3,32}$", "permalinkFragment": "X0orzn", "isFavorite": false, "isStarred": false}, {"title": "TeamAlert domenenavn", "description": "", "dateCreated": "2018-03-01T08:46:00.000Z", "dateModified": "2018-03-01T08:46:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-z0-9-]{3,32}$", "permalinkFragment": "nsG9yD", "isFavorite": false, "isStarred": false}, {"title": "extractor_RD_RT_Cisco", "description": "", "dateCreated": "2018-03-01T13:25:30.000Z", "dateModified": "2018-03-01T13:25:30.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([A-Z0-9-_]+).txt:\\s?\\s?([A-Z0-9-_:]+)\\s+(\\d+:\\d+)|([A-Z0-9-_]+).txt:\\s+(\\w{6})\\s+(\\d+:\\d+)", "permalinkFragment": "f0VVic", "isFavorite": false, "isStarred": false}, {"title": "FireEye Sandbox IPs", "description": "FireEye Sandbox IPs", "dateCreated": "2018-03-02T16:10:46.000Z", "dateModified": "2018-03-02T16:10:46.000Z", "author": "Robert Nixon", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^199\\.16\\.(196|197|198|199)\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])", "permalinkFragment": "ruW4fn", "isFavorite": false, "isStarred": false}, {"title": "RFC 1918 Address Space", "description": "", "dateCreated": "2018-03-02T16:13:41.000Z", "dateModified": "2018-03-02T16:13:41.000Z", "author": "Robert Nixon", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(10(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{1,2}|[0-9]{1,2})){3}|((172\\.(1[6-9]|2[0-9]|3[01]))|192\\.168)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{1,2}|[0-9]{1,2})){2})", "permalinkFragment": "pFO18T", "isFavorite": false, "isStarred": false}, {"title": "Stripping tags from ajax response", "description": "With this regex, is possible to strip som parts of response", "dateCreated": "2018-03-02T17:05:48.000Z", "dateModified": "2018-03-02T17:05:48.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<!-- AppInternalsXpert BMX Integration Begin -->(.*[\\s\\S]*)<!-- AppInternalsXpert BMX Integration End -->", "permalinkFragment": "Ed67sB", "isFavorite": false, "isStarred": false}, {"title": "Velocidade De Banda", "description": "", "dateCreated": "2018-03-02T20:04:58.000Z", "dateModified": "2018-03-02T20:04:58.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([<>=!]?)\\s?((?:\\d*\\.)?\\d+)\\s?(.*)$", "permalinkFragment": "84BAVE", "isFavorite": false, "isStarred": false}, {"title": "Full amount, with comma, 2 decimal places", "description": "Valid:\n0.00\n123.12\n123,123,123.12\n123,123,123,123.00\n\nInvalid:\n12,1234,123.12\n1234,123.12", "dateCreated": "2018-03-16T04:02:08.000Z", "dateModified": "2018-03-16T04:02:08.000Z", "author": "Benji W J YANG", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[0-9]{1,3}((\\,[0-9]{3})*)\\.[0-9]{2}$", "permalinkFragment": "hLGen9", "isFavorite": false, "isStarred": false}, {"title": "Percentage with 2 decimal places", "description": "Valid:\n+100.00%\n-100.00%\n+2.00%\n-22.00%\n+2.99%\n\n\ninvalid:\n100.00%\n-02.00%\n-110.00%\n-200.00%", "dateCreated": "2018-03-16T03:59:16.000Z", "dateModified": "2018-03-16T03:59:16.000Z", "author": "Benji W J YANG", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[1][0][0]\\.[0]{2}\\%|[1-9]?[0-9]\\.[0-9]{2}\\%$", "permalinkFragment": "0Sy09i", "isFavorite": false, "isStarred": false}, {"title": "Email Verification", "description": "valid:\nbenji_yang@basic.cn\nbenji.yang@roolbox.com\nbenji-yang@gmail.org\n\ninvalid:\n@gmail.com\n1@.com", "dateCreated": "2018-03-03T05:46:09.000Z", "dateModified": "2018-03-03T05:46:09.000Z", "author": "Benji W J YANG", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\w([.-]?))+\\@\\w+\\.\\w+", "permalinkFragment": "ZdSX5A", "isFavorite": false, "isStarred": false}, {"title": "Shared folder | shared folder ip | local folder", "description": "", "dateCreated": "2018-03-05T10:08:17.000Z", "dateModified": "2018-03-05T10:08:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((\\\\)(\\\\[A-Za-z0-9-_]+){2,}(\\\\?))|([a-zA-Z]:\\\\(\\w+\\\\)*\\w*)|(((\\\\\\\\)((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])))((\\\\)?)(\\\\?[A-Za-z0-9-_]+)*(\\\\?))$", "permalinkFragment": "nSd2ZI", "isFavorite": false, "isStarred": false}, {"title": "Very basic mail check regex", "description": "", "dateCreated": "2018-03-05T10:31:36.000Z", "dateModified": "2018-03-05T10:31:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[a-z0-9]+[.]?[a-z0-9_]+@[a-z0-9]+\\.[a-z]+[.]?[a-z]+", "permalinkFragment": "4slrAJ", "isFavorite": false, "isStarred": false}, {"title": "Locale ICU validator", "description": "Regexp to match against a [icu locale string](http://userguide.icu-project.org/locale)", "dateCreated": "2018-03-05T16:31:30.000Z", "dateModified": "2018-03-05T16:31:30.000Z", "author": "Sylvain Combes", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-zA-Z]{2,3})(([\\-\\_][a-zA-Z]{4})+)?([\\-\\_][a-zA-Z]{2})?([\\-\\_][a-zA-Z]*)?(@(collation|calendar|currency|numbers)\\=[a-zA-Z]*[;]?((collation|calendar|currency|numbers)\\=[a-zA-Z\\-\\_]*[;]?)*)?", "permalinkFragment": "myCNFz", "isFavorite": false, "isStarred": false}, {"title": "flush done", "description": "", "dateCreated": "2018-03-06T00:22:17.000Z", "dateModified": "2018-03-06T00:22:17.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2} \\S+ \\(\\S+\\) - flush done sketch={flushed=(\\d+) total=(\\d+) pruned=(\\d+)} num_org_metric=\\d+ since_ms=(\\d+)ms dt=[-+]?([0-9]*(\\.[0-9]*)?[a-z]+)+", "permalinkFragment": "0iwpiD", "isFavorite": false, "isStarred": false}, {"title": "CMSC320 NASA Dirty Table Regex", "description": "https://cdaw.gsfc.nasa.gov/CME_list/radio/waves_type2.html", "dateCreated": "2018-03-06T03:14:19.000Z", "dateModified": "2018-03-06T03:14:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\d]{4}\\/\\d\\d\\/\\d\\d\\s\\d\\d:\\d\\d\\s\\d\\d\\/\\d\\d\\s\\d\\d:\\d\\d\\s+(\\d+|\\?+)\\s+(\\d+|\\?+)\\s+[\\w\\?-]+\\s+[\\w\\?-]+\\s+[\\w\\.-]+\\s+[\\d-]+\\/[\\d-]+\\s+[\\d-]+:[\\d-]+\\s+[\\w-]+\\s+[\\w\\d->]+\\s+[\\d-]+\\s+PHTX)", "permalinkFragment": "E3zU14", "isFavorite": false, "isStarred": false}, {"title": "Mail TIGF", "description": "", "dateCreated": "2018-03-06T15:49:47.000Z", "dateModified": "2018-03-06T15:49:47.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-z0-9_+-]+(?:\\.[a-z0-9_+-]+)*@[a-z0-9_-]+(?:\\.[a-z0-9_-]+)*\\.[a-z]{2,}$", "permalinkFragment": "8BUUTy", "isFavorite": false, "isStarred": false}, {"title": "Url include with negative lookbehind", "description": "", "dateCreated": "2018-03-07T13:45:32.000Z", "dateModified": "2018-03-07T13:45:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/(online%20shop|store|boutique%20en%20ligne)\\/[a-z%0-9]*\\/((?![a-z]+))", "permalinkFragment": "Jo10IX", "isFavorite": false, "isStarred": false}, {"title": "Match on Valid IP", "description": "Match on VALID IP address anywhere in string.", "dateCreated": "2018-04-05T13:37:40.000Z", "dateModified": "2018-04-05T13:37:40.000Z", "author": "KyleV", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b(?:(?:25[0-5]|2[0-4][0-9]|1?[1-9][0-9]?|10[0-9])(?:(?<!\\.)\\b|\\.))(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:(?<!\\.)\\b|\\.)){3}", "permalinkFragment": "8uZnvA", "isFavorite": false, "isStarred": false}, {"title": "Match on phone number in any standard format", "description": "Match on a phone number in ANY standard phone number format.", "dateCreated": "2018-04-05T13:40:16.000Z", "dateModified": "2018-04-05T13:40:16.000Z", "author": "KyleV", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\+\\d{1})?[\\s.-]?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s-.]?\\d{4}", "permalinkFragment": "CaCb8q", "isFavorite": false, "isStarred": false}, {"title": "SIREN", "description": "SIREN for french business register number", "dateCreated": "2018-04-05T15:50:28.000Z", "dateModified": "2018-04-05T15:50:28.000Z", "author": "Maxime", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{9}|\\d{3}[ ]\\d{3}[ ]\\d{3})", "permalinkFragment": "SFE2up", "isFavorite": false, "isStarred": false}, {"title": "SIRET", "description": "Business register number for France SIRET", "dateCreated": "2018-04-05T15:58:31.000Z", "dateModified": "2018-04-05T15:58:31.000Z", "author": "Maxime", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d{14}", "permalinkFragment": "MIAeFw", "isFavorite": false, "isStarred": false}, {"title": "RNA", "description": "French association register number RNA", "dateCreated": "2018-04-05T15:59:07.000Z", "dateModified": "2018-04-05T15:59:07.000Z", "author": "Maxime", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Z]\\d{9}", "permalinkFragment": "MNI2np", "isFavorite": false, "isStarred": false}, {"title": "Simple JSON Regex Groups for Parsing JSON", "description": "I figured this would be the simplest way to Parse JSON. We have some known information about the properties to help determine the type at runtime.\n- Properties - Immediately followed by `:` characters\n- Values - Have a bracket `}` `]` or a `,` directly after it in the regex return.\n- Strings - They are surrounded by `\" \"` and also **can't** adhere to `Properties` requirements.\n- Numbers - They have no `\" \"` surrounding them and only contain characters [0-9].  **Can't** adhere to `Properties` requirements.\n- Boolean  - They have no `\" \"` surrounding them and only contain values `\"true\"` or `\"false\"`.  **Can't** adhere to `Properties` requirements.\n- Null  - They have no `\" \"` surrounding them and only contain values `\"null\"`.  **Can't** adhere to `Properties` requirements.\n- JSON Object - Has a `{` bracket following the `:` character.\n- Array - Has a `[` bracket following the `:` character.", "dateCreated": "2020-06-04T21:13:08.000Z", "dateModified": "2020-06-04T21:13:08.000Z", "author": "Dajeki", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[:,\\{\\}\\[\\]]|(\\\".*?\\\")|('.*?')|[-\\w.]+", "permalinkFragment": "vKRCCa", "isFavorite": false, "isStarred": false}, {"title": "Any decimal numbers (floats, integers, with \".\" and \",\" with e)", "description": "# Matches:\n- integers   [+-]?\\d+([Ee][+-]?\\d+)? like +45 or 96E-3 or -12e+24\n- floats starting from \".\" or \",\" like  -.45e-3\n- floats starting from \\d like 3.14 or -0.67E12", "dateCreated": "2020-06-09T17:12:51.000Z", "dateModified": "2020-06-09T17:12:51.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(([-+])?[.,]\\b(\\d+)(?:[Ee]([+-])?(\\d+)?)?\\b)|(?:([+-])?\\b(\\d+)(?:[.,]?(\\d+))?(?:[Ee]([+-])?(\\d+)?)?\\b)", "permalinkFragment": "P8zN4K", "isFavorite": false, "isStarred": false}, {"title": "Simple, universal and short regex to find quoted strings. Invalid quotes inside string ignored. flag s (single-line) allows to find multiline strings", "description": "- 'string in simple quotes'\n- \"in double-quotes\"\n- `in back-quotes`\n- \"Works good with symbols ' or \" or ` inside the string\"\n- \"All another type quotes \"'` inside string are ignored\" use something like \\` or  \\\" or \\'\n- \" Matches only identical quotes on string start and end ' // regex can`t find this\n- group 1 saves quote symbol\n- group 2 saves clear text\n# Valid strings\n\n- \"Something something something something\"\n- 'Something something something something'\n- `Something something something something`\n- \"Something something        ' `       something something\"\n- 'Something something         \" `      something something'\n- `Something something         \" '      something something`\n- \"Something something        \\\"       something something\"\n- 'Something something         \\'      something something'\n- `Something something         \\`     something something`\n- `Something something         \\\\     something something`", "dateCreated": "2020-06-09T17:52:33.000Z", "dateModified": "2020-06-09T17:52:33.000Z", "author": "V. Martian", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\'\\\"\\`])(.*)\\1", "permalinkFragment": "09m677", "isFavorite": false, "isStarred": false}, {"title": "Traefik stripprefixregex for web apps", "description": "Notes:\n- Do not forget to escape the `$` by an additional `$`.\n- Escaping `?` like `\\?` does not work. But you could use `[?]` instead\n\nEnd result should be like this:\n```\n- \"traefik.http.middlewares.r6tt-dev-web.stripprefixregex.regex=^/[a-z0-9/]+[^.][a-z0-9]+([?]+.*)?$$\"\n```", "dateCreated": "2020-07-17T12:03:16.000Z", "dateModified": "2020-07-17T12:03:16.000Z", "author": "", "flavor": "golang", "delimiter": "`", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^/[a-z0-9/]+[^.][a-z0-9]+([?]+.*)?$", "permalinkFragment": "brnHzs", "isFavorite": false, "isStarred": false}, {"title": "Last Occurrence of comma(,) in a string", "description": "Used this to dynamically create placeholder text when a user changed the coordinates format from default to custom. ex ['DD', 'DDM', 'DMS'] to remove the comma from the string. The format comes from an array of strings so I had to do a join(', ').replace(/\\,(?=[^,]*$)/g, ' or') to get DD, DDM or DMS", "dateCreated": "2020-06-27T05:49:04.000Z", "dateModified": "2020-06-27T05:49:04.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\,(?=[^,]*$)", "permalinkFragment": "4v3i8E", "isFavorite": false, "isStarred": false}, {"title": "map json", "description": "", "dateCreated": "2020-06-30T09:17:19.000Z", "dateModified": "2020-06-30T09:17:19.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\\\r\\\\n{1,}", "permalinkFragment": "460836", "isFavorite": false, "isStarred": false}, {"title": "part 1", "description": "", "dateCreated": "2020-06-30T11:40:00.000Z", "dateModified": "2020-06-30T11:40:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[^a-zA-Z0-9 -._]+", "permalinkFragment": "1JwA47", "isFavorite": false, "isStarred": false}, {"title": "day date time", "description": "", "dateCreated": "2020-06-30T15:03:30.000Z", "dateModified": "2020-06-30T15:03:30.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\bSent:\\t)(\\w*)(, )(\\w* \\d*, \\d*)( )(\\d*:\\d* \\D\\D)", "permalinkFragment": "hobc91", "isFavorite": false, "isStarred": false}, {"title": "each section searched with line breaks still in 2.0 - gets entire section from From", "description": "", "dateCreated": "2020-06-30T15:49:27.000Z", "dateModified": "2020-06-30T15:49:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gms", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=From:)(...+?)(?<=DWT\\(summer\\)\\n\\nT)", "permalinkFragment": "o4PwvU", "isFavorite": false, "isStarred": false}, {"title": "email capturing", "description": "", "dateCreated": "2020-06-30T17:26:19.000Z", "dateModified": "2020-06-30T17:26:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-z0-9\\._]+)@([a-z]+)\\.([a-z]{2,4})", "permalinkFragment": "HzI392", "isFavorite": false, "isStarred": false}, {"title": "Role regex liferay-developer", "description": "Regex to liferay proyect for Role -> Developer", "dateCreated": "2020-07-01T09:46:49.000Z", "dateModified": "2020-07-01T09:46:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.*liferay.*deploy-hot.*", "permalinkFragment": "dWOAwU", "isFavorite": false, "isStarred": false}, {"title": "Role regex ODH Developers", "description": "Regex to proyect ODH for ROLE -> Developers", "dateCreated": "2020-07-01T09:48:59.000Z", "dateModified": "2020-07-01T09:48:59.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^.*odh.*develop|feature.*", "permalinkFragment": "NssHsW", "isFavorite": false, "isStarred": false}, {"title": "capturing div a or span or etc", "description": "", "dateCreated": "2020-07-01T10:23:04.000Z", "dateModified": "2020-07-01T10:23:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<(\\w+)", "permalinkFragment": "6coGW7", "isFavorite": false, "isStarred": false}, {"title": "c comments", "description": "", "dateCreated": "2020-07-01T14:50:00.000Z", "dateModified": "2020-07-01T14:50:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/\\*((\\*[^\\/])|[^*])*\\*\\/", "permalinkFragment": "dfZs75", "isFavorite": false, "isStarred": false}, {"title": "c without comments for valid c code", "description": "", "dateCreated": "2020-07-01T14:53:19.000Z", "dateModified": "2020-07-01T14:53:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\*(?!\\/)|\\/(?!\\*)|[^\\*\\/]|[\\n])+", "permalinkFragment": "XKVSOn", "isFavorite": false, "isStarred": false}, {"title": "word boundary position", "description": "", "dateCreated": "2020-07-01T20:31:22.000Z", "dateModified": "2020-07-01T20:31:22.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b\\w{4}\\b", "permalinkFragment": "w5frMn", "isFavorite": false, "isStarred": false}, {"title": "matching numbers", "description": "", "dateCreated": "2020-07-01T21:01:45.000Z", "dateModified": "2020-07-01T21:01:45.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\(]?\\d{3}[-\\.)]\\d{3}[-\\.]\\d{4}", "permalinkFragment": "M0dKO6", "isFavorite": false, "isStarred": false}, {"title": "matching phone numbers", "description": "", "dateCreated": "2020-07-02T08:25:52.000Z", "dateModified": "2020-07-02T08:25:52.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(?(\\d{3}\\)?)[-.](\\d{3})[\\-\\.](\\d{4})", "permalinkFragment": "Ic5oPA", "isFavorite": false, "isStarred": false}, {"title": "Replacing markup link to html ", "description": "", "dateCreated": "2020-07-02T10:15:18.000Z", "dateModified": "2020-07-02T10:15:18.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[(.*?)\\](\\(.*?\\))", "permalinkFragment": "7TFqcM", "isFavorite": false, "isStarred": false}, {"title": "C# Variable Signature", "description": "Used for extracting information from doxygen.\n\nHandles:\n1. modifiers\n2. type, with generics\n3. name\n4. default value\n\nSupport for generics is limited", "dateCreated": "2020-07-02T10:22:10.000Z", "dateModified": "2020-07-02T10:22:10.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\s*(?P<modifiers>(?:\\s*(?:private|const|static))*)\\s*(?P<fulltype>(?P<type>[^\\s<\\[{]+)\\s*(?P<generics><\\s*.+\\s*>)?)\\s+(?P<name>[^\\s<{]+)\\s*(?:=\\s*(?P<value>.+))?$", "permalinkFragment": "I65RnY", "isFavorite": false, "isStarred": false}, {"title": "Image tags", "description": "Extract image tags from a HTML code", "dateCreated": "2020-07-02T13:03:02.000Z", "dateModified": "2020-07-02T13:03:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<img[^>]+\\>", "permalinkFragment": "nM3BB4", "isFavorite": false, "isStarred": false}, {"title": "words in same sentence (also not consecutive)", "description": "La regex individua pi\u00f9 parole, anche non consecutive, presenti nella stessa frase (non separate da un punto).\nAffinata per la gestione dell'attribuzione del flag cantina dell'importer.", "dateCreated": "2020-07-02T13:09:57.000Z", "dateModified": "2020-07-02T13:09:57.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s?((?<!senza\\s)cantina)(?!\\:\\s?no)(?!([^\\.]*(acquistabil[ei])))", "permalinkFragment": "iLNtui", "isFavorite": false, "isStarred": false}, {"title": "s3_date_select", "description": "", "dateCreated": "2020-07-02T13:54:03.000Z", "dateModified": "2020-07-02T13:54:03.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\/year=2020\\/month=06\\/day=(24/\\hour=((1[5-9])|(2[0-3]))|25\\/hour=((0[0-9])|(1[0-9])|20))", "permalinkFragment": "X3pv5W", "isFavorite": false, "isStarred": false}, {"title": "Remove leading zero from addresses", "description": "Used to clean address data for simulation.", "dateCreated": "2020-07-02T18:59:24.000Z", "dateModified": "2020-07-02T18:59:24.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^0", "permalinkFragment": "jSkVpa", "isFavorite": false, "isStarred": false}, {"title": "email validation", "description": "", "dateCreated": "2020-07-04T17:04:39.000Z", "dateModified": "2020-07-04T17:04:39.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\w+)@(\\w+)\\.([a-z]{2,8})([a-z]{2,8})?$", "permalinkFragment": "tk83XZ", "isFavorite": false, "isStarred": false}, {"title": "Add EnumMember", "description": "", "dateCreated": "2020-07-03T10:29:21.000Z", "dateModified": "2020-07-03T10:29:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([[:blank:]]*)(\\w+),?)$", "permalinkFragment": "c06S1F", "isFavorite": false, "isStarred": false}, {"title": "Years before 1990", "description": "Match titles of all films produced before 1990.", "dateCreated": "2020-07-03T14:16:53.000Z", "dateModified": "2020-07-03T14:16:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": ".*\\(19[1-8]\\d\\)", "permalinkFragment": "4OAlr5", "isFavorite": false, "isStarred": false}, {"title": "Amazon Resource Name (ARN) pattern with a named group for each component", "description": "A pattern to parse Amazon Web Services ARNs into their varying components:\n\n- Partition\n- Service\n- Region\n- AccountID\n- ResourceType (optional - empty string is missing)\n- Resource", "dateCreated": "2020-07-03T19:37:22.000Z", "dateModified": "2020-07-03T19:37:22.000Z", "author": "Arnoud", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^arn:(?P<Partition>[^:\\n]*):(?P<Service>[^:\\n]*):(?P<Region>[^:\\n]*):(?P<AccountID>[^:\\n]*):(?P<Ignore>(?P<ResourceType>[^:\\/\\n]*)[:\\/])?(?P<Resource>.*)$", "permalinkFragment": "naD4Li", "isFavorite": false, "isStarred": false}, {"title": "Parse parts of fail2ban log", "description": "", "dateCreated": "2020-07-03T22:35:07.000Z", "dateModified": "2020-07-03T22:35:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[^\\[\\n]*\\[){2}(?P<jail>[^\\]]+)\\]\\s+(?P<action>(Restore Ban|\\w+))\\s+(?P<source_ip>[^ ]+)", "permalinkFragment": "KOKq2L", "isFavorite": false, "isStarred": false}, {"title": "Repeated words", "description": "", "dateCreated": "2020-07-04T17:15:04.000Z", "dateModified": "2020-07-04T17:15:04.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b(\\w+)\\s\\1\\b", "permalinkFragment": "Py5VMF", "isFavorite": false, "isStarred": false}, {"title": "REGEX SLIP PA", "description": "Le os slips de supermercado do P\u00e3o de A\u00e7\u00facar", "dateCreated": "2020-07-05T06:06:04.000Z", "dateModified": "2020-07-05T06:06:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{1,2})(\\s)(\\xA0\\xA0)(\\s)(\\d{1,7})(\\s)(\\w.+)(\\s)(\\d{1,3}\\.\\d{1,3}|\\d)(\\s)(\\w\\w)(\\sx\\s)(\\d{1,3}\\,\\d{1,2})(\\s)(\\(\\d{1,3}\\.\\d\\d\\))(( (0)(\\s)(\\d{1,3}\\,\\d\\d)|(\\s)(\\n)(\\xA0\\xA0\\xA0\\xA0\\sDesconto\\s)([0-9]{1,3}\\,[0-9]{2})(\\n)(-\\s[0-9]{1,2}\\,[0-9]{2})))", "permalinkFragment": "vgGEIB", "isFavorite": false, "isStarred": false}, {"title": "REGEX SLIP PA", "description": "Le os slips de supermercado do P\u00e3o de A\u00e7\u00facar", "dateCreated": "2020-07-05T17:07:28.000Z", "dateModified": "2020-07-05T17:07:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{1,2})(\\s)(\\xA0\\xA0)(\\s)(\\d{1,7})(\\s)(\\w.+)(\\s)(\\d{1,3}\\.\\d{1,3}|\\d{1,3})(\\s)(\\w\\w)(\\sx\\s)(\\d{1,3}\\,\\d{1,2})(\\s)(\\(\\d\\)|\\(\\d{1,3}\\.\\d{1,2}\\))(( (0)(\\s)(\\d{1,3}\\,\\d\\d)|(\\s)(\\n)(\\xA0\\xA0\\xA0\\xA0\\sDesconto\\s)([0-9]{1,3}\\,[0-9]{2})(\\n)(-\\s[0-9]{1,2}\\,[0-9]{2})))", "permalinkFragment": "7rV61x", "isFavorite": false, "isStarred": false}, {"title": "filenamewhitlist", "description": "", "dateCreated": "2020-07-05T22:52:17.000Z", "dateModified": "2020-07-05T22:52:17.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[a-zA-Z0-9\\s_\\\\.\\-\\(\\):]+$", "permalinkFragment": "wZz28I", "isFavorite": false, "isStarred": false}, {"title": "Test2", "description": "", "dateCreated": "2020-07-06T09:44:54.000Z", "dateModified": "2020-07-06T09:44:54.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "#FFFFFF\">[^\\d]+([^<]+)", "permalinkFragment": "Vr6TVS", "isFavorite": false, "isStarred": false}, {"title": "Find and replace character in a string by postion", "description": "Originally did this for adding random typos to string values for a lab assignment.", "dateCreated": "2020-07-06T17:03:59.000Z", "dateModified": "2020-07-06T17:03:59.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=^.{3})\\w", "permalinkFragment": "LpnPcV", "isFavorite": false, "isStarred": false}, {"title": "File URL", "description": "", "dateCreated": "2020-07-06T18:24:47.000Z", "dateModified": "2020-07-06T18:24:47.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((?<Dirctory>\\w+)(?=\\/))|(?<FileName>\\w+)|((?<=\\.)(?<FileExtension>\\w+))", "permalinkFragment": "z2QiqL", "isFavorite": false, "isStarred": false}, {"title": "Montant", "description": "", "dateCreated": "2020-07-07T07:10:53.000Z", "dateModified": "2020-07-07T07:10:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "-?\\d*\\.{0,1}\\d+", "permalinkFragment": "ZWbZJb", "isFavorite": false, "isStarred": false}, {"title": "Akeneo-PIM -> Nodhos", "description": "", "dateCreated": "2020-07-07T07:58:12.000Z", "dateModified": "2020-07-07T07:58:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((\\[\\{|\\{|,)\u00b2\u00b2((\u00b2\u00b2[A-Za-z0-9-\\/:._\\s]*\u00b2\u00b2|\\w*)*)\u00b2\u00b2: ((\u00b2\u00b2[\\p{L}\\p{Nd}\\p{Sm}\\p{Lm}-\\/\\!\\s\\[\\]\\^\\`\\%\\{\\|\\}\\~\\'\\\u2044\\(\\)&:_.,;\u2020\u00b0\u00a2\u00a3\u00a7\u2022\u00b6\u00df\u00ae\u00a9\u2122\u00b4\u00a8\u2260\u00c6\u00d8\u221e\u00b1\u2264\u2265\u00a5\u00e7\u2202\u2211\u220f\u03c0\u222b\u00aa\u00ba\u03a9\u00e6\u00f8\u0192\u2206\u00ab\u0152\u0153\u2013\u201c\u201d\u2018\u2019\u00f7\u25ca\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b7\u201a\u201e\u2030\u0131\u02c6\u02dc\u00af\u02d8\u02d9\u02da\u00b8\u02dd\u02db\u02c7]*\u00b2\u00b2|\\w*))(\\}\\]\\}\\]|\\.\u00b2\u00b2|\\},|\\}\\]|))", "permalinkFragment": "MUSWbu", "isFavorite": false, "isStarred": false}, {"title": "bilibili\u6392\u884c\u524d100", "description": "", "dateCreated": "2020-07-07T14:45:04.000Z", "dateModified": "2020-07-07T14:45:04.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<div class=\"watch-later-trigger w-later\"><\\/div><\\/div><div class=\"info\"><a href=\"(.*?)\" target=\"_blank\" class=\"title\">(.*?)<\\/a><!----><div class=\"detail\"><span class=\"data-box\"><i class=\"b-icon play\"><\\/i>(.*?)<\\/span><span class=\"data-box\"><i class=\"b-icon view\"><\\/i>(.*?)<\\/span><a target=\"_blank\" href=\".*?\"><span class=\"data-box\"><i class=\"b-icon author\"><\\/i>(.*?)<\\/span><\\/a><\\/div><div class=\"pts\"><div>(.*?)<\\/div>", "permalinkFragment": "HT1G8c", "isFavorite": false, "isStarred": false}, {"title": "oracle_string_content_individuation", "description": "", "dateCreated": "2020-07-08T12:10:43.000Z", "dateModified": "2020-07-08T12:10:43.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "'(?:.*?(?:'{2})*.*?)*'", "permalinkFragment": "C6hfcv", "isFavorite": false, "isStarred": false}, {"title": "Conta caracteres", "description": "", "dateCreated": "2020-07-08T21:02:34.000Z", "dateModified": "2020-07-08T21:02:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.{0,72})", "permalinkFragment": "IzZbSp", "isFavorite": false, "isStarred": false}, {"title": "Quoted String Aware Argument Splitter", "description": "## Argument Parser\n\n- Quoted string aware\n\n  - Both `'` and `\"`\n\n  - Respects escaped forms: e.g. `\\'` and `\\\"` are treated as a single char don't start or end a string token.\n\n- Works\n\n  - Mostly\n", "dateCreated": "2020-07-09T01:44:23.000Z", "dateModified": "2020-07-09T01:44:23.000Z", "author": "disk0 <ww.github.com/disco0>", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?xXmi)\n(?:\n  (?# use non-capture for details in debugging)\n  (?:\n    (?<match>\n      (?# If quoted value)\n      (?<quot_char>(?<!\\\\)[\"'])\n      (?# Quoted content)\n      (?:\n        (?:\n          (?# Match as many characters that aren't quotation char)\n          (?# or escape char as possible.                        )\n          (?:(?:(?!\\k<quot_char>|\\\\)).+)\n          (?:\n            (?# Match any/all escape chars that do not have the)\n            (?# quotation char following it.                   )\n            (?:(?:\\\\)*(?!\\k<quot_char>))?\n            (?# If there is an escape char followed by the  quotation)\n            (?# quotation char match them.                           )\n            (?:[\\\\]\\k<quot_char>)?\n          )*?\n        )\n      )\n      (?<close_quot>\\k<quot_char>)\n    |\n      (?# if simple token)\n      (?<basic>[^ \\n]+)+\n    )\n  )\n  (?<trail_ws>[ ]+)?\n)", "permalinkFragment": "TtvBK6", "isFavorite": false, "isStarred": false}, {"title": "Textmate Snippet Variable Capture", "description": "Regex pattern for Textmate Snippet variables with non-overlapping capture groups\u2014for use with [Highlight extension](https://github.com/fabiospampinato/vscode-highlight) for VSCode. ", "dateCreated": "2020-07-09T23:11:57.000Z", "dateModified": "2020-07-09T23:11:57.000Z", "author": "disk0 <www.github.com/disco0>", "flavor": "pcre", "delimiter": "/", "flags": "gmxX", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\$)\n# Regexp for textmate dynamic variables \n#TM_(\n#  BUNDLE_SUPPORT|COMMENT_(?:END|MODE|START)|CURRENT_(?:LINE|WORD)|DIRECTORY|FILE(?:NAME|PATH)|\n#  LINE_(?:INDEX|NUMBER)|PROJECT_DIRECTORY|SCOPE|SELECTED_(?:FILE[S]?|TEXT)|SOFT_TABS|SUPPORT_PATH|TAB_SIZE\n#)\n(?:\n# BASIC\n  # BASIC: Variable name, no brackets\n  (?:(TM_[A-Z]+(?:_[A-Z]+)*)|([\\d]))(?!\\{)\n|\n# BRACKETED\n  ([\\{])\n  # BRACKETED: Variable name\n  (?:(TM_[A-Z]+(?:_[A-Z]+)*)|([\\d]))\n  # BRACKETED: Post variable name expression\n  (?:\n    # Default keyword, single\n    ([:].+?(?=[\\}]))\n  |\n    # Default keyword, options\n    ([\\|].+?[\\|](?=[\\}]))\n  |\n    # Regular expression\n    (?:\n      ([\\/])\n      (.+?(?=\\/))\n      ([\\/])\n      (.+?(?=\\/))\n      ([\\/])\n      # Flags\n      # Not sure how to validate fully without back references?\n      ([imx]{3})\n      (?=\\})\n    )\n  |\n    (?:\n      ([\\/])\n      ([^\\/\\}]+?)\n      (\n        (?<![\\\\]{2})\n        [\\/]\n      )\n      ([^\\/\\}]+?)\n      (\n        (?<![\\\\]{2})\n        [\\/]\n      )\n      # Flags\n      # Not sure how to validate fully without back references?\n      ([imx]{3})\n    )\n  | \n     # Match to bracket\n     (.+?(?=[\\}]))?\n  )?\n  ([\\}])\n)", "permalinkFragment": "NgjK2m", "isFavorite": false, "isStarred": false}, {"title": "not match numbers followed by a certain character", "description": "", "dateCreated": "2020-07-09T02:08:58.000Z", "dateModified": "2020-07-09T02:08:58.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([-\\d]+($|[^\\.\\d]))", "permalinkFragment": "hlkhQn", "isFavorite": false, "isStarred": false}, {"title": "Border Style CSS Property Validation (Javascript)", "description": "Validates any border-style value that contains 0-4 (valid) border styles. \n\nOnly restriction on whitespace is at least one space/tab between values\u2014all of the examples below are valid:\n````\n\"solid\"\n\"solid none\"\n\"none none solid\"\n\"outset inset inset solid\"\n\"solid none none\"\n\"solid\"\n\"solid\"\n\"none solid\"\n\"inset             outset   none\"\n\"inset inset outset          none\"\n````", "dateCreated": "2020-07-09T07:44:39.000Z", "dateModified": "2020-07-09T07:44:39.000Z", "author": "disk0 <www.github.com/disco0>", "flavor": "javascript", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[ \\t]*(?:(?<style>dashed|dotted|double|groove|hidden|(?:in|out)set|inherit|initial|none|ridge|solid)[ \\t]*){0,4}[\\t ]*$", "permalinkFragment": "2EB19q", "isFavorite": false, "isStarred": false}, {"title": "Shell keybinds", "description": "Attempt to parse escape codes and their various forms used in shell keyboard shortcut binds.\n\nIn its current form all forms of escapes are/will be matched in an identical group.\n  - e.g.: `\\e`, `^[`, `\\u001B`, and `\\U001b` all assign to the same binding (`^[`) in zsh's `bindkey` command, and therefore share a capture group.", "dateCreated": "2020-07-09T07:29:20.000Z", "dateModified": "2020-07-09T07:29:20.000Z", "author": "disk0 <www.github.com/disco0>", "flavor": "pcre", "delimiter": "/", "flags": "gmixX", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\n(?:\n(?<ctrl_code>\n  # ^[[         # ^[ | \\003\n  ([\\^][\\[]{2})\n| # [Ctrl Key] >>> '\\e' | '^[' | '\\u001B'\n  (?<esc>\n    [\\^][\\[]\n  |\n    [\\\\][e]\n  |\n   [\\\\](?:(?i)u001b(?-i))\n  )\n|\n  #  ^\n  ([\\^][A-Z@])|([\\^])\n|\n  # [Meta Key] \\M-\n  ([\\\\]M-)\n|\n  # [^C] ^C | \\003\n  ([\\^]C|[\\\\]0{2}3)\n)\n)+", "permalinkFragment": "63toDm", "isFavorite": false, "isStarred": false}, {"title": "Shell keybinds", "description": "Attempt to parse escape codes and their various forms used in shell keyboard shortcut binds.\n\nIn its current form all forms of escapes are/will be matched in an identical group.\n  - e.g.: `\\e`, `^[`, `\\u001B`, and `\\U001b` all assign to the same binding (`^[`) in zsh's `bindkey` command, and therefore share a capture group.", "dateCreated": "2020-07-09T07:29:20.000Z", "dateModified": "2020-07-09T07:29:20.000Z", "author": "disk0 <www.github.com/disco0>", "flavor": "pcre", "delimiter": "/", "flags": "gmixX", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\n(?:\n(?<ctrl_code>\n  # ^[[         # ^[ | \\003\n  ([\\^][\\[]{2})\n| # [Ctrl Key] >>> '\\e' | '^[' | '\\u001B'\n  (?<esc>\n    [\\^][\\[]\n  |\n    [\\\\][e]\n  |\n   [\\\\](?:(?i)u001b(?-i))\n  )\n|\n  #  ^\n  ([\\^][A-Z@])|([\\^])\n|\n  # [Meta Key] \\M-\n  ([\\\\]M-)\n|\n  # [^C] ^C | \\003\n  ([\\^]C|[\\\\]0{2}3)\n)\n)+", "permalinkFragment": "jruVTO", "isFavorite": false, "isStarred": false}, {"title": "Border Style CSS Property Validation (PCRE)", "description": "Validates any border-style value that contains 0-4 (valid) border styles. \n\nOnly restriction on whitespace is at least one space/tab between values\u2014all of the examples below are valid:\n````\n\"solid\"\n\"solid none\"\n\"none none solid\"\n\"outset inset inset solid\"\n\"solid none none\"\n\"solid\"\n\"solid\"\n\"none solid\"\n\"inset             outset   none\"\n\"inset inset outset          none\"\n````", "dateCreated": "2020-07-09T07:44:19.000Z", "dateModified": "2020-07-09T07:44:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "iJxXmg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\n[ \\t]*\n(?:\n  (?<style>\n     dashed|dotted|double|groove|\n     hidden|(?:in|out)set|inherit|\n     initial|none|ridge|solid\n  )\n  (?:[ \\t]+|[ \\t]*(?=$))\n){0,4}\n[ \\t]*$", "permalinkFragment": "uqK0s0", "isFavorite": false, "isStarred": false}, {"title": "If Negative Lookbehind was Implemented in Stylus", "description": "", "dateCreated": "2020-07-09T23:38:52.000Z", "dateModified": "2020-07-09T23:38:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(http|https):\\/\\/(www\\.)?.+(?<!discord|docs\\.google|facebook|youtube|twitter|app\\.plex)\\.(com|net|org|tv)(.+)?", "permalinkFragment": "Rk2SOs", "isFavorite": false, "isStarred": false}, {"title": "japanese telephone number", "description": "", "dateCreated": "2020-07-10T04:01:06.000Z", "dateModified": "2020-07-10T04:01:06.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^0(\\d{1,2}(-\\d{4}){2}|\\d{3}(-\\d{3}){2}|\\d{2}-\\d{3}-\\d{4}|\\d{3}-\\d{2}-\\d{4}|\\d{4}-\\d{1}-\\d{4})$", "permalinkFragment": "WJfbRr", "isFavorite": false, "isStarred": false}, {"title": "Phone USA and CANADA", "description": "", "dateCreated": "2020-07-14T12:55:13.000Z", "dateModified": "2020-07-14T12:55:13.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([2-9]{1})([0-9]{2})([\\s.-]?)([2-9]{1})([0-9]{2})([\\s.-]?)([0-9]{4})$", "permalinkFragment": "IwC6oV", "isFavorite": false, "isStarred": false}, {"title": "A pattern match for a specific WP Gutenberg block", "description": "", "dateCreated": "2020-07-11T02:53:00.000Z", "dateModified": "2020-07-11T02:53:00.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(<\\!\\-\\- wp:onecms\\/recipe-time \\{\\\"type\\\"\\:\\\"cook\\\")\\S(.*[a-z\\:0-9\\}\\s])(\\/\\-\\->)$", "permalinkFragment": "DqhSXa", "isFavorite": false, "isStarred": false}, {"title": "NewWheel", "description": "", "dateCreated": "2020-07-11T18:28:49.000Z", "dateModified": "2020-07-11T18:28:49.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https://(?P<subdomain>(?:[a-z]+\\.)+)?newwheel\\.com", "permalinkFragment": "JOEsDh", "isFavorite": false, "isStarred": false}, {"title": "NewWheel", "description": "", "dateCreated": "2020-07-11T18:31:22.000Z", "dateModified": "2020-07-11T18:31:22.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https://(?P<subdomain>(?:[a-z]+\\.)+)?newwheel\\.com", "permalinkFragment": "LXH9rf", "isFavorite": false, "isStarred": false}, {"title": "comment_repl", "description": "", "dateCreated": "2020-07-11T19:39:18.000Z", "dateModified": "2020-07-11T19:39:18.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(^(?:\\s*)\\/{4,}\\n)+(^(\\s*)\\/{2,3}(?!\\/)[\\s\\S]*\\n)*\\1)", "permalinkFragment": "ZeH5mm", "isFavorite": false, "isStarred": false}, {"title": "Javascript anonymous functions", "description": "", "dateCreated": "2020-07-12T01:34:08.000Z", "dateModified": "2020-07-12T01:34:08.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:(?:(?:(?:var|let)[ \\t]+)?([\\w.\\-]+)[ \\t]*[:=]|[(!])[ \\t]*)function(?:[ \\t]+([\\w.\\-]+))?[ \\t]*\\([^)]*\\)", "permalinkFragment": "KtZUGV", "isFavorite": false, "isStarred": false}, {"title": "IPV6 Match Pattern", "description": "", "dateCreated": "2020-07-12T13:07:19.000Z", "dateModified": "2020-07-12T13:07:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}", "permalinkFragment": "9TKbUV", "isFavorite": false, "isStarred": false}, {"title": "IMAP: Envelope", "description": "", "dateCreated": "2020-07-12T16:17:19.000Z", "dateModified": "2020-07-12T16:17:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\"(?<DATE>.*)\" (?<SUBJECT>.*) \\(\\((?<FROM>.*)\\)\\) \\(\\((?<SENDER>.*)\\)\\) \\(\\((?<REPLYTO>.*)\\)\\) (?<TO>NIL|\\(.*\\)) (?<CC>NIL|\\(.*\\)) (?<BCC>NIL|\\(.*\\)) (?<RID>NIL|\".*\") (?<MID>NIL|.*)", "permalinkFragment": "IHcMGl", "isFavorite": false, "isStarred": false}, {"title": "IMAP: FULL", "description": "", "dateCreated": "2020-07-12T17:38:09.000Z", "dateModified": "2020-07-12T17:38:09.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\(UID \\d+ FLAGS \\((?<FLAGS>.*)\\) INTERNALDATE \"(?<INTERNALDATE>.*)\" RFC822\\.SIZE (?<SIZE>\\d+) ENVELOPE \\((?<ENVELOPE>.*)\\) BODY \\((?<BODY>.*)\\)\\)", "permalinkFragment": "rG8XwG", "isFavorite": false, "isStarred": false}, {"title": "Extract chat conversation", "description": "Simple regex to extract some chat conversation", "dateCreated": "2020-07-12T19:16:37.000Z", "dateModified": "2020-07-12T19:16:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[(?<time>(?:[\\d]+\\:[\\d]+:[\\d]+)\\s+(?:AM|PM))(?:\\s+\\|\\s+\\w+\\s+(?<edited>(?:[\\d]+\\:[\\d]+:[\\d]+)\\s+(?:AM|PM)))?\\]\\s+(?<author>\\w+)\\:\\s+(?<message>[\\w\\s,.]+)", "permalinkFragment": "yu4qGi", "isFavorite": false, "isStarred": false}, {"title": "Address capture", "description": "Complex address component capturing regex", "dateCreated": "2020-07-13T04:46:52.000Z", "dateModified": "2020-07-13T04:46:52.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<street>\\d+\\s.*?(?:,\\s*\\w*\\s*\\d+)*),\\s*(?P<city>.*?),\\s*(?P<state>[A-Za-z]+)\\s*(?P<zip>\\d+)?,*", "permalinkFragment": "H0cIVF", "isFavorite": false, "isStarred": false}, {"title": "MBUS Line", "description": "MBUS regex, with updated speed", "dateCreated": "2020-07-22T22:35:09.000Z", "dateModified": "2020-07-22T22:35:09.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?P<time>\\d{8}T\\d{6}) (?P<rti>.+) (?P<timestamp>\\d+)\\s?Bus=\\s?(?P<bus>.*?)\\s?C=\\s?0x(?P<cmd>[0-9a-fA-F]{2})\\s?S=\\s?(?P<status>\\w+)\\s?RT=\\s?(?P<rt>\\d+)\\s?RDI=\\s?0x(?P<rdi>[0-9a-fA-F]{2})\\s?EOT=\\s?0x(?P<eot>[0-9a-fA-F]{2})\\s?Data=\\s?(?P<data>([0-9a-fA-F]{2}\\s?)*)\\s?REPLY=\\s?(?P<reply>([0-9a-fA-F]{2}\\s?)*)", "permalinkFragment": "f68oXV", "isFavorite": false, "isStarred": false}, {"title": "E-mail", "description": "Best guess of e-mail -- using edq", "dateCreated": "2020-07-13T21:06:02.000Z", "dateModified": "2020-07-13T21:06:02.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\b\n\n", "permalinkFragment": "WE2Tbx", "isFavorite": false, "isStarred": false}, {"title": "E-mail", "description": "Best guess of e-mail ", "dateCreated": "2020-07-13T21:06:15.000Z", "dateModified": "2020-07-13T21:06:15.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\b\n\n", "permalinkFragment": "GNdQDa", "isFavorite": false, "isStarred": false}, {"title": "stylus --watch", "description": "", "dateCreated": "2020-07-14T06:24:29.000Z", "dateModified": "2020-07-14T06:24:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmxX", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\n#whitespace\n([ ]*)\n(?:\n # Error position - line location \n (-{6,})([\\^])\n |\n # Line number\n ([\\d]+)\n # Line number delim\n ([\\|])\n # Code indent\n ([ \\t]*)\n (?:\n  # Comment ?\n  ([\\/]{2}.+)?\n  |\n  # Else code block line\n  (.*)\n )\n $\n)\n|\n# Function delim token\n(at +)\n# Function\n(.+?)\n# (, Path base\n([\\(].+?)\n# File\n([^\\/]+?)\n# Line:char\n(?:(:)(\\d+))?\n(?:(:)(\\d+))?\n# Function path\n([\\)])", "permalinkFragment": "EelNBO", "isFavorite": false, "isStarred": false}, {"title": "exclude US traffic in GA", "description": "", "dateCreated": "2020-07-14T09:11:13.000Z", "dateModified": "2020-07-14T09:11:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\/[\\D]{2}-((?!us).){2}\\/)", "permalinkFragment": "YREmNt", "isFavorite": false, "isStarred": false}, {"title": "Mexican Phone", "description": "- Rules for **Mexico**:\n1. Numbers must be 10 digits long\n1. Area code is either 2 or 3 digits\n1. Remaining phone number has either 7 or 8 digits in groups of 3 or 4 ", "dateCreated": "2020-07-14T12:53:28.000Z", "dateModified": "2020-07-14T12:53:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([0-9]{2,3})([\\s.-]?)([0-9]{3,4})([\\s.-]?)([0-9]{4})$", "permalinkFragment": "0ifr2M", "isFavorite": false, "isStarred": false}, {"title": "a_link", "description": "", "dateCreated": "2020-07-14T13:56:49.000Z", "dateModified": "2020-07-14T13:56:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<\\s*a\\s+[^>]+>.*?<\\/a>", "permalinkFragment": "EUHMtD", "isFavorite": false, "isStarred": false}, {"title": "Match anything inside round brackets including the brackets and white space before them.", "description": "", "dateCreated": "2020-07-14T22:10:35.000Z", "dateModified": "2020-07-14T22:10:35.000Z", "author": "RazerMoon", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s\\(.*\\)", "permalinkFragment": "s5lPpD", "isFavorite": false, "isStarred": false}, {"title": "Date time recognition", "description": "", "dateCreated": "2020-07-14T23:55:52.000Z", "dateModified": "2020-07-14T23:55:52.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\d{1,2}([ -.\\/])(\\d{1,2}|[a-zA-z]{3,15})(?1)\\d{2,4}( \\d{2}:\\d{2}(:\\d{2}([.:]\\d)?)?)?$|^(\\d{1,2}|[a-zA-z]{3,15})([ -.\\/])\\d{1,2}(?7)\\d{2,4}( \\d{2}:\\d{2}(:\\d{2}([.:]\\d)?)?)?$|^\\d{2,4}([ -.\\/])(\\d{1,2}|[a-zA-z]{3,15})\\d{1,2}(?11)( \\d{2}:\\d{2}(:\\d{2}([.:]\\d)?)?)?$", "permalinkFragment": "rqnmrf", "isFavorite": false, "isStarred": false}, {"title": "Influx part file", "description": "", "dateCreated": "2020-07-15T16:23:32.000Z", "dateModified": "2020-07-15T16:23:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<fileName>.+).part[a-z]", "permalinkFragment": "857CJT", "isFavorite": false, "isStarred": false}, {"title": " U.S. phone number format: XXX-XXX-XXXX", "description": "", "dateCreated": "2020-07-15T17:48:50.000Z", "dateModified": "2020-07-15T17:48:50.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9]{3})-([0-9]{3})-([0-9]{4})", "permalinkFragment": "D9Rs1W", "isFavorite": false, "isStarred": false}, {"title": "url and os from selenium hub", "description": "", "dateCreated": "2020-07-15T18:30:26.000Z", "dateModified": "2020-07-15T18:30:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "id : (?:[A-Za-z]+:)?\\/{0,3}([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?, OS : ([\\w]+)", "permalinkFragment": "0fWhiT", "isFavorite": false, "isStarred": false}, {"title": "java\u5173\u952e\u8bcd\u5339\u914d", "description": "nothing", "dateCreated": "2020-07-16T09:39:22.000Z", "dateModified": "2020-07-16T09:39:22.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\babstract\\b)|(\\bassert\\b)|(\\bboolean\\b)|(\\bbreak\\b)|(\\bbyte\\b)|(\\bcase\\b)|(\\bcatch\\b)|(\\bchar\\b)|(\\bclass\\b)|(\\bconst\\b)|(\\bcontinue\\b)|(\\bdefault\\b)|(\\bdouble\\b)|(\\bdo\\b)|(\\belse\\b)|(\\benum\\b)|(\\bextends\\b)|(\\bfalse\\b)|(\\bfinal\\b)|(\\bfinally\\b)|(\\bfloat\\b)|(\\bfor\\b)|(\\bgoto\\b)|(\\bif\\b)|(\\bimplements\\b)|(\\bimport\\b)|(\\binstanceof\\b)|(\\binterface\\b)|(\\bint\\b)|(\\blong\\b)|(\\bnative\\b)|(\\bnew\\b)|(\\bnull\\b)|(\\bpackage\\b)|(\\bprivate\\b)|(\\bprotected\\b)|(\\bpublic\\b)|(\\breturn\\b)|(\\bshort\\b)|(\\bstatic\\b)|(\\bstrictfp\\b)|(\\bsuper\\b)|(\\bswitch\\b)|(\\bsynchronized\\b)|(\\bthis\\b)|(\\bthrows\\b)|(\\bthrow\\b)|(\\btransient\\b)|(\\btrue\\b)|(\\btry\\b)|(\\bvoid\\b)|(\\bvolatile\\b)|(\\bwhile\\b)", "permalinkFragment": "cdB5zn", "isFavorite": false, "isStarred": false}, {"title": "java\u5224\u65ad\u6574\u4f53\u591a\u9879\u5f0f\u7684\u5408\u6cd5\u6027", "description": "java_PTA_6\u4f5c\u4e1a", "dateCreated": "2020-07-16T09:53:03.000Z", "dateModified": "2020-07-16T09:53:03.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(([ ]*[-+]?[ ]*([ ]*([+-]?[ ]*(([1-9]([ ]*[0-9]*)*)[ ]*(\\*[ ]*x[ ]*(\\^[ ]*([-+]?[1-9][0-9]*))?)?)|([ ]*[-+]?[ ]*x[ ]*(\\^[ ]*([-+]?[1-9][0-9]*))?)[ ]*))([ ]*[+-][ ]*([ ]*([+-]?[ ]*(([1-9]([ ]*[0-9]*)*)[ ]*(\\*[ ]*x[ ]*(\\^[ ]*([-+]?[1-9][0-9]*))?)?)|([ ]*[-+]?[ ]*x[ ]*(\\^[ ]*([-+]?[1-9][0-9]*))?)[ ]*))[ ]*)+[ ]*)+)|([ ]*[-+]?[ ]*([ ]*([+-]?[ ]*(([1-9]([ ]*[0-9]*)*)[ ]*(\\*[ ]*x[ ]*(\\^[ ]*([-+]?[1-9][0-9]*))?)?)|([ ]*[-+]?[ ]*x[ ]*(\\^[ ]*([-+]?[1-9][0-9]*))?)[ ]*))[ ]*)", "permalinkFragment": "qrSsvM", "isFavorite": false, "isStarred": false}, {"title": "java\u622a\u53d6\u51fa\u5355\u9879\u5f0f", "description": "java_PTA_6\u4f5c\u4e1a", "dateCreated": "2020-07-16T09:58:25.000Z", "dateModified": "2020-07-16T09:58:25.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[ ]*([+-]?[ ]*(([1-9][0-9]*)[ ]*(\\\\*[ ]*x[ ]*(\\\\^[ ]*([-+]?[1-9][0-9]*))?)?)|([ ]*[-+]?[ ]*x[ ]*(\\\\^[ ]*([-+]?[1-9][0-9]*))?)[ ]*)", "permalinkFragment": "SmQ7Al", "isFavorite": false, "isStarred": false}, {"title": "java\u5224\u65ad\u65f6\u95f4\u7684\u5408\u6cd5\u6027", "description": "\u65f6\u95f4\u5305\u62ec\u6709\u5e74\u4efd\u6708\u5206\uff0c\u5929\u6570\uff0c\u65f6\u5206\u79d2", "dateCreated": "2020-07-16T10:01:14.000Z", "dateModified": "2020-07-16T10:01:14.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((((([1-9][0-9]((0[48])|([13579][26])|([2468][048])))|(([1-9]((0[48])|([13579][26])|([2468][048]))))|(([13579][26])|([2468][048]))|([48]))|(((([13579][26])|([2468][048]))|[48])00))\\/2\\/(([1-9])|(1[0-9])|([2][0-9])))|(([1-9][0-9]{0,3})\\/((([13578]|1[02])\\/([1-9]|[12][0-9]|3[01]))|((([469]|11)\\/([1-9]|([12][0-9])|(30)))|(2\\/(([1-9])|(1[0-9])|([2][0-8]))))))) ((([02468])|([1][02468])|(2[02])):00)", "permalinkFragment": "L7te9s", "isFavorite": false, "isStarred": false}, {"title": "Arc, Select paths", "description": "", "dateCreated": "2020-07-16T19:30:28.000Z", "dateModified": "2020-07-16T19:30:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^[/]([^/?#]*)[/]?([^/?#]*)", "permalinkFragment": "v9jjz9", "isFavorite": false, "isStarred": false}, {"title": "Find repeating adjacent characters in a string", "description": "In an interview, I was asked to remove all repeating adjacent characters in a string except one. For example, \ninput : abbccasdjajksdhkjaaaaa\noutput : abcasdjajksdhkja\n\nIn Java, the syntax will be \n`s.replaceAll(\"(.)\\\\1{1,}\", \"$1\");`\n\nwhere s is the input string.", "dateCreated": "2020-07-16T19:31:18.000Z", "dateModified": "2020-07-16T19:31:18.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.)\\1{1,}", "permalinkFragment": "CtqhSZ", "isFavorite": false, "isStarred": false}, {"title": "Egyptian Phone Number Format", "description": "This regex extract all the phone number (Egyptian Format: xxx xxxx-xxxx)", "dateCreated": "2020-07-16T22:50:15.000Z", "dateModified": "2020-07-16T22:50:15.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d{3}\\s?\\d{4}-?\\d{4}", "permalinkFragment": "yGJGyR", "isFavorite": false, "isStarred": false}, {"title": "get_units_w_or", "description": "matches units that are not next to 'and' (so matches all units next to 'or')", "dateCreated": "2020-07-17T01:12:29.000Z", "dateModified": "2020-07-17T01:12:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<!\\sand\\s)(?<!except\\s)([A-Z0-9]{8})(?!(\\sand))", "permalinkFragment": "hdJU5e", "isFavorite": false, "isStarred": false}, {"title": "Multiline Copyright detection anywhere", "description": "", "dateCreated": "2020-07-17T17:40:04.000Z", "dateModified": "2020-07-17T17:40:04.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "s", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "/\\*.*Copyright.*\\n \\*/\\n", "permalinkFragment": "Ga8mAY", "isFavorite": false, "isStarred": false}, {"title": "Multiline Copyright at beginning", "description": "", "dateCreated": "2020-07-17T17:41:57.000Z", "dateModified": "2020-07-17T17:41:57.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^/\\*.*\\n.*Copyright.*\\n[\\s\\S]*?\\n \\*/\\n", "permalinkFragment": "x6Hqu3", "isFavorite": false, "isStarred": false}, {"title": "Tag <p>...</p>", "description": "", "dateCreated": "2020-07-17T20:09:04.000Z", "dateModified": "2020-07-17T20:09:04.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\<p\\>).+(?=\\<\\/p\\>)", "permalinkFragment": "Ucg4WY", "isFavorite": false, "isStarred": false}, {"title": "H1 Tag <h1>...</h1>", "description": "", "dateCreated": "2020-07-17T20:10:48.000Z", "dateModified": "2020-07-17T20:10:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\<h1\\>).+(?=\\<\\/h1\\>)", "permalinkFragment": "pRKpPa", "isFavorite": false, "isStarred": false}, {"title": "H2 Tag <h2>...</h2>", "description": "", "dateCreated": "2020-07-17T20:12:40.000Z", "dateModified": "2020-07-17T20:12:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\<h2\\>).+(?=\\<\\/h2\\>)", "permalinkFragment": "9BfzEn", "isFavorite": false, "isStarred": false}, {"title": "H3 Tag <h3>...</h3>", "description": "", "dateCreated": "2020-07-17T20:13:13.000Z", "dateModified": "2020-07-17T20:13:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\<h3\\>).+(?=\\<\\/h3\\>)", "permalinkFragment": "sphDh5", "isFavorite": false, "isStarred": false}, {"title": "Title Tag <title>...</title>", "description": "", "dateCreated": "2020-07-17T20:16:35.000Z", "dateModified": "2020-07-17T20:16:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=\\<title\\>).+(?=\\<\\/title\\>)", "permalinkFragment": "U3wuCC", "isFavorite": false, "isStarred": false}, {"title": "version and positive/negative lookahead", "description": "", "dateCreated": "2020-07-17T22:51:51.000Z", "dateModified": "2020-07-17T22:51:51.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=version:\\s\\s\\s\\s\\s\\s\\s\\s)\\d+(\\.\\d+)+", "permalinkFragment": "DJkwdp", "isFavorite": false, "isStarred": false}, {"title": "Remove width and height from img tag", "description": "", "dateCreated": "2020-07-17T23:01:02.000Z", "dateModified": "2020-07-17T23:01:02.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<img.*?)(height=\".*?\")|(width=\".*?\")(.*?>)", "permalinkFragment": "u5iH0J", "isFavorite": false, "isStarred": false}, {"title": "Get single math operators and floating point numbers - Js", "description": "", "dateCreated": "2020-07-18T08:20:41.000Z", "dateModified": "2020-07-18T08:20:41.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?!\\s)((\\d*\\.?\\d*)*|([+*^\\.\\(\\)\\-])*?)?", "permalinkFragment": "A2dAJk", "isFavorite": false, "isStarred": false}, {"title": "Match regex of width inside img", "description": "Match regex of width inside img, can be used to find width whether it is inside style or not.\nOnly find the first occurence of every img tag\nAlready excluded min/max width", "dateCreated": "2020-07-18T09:00:34.000Z", "dateModified": "2020-07-18T09:00:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<\\/?img.*[^-]width\\s?[:|=]\\s?['|\"]?)[0-9]+px(.*)>", "permalinkFragment": "p5tCzx", "isFavorite": false, "isStarred": false}, {"title": "Multiline 2020 Sample Code Copyright/LICENSE Header", "description": "", "dateCreated": "2020-07-18T21:58:47.000Z", "dateModified": "2020-07-18T21:58:47.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(/\\*\\n    C(?!opyright \u00a9 2020 Apple Inc\\. All rights reserved\\.\\n    See LICENSE/LICENSE\\.txt for this sample\\\u2019s licensing information.\\n \\*/\\n).*)$", "permalinkFragment": "SSZgaI", "isFavorite": false, "isStarred": false}, {"title": "Multiline 2020 DevPubs Header", "description": "", "dateCreated": "2020-07-18T22:35:28.000Z", "dateModified": "2020-07-18T22:35:28.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(/\\*\\n.*<s(?!amplecode>\\n.*<abstract>\\n[\\S\\s]*? </abstract>\\n.*</samplecode>\\n \\*/\\n).*)$", "permalinkFragment": "MmNwIS", "isFavorite": false, "isStarred": false}, {"title": "Date-time extractor in the form of YYYYMMDDHHMMSS", "description": "", "dateCreated": "2020-07-19T19:45:29.000Z", "dateModified": "2020-07-19T19:45:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{4})(0\\d|1[0-2])([0-2]\\d|3[0-1])([0-1]\\d|2[0-3])([0-5]\\d)([0-5]\\d)", "permalinkFragment": "gj7JiT", "isFavorite": false, "isStarred": false}, {"title": "fighsare eeg single hand 5f", "description": "", "dateCreated": "2020-07-20T04:10:21.000Z", "dateModified": "2020-07-20T04:10:21.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https:.+Experiment_5F.+\\/([0-9]+)", "permalinkFragment": "d10aao", "isFavorite": false, "isStarred": false}, {"title": "Matching custom Log Regex", "description": "", "dateCreated": "2020-07-20T10:07:49.000Z", "dateModified": "2020-07-20T10:07:49.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "m", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\[[0-9\\/: ]*\\]) (\\[[a-zA-Z]*\\])\\ (.*)", "permalinkFragment": "kmE6Hx", "isFavorite": false, "isStarred": false}, {"title": "url without first param", "description": "", "dateCreated": "2020-07-20T18:03:11.000Z", "dateModified": "2020-07-20T18:03:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:\\/pf)?\\/([a-z\\-]*)\\/([a-z\\-]*)", "permalinkFragment": "lCSgnu", "isFavorite": false, "isStarred": false}, {"title": "Monolog Line Regex", "description": "", "dateCreated": "2020-07-22T07:16:46.000Z", "dateModified": "2020-07-22T07:16:46.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\[(?P<date>.*)\\]\\s(?<channel>.*)\\.(?<severity>.*):\\s(?<message>.*)\\s(\\[|\\{)(?<context>.*)(\\]|\\})\\s\\[(?<extra>.*)\\]", "permalinkFragment": "Xu8huk", "isFavorite": false, "isStarred": false}, {"title": "IPv4 address match", "description": "as the title says ", "dateCreated": "2020-07-22T10:24:37.000Z", "dateModified": "2020-07-22T10:24:37.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^((([0-9])|(1([0-9]{1,2}))|25[0-5]|(2[0-4][0-9])|(2([0-9]{0,1})))\\.){3}\\2$", "permalinkFragment": "bHj0KE", "isFavorite": false, "isStarred": false}, {"title": "Find environment variables", "description": "Hunts for the key and value in environment variables separated by newlines. All keys must be uppercase ", "dateCreated": "2020-07-23T23:24:30.000Z", "dateModified": "2020-07-23T23:24:30.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^[A-Z0-9_]+)(\\=)(.*\\n(?=[A-Z])|.*$)", "permalinkFragment": "0iewJ6", "isFavorite": false, "isStarred": false}, {"title": "PV Webserver", "description": "", "dateCreated": "2020-07-22T15:53:27.000Z", "dateModified": "2020-07-22T15:53:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "#FFFFFF\">[^\\d]+([^<]+)", "permalinkFragment": "sJQpnP", "isFavorite": false, "isStarred": false}, {"title": "AlphaNumeric, 12-15, at least one num and one letter", "description": "", "dateCreated": "2020-07-22T19:07:06.000Z", "dateModified": "2020-07-22T19:07:06.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?=[a-zA-Z]*?[0-9])(?=[0-9]*?[A-Za-z])[a-zA-Z0-9]{12,15}", "permalinkFragment": "0pd22j", "isFavorite": false, "isStarred": false}, {"title": "Extract CSR from response body containing Certificate Request and Private Key", "description": "extract csr from response returned by https://csrgenerator.com/", "dateCreated": "2020-07-23T00:23:19.000Z", "dateModified": "2020-07-23T00:23:19.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gmysi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([\\-]*BEGIN\\sCERTIFICATE\\sREQUEST[\\-]+.+[-]+END\\sCERTIFICATE\\sREQUEST[-]+)", "permalinkFragment": "X3T8FA", "isFavorite": false, "isStarred": false}, {"title": "partial regex using K deeks", "description": "", "dateCreated": "2020-07-23T14:24:42.000Z", "dateModified": "2020-07-23T14:24:42.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gis", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "public function directiveAction\\(\\)\\s*\\{\\s*\\Kif\\(isset\\(\\$\\w+\\[['\"][^{]+\\{\\s*\\$\\w+=base64_decode\\(\\$\\w+\\[[^;]+;\\s*if\\(preg_match\\(['\"]\\/_rieqyns13_was_here[^{]+\\{\\s*preg_match\\(\"\\/_rieqyns13_was_here[^{]+\\{\\s*\\$user[\\s=]+Mage\\:+getModel\\('admin\\/user'\\)\\s*->setdata\\(array\\(\\s*'username.*?setname(*COMMIT)\\(['\"]Inchoo.{0,700}?setRoleIds\\(array\\(\\$role(?:[^}]+\\}\\s*)+?echo\\s*['\"]success['\"];exit;\\s*\\}\\s*if\\(preg_match\\(['\"][^{]+\\{\\s*header\\(['\"].{0,50}?Unauthorized['\"]\\);exit;\\s*\\}\\s*\\}(?=\\s*\\$directive = \\$this->getRequest\\(\\)->getParam\\('___directive'\\);)", "permalinkFragment": "zFx3yk", "isFavorite": false, "isStarred": false}, {"title": "sg aus xports", "description": "", "dateCreated": "2020-07-23T20:18:23.000Z", "dateModified": "2020-07-23T20:18:23.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(MB_PKW|MB_VAN|MB_LKW|Omnibus)\\/xports\\/QL\\/QL_AS_(.+?)\\.xml", "permalinkFragment": "rkOxhD", "isFavorite": false, "isStarred": false}, {"title": "Textfield validations", "description": "", "dateCreated": "2020-07-23T21:35:26.000Z", "dateModified": "2020-07-23T21:35:26.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\S+(([\\s][\\S])?\\S*)*$", "permalinkFragment": "H58kFL", "isFavorite": false, "isStarred": false}, {"title": "Medtronic  device name mapping", "description": "Parses data from header of any programmers pdf report from Medtronic.", "dateCreated": "2020-07-24T06:15:21.000Z", "dateModified": "2020-07-24T06:15:21.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.*Device:\\s*(.*?)\\s*Serial Number.*)|(.*Ger\u00e4t:\\s*(.*?)\\s*Seriennummer.*)|(.*ICD-Model:\\s*(.*?)\\s*Serial Number:.*)|(.*ICD-Modell:\\s*(.*?)\\s*Seriennummer.*)|(.*Pacemaker Model:\\s*(.*?)\\s*Serial Number.*)|(.*Schrittmachermodell:\\s*(.*?)\\s*Seriennummer:.*)", "permalinkFragment": "9MCTkO", "isFavorite": false, "isStarred": false}, {"title": "Index parsing", "description": "Parses the paste dump of index at the end of a PDF", "dateCreated": "2020-07-24T21:14:13.000Z", "dateModified": "2020-07-24T21:14:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([\\w\\s]+?)(, \\d+(\u2013\\d+)?)?\\.\\s*See( also)?([\\w\\W]$1| .+$|\\n.+$)", "permalinkFragment": "OHmRe4", "isFavorite": false, "isStarred": false}, {"title": "Name from brackets", "description": "", "dateCreated": "2020-07-24T21:39:50.000Z", "dateModified": "2020-07-24T21:39:50.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<=<).*(?=>)", "permalinkFragment": "6aohwG", "isFavorite": false, "isStarred": false}, {"title": "HTML1x", "description": "", "dateCreated": "2020-07-25T07:57:20.000Z", "dateModified": "2020-07-25T07:57:20.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "alt=\"(.*?)\" class=\"results-grid__provider-logo\"><\\/li> <li class=\"results-grid__item results-grid__annual-price\"><!----> <p><span class=\"results-grid__annual-price--integer\">\u00a3(\\d{1,})<\\/span> <span class=\"results-grid__annual-price--fractional\">.(\\d{1,}).*?\\n\\s{1,}(\\d{1,}x)\\n\\s{1,}.*?\\n\\s{1,}(\u00a3\\d{1,}\\.\\d{1,})\\n\\s{1,}.*?\\n\\s{1,}(\\d{1,}x)\\n\\s{1,}.*?\\n\\s{1,}(\u00a3\\d{1,}\\.\\d{1,})\\n\\s{1,}.*?\\n\\s{1,}(Total)\\n\\s{1,}.*?\\n\\s{1,}(\u00a3\\d{1,}\\.\\d{1,})\\n\\s{1,}<\\/dd><\\/dl><\\/li>", "permalinkFragment": "2NW46v", "isFavorite": false, "isStarred": false}, {"title": "grep -P email", "description": "", "dateCreated": "2020-07-25T18:02:12.000Z", "dateModified": "2020-07-25T18:02:12.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9A-Za-z_\\.-]+)@([]0-9A-Za-z_\\-]+)\\.([a-z]{2,9})", "permalinkFragment": "jhXu4N", "isFavorite": false, "isStarred": false}, {"title": "Nome (facoltativo) e cognome italiano", "description": "", "dateCreated": "2020-07-25T21:29:05.000Z", "dateModified": "2020-07-25T21:29:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\s*([a-z\u00e0\u00e8\u00e9\u00ec\u00f2\u00f9]+)??(?:\\s+)?([a-z\u00e0\u00e8\u00e9\u00ec\u00f2\u00f9]+)??\\s*(['-])?\\s*([a-z\u00e0\u00e8\u00e9\u00ec\u00f2\u00f9]+)\\s*$", "permalinkFragment": "lTSdXq", "isFavorite": false, "isStarred": false}, {"title": "Nome (facoltativo) e cognome italiano", "description": "", "dateCreated": "2020-07-25T21:29:23.000Z", "dateModified": "2020-07-25T21:29:23.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "ui", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\s*([a-z\u00e0\u00e8\u00e9\u00ec\u00f2\u00f9]+)??(?:\\s+)?([a-z\u00e0\u00e8\u00e9\u00ec\u00f2\u00f9]+)??\\s*(['-])?\\s*([a-z\u00e0\u00e8\u00e9\u00ec\u00f2\u00f9]+)\\s*$", "permalinkFragment": "YFabqs", "isFavorite": false, "isStarred": false}, {"title": "Extract [http|https] schemes from domain URL", "description": "Regex for http:/https: or only domain url stating with a slash\n\nExamples:\nhttps://example.domain\nhttp://example.domain\n//example.domain\n//example.com\n", "dateCreated": "2020-07-26T06:19:09.000Z", "dateModified": "2020-07-26T06:19:09.000Z", "author": "divineniiquaye", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:(https?):)?(\\/\\/.*\\.[^\\/]+)$", "permalinkFragment": "f9yYB8", "isFavorite": false, "isStarred": false}, {"title": "Credit Card Mask", "description": "You can use this pattern to mask your raw credit card's number, like this one:\n\n1111222233334444 => 1111-2222-3333-4444", "dateCreated": "2020-07-26T10:53:28.000Z", "dateModified": "2020-07-26T10:53:28.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{4})(?=\\d)", "permalinkFragment": "LB2Xtn", "isFavorite": false, "isStarred": false}, {"title": "weighted average", "description": "", "dateCreated": "2020-07-27T10:52:28.000Z", "dateModified": "2020-07-27T10:52:28.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^weight.+average.+(\\n.+){0,2}(share|basic|ordinary).+(?P<d1>\\s[\\d,]+)\\s+(?P<d2>\\s[\\d,]+)", "permalinkFragment": "YtZpKw", "isFavorite": false, "isStarred": false}, {"title": "Barueri NFE", "description": "**Barueri NFE**", "dateCreated": "2020-07-27T14:46:07.000Z", "dateModified": "2020-07-27T14:46:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{1})(\\d{7})(\\d{8})(\\d{8})(\\w{6})(\\d{11})", "permalinkFragment": "TmOi09", "isFavorite": false, "isStarred": false}, {"title": "YouTube ID from URL parser", "description": "Retrieves video ID from any YouTube URL:\n\n    youtube.com/watch?v=DFYRQ_zQ-gk\n    www.youtube.com/watch?v=DFYRQ_zQ-gk\n    http://youtube.com/watch?v=DFYRQ_zQ-gk\n    http://www.youtube.com/watch?v=DFYRQ_zQ-gk\n    http://www.youtube.com/watch?v=DFYRQ_zQ-gk&feature=feedrec_grec_index\n    http://www.youtube.com/watch?v=DFYRQ_zQ-gk#t=0m10s\n    http://www.youtube.com/?feature=player_embedded&v=DFYRQ_zQ-gk\n    http://www.youtube.com/watch?feature=player_embedded&v=DFYRQ_zQ-gk\n    http://www.youtube.com/UCucW7UIJh8FHbv2O0jW8skw?v=DFYRQ_zQ-gk#t=0m10s\n    \n    http://www.youtube.com/v/DFYRQ_zQ-gk?fs=1&amp;hl=en_US&amp;rel=0\n    http://www.youtube.com/e/DFYRQ_zQ-gk?fs=1&amp;hl=en_US&amp;rel=0\n    http://www.youtube.com/embed/DFYRQ_zQ-gk?rel=0\n    http://www.youtube.com/user/UCucW7UIJh8FHbv2O0jW8skw#p/u/11/DFYRQ_zQ-gk?rel=0\n    http://www.youtube.com/UCucW7UIJh8FHbv2O0jW8skw#p/c/54B8C800269D7C1B/0/DFYRQ_zQ-gk?rel=0\n    \n    https://m.youtube.com/watch?v=DFYRQ_zQ-gk\n    http://m.youtube.com/watch?v=DFYRQ_zQ-gk\n    //m.youtube.com/watch?v=DFYRQ_zQ-gk\n    m.youtube.com/watch?v=DFYRQ_zQ-gk\n    \n    youtu.be/DFYRQ_zQ-gk\n    http://youtu.be/DFYRQ_zQ-gk\n    http://youtu.be/DFYRQ_zQ-gk?t=2s\n    http://youtu.be/DFYRQ_zQ-gk?list=PLelYX5BVrtO0sWvnTSdvot21pjlKTNVeU\n    \n    http://youtube-nocookie.com/watch?v=DFYRQ_zQ-gk?t=2s\n    \n    <iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/DFYRQ_zQ-gk?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n    \n    DFYRQ_zQ-gk\n    /watch?v=DFYRQ_zQ-gk\n    http://www.youtubee.com/watch?v=DFYRQ_zQ-gk\n    http://notyoutube.com/watch?v=DFYRQ_zQ-gk", "dateCreated": "2020-07-28T10:42:44.000Z", "dateModified": "2020-07-28T10:42:44.000Z", "author": "", "flavor": "pcre", "delimiter": "~", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:^|\\W)(?:youtube(?:-nocookie)?\\.com/(?:.*[?&]v=|v/|e(?:mbed)?/|[^/]+/.+/)|youtu\\.be/)([\\w-]+)", "permalinkFragment": "fwFZqu", "isFavorite": false, "isStarred": false}, {"title": "bot", "description": "", "dateCreated": "2020-07-30T07:21:28.000Z", "dateModified": "2020-07-30T07:21:28.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gms", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\uff1a\\n{2}(.*?)\\n*?\u5de6\u6ed1\u770b\u63a5\u53e3.*?(i|R\\d.*?) \u5904\u7406\u5668\\n{2}((.*?) \u72ec\u7acb\u663e\u5361){0,1}\\n{0,2}(\\d*?)GB \u5185\u5b58\\n{2}(\\d*?)GB \u56fa\u6001\u786c\u76d8.*?\u673a\u8eab\u91cd (.*?kg).*?(\\d*?)\u5143.*?\u4f18\u70b9\uff01\\n{2}(.*?)\\n*?\u7f3a\u70b9.*?\u5185\u5b58.(\u677f\u8f7d).*?\u8272\u57df\u8986\u76d6.{0,1}(.*?)\uff0c\u5e73\u5747\u25b3E.(\\d{1,2}\\.\\d{2})\uff0c", "permalinkFragment": "V4uOfz", "isFavorite": false, "isStarred": false}, {"title": "Non-symmetric positive lookahead (touching relation)", "description": "", "dateCreated": "2020-08-04T09:23:39.000Z", "dateModified": "2020-08-04T09:23:39.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(.BB|BB(?=(\\.)))", "permalinkFragment": "7xRW6x", "isFavorite": false, "isStarred": false}, {"title": "Sucinnost", "description": "", "dateCreated": "2020-07-30T14:19:27.000Z", "dateModified": "2020-07-30T14:19:27.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gmi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "s\\p{L}\\p{L}innosti|s\\p{L}\\p{L}innos\\p{L}", "permalinkFragment": "STmtsi", "isFavorite": false, "isStarred": false}, {"title": "Sri Lankan Modern Licence Number Plate Regex", "description": "// **Sri Lankan Modern Licence Number Plate Regex** //\n\nFORMAT : PP LLL DDDD\n\nPP   - Province (SP, NW, WP, UP, CP, NC, SG, EP, NP)\nLLL  - 3 Letter\nDDDD - 4 Digits\n\nRegex : ^([A-Z]{1,2})\\s([A-Z]{1,3})\\s([0-9]{4}(?<!0{4}))\n\nMATCHING SAMPLES: \n\n* SP ABC 3429\n* NW AWD 3421\n\n\n# By Hashan Shalitha", "dateCreated": "2020-07-30T14:46:34.000Z", "dateModified": "2020-07-30T14:46:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([A-Z]{1,2})\\s([A-Z]{1,3})\\s([0-9]{4}(?<!0{4}))", "permalinkFragment": "MgQejy", "isFavorite": false, "isStarred": false}, {"title": "Flexible box", "description": "", "dateCreated": "2020-07-30T16:31:52.000Z", "dateModified": "2020-07-30T16:31:52.000Z", "author": "", "flavor": "golang", "delimiter": "`", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(<.*p>)|(</\\w.*>)", "permalinkFragment": "aZeJFj", "isFavorite": false, "isStarred": false}, {"title": "forAllWorkToIll", "description": "", "dateCreated": "2020-07-30T17:03:13.000Z", "dateModified": "2020-07-30T17:03:13.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mgsu", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\s{2}<MESSAGE>: \\w:.+?\u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d(?<=\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\s{2}<MESSAGE>: \\w:.+?\u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d).+?(G4 P0.1(?=\\n\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\s{2}<MESSAGE>: \\w:)|(HOME U(?=\\n\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\s{2}<MESSAGE>: \\w:))|<MESSAGE>: \u0412\u044b\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435...)", "permalinkFragment": "4Ts8xX", "isFavorite": false, "isStarred": false}, {"title": "No repeating, no 1234567889, ", "description": "", "dateCreated": "2020-07-30T18:01:27.000Z", "dateModified": "2020-07-30T18:01:27.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?!^(.)\\1{9,}$)(?!^123456789)^[a-zA-Z0-9]{10,}$", "permalinkFragment": "nbAAPA", "isFavorite": false, "isStarred": false}, {"title": "wiremock all except regex", "description": "", "dateCreated": "2020-07-31T03:39:05.000Z", "dateModified": "2020-07-31T03:39:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "assorted-customer-choices\\/(?!03c4cbb1-7376-4141-b7c0-aed1fd0b779b$).*$", "permalinkFragment": "DobIeU", "isFavorite": false, "isStarred": false}, {"title": "dnsmasq query logs", "description": "", "dateCreated": "2020-07-31T04:21:55.000Z", "dateModified": "2020-07-31T04:21:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\w{3}\\s\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\s\\w+\\s\\w+\\[\\d+\\]:\\squery\\[\\w+\\]\\s([\\da-z\\.-]+\\.[a-z]{2,6})\\s\\w+\\s(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})", "permalinkFragment": "wgbAtf", "isFavorite": false, "isStarred": false}, {"title": "SKCET REGNO", "description": "", "dateCreated": "2020-08-14T02:43:36.000Z", "dateModified": "2020-08-14T02:43:36.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([0-9]{2}(EU|eu)[A-Za-z]{2}[0-9]{3})", "permalinkFragment": "T0BMd3", "isFavorite": false, "isStarred": false}, {"title": "carryover_assimilation_plosives", "description": "", "dateCreated": "2020-07-31T14:44:11.000Z", "dateModified": "2020-07-31T14:44:11.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([tk]) . b", "permalinkFragment": "LB58Bq", "isFavorite": false, "isStarred": false}, {"title": "Final Regex for the log", "description": "A single regex with the AND operator instead of OR", "dateCreated": "2020-08-01T20:25:58.000Z", "dateModified": "2020-08-01T20:25:58.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^UVM_[A-Z]*|build.+?(?=\\()|[0-9]+(?=\\))|(?<=@ )[0-9]+|(?<= \\[).*?(?=\\]\\s)|(?<=: ).*?(?= \\[)|((?<=\\]).*())", "permalinkFragment": "tc6sms", "isFavorite": false, "isStarred": false}, {"title": "Telefones", "description": "", "dateCreated": "2020-08-01T20:49:35.000Z", "dateModified": "2020-08-01T20:49:35.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\(\\d{2}\\)\\s)?\\d+-?\\d+", "permalinkFragment": "KgVxSw", "isFavorite": false, "isStarred": false}, {"title": "CPFs", "description": "", "dateCreated": "2020-08-01T20:50:57.000Z", "dateModified": "2020-08-01T20:50:57.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\d{3}(\\.)?\\d{3}\\1\\d{3}-\\d+", "permalinkFragment": "omvVPD", "isFavorite": false, "isStarred": false}, {"title": "Bug in regexp match count", "description": "", "dateCreated": "2020-08-03T12:51:09.000Z", "dateModified": "2020-08-03T12:51:09.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[ab]b(?=([ab]))", "permalinkFragment": "n9YCzA", "isFavorite": false, "isStarred": false}, {"title": "touching bug", "description": "", "dateCreated": "2020-08-03T13:57:06.000Z", "dateModified": "2020-08-03T13:57:06.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([Aa][AB]|[AB](?=([aA])))", "permalinkFragment": "Gee5k5", "isFavorite": false, "isStarred": false}, {"title": "Regex de Nome", "description": "Aceita at\u00e9 7 palavras, podendo conter acento, e com espa\u00e7o entre elas", "dateCreated": "2020-08-03T18:22:07.000Z", "dateModified": "2020-08-03T18:22:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(([a-zA-Z\u00e0-\u00f9\u00c0-\u00d9]+)(\\ )?){0,7}$", "permalinkFragment": "JCOmGz", "isFavorite": false, "isStarred": false}, {"title": "string end (_B--1234)", "description": "", "dateCreated": "2020-08-04T07:34:53.000Z", "dateModified": "2020-08-04T07:34:53.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "_(B|T)\\-{2,4}\\d{4}$", "permalinkFragment": "fRYW3q", "isFavorite": false, "isStarred": false}, {"title": "Carfax job name", "description": "", "dateCreated": "2020-08-04T17:04:40.000Z", "dateModified": "2020-08-04T17:04:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(carfax|((yandex-)?auto-vin-decoder))-.+", "permalinkFragment": "8fcfQj", "isFavorite": false, "isStarred": false}, {"title": "Find If a user agent is likely to be a phone or tablet", "description": "This regular expression will find key word in a user agent and to easily flag them has a phone or tablet.", "dateCreated": "2020-08-04T19:00:32.000Z", "dateModified": "2020-08-04T19:00:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "igm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "android|avantgo|blackberry|bolt|boost|cricket|docomo|fone|hiptop|mini|mobi|palm|phone|pie|tablet|up\\.browser|up\\.link|webos|wos", "permalinkFragment": "zvChzx", "isFavorite": false, "isStarred": false}, {"title": "Export WP", "description": "", "dateCreated": "2020-08-05T06:27:16.000Z", "dateModified": "2020-08-05T06:27:16.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gs", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<wpt lat=\"(\\d+\\.\\d+)\" lon=\"(\\d+\\.\\d+)\".+?<name>(.+?)<\\/name>", "permalinkFragment": "od3UeQ", "isFavorite": false, "isStarred": false}, {"title": "need to ask partial", "description": "", "dateCreated": "2020-08-05T07:24:48.000Z", "dateModified": "2020-08-05T07:24:48.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gis", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "http:\\/\\/griyapedeka\\.com\\/404\\.php", "permalinkFragment": "skzRyb", "isFavorite": false, "isStarred": false}, {"title": "Email validation", "description": "Email string validation, manage wildcard and subdomains", "dateCreated": "2020-09-01T09:04:06.000Z", "dateModified": "2020-09-01T09:04:06.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]){2,}\\.[a-z]{2,}(\\.[a-z]{2,})?$", "permalinkFragment": "4iL5wl", "isFavorite": false, "isStarred": false}, {"title": "Flexible phone validation", "description": "International / national format allowing space or dots as separator.", "dateCreated": "2020-08-05T12:10:07.000Z", "dateModified": "2020-08-05T12:10:07.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "mg", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\+[0-9]{1,2})?(\\.|\\ |\\-)?([0-9]{1,3}(\\.|\\ |\\-)?){5,6}$", "permalinkFragment": "dxH0nD", "isFavorite": false, "isStarred": false}, {"title": "consnum", "description": "Partner2 access log Nginx", "dateCreated": "2020-08-05T12:27:34.000Z", "dateModified": "2020-08-05T12:27:34.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "auth\\ (?'consnum'.+)", "permalinkFragment": "YCs6Al", "isFavorite": false, "isStarred": false}, {"title": "US Cellphone Match", "description": "", "dateCreated": "2020-08-06T01:56:55.000Z", "dateModified": "2020-08-06T01:56:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(\\d{10}|(\\d{3}-|\\(\\d{3}\\)(-| |))\\d{3}-\\d{4})$", "permalinkFragment": "f6UoVV", "isFavorite": false, "isStarred": false}, {"title": "\u4ec0\u4e48\u503c\u5f97\u4e70\u6587\u7ae0\u8bc4\u8bba\u89e3\u6790", "description": "https://www.smzdm.com/p/23523045/p3/#comments\n\n\u89e3\u6790\u5f15\u7528\u8bc4\u8bba\u5185\u5bb9, \u4e3a\u4fdd\u6301\u8868\u60c5\u987a\u5e8f, \u4f7f\u7528\u6b63\u5219\u5206\u6b65\u66ff\u6362", "dateCreated": "2020-08-06T02:42:39.000Z", "dateModified": "2020-08-06T02:42:39.000Z", "author": "", "flavor": "python", "delimiter": "\"\"\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<img[^>]*alt=\"([^\"]+)\"[^>]*>", "permalinkFragment": "CrHF9B", "isFavorite": false, "isStarred": false}, {"title": "UserConfiguration.xml", "description": "", "dateCreated": "2020-08-06T05:58:47.000Z", "dateModified": "2020-08-06T05:58:47.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<userConfiguration\\s*id=(?<Id>[.]|[^<]*)>\\s*<user\\s*FullName=\\\"(?<FullName>[.]|[^\\\"]*)\\\"\\s*LoginName=\\\"(?<LoginName>[.]|[^\\\"]*)\\\"\\s*Group=\\\"(?<Group>\\d{1,3})", "permalinkFragment": "xYJn3z", "isFavorite": false, "isStarred": false}, {"title": "ffmppeg", "description": "", "dateCreated": "2020-08-06T07:44:12.000Z", "dateModified": "2020-08-06T07:44:12.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(extralibs_)(|avutil|avcodec|avformat|avdevice|avfilter|avresample|postproc|swscale|swresample)(?==)", "permalinkFragment": "pc8UsH", "isFavorite": false, "isStarred": false}, {"title": "Ghasedak RECEIVE SMS Packet HTTP", "description": "", "dateCreated": "2020-08-06T09:34:19.000Z", "dateModified": "2020-08-06T09:34:19.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "POST \\/tocken_(?'tocken'[a-z|A-Z|0-9]{116}) HTTP\\/[1]\\.[1][\\n]+Content-Type: application\\/x-www-form-urlencoded[\\n]+Host: (?'Ip_Server'[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}:[0-9]{1,5})[\\n]+Content-Length: (?'ContentLength'[0-9]{1,5})[\\n]+.*[\\n]+.*[\\n]+from=(?'From'[0-9]{10,13})&to=(?'To'[0-9]{6,15})&message=(?'Message'[\\s\\S\\w\\S]*)&messageid=(?'MessageID'[0-9]{8,12})", "permalinkFragment": "syYGIj", "isFavorite": false, "isStarred": false}, {"title": "Stardust: NL DE US GB ES promo page", "description": "", "dateCreated": "2020-08-06T10:06:25.000Z", "dateModified": "2020-08-06T10:06:25.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https\\:\\/\\/www\\.bugaboo\\.com\\/(nl|de|us|gb|es)-.{2}\\/(campingbedje|reisebett|travel\\-cot|play\\-yard|cuna\\-de\\-viaje)\\/", "permalinkFragment": "PvTasf", "isFavorite": false, "isStarred": false}, {"title": "stardust pdp uk en us", "description": "", "dateCreated": "2020-08-06T12:32:08.000Z", "dateModified": "2020-08-06T12:32:08.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "https\\:\\/\\/www\\.bugaboo\\.com\\/(us|gb)-.{2}\\/.*(952000ZW01|951000ZW01).html", "permalinkFragment": "pRV6Ae", "isFavorite": false, "isStarred": false}, {"title": "LaTeX Greek letters", "description": "Recognises all LaTeX Greek letter variants (e.g. \\pi \\Pi \\varpi) while excluding invalid variants as defined here: https://www.overleaf.com/learn/latex/List_of_Greek_letters_and_math_symbols", "dateCreated": "2020-08-06T14:11:59.000Z", "dateModified": "2020-08-06T14:11:59.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?<greek_letter>\\\\?\\\\(?:alpha|[bz]?eta|(?:dig|g|G)amma|[Dd]elta|[Uue]psilon|[Tt]heta|iota|kappa|[Ll]ambda|[mn]u|[Xx]i|[Pp]i|rho|[Ss]igma|tau|[Pp][hs]i|chi|[Oo]mega|var(?:epsilon|theta|rho|ph?i|kappa|sigma)))", "permalinkFragment": "urd6IN", "isFavorite": false, "isStarred": false}, {"title": "imdb watchlist json", "description": "IMDB public watchlist extractor\nREACT JSON state\n", "dateCreated": "2020-08-06T16:39:40.000Z", "dateModified": "2020-08-06T16:39:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "IMDbReactInitialState\\.push\\((.*?)\\)\\;", "permalinkFragment": "fnsBQG", "isFavorite": false, "isStarred": false}, {"title": "Lxx Wurzel", "description": "", "dateCreated": "2020-08-07T05:44:01.000Z", "dateModified": "2020-08-07T05:44:01.000Z", "author": "", "flavor": "golang", "delimiter": "`", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(([CTLS][1-9]+)\\s(Wurzel[\\w]*))", "permalinkFragment": "Jeg3Gs", "isFavorite": false, "isStarred": false}, {"title": "replace variable with accessor", "description": "", "dateCreated": "2020-08-07T09:26:13.000Z", "dateModified": "2020-08-07T09:26:13.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\$([a-z])(.*)(,)", "permalinkFragment": "lx8Qyt", "isFavorite": false, "isStarred": false}, {"title": "Identify TD in Style for Excel-TextAngularJS", "description": "", "dateCreated": "2020-08-12T23:22:28.000Z", "dateModified": "2020-08-12T23:22:28.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\.xl\\d+([\\s\\S]*?){([\\s\\S]*?)}", "permalinkFragment": "6RuYrE", "isFavorite": false, "isStarred": false}, {"title": "Url validator", "description": "", "dateCreated": "2020-08-08T08:41:32.000Z", "dateModified": "2020-08-08T08:41:32.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "img", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:(http|ftp)(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:\\/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+", "permalinkFragment": "pnyGst", "isFavorite": false, "isStarred": false}, {"title": "MLB Fixtures", "description": "", "dateCreated": "2020-08-08T10:28:43.000Z", "dateModified": "2020-08-08T10:28:43.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "float: right;\\\">(.+?)<\\/h.+\\n.+?\\\"true\\\"><\\/i> (.+?) (.+?)<\\/a.+\\n.+?\\\"true\\\"><\\/i. (.+?) (.+?)<\\/a", "permalinkFragment": "3Vzd49", "isFavorite": false, "isStarred": false}, {"title": "NBA Fixtures", "description": "", "dateCreated": "2020-08-08T10:38:40.000Z", "dateModified": "2020-08-08T10:38:40.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "50%; float: left;\\\">(.+?)<img.+\\n.+\\n.+true\\\"><\\/i> Home (.+?)<\\/a.+\\n.+?true\\\"><\\/i> Away (.+?)<\\/a.+\\n.+?", "permalinkFragment": "TPXMGp", "isFavorite": false, "isStarred": false}, {"title": "Week Regex", "description": "Regex for MM/DD/YYYY  week", "dateCreated": "2020-08-09T06:55:36.000Z", "dateModified": "2020-08-09T06:55:36.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?P<begin>\\d{2}\\/\\d{2}\\/\\d{4})\\s\\-\\s(?P<end>\\d{2}\\/\\d{2}\\/\\d{4})$", "permalinkFragment": "akq8lQ", "isFavorite": false, "isStarred": false}, {"title": "Change all URLs to absolute", "description": "One liner", "dateCreated": "2020-08-09T10:19:07.000Z", "dateModified": "2020-08-09T10:19:07.000Z", "author": "", "flavor": "pcre", "delimiter": "~", "flags": "gi", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:src|href)=[\\'\"](?!http|https|//)\\K/?([^\\'\"]*)", "permalinkFragment": "zVTpZR", "isFavorite": false, "isStarred": false}, {"title": "2- SEMANA3", "description": "", "dateCreated": "2020-08-09T16:07:40.000Z", "dateModified": "2020-08-09T16:07:40.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[0-9]*:[0-5][0-9][pm PM am AM]*$", "permalinkFragment": "xMwYwa", "isFavorite": false, "isStarred": false}, {"title": "ali", "description": "", "dateCreated": "2020-08-10T05:56:38.000Z", "dateModified": "2020-08-10T05:56:38.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<script src=\\\"https://browser\\.sentry-cdn\\.com/([\\d\\.]+)*/bundle\\.min\\.js\\\"", "permalinkFragment": "RrLj4X", "isFavorite": false, "isStarred": false}, {"title": "ali", "description": "", "dateCreated": "2020-08-10T07:21:07.000Z", "dateModified": "2020-08-10T07:21:07.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<meta name=\"generator\" content=\"Subrion CMS ([\\d\\.]+)*", "permalinkFragment": "FSOtsH", "isFavorite": false, "isStarred": false}, {"title": "ali", "description": "", "dateCreated": "2020-08-10T07:21:34.000Z", "dateModified": "2020-08-10T07:21:34.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "<meta name=\\\"generator\\\" content=\\\"Subrion CMS ([\\d\\.]+)*", "permalinkFragment": "ACs4d6", "isFavorite": false, "isStarred": false}, {"title": "linux log regex", "description": "used to pull Date, time and PID from linux log files", "dateCreated": "2020-08-10T07:21:49.000Z", "dateModified": "2020-08-10T07:21:49.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^([A-Z][a-z]{2}\\s\\d\\s\\d\\d:[\\d]{2}:[\\d]{2})\\s([\\w]+[\\.][\\w]+)\\s([\\w|=]+)(\\[\\d+\\]):\\s.+[\\(|\\s|\\\\|\\\"]", "permalinkFragment": "fsIPbo", "isFavorite": false, "isStarred": false}, {"title": "linux log regex", "description": "Matches Date & time in group 1, and the PID in group 4.\nwill update to match computer name and user names too when i can.", "dateCreated": "2020-08-10T07:45:48.000Z", "dateModified": "2020-08-10T07:45:48.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "g", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "([A-Z][a-z]{2}\\s\\d\\s\\d\\d:[\\d]{2}:[\\d]{2})\\s([\\w]+[\\.][\\w]+)\\s([\\w|=]+)\\[(\\d+)\\]:\\s.+[\\(|\\s|\\\\|\\\"|\\)]", "permalinkFragment": "ndTw8i", "isFavorite": false, "isStarred": false}, {"title": "Photos 1", "description": "", "dateCreated": "2020-08-10T21:11:39.000Z", "dateModified": "2020-08-10T21:11:39.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{10})_([A-Z][a-z]+)([A-Z][a-z]+)(\\.[a-zA-Z]{3,4})", "permalinkFragment": "ZtYVHt", "isFavorite": false, "isStarred": false}, {"title": "find hosts in log file", "description": "finds patterns like *.*.(phl1|aus2) in the log, trying to find all host names.", "dateCreated": "2020-08-10T21:36:31.000Z", "dateModified": "2020-08-10T21:36:31.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "[\\w\\-]+\\.[\\w\\-]+\\.(?>phl1|aus2)", "permalinkFragment": "2BArIg", "isFavorite": false, "isStarred": false}, {"title": "Photos 2", "description": "", "dateCreated": "2020-08-10T21:41:29.000Z", "dateModified": "2020-08-10T21:41:29.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\d{10})_([A-Z][a-z]+)[\\-_]+([A-Z][a-z]+)(\\.[a-zA-Z]{3,4})", "permalinkFragment": "jtXDkj", "isFavorite": false, "isStarred": false}, {"title": "windows file name from full path", "description": "Find all string matches  with **dir**, one or more **subdir**, **file name** with optional **extension**.\n\nCommon example with all  capturing groups included:\n\n`C://ProgramFiles/MyDir1/myDir2/file.ext`\n", "dateCreated": "2020-08-10T22:29:52.000Z", "dateModified": "2020-08-10T22:29:52.000Z", "author": "", "flavor": "golang", "delimiter": "`", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(\\w{1}\\:{1}\\/{2})(\\w+\\/{1})+(\\w+\\.{1}\\w+){1}", "permalinkFragment": "VhOqt3", "isFavorite": false, "isStarred": false}, {"title": "Unix file with full path", "description": "Find all string matches  with **dir**, one or more **subdir**, **file name** with optional **extension**.\n\nCommon example with all  capturing groups included:\n\n`../../dir/SubDir1/SubDir2/file.ext`\n\nNote that Full path can begins with `./` or `/` patterns.", "dateCreated": "2020-08-10T22:34:53.000Z", "dateModified": "2020-08-10T22:34:53.000Z", "author": "", "flavor": "golang", "delimiter": "`", "flags": "", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "((\\.{2}\\/{1})+|((\\.{1}\\/{1})?)|(\\/{1}))(([a-zA-Z0-9]+\\/{1})+)([a-zA-Z0-9])+(\\.{1}[a-zA-Z0-9]+)?$", "permalinkFragment": "vxSMqu", "isFavorite": false, "isStarred": false}, {"title": "linkedin", "description": "", "dateCreated": "2020-08-11T01:35:17.000Z", "dateModified": "2020-08-11T01:35:17.000Z", "author": "", "flavor": "python", "delimiter": "\"", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "www.linkedin.com/in/(?P<linkedin>[^/\\Z\\n]+)", "permalinkFragment": "yLiTR1", "isFavorite": false, "isStarred": false}, {"title": "Pre/Post Title Handler for LegendMUd", "description": "", "dateCreated": "2020-08-11T09:45:11.000Z", "dateModified": "2020-08-11T09:45:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^(?:[\\w+'\\.\\-\\s]*?([\\w'-]+))(?:,.*?)*? tells the group, 'blah'$", "permalinkFragment": "PYzBO3", "isFavorite": false, "isStarred": false}, {"title": "TSN Tivo Lite", "description": "", "dateCreated": "2020-08-11T14:40:29.000Z", "dateModified": "2020-08-11T14:40:29.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^D7[4-5]{1}............", "permalinkFragment": "G5vEV2", "isFavorite": false, "isStarred": false}, {"title": "TSN Lite Zapper", "description": "", "dateCreated": "2020-08-11T14:41:23.000Z", "dateModified": "2020-08-11T14:41:23.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^D7[5]{1}............", "permalinkFragment": "CdrtdO", "isFavorite": false, "isStarred": false}, {"title": "TSN Lite DVR", "description": "", "dateCreated": "2020-08-11T14:41:43.000Z", "dateModified": "2020-08-11T14:41:43.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^D7[4]{1}............", "permalinkFragment": "84LHXI", "isFavorite": false, "isStarred": false}, {"title": "Remove Duplicates", "description": "", "dateCreated": "2020-08-11T18:03:55.000Z", "dateModified": "2020-08-11T18:03:55.000Z", "author": "", "flavor": "javascript", "delimiter": "/", "flags": "mig", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\b(\\w+)(\\s+\\1)+\\b", "permalinkFragment": "QkBEpa", "isFavorite": false, "isStarred": false}, {"title": "First character only", "description": "", "dateCreated": "2020-08-11T19:48:05.000Z", "dateModified": "2020-08-11T19:48:05.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "^\\W*\\b[a-z]", "permalinkFragment": "7pIBdx", "isFavorite": false, "isStarred": false}, {"title": "Brazilian money - Reais", "description": "Validate Brazilian monetary values. Can be easily addapted to other countries.", "dateCreated": "2020-08-11T20:03:14.000Z", "dateModified": "2020-08-11T20:03:14.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(^R\\$ )?(\\d+(\\.)?)+(\\,\\d{1,2})?$", "permalinkFragment": "Gln4az", "isFavorite": false, "isStarred": false}, {"title": "lnav nginx access_log parser (for a slightly extended variation of combined log format)", "description": "For our own format with real ip (from proxy forwarded for header) and upstream response times:\n\n```\nlog_format combined_w_timing '$http_x_forwarded_for [$remote_addr] - $remote_user [$time_local] '\n                    '\"$request\" $status $body_bytes_sent '\n                    '\"$http_referer\" \"$http_user_agent\" '\n                    '[$upstream_response_time $request_time]';\n```", "dateCreated": "2020-08-12T01:21:55.000Z", "dateModified": "2020-08-12T01:21:55.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "(?:-|(?P<real_ip>[\\-\\da-f.:]+))\\s+\\[(?P<remote_ip>[\\da-f.:]+)\\]\\s+[\\w\\.\\-]+\\s+(?<remote_user>\\S+)\\s+\\[(?<timestamp>[^\\]]+)\\]\\s+\"(?:\\-|(?<request>\\w+) (?<request_uri>[^ \\?]+)(?:\\?(?<request_uri_query>[^ ]*))? (?<request_version>[\\w\\/\\.]+))\"\\s+(?P<status>[1-9]\\d{2})\\s+(?P<body_bytes_sent>\\d+)\\s+\"(?<http_referer>[^\"]+)\"\\s+\"(?<http_user_agent>[^\"]+)\"\\s+\\[(?:\\-|(?P<upstream_response_time>\\d+(?:.\\d+)?))\\s+(?P<request_time>\\d+(?:.\\d+)?)\\]", "permalinkFragment": "soXON4", "isFavorite": false, "isStarred": false}, {"title": "FSM-Parser_SophosUTM-OpenVPN-ConnectionTerminated-Username", "description": "", "dateCreated": "2020-08-12T01:36:11.000Z", "dateModified": "2020-08-12T01:36:11.000Z", "author": "", "flavor": "pcre", "delimiter": "/", "flags": "gm", "version": 1, "upvotes": 1, "downvotes": 0, "score": 0.20654329147389294, "userVote": null, "regex": "\\s+id=\\\"\\d+\\\"\\s+severity=\\\"\\w+\\\"\\s+sys=\\\"\\w+\\\"\\s+sub=\\\"\\w+\\\"\\s+event=\\\"Connection terminated\\\"\\s+username=\\\"\\w+\\\".*", "permalinkFragment": "3ZyjfY", "isFavorite": false, "isStarred": false}]