function RegexHighlighter(e,n){let s=void 0;function c(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/ |&nbsp;/g,'<span class="space special-chars"> </span>').replace(/\n/g,'<span class="endline special-chars">\n</span>').replace(/\t/g,'<span class="tab special-chars">\t</span>')}const o=(e,a,{extraClass:t="",extraAttributes:r="",closeTag:n=!0})=>{let s=[e.type];""!==t&&s.push(t);let p=`<span class="${s.join(" ")}" tokenId="${e.id}" tokenIndices="${e.indices.join(",")}" ${r}>${a}`;return n&&(p+="</span>"),p},u=(a,e,t)=>{if(quant="",a.repeat)if(a.commentRepeatId){let e=t.filter(e=>e.id===a.commentRepeatId)[0];e.repeatComment=a.repeat.raw,e.repeatTokenId=a.id}else quant=`<i greedy="${!a.repeat.nonGreedy}">${a.repeat.raw}</i>`;return quant};var a=(e,a,t)=>{let r=c(e.raw);return e.repeat&&(t=u(e,0,t),r=c(e.raw.slice(0,e.repeat.beginIndex)),r+=t),o(e,r,{})},t=(e,a,t)=>{let r=c(e.raw);return e.repeat&&(t=u(e,0,t),r=c(e.raw.slice(0,e.repeat.beginIndex)),r+=t),o(e,r,{extraAttributes:`chars="${e.chars}"`})};const p={assert:(t,e,a)=>{var r={AssertBegin:[t.raw,""],AssertLookahead:['<span class="parenthesis">(</span>?=','<span class="parenthesis">)</span>'],AssertNegativeLookahead:['<span class="parenthesis">(</span>?!','<span class="parenthesis">)</span>'],AssertNonWordBoundary:["\\B",""],AssertWordBoundary:["\\b",""],AssertEnd:[t.raw,""]};let n="";"sub"in t&&t.sub.forEach((e,a)=>{n+=h(e,a,t.sub)});let s=`${r[t.assertionType][0]}${n}`;return t.raw.slice(t.endParenIndex-t.indices[0]).startsWith(")")&&(s+=r[t.assertionType][1]),s+=u(t,0,a),o(t,s,{extraClass:t.assertionType})},backref:a,charset:(e,a,t)=>{let r=c(e.raw);return e.repeat&&(t=u(e,0,t),r=c(e.raw.slice(0,e.repeat.beginIndex)),r+=t),o(e,r,{})},choice:(e,a,t)=>{let n="";return e.branches.forEach((t,e,a)=>{let r="";t.forEach((e,a)=>{r+=h(e,a,t)}),n+=`<span class="branch">${r}</span>`,e!==a.length-1&&(n+='<span class="or">|</span>')}),e.repeat&&(t=u(e,0,t),n+=t),o(e,n,{})},dot:(e,a,t)=>{let r="";return e.repeat&&(r=u(e,0,t)),o(e,`.${r}`,{extraClass:"dot"})},empty:()=>"",exact:a,group:(t,e,a)=>{let r="";t.sub.forEach((e,a)=>{r+=h(e,a,t.sub)});var n=`non-capture="${t.nonCapture||"false"}" group-number="${t.num||""}" group-name="${t.name||""}"`;let s=t.nonCapture?"?:":"";var p={"(?P":`?P<${t.name}>`,"(?<":`?<${t.name}>`,"(?'":`?'${t.name}'`};t.raw.slice(0,3)in p&&(s=t.name?p[t.raw.slice(0,3)]:"",s=c(s));let l='<span class="parenthesis">)</span>';t.raw.slice(t.endParenIndex-t.indices[0]).startsWith(")")||(l="");let i=`<span class="parenthesis">(</span>${s}${r}${l}`;return t.repeat&&(a=u(t,0,a),i+=a),o(t,i,{extraAttributes:n})},hexadecimal:t,unicode:t,octal:t,comment:(e,a,t)=>{var r;let n='<span class="parenthesis">)</span>';e.errors&&e.errors.some(e=>"UnterminatedGroup"===e.type)&&(n="");let s=0;e.repeatComment&&(s=e.repeatComment.length),e.raw.substr(0,e.raw.length-s).endsWith(")")||(n="");let p=`<span class="parenthesis">(</span>?#${e.comment}${n}`;return e.repeatComment&&(r=`<i data-repeattokenid="${e.repeatTokenId}">${e.repeatComment}</i>`,p+=r),o(e,p,{})},unexpected:a},h=(e,a,t)=>{let r="";return e.type in p&&(r+=p[e.type](e,a,t)),r},l=(t,e)=>{let r="";void 0===t?r=`<span>${e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}</span>`:t.tree.forEach((e,a)=>{r+=h(e,a,t.tree)});let a=document.createElement("div");var n;return a.innerHTML=r,a.innerText!==e&&(r=a.innerText.length<e.length&&e.startsWith(a.innerText)?(n=e.slice(a.innerText.length),`<span>${r}</span><span>${c(n)}</span>`):`<span>${c(e)}</span>`),r};return{onInput:(e,a,{target:t})=>{var r;"TEXTAREA"===t.nodeName?s===t.value?s=t.value:(r=l(e,t.value),(e=>{var a,t=e.getAttribute("data-min-rows");e._baseScrollHeight||(r=(a=e).value,a.value="",a._baseScrollHeight=a.scrollHeight,a._baseHeight=a.getBoundingClientRect().height,a.value=r),e.rows=t;var r=Math.round(e.scrollHeight/e._baseScrollHeight);e.rows=t<=r?r:t})(t)):s===a?s=a:r=l(e,a),n.innerHTML=r}}}
