function RegexHighlighter(e,i){let l=void 0;function c(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/ /g,'<span class="space special-chars"> </span>').replace(/\n/g,`<span class="endline special-chars">
</span>`).replace(/\t/g,`<span class="tab special-chars">	</span>`)}const o=(e,a)=>{const i=(e,a,r="",s="",n=!0)=>{let t=`<span class="${e.type} ${r}" tokenId="${e.id}" tokenIndices="${e.indices.join(",")}" ${s}>`+a;return n&&(t+="</span>"),t},r={assert:e=>{var a={AssertBegin:[e.raw,""],AssertLookahead:['<span class="parenthesis">(</span>?=','<span class="parenthesis">)</span>'],AssertNegativeLookahead:['<span class="parenthesis">(</span>?!','<span class="parenthesis">)</span>'],AssertNonWordBoundary:["\\B",""],AssertWordBoundary:["\\b",""],AssertEnd:[e.raw,""]};let r="",s=("sub"in e&&e.sub.forEach(e=>{r+=l(e)}),""+a[e.assertionType][0]+r+a[e.assertionType][1]);return e.repeat&&(a=`<i>${e.raw.slice(e.repeat.beginIndex)}</i>`,s+=a),i(e,s,e.assertionType)},group:e=>{let a="";e.sub.forEach(e=>{a+=l(e)});var r=`non-capture="${e.nonCapture||"false"}" group-number="${e.num||""}" group-name="${e.name||""}"`;let s=e.nonCapture?"?:":"";var n={"(?P":`?P<${e.name}>`,"(?<":`?<${e.name}>`,"(?'":`?'${e.name}'`};e.raw.slice(0,3)in n&&(s=c(s=e.name?n[e.raw.slice(0,3)]:""));let t='<span class="parenthesis">)</span>',p=(e.errors&&e.errors.some(e=>"UnterminatedGroup"===e.type)&&(t=""),'<span class="parenthesis">(</span>'+s+a+t);return e.repeat&&(n=`<i>${e.raw.slice(e.repeat.beginIndex)}</i>`,p+=n),i(e,p,extraAttributes=r)},choice:e=>{let n="";e.branches.forEach((e,a,r)=>{let s="";e.forEach(e=>{s+=l(e)}),n+=`<span class="branch">${s}</span>`,a!==r.length-1&&(n+='<span class="or">|</span>')}),e.repeat&&(a=`<i>${e.raw.slice(e.repeat.beginIndex)}</i>`,n+=a);var a=i(e,n);return a},charset:e=>{let a=c(e.raw);e.repeat&&(r=`<i>${e.raw.slice(e.repeat.beginIndex)}</i>`,a=c(e.raw.slice(0,e.repeat.beginIndex)),a+=r);var r=i(e,a);return r},exact:e=>{let a=c(e.raw);var r;return e.repeat&&(r=`<i>${e.raw.slice(e.repeat.beginIndex)}</i>`,a=c(e.raw.slice(0,e.repeat.beginIndex)),a+=r),i(e,a)},dot:e=>i(e,".",extraClass="dot")},l=e=>{let a="";return e.type in r&&(a+=r[e.type](e)),a};let s="",n=(void 0===e?s=`<span>${a.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}</span>`:e.tree.forEach(e=>{s+=l(e)}),document.createElement("div"));return n.innerHTML=s,s=n.innerText!==a?n.innerText.length<a.length?(e=a.slice(n.innerText.length),`<span>${s}</span><span>${c(e)}</span>`):`<span>${c(a)}</span>`:s};return{onInput:(e,a,{target:r})=>{var s,n,t,p;"TEXTAREA"===r.nodeName?l===r.value?l=r.value:(s=o(e,r.value),t=r.getAttribute("data-min-rows"),r._baseScrollHeight||(n=(p=r).value,p.value="",p._baseScrollHeight=p.scrollHeight,p._baseHeight=p.getBoundingClientRect().height,p.value=n),r.rows=t,p=Math.round(r.scrollHeight/r._baseScrollHeight),r.rows=t<=p?p:t):l===a?l=a:s=o(e,a),i.innerHTML=s}}}